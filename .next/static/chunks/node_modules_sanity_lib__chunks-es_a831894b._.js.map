{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"version.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/core/version.ts"],"sourcesContent":["import {version} from '../../package.json'\n/**\n * This version is provided by `@sanity/pkg-utils` at build time\n * @hidden\n * @beta\n */\nexport const SANITY_VERSION = process.env.PKG_VERSION || `${version}-development`\n"],"names":["SANITY_VERSION"],"mappings":";;;AAMO,MAAMA,iBAAiB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"file":"TooltipDelayGroupProvider.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/ui-components/conditionalWrapper/ConditionalWrapper.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/ui-components/button/Button.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/ui-components/dialog/Dialog.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/ui-components/errorBoundary/ErrorBoundary.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/ui-components/menuButton/MenuButton.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/core/components/Hotkeys.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/ui-components/tooltip/constants.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/ui-components/tooltip/Tooltip.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/ui-components/menuItem/MenuItem.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/ui-components/popover/Popover.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/ui-components/tab/Tab.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider.tsx"],"sourcesContent":["export type ConditionalWrapperRenderWrapperCallback = (children: React.ReactNode) => React.ReactNode\n\n/**\n * A helper component that conditionally wraps its children in a wrapper component.\n *\n * @internal\n */\nexport function ConditionalWrapper({\n  children,\n  condition,\n  wrapper,\n}: {\n  children: React.ReactNode\n  condition: boolean\n  wrapper: ConditionalWrapperRenderWrapperCallback\n}): React.ReactNode {\n  if (!condition) {\n    return children\n  }\n\n  return wrapper(children)\n}\n","/* eslint-disable no-restricted-imports */\n\nimport {Button as UIButton, type ButtonProps as UIButtonProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps, useCallback} from 'react'\nimport {styled} from 'styled-components'\n\nimport {Tooltip, type TooltipProps} from '..'\nimport {\n  ConditionalWrapper,\n  type ConditionalWrapperRenderWrapperCallback,\n} from '../conditionalWrapper'\n\ntype BaseButtonProps = Pick<\n  UIButtonProps,\n  | 'as'\n  | 'icon'\n  | 'iconRight'\n  | 'justify'\n  | 'loading'\n  | 'mode'\n  | 'paddingY'\n  | 'selected'\n  | 'tone'\n  | 'type'\n  | 'width'\n> & {\n  size?: 'default' | 'large'\n  radius?: 'full'\n}\n\ntype ButtonWithText = {\n  text: string\n  tooltipProps?: TooltipProps | null\n  icon?: UIButtonProps['icon']\n}\n\ntype IconButton = {\n  text?: undefined\n  icon?: UIButtonProps['icon']\n  /**\n   * When using a button with an icon, tooltipProps are required to enforce consistency in UI.\n   */\n  tooltipProps: TooltipProps | null\n}\n\n/** @internal */\nexport type ButtonProps = BaseButtonProps & (ButtonWithText | IconButton)\n\nconst LARGE_BUTTON_PROPS = {\n  space: 3,\n  padding: 3,\n}\nconst DEFAULT_BUTTON_PROPS = {\n  space: 2,\n  padding: 2,\n}\n\nconst TooltipButtonWrapper = styled.span`\n  display: inline-flex;\n`\n/**\n * Customized Sanity UI <Button> with pre-defined layout options.\n *\n * @internal\n */\nexport const Button = forwardRef(function Button(\n  {\n    size = 'default',\n    mode = 'default',\n    paddingY,\n    tone = 'default',\n    tooltipProps,\n    ...rest\n  }: ButtonProps & Omit<HTMLProps<HTMLButtonElement>, 'as' | 'size' | 'title'>,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  const renderWrapper = useCallback<ConditionalWrapperRenderWrapperCallback>(\n    (children) => {\n      return (\n        <Tooltip content={tooltipProps?.content} portal {...tooltipProps}>\n          {/* This span is needed to make the tooltip work in disabled buttons */}\n          <TooltipButtonWrapper>{children}</TooltipButtonWrapper>\n        </Tooltip>\n      )\n    },\n    [tooltipProps],\n  )\n\n  const sizeProps = size === 'default' ? DEFAULT_BUTTON_PROPS : LARGE_BUTTON_PROPS\n\n  return (\n    <ConditionalWrapper condition={!!tooltipProps} wrapper={renderWrapper}>\n      <UIButton {...rest} {...sizeProps} paddingY={paddingY} ref={ref} mode={mode} tone={tone} />\n    </ConditionalWrapper>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  Box,\n  type BoxHeight,\n  Button as UIButton,\n  Dialog as UIDialog,\n  type DialogProps as UIDialogProps,\n  Flex,\n} from '@sanity/ui'\nimport {type ComponentProps, forwardRef, type HTMLProps, type ReactNode, type Ref} from 'react'\nimport {useTranslation} from 'react-i18next'\n\n/** @internal */\nexport type DialogProps = Pick<\n  UIDialogProps,\n  | '__unstable_autoFocus'\n  | '__unstable_hideCloseButton'\n  | 'contentRef'\n  | 'header'\n  | 'id'\n  | 'onActivate'\n  | 'onClickOutside'\n  | 'onClose'\n  | 'portal'\n  | 'position'\n  | 'scheme'\n  | 'width'\n> & {\n  /**\n   * Dialog body height.\n   * Set this to 'fill' (i.e. 100%) if you want overflow body content to be contained\n   * and not trigger dynamic border visibility.\n   */\n  bodyHeight?: BoxHeight\n  children?: ReactNode\n  footer?: {\n    cancelButton?: Omit<ComponentProps<typeof UIButton>, 'fontSize' | 'padding'>\n    confirmButton?: Omit<ComponentProps<typeof UIButton>, 'fontSize' | 'padding'>\n  }\n  /**\n   * If enabled, removes all default padding from dialog content.\n   */\n  padding?: boolean\n}\n\n/**\n * Customized Sanity UI <Dialog> that enforces an opinionated footer layout with a max of two buttons (confirm and cancel).\n *\n * @internal\n */\nexport const Dialog = forwardRef(function Dialog(\n  {\n    bodyHeight,\n    children,\n    footer,\n    padding = true,\n    ...props\n  }: DialogProps & Pick<HTMLProps<HTMLDivElement>, 'onDragEnter' | 'onDrop'>,\n  ref: Ref<HTMLDivElement>,\n) {\n  const {t} = useTranslation()\n\n  return (\n    <UIDialog\n      {...props}\n      animate\n      ref={ref}\n      footer={\n        (footer?.confirmButton || footer?.cancelButton) && (\n          <Flex width=\"full\" gap={3} justify=\"flex-end\" padding={3}>\n            {props.onClose && (\n              <UIButton\n                mode=\"bleed\"\n                padding={2}\n                text={t('common.dialog.cancel-button.text')}\n                tone=\"default\"\n                onClick={props.onClose}\n                data-testid=\"cancel-button\"\n                {...footer.cancelButton}\n              />\n            )}\n            {footer.confirmButton && (\n              <UIButton\n                mode=\"default\"\n                padding={2}\n                text={t('common.dialog.confirm-button.text')}\n                tone=\"critical\"\n                data-testid=\"confirm-button\"\n                {...footer.confirmButton}\n              />\n            )}\n          </Flex>\n        )\n      }\n    >\n      <Box height={bodyHeight} padding={padding ? 4 : 0}>\n        {children}\n      </Box>\n    </UIDialog>\n  )\n})\n","import {\n  // eslint-disable-next-line no-restricted-imports\n  ErrorBoundary as UIErrorBoundary,\n  type ErrorBoundaryProps as UIErrorBoundaryProps,\n} from '@sanity/ui'\nimport {useCallback, useContext} from 'react'\n\nimport {SourceContext} from '../../_singletons'\n\nexport type ErrorBoundaryProps = UIErrorBoundaryProps\n\n/**\n * ErrorBoundary component that catches errors and uses onUncaughtError config property\n * It also calls the onCatch prop if it exists.\n */\nexport function ErrorBoundary({onCatch, ...rest}: ErrorBoundaryProps): React.JSX.Element {\n  // Use context, because source could be undefined and we don't want to throw in that case\n  const source = useContext(SourceContext)\n\n  const handleCatch = useCallback(\n    ({error: caughtError, info: caughtInfo}: {error: Error; info: React.ErrorInfo}) => {\n      // Send the error to the source if it has an onUncaughtError method\n      source?.onUncaughtError?.(caughtError, caughtInfo)\n\n      // Call the onCatch prop if it exists\n      onCatch?.({error: caughtError, info: caughtInfo})\n    },\n    [source, onCatch],\n  )\n\n  return <UIErrorBoundary {...rest} onCatch={handleCatch} />\n}\n","/* eslint-disable no-restricted-imports */\nimport {\n  MenuButton as UIMenuButton,\n  type MenuButtonProps as UIMenuButtonProps,\n  type PopoverProps,\n} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef} from 'react'\n\n/** @internal */\nexport type MenuButtonProps = Omit<UIMenuButtonProps, 'popover'> & {\n  popover?: Omit<PopoverProps, 'animate' | 'content' | 'open'>\n}\n\n/**\n * Customized Sanity UI <MenuButton> that enforces popover animation.\n *\n * @internal\n */\nexport const MenuButton = forwardRef(function MenuButton(\n  props: MenuButtonProps,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  return (\n    <UIMenuButton\n      {...props}\n      ref={ref}\n      popover={{\n        ...props.popover,\n        animate: true,\n      }}\n    />\n  )\n})\n","import {Hotkeys as UIHotkeys, type HotkeysProps as UIHotkeysProps} from '@sanity/ui'\nimport {type HTMLProps, type RefAttributes} from 'react'\n\n/**\n * Properties for the `Hotkeys` component.\n *\n * @public\n */\nexport type HotkeysProps = UIHotkeysProps & {\n  /**\n   * Whether to make the keys platform-aware (eg `alt` to `option` on Apple devices).\n   *\n   * @defaultValue true\n   */\n  makePlatformAware?: boolean\n} & Omit<HTMLProps<HTMLElement>, 'ref' | 'size' | 'as'> &\n  RefAttributes<HTMLElement>\n\n/**\n * Renders given `keys` as \"keycaps\" visually.\n *\n * This is a wrapper around `@sanity/ui`'s `Hotkeys` component, which allows for altering keys\n * (eg `alt` to `option`) on Apple devices unless `makePlatformAware` is set to `false`.\n *\n * @param props - Properties to render with\n * @returns React element\n * @public\n */\nexport function Hotkeys({makePlatformAware = true, keys: hotKeys = [], ...props}: HotkeysProps) {\n  const keys = makePlatformAware ? hotKeys.map(platformifyKey) : hotKeys\n  return <UIHotkeys {...props} keys={keys} />\n}\n\n/**\n * @internal\n */\nconst IS_APPLE_DEVICE =\n  typeof navigator === 'undefined' || typeof navigator.platform !== 'string'\n    ? false\n    : /Mac|iPod|iPhone|iPad/.test(navigator.platform || '')\n\n/**\n * Given key 'Alt', or 'Option' (case-insensitive), return the platform-appropriate key name\n * (eg 'Alt' on non-Apple devices, 'Option' on Apple devices).\n *\n * @param key - Key to platformify\n * @returns Platform-appropriate key name\n * @internal\n */\nfunction platformifyKey(key: string): string {\n  const lowerKey = key.toLowerCase()\n\n  if (lowerKey === 'alt' && IS_APPLE_DEVICE) {\n    return matchCase(key, 'option')\n  }\n\n  if (lowerKey === 'option' && !IS_APPLE_DEVICE) {\n    return matchCase(key, 'alt')\n  }\n\n  return key\n}\n\n/**\n * Apply the case (lowercase/uppercase) of `original` to `target`, character by character,\n * eg matching ALL CAPS, all lowercase or Mixed Case.\n *\n * @param original - The original string to match case of\n * @param target - The target string to apply case to\n * @returns Target string with case applied from original\n * @internal\n */\nfunction matchCase(original: string, target: string): string {\n  const orgLength = original.length\n\n  return target.replace(/./g, (char, i) => {\n    // Replace character by character matching case of original\n    // If running out of original, just return the target case as-is\n    return i < orgLength && original[i] === original[i].toUpperCase() ? char.toUpperCase() : char\n  })\n}\n","export const TOOLTIP_DELAY_PROPS = {\n  open: 400,\n}\n","import {\n  Box,\n  Flex,\n  type HotkeysProps,\n  Text,\n  // eslint-disable-next-line no-restricted-imports\n  Tooltip as UITooltip,\n  // eslint-disable-next-line no-restricted-imports\n  type TooltipProps as UITooltipProps,\n} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef} from 'react'\n\nimport {Hotkeys} from '../../core/components/Hotkeys'\nimport {TOOLTIP_DELAY_PROPS} from './constants'\n\n/** @internal */\n\nexport type TooltipProps = Omit<UITooltipProps, 'arrow' | 'padding' | 'shadow'> & {\n  hotkeys?: HotkeysProps['keys']\n}\n\nconst TOOLTIP_SHARED_PROPS: UITooltipProps = {\n  animate: true,\n  arrow: false,\n  boundaryElement: null,\n  delay: TOOLTIP_DELAY_PROPS,\n  fallbackPlacements: ['bottom-start', 'bottom-end', 'top-start', 'top-end'],\n  placement: 'bottom',\n  portal: true,\n}\n\n/**\n * Customized Sanity UI <Tooltip> with limited layout options and support for showing hotkeys.\n *\n * In just about all cases, its strongly recommended that you pass a string to the `content` prop.\n * This helps simplify i18n and encourages short and concise.\n *\n * Passing ReactNode values to `content` is supported, but discouraged.\n *\n * @internal\n */\nexport const Tooltip = forwardRef(function Tooltip(\n  props: TooltipProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {content, hotkeys, ...rest} = props\n\n  if (typeof content === 'string') {\n    return (\n      <UITooltip\n        {...TOOLTIP_SHARED_PROPS}\n        content={\n          <Flex align=\"center\">\n            {content && (\n              <Box flex={1} padding={1}>\n                <Text size={1}>{content}</Text>\n              </Box>\n            )}\n            {hotkeys && (\n              <Box flex=\"none\">\n                <Hotkeys keys={hotkeys} />\n              </Box>\n            )}\n          </Flex>\n        }\n        padding={1}\n        ref={ref}\n        {...rest}\n      />\n    )\n  }\n\n  return <UITooltip {...TOOLTIP_SHARED_PROPS} content={content} ref={ref} {...rest} />\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  Badge,\n  Box,\n  Flex,\n  MenuItem as UIMenuItem,\n  type MenuItemProps as UIMenuItemProps,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport {\n  forwardRef,\n  type HTMLProps,\n  isValidElement,\n  type ReactNode,\n  type Ref,\n  useCallback,\n  useMemo,\n} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {styled} from 'styled-components'\n\nimport {Hotkeys} from '../../core/components/Hotkeys'\nimport {Tooltip, type TooltipProps} from '..'\nimport {\n  ConditionalWrapper,\n  type ConditionalWrapperRenderWrapperCallback,\n} from '../conditionalWrapper'\n\nconst FONT_SIZE = 1\nconst SUBTITLE_FONT_SIZE = 0\n\n/* Using px value here to make title/subtitles align with icon */\nconst SubtitleText = styled(Text)`\n  margin-top: 2px;\n`\n\n/** @internal */\nexport type MenuItemProps = Pick<\n  UIMenuItemProps,\n  'as' | 'icon' | 'iconRight' | 'pressed' | 'selected' | 'tone' | 'hotkeys'\n> & {\n  badgeText?: string\n  /**\n   * Usage of `children` is not supported, import `MenuItem` from `@sanity/ui` instead.\n   */\n  children?: undefined\n  /**\n   * Previews should be 25x25.\n   */\n  preview?: ReactNode\n  /**\n   * Optional render callback which receives menu item content.\n   */\n  renderMenuItem?: (menuItemContent: React.JSX.Element) => ReactNode\n  text?: string\n  tooltipProps?: TooltipProps | null\n  /**\n   * Optional subtitle prop for the menu item.\n   * While not recommended, it is utilized for the workspace menu button.\n   */\n  __unstable_subtitle?: string\n  /**\n   * An optional property to adjust spacing in the preview between the icon and the text.\n   * Not recommended, but is applied to the workspace menu button..\n   */\n  __unstable_space?: number\n}\n\nconst PreviewWrapper = styled(Box)`\n  height: 25px;\n  width: 25px;\n  overflow: hidden;\n`\n\n/**\n * Customized Sanity UI <MenuItem> that restricts usage of `children` to encourage simple,\n * single line menu items.\n *\n * The workspace menu button needed a subtitle - hence, the StudioUI MenuIten now takes a subtitle prop.\n * This is only an escape hatch for the workspace menu button and is not recommended for general use.\n *\n * It also accepts a prop to attach tooltips as well as custom badges too.\n *\n * @internal\n */\nexport const MenuItem = forwardRef(function MenuItem(\n  {\n    badgeText,\n    children: childrenProp,\n    disabled,\n    hotkeys,\n    icon: Icon,\n    iconRight: IconRight,\n    preview = null,\n    renderMenuItem,\n    text,\n    tooltipProps,\n    __unstable_subtitle,\n    __unstable_space,\n    ...rest\n  }: MenuItemProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'selected' | 'tabIndex' | 'size'>,\n  ref: Ref<HTMLDivElement>,\n) {\n  const menuItemContent = useMemo(() => {\n    return (\n      <Flex align=\"center\" gap={2}>\n        {preview && (\n          <PreviewWrapper\n            style={{opacity: disabled ? 0.25 : undefined}}\n            paddingRight={__unstable_space ? 1 : 0}\n          >\n            <Flex align=\"center\" height=\"fill\" justify=\"center\">\n              {preview}\n            </Flex>\n          </PreviewWrapper>\n        )}\n        {Icon && (\n          <Box paddingRight={1}>\n            <Text size={FONT_SIZE}>\n              {isValidElement(Icon) && Icon}\n              {isValidElementType(Icon) && <Icon />}\n            </Text>\n          </Box>\n        )}\n        {text && (\n          <Stack\n            flex={1}\n            space={__unstable_subtitle ? 1 : 2}\n            paddingLeft={__unstable_subtitle ? 1 : 0}\n          >\n            <Text size={FONT_SIZE} textOverflow=\"ellipsis\" weight=\"medium\">\n              {text}\n            </Text>\n            {__unstable_subtitle && (\n              <SubtitleText size={SUBTITLE_FONT_SIZE} textOverflow=\"ellipsis\" weight=\"medium\" muted>\n                {__unstable_subtitle}\n              </SubtitleText>\n            )}\n          </Stack>\n        )}\n        {(badgeText || hotkeys || IconRight) && (\n          <Flex align=\"center\" gap={3} marginLeft={3}>\n            {hotkeys && <Hotkeys keys={hotkeys} style={{marginTop: -4, marginBottom: -4}} />}\n\n            {badgeText && (\n              <Badge fontSize={0} style={{marginTop: -4, marginBottom: -4}}>\n                {badgeText}\n              </Badge>\n            )}\n\n            {IconRight && (\n              <Text size={FONT_SIZE}>\n                {isValidElement(IconRight) && IconRight}\n                {isValidElementType(IconRight) && <IconRight />}\n              </Text>\n            )}\n          </Flex>\n        )}\n      </Flex>\n    )\n  }, [\n    preview,\n    disabled,\n    __unstable_space,\n    Icon,\n    text,\n    __unstable_subtitle,\n    badgeText,\n    hotkeys,\n    IconRight,\n  ])\n\n  const renderWrapper = useCallback<ConditionalWrapperRenderWrapperCallback>(\n    (children) => {\n      return (\n        <Tooltip content={tooltipProps?.content} portal {...tooltipProps}>\n          {/* This div is needed to make the tooltip work in disabled menu items */}\n          <div>{children}</div>\n        </Tooltip>\n      )\n    },\n    [tooltipProps],\n  )\n\n  return (\n    <ConditionalWrapper condition={!!tooltipProps} wrapper={renderWrapper}>\n      <UIMenuItem\n        disabled={disabled}\n        paddingLeft={preview ? 1 : 3}\n        paddingRight={3}\n        paddingY={preview ? 1 : 3}\n        ref={ref}\n        {...rest}\n      >\n        {typeof childrenProp === 'undefined' && typeof renderMenuItem === 'function'\n          ? renderMenuItem(menuItemContent)\n          : menuItemContent}\n      </UIMenuItem>\n    </ConditionalWrapper>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {Popover as UIPopover, type PopoverProps as UIPopoverProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\n/** @internal */\nexport type PopoverProps = Omit<UIPopoverProps, 'animate'>\n\n/**\n * Customized Sanity UI <Popover> that forces `animate=true`\n *\n * All Popovers in the studio should be animated.\n *\n * @internal\n */\nexport const Popover = forwardRef(function Popover(\n  props: PopoverProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'children' | 'content' | 'width'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  return <UIPopover {...props} animate ref={ref} />\n})\n","/* eslint-disable no-restricted-imports */\nimport {Tab as UITab, type TabProps as UITabProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\n/**\n * @internal\n *\n * Padding and font sizes are fixed in Studio UI <Tab> components.\n */\nexport type TabProps = Pick<\n  UITabProps,\n  'aria-controls' | 'focused' | 'icon' | 'id' | 'label' | 'selected' | 'tone'\n>\n\n/**\n * Customized Sanity UI <Tab> with limited layout options.\n *\n * @internal\n */\nexport const Tab = forwardRef(function Tab(\n  {tone = 'default', ...props}: TabProps & Omit<HTMLProps<HTMLButtonElement>, 'as' | 'size'>,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  return <UITab {...props} muted padding={2} ref={ref} tone={tone} />\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  TooltipDelayGroupProvider as UITooltipDelayGroupProvider,\n  type TooltipDelayGroupProviderProps as UITooltipDelayGroupProviderProps,\n} from '@sanity/ui'\n\nimport {TOOLTIP_DELAY_PROPS} from '../tooltip/constants'\n\n/** @internal */\nexport type TooltipDelayGroupProviderProps = Omit<UITooltipDelayGroupProviderProps, 'delay'>\n\n/**\n * Opinionated Sanity UI <TooltipDelayGroupProvider> which forces the same delay to all tooltips.\n *\n * @internal\n */\nexport const TooltipDelayGroupProvider = (props: TooltipDelayGroupProviderProps) => {\n  return (\n    <UITooltipDelayGroupProvider delay={TOOLTIP_DELAY_PROPS}>\n      {props.children}\n    </UITooltipDelayGroupProvider>\n  )\n}\n"],"names":["ConditionalWrapper","children","condition","wrapper","LARGE_BUTTON_PROPS","space","padding","DEFAULT_BUTTON_PROPS","TooltipButtonWrapper","styled","span","Button","forwardRef","t0","ref","$","_c","paddingY","rest","t1","t2","t3","tooltipProps","size","mode","tone","undefined","t4","content","renderWrapper","sizeProps","t5","t6","UIButton","t7","Dialog","bodyHeight","footer","props","t","useTranslation","confirmButton","cancelButton","onClose","UIDialog","ErrorBoundary","onCatch","source","useContext","SourceContext","error","caughtError","info","caughtInfo","onUncaughtError","handleCatch","UIErrorBoundary","MenuButton","popover","animate","UIMenuButton","Hotkeys","makePlatformAware","keys","hotKeys","map","platformifyKey","UIHotkeys","IS_APPLE_DEVICE","navigator","platform","test","key","lowerKey","toLowerCase","matchCase","original","target","orgLength","length","replace","char","i","toUpperCase","TOOLTIP_DELAY_PROPS","open","TOOLTIP_SHARED_PROPS","arrow","boundaryElement","delay","fallbackPlacements","placement","portal","Tooltip","hotkeys","UITooltip","FONT_SIZE","SUBTITLE_FONT_SIZE","SubtitleText","Text","PreviewWrapper","Box","MenuItem","Icon","IconRight","__unstable_space","__unstable_subtitle","badgeText","childrenProp","disabled","renderMenuItem","text","icon","iconRight","preview","opacity","isValidElement","isValidElementType","marginTop","marginBottom","menuItemContent","t8","t9","t10","t11","t12","t13","UIMenuItem","t14","Popover","UIPopover","Tab","UITab","TooltipDelayGroupProvider","UITooltipDelayGroupProvider"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11],"debugId":null}},
    {"offset": {"line": 420, "column": 0}, "map": {"version":3,"file":"generate-help-url.esm.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/ui-components/menuGroup/MenuGroup.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/.pnpm/%40sanity%2Bgenerate-help-url%403.0.0/node_modules/%40sanity/generate-help-url/dist/generate-help-url.esm.js"],"sourcesContent":["/* eslint-disable no-restricted-imports */\nimport {MenuGroup as UIMenuGroup, type MenuGroupProps as UIMenuGroupProps} from '@sanity/ui'\nimport {type HTMLProps, useCallback} from 'react'\n\nimport {\n  ConditionalWrapper,\n  type ConditionalWrapperRenderWrapperCallback,\n} from '../conditionalWrapper/ConditionalWrapper'\nimport {Tooltip, type TooltipProps} from '../tooltip/Tooltip'\n\n/** @internal */\nexport type MenuGroupProps = Pick<UIMenuGroupProps, 'icon' | 'popover' | 'text' | 'tone'>\n\n/**\n * Customized Sanity UI <MenuGroup> component with pre-defined layout options.\n *\n * @internal\n */\nexport const MenuGroup = (\n  props: MenuGroupProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'tabIndex' | 'popover'> & {\n      tooltipProps?: TooltipProps | null\n    },\n) => {\n  const {tooltipProps} = props\n\n  const renderWrapper = useCallback<ConditionalWrapperRenderWrapperCallback>(\n    (children) => {\n      return (\n        <Tooltip content={tooltipProps?.content} portal {...tooltipProps}>\n          {/* This div is needed to make the tooltip work in disabled menu items */}\n          <div>{children}</div>\n        </Tooltip>\n      )\n    },\n    [tooltipProps],\n  )\n\n  return (\n    <ConditionalWrapper condition={!!tooltipProps} wrapper={renderWrapper}>\n      <UIMenuGroup {...props} fontSize={1} padding={3} />\n    </ConditionalWrapper>\n  )\n}\n","const BASE_URL = \"https://docs.sanity.io/help/\";\nfunction generateHelpUrl(slug) {\n  return BASE_URL + slug;\n}\nexport { generateHelpUrl };\n//# sourceMappingURL=generate-help-url.esm.js.map\n"],"names":["MenuGroup","props","$","_c","tooltipProps","t0","children","content","renderWrapper","t1","t2","UIMenuGroup","t3","BASE_URL","slug"],"mappings":";;;;;;;;;;;;AAkBO,MAAMA,YAAYC,CAAA,UAAA;IAAAC,MAAAA,6KAAAC,EAAA,CAAA,GAMvB,EAAAC,YAAAA,EAAAA,GAAuBH;IAAKI,IAAAA;IAAAH,CAAAA,CAAAA,EAAAA,KAAAE,eAAAA,CAG1BC,KAAAC,CAAAA,WAEK,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,kLAAA,UAAA,EAAA;YAAiB,SAAAF,cAAYG;YAAW,QAAA,CAAA;YAAM,GAAKH,YAAAA;YAElD,UAAqB,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,OAAA;gBAAR;YAAE,CAAA;QAAA,CACjB,GAEHF,CAAAA,CAAAA,EAAAA,GAAAE,cAAAF,CAAAA,CAAAA,EAAAA,GAAAG,EAAAA,IAAAA,KAAAH,CAAAA,CAAA,CAAA,CAAA;IARH,MAAAM,gBAAsBH,IAaWI,KAAAA,CAAAA,CAAEL;IAAYM,IAAAA;IAAAR,CAAAA,CAAAA,EAAAA,KAAAD,QAAAA,CAC3CS,KAAAA,aAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAAA,oLAACC,YAAAA,EAAgBV;QAAAA,GAAAA,KAAAA;QAAiB,UAAA;QAAY,SAAA;IAAK,CAAA,GAAAC,CAAAA,CAAAA,EAAAA,GAAAD,OAAAC,CAAAA,CAAAA,EAAAA,GAAAQ,EAAAA,IAAAA,KAAAR,CAAAA,CAAA,CAAA,CAAA;IAAAU,IAAAA;IAAA,OAAAV,CAAAA,CAAAM,CAAAA,CAAAA,KAAAA,iBAAAN,CAAAA,CAAAA,EAAAA,KAAAO,MAAAP,CAAAA,CAAA,CAAA,CAAA,KAAAQ,KAAAA,CADrDE,KAAAA,aAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAAA,iLAAC,sBAAA,EAAA;QAA8B,WAAAH;QAAyBD,SAAAA;QACtDE,UAAAA;IAAAA,CACF,GAAqBR,CAAAA,CAAAA,EAAAA,GAAAM,eAAAN,CAAAA,CAAAA,EAAAA,GAAAO,IAAAP,CAAAA,CAAAA,EAAAA,GAAAQ,IAAAR,CAAAA,CAAAA,EAAAA,GAAAU,EAAAA,IAAAA,KAAAV,CAAAA,CAAA,CAAA,CAAA,EAFrBU;AAEqB,GCzCnBC,WAAW;AAEeC,SAAAA,gBAAAA,IAAAA,EAAsB;IAC7CD,OAAAA,WAAWC;AAAA","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"file":"presentation.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/overlays/useSharedState.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/constants.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/util/props.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/useDocumentLocations.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/i18n/index.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/usePresentationTool.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/document/useCurrentPresentationToolName.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/document/LocationsBanner.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/document/PresentationDocumentHeader.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/document/PresentationDocumentProvider.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/fieldActions/openInStructure.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/getIntentState.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/PresentationSpinner.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/router.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/plugin.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/reducers/presentationReducer.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/usePresentationNavigate.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/usePresentationParams.ts"],"sourcesContent":["import {type Serializable} from '@sanity/presentation-comlink'\nimport {useContext, useEffect} from 'react'\nimport {PresentationSharedStateContext} from 'sanity/_singletons'\n\n/** @public */\nexport const useSharedState = (key: string, value: Serializable): undefined => {\n  const context = useContext(PresentationSharedStateContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  const {setValue} = context\n\n  useEffect(() => {\n    setValue(key, value)\n  }, [key, value, setValue])\n\n  return undefined\n}\n","import {ComposeIcon} from '@sanity/icons'\nimport {apiVersion} from '@sanity/preview-url-secret/constants'\n\nexport const DEFAULT_TOOL_ICON = ComposeIcon\nexport const DEFAULT_TOOL_NAME = 'presentation'\nexport const DEFAULT_TOOL_TITLE = 'Presentation'\n\nexport const EDIT_INTENT_MODE = 'presentation'\n\n// How long we wait until an iframe is loaded until we consider it to be slow and possibly failed\nexport const MAX_TIME_TO_OVERLAYS_CONNECTION = 3_000 // ms\n\n// The API version to use when using `@sanity/client`\nexport const API_VERSION = apiVersion\n\n// Heartbeats shouldn't fire on intervals that are so short it causes performance issues\nexport const MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL = 1000 // ms\n\n// How often the list over loader queries should be garbage collected\nexport const LOADER_QUERY_GC_INTERVAL = 30_000 // ms\n\n// The interval at which we check if existing popups have been closed\nexport const POPUP_CHECK_INTERVAL = 1000 // ms\n","import {\n  combineLatest,\n  from,\n  isObservable,\n  map,\n  mergeAll,\n  Observable,\n  of,\n  scan,\n  switchMap,\n} from 'rxjs'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Props<K extends keyof any, T> = {\n  [P in K]: T | Observable<T>\n}\n\nfunction keysOf<T extends object>(value: T) {\n  return Object.keys(value) as (keyof T)[]\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setKey(source: Record<string, unknown>, key: any, value: unknown) {\n  return {\n    ...source,\n    [key]: value,\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function props<K extends keyof any, T>(options: {wait?: boolean} = {}) {\n  return (source: Observable<Props<K, T>>): Observable<Record<string, unknown>> => {\n    return new Observable<Props<K, T>>((observer) => source.subscribe(observer)).pipe(\n      switchMap((object) => {\n        const keyObservables = keysOf(object).map((key) => {\n          const value = object[key]\n          return isObservable(value) ? from(value).pipe(map((val) => [key, val])) : of([key, value])\n        })\n\n        return options.wait\n          ? combineLatest(keyObservables).pipe(\n              map((pairs) => pairs.reduce((acc, [key, value]) => setKey(acc, key, value), {})),\n            )\n          : from(keyObservables).pipe(\n              mergeAll(),\n              scan((acc, [key, value]) => setKey(acc, key, value), {}),\n            )\n      }),\n    )\n  }\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport {get} from 'lodash'\nimport {useEffect, useMemo, useState} from 'react'\nimport {isObservable, map, type Observable, of, switchMap} from 'rxjs'\nimport {\n  type DocumentStore,\n  getDraftId,\n  isRecord,\n  isReference,\n  type Previewable,\n  type SanityDocument,\n  useDocumentStore,\n  usePerspective,\n} from 'sanity'\n\nimport {\n  type DocumentLocationResolver,\n  type DocumentLocationResolverObject,\n  type DocumentLocationResolvers,\n  type DocumentLocationsState,\n  type DocumentLocationsStatus,\n} from './types'\nimport {props} from './util/props'\n\nconst INITIAL_STATE: DocumentLocationsState = {locations: []}\n\nfunction getDocumentId(value: Previewable) {\n  if (isReference(value)) {\n    return value._ref\n  }\n  return '_id' in value ? value._id : undefined\n}\n\nfunction cleanPreviewable(id: string | undefined, previewable: Previewable) {\n  const clean: Record<string, unknown> = id ? {...previewable, _id: id} : {...previewable}\n\n  if (clean._type === 'reference') {\n    delete clean._type\n    delete clean._ref\n    delete clean._weak\n    delete clean._dataset\n    delete clean._projectId\n    delete clean._strengthenOnPublish\n  }\n\n  return clean\n}\n\nfunction listen(id: string, fields: string[], store: DocumentStore) {\n  const projection = fields.join(', ')\n  const query = {\n    fetch: `*[_id==$id][0]{${projection}}`,\n    // TODO: is it more performant to use `||` instead of `in`?\n    listen: `*[_id in [$id,$draftId]]`,\n  }\n  const params = {id, draftId: getDraftId(id)}\n  return store.listenQuery(query, params, {\n    perspective: 'drafts',\n    tag: 'drafts',\n  }) as Observable<SanityDocument | null>\n}\n\nfunction observeDocument(\n  value: Previewable | null,\n  paths: string[][],\n  store: DocumentStore,\n): Observable<Record<string, unknown> | null> {\n  if (!value || typeof value !== 'object') {\n    return of(value)\n  }\n\n  const id = getDocumentId(value)\n  const currentValue = cleanPreviewable(id, value)\n\n  const headlessPaths = paths.filter((path) => !(path[0] in currentValue))\n\n  if (id && headlessPaths.length) {\n    const fields = [...new Set(headlessPaths.map((path: string[]) => path[0]))]\n    return listen(id, fields, store).pipe(\n      switchMap((snapshot) => {\n        if (snapshot) {\n          return observeDocument(snapshot, paths, store)\n        }\n        return of(null)\n      }),\n    )\n  }\n\n  const leads: Record<string, string[][]> = {}\n  paths.forEach((path) => {\n    const [head, ...tail] = path\n    if (!leads[head]) {\n      leads[head] = []\n    }\n    leads[head].push(tail)\n  })\n  const next = Object.keys(leads).reduce((res: Record<string, unknown>, head) => {\n    const tails = leads[head].filter((tail) => tail.length > 0)\n    if (tails.length === 0) {\n      res[head] = isRecord(value) ? (value as Record<string, unknown>)[head] : undefined\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      res[head] = observeDocument((value as any)[head], tails, store)\n    }\n    return res\n  }, currentValue)\n\n  return of(next).pipe(props({wait: true}))\n}\n\nfunction observeForLocations(\n  documentId: string,\n  resolver: DocumentLocationResolverObject<string>,\n  documentStore: DocumentStore,\n) {\n  const {select} = resolver\n  const paths = Object.values(select).map((value) => String(value).split('.')) || []\n  const doc = {_type: 'reference', _ref: documentId}\n  return observeDocument(doc, paths, documentStore).pipe(\n    map((doc) => {\n      return Object.keys(select).reduce<Record<string, unknown>>((acc, key) => {\n        acc[key] = get(doc, select[key])\n        return acc\n      }, {})\n    }),\n    map(resolver.resolve),\n  )\n}\n\nexport function useDocumentLocations(props: {\n  id: string\n  version: string | undefined\n  resolvers?: DocumentLocationResolver | DocumentLocationResolvers\n  type: string\n}): {\n  state: DocumentLocationsState\n  status: DocumentLocationsStatus\n} {\n  const {id, resolvers, type, version} = props\n  const documentStore = useDocumentStore()\n  const {perspectiveStack} = usePerspective()\n  const [locationsState, setLocationsState] = useState<DocumentLocationsState>(INITIAL_STATE)\n\n  const resolver = resolvers && (typeof resolvers === 'function' ? resolvers : resolvers[type])\n\n  const [locationsStatus, setLocationsStatus] = useState<DocumentLocationsStatus>(\n    resolver ? 'resolving' : 'empty',\n  )\n\n  const result = useMemo(() => {\n    if (!resolver) return undefined\n\n    // Original/advanced resolver which requires explicit use of Observables\n    if (typeof resolver === 'function') {\n      const params = {id, type, version, perspectiveStack}\n      const context = {documentStore}\n      const _result = resolver(params, context)\n      return isObservable(_result) ? _result : of(_result)\n    }\n\n    // Simplified resolver pattern which abstracts away Observable logic\n    if ('select' in resolver && 'resolve' in resolver) {\n      return observeForLocations(id, resolver, documentStore)\n    }\n\n    // Resolver is explicitly provided state\n    return of(resolver)\n  }, [documentStore, id, resolver, type, version, perspectiveStack])\n\n  useEffect(() => {\n    const sub = result?.subscribe((state) => {\n      setLocationsState(state || INITIAL_STATE)\n      setLocationsStatus(state ? 'resolved' : 'empty')\n    })\n\n    return () => sub?.unsubscribe()\n  }, [result])\n\n  return {\n    state: locationsState,\n    status: locationsStatus,\n  }\n}\n","import {defineLocaleResourceBundle} from 'sanity'\n\n/**\n * The locale namespace for the presentation tool\n *\n * @public\n */\nexport const presentationLocaleNamespace = 'presentation' as const\n\n/**\n * The default locale bundle for the presentation tool, which is US English.\n *\n * @internal\n */\nexport const presentationUsEnglishLocaleBundle = defineLocaleResourceBundle({\n  locale: 'en-US',\n  namespace: presentationLocaleNamespace,\n  resources: () => import('./resources'),\n})\n","import {useContext} from 'react'\nimport {PresentationContext} from 'sanity/_singletons'\n\nimport {type PresentationContextValue} from './types'\n\nexport function usePresentationTool(throwOnMissingContext?: true): PresentationContextValue\nexport function usePresentationTool(throwOnMissingContext: false): PresentationContextValue | null\nexport function usePresentationTool(throwOnMissingContext = true): PresentationContextValue | null {\n  const presentation = useContext(PresentationContext)\n\n  if (throwOnMissingContext && !presentation) {\n    throw new Error('Presentation context is missing')\n  }\n\n  return presentation\n}\n","import {usePresentationTool} from '../usePresentationTool'\n\nexport function useCurrentPresentationToolName(): string | undefined {\n  return usePresentationTool(false)?.name ?? undefined\n}\n","import {\n  ChevronRightIcon,\n  DesktopIcon,\n  ErrorOutlineIcon,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {type ComponentType, type ReactNode, useCallback, useContext, useState} from 'react'\nimport {type ObjectSchemaType, useTranslation} from 'sanity'\nimport {PresentationContext} from 'sanity/_singletons'\nimport {useIntentLink} from 'sanity/router'\n\nimport {DEFAULT_TOOL_NAME, DEFAULT_TOOL_TITLE} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type DocumentLocation,\n  type DocumentLocationsState,\n  type PresentationPluginOptions,\n} from '../types'\nimport {useCurrentPresentationToolName} from './useCurrentPresentationToolName'\n\nconst TONE_ICONS: Record<'positive' | 'caution' | 'critical', ComponentType> = {\n  positive: InfoOutlineIcon,\n  caution: WarningOutlineIcon,\n  critical: ErrorOutlineIcon,\n}\n\nexport function LocationsBanner(props: {\n  documentId: string\n  isResolving: boolean\n  options: PresentationPluginOptions\n  schemaType: ObjectSchemaType\n  showPresentationTitle: boolean\n  state: DocumentLocationsState\n}): ReactNode {\n  const {documentId, isResolving, options, schemaType, showPresentationTitle} = props\n  const {locations, message, tone} = props.state\n  const len = locations?.length || 0\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const presentation = useContext(PresentationContext)\n  const presentationName = presentation?.name\n  const [expanded, setExpanded] = useState(false)\n  const toggle = useCallback(() => {\n    if (!len) return\n    setExpanded((v) => !v)\n  }, [len])\n\n  const title = isResolving\n    ? t('locations-banner.resolving.text')\n    : message || t('locations-banner.locations-count', {count: len})\n\n  const ToneIcon = tone ? TONE_ICONS[tone] : undefined\n\n  return (\n    <Card padding={1} radius={2} border tone={tone}>\n      <div style={{margin: -1}}>\n        {!locations && (\n          <Flex align=\"flex-start\" gap={3} padding={3}>\n            {tone && ToneIcon && (\n              <Box flex=\"none\">\n                <Text size={1}>\n                  <ToneIcon />\n                </Text>\n              </Box>\n            )}\n            <Box flex={1}>\n              <Text size={1} weight=\"medium\">\n                {showPresentationTitle && <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>}\n                {title}\n              </Text>\n            </Box>\n          </Flex>\n        )}\n        {locations && (\n          <>\n            <Card\n              as={len ? 'button' : undefined}\n              onClick={toggle}\n              padding={3}\n              radius={1}\n              tone=\"inherit\"\n            >\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  {isResolving ? (\n                    <Spinner size={1} />\n                  ) : (\n                    <Text size={1}>\n                      {len === 0 ? (\n                        <InfoOutlineIcon />\n                      ) : (\n                        <ChevronRightIcon\n                          style={{\n                            transform: `rotate(${expanded ? '90deg' : 0})`,\n                            transition: 'transform 100ms ease-in-out',\n                          }}\n                        />\n                      )}\n                    </Text>\n                  )}\n                </Box>\n                <Box flex={1}>\n                  <Text size={1} weight=\"medium\">\n                    {showPresentationTitle && <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>}\n                    {title}\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n            <Stack hidden={!expanded} marginTop={1} space={1}>\n              {locations.map((l, index) => (\n                <LocationItem\n                  active={\n                    (options.name || DEFAULT_TOOL_NAME) === presentationName &&\n                    l.href === presentation?.params.preview\n                  }\n                  documentId={documentId}\n                  documentType={schemaType.name}\n                  key={index}\n                  node={l}\n                  toolName={options.name || DEFAULT_TOOL_NAME}\n                />\n              ))}\n            </Stack>\n          </>\n        )}\n      </div>\n    </Card>\n  )\n}\n\nfunction LocationItem(props: {\n  active: boolean\n  documentId: string\n  documentType: string\n  node: DocumentLocation\n  toolName: string\n}) {\n  const {documentId, documentType, node, active, toolName} = props\n  const presentation = useContext(PresentationContext)\n  const currentPresentationToolName = useCurrentPresentationToolName()\n  const isCurrentTool = toolName === currentPresentationToolName\n  const navigate = presentation?.navigate\n\n  const presentationLinkProps = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: documentId,\n      type: documentType,\n      mode: 'presentation',\n      presentation: toolName,\n      ...presentation?.structureParams,\n      preview: node.href,\n    },\n  })\n\n  const handleCurrentToolClick = useCallback(() => {\n    navigate?.({}, {preview: node.href})\n  }, [node.href, navigate])\n\n  return (\n    <Card\n      {...(isCurrentTool ? {} : presentationLinkProps)}\n      as=\"a\"\n      key={node.href}\n      onClick={isCurrentTool ? handleCurrentToolClick : presentationLinkProps.onClick}\n      padding={3}\n      radius={1}\n      pressed={active}\n      tone=\"inherit\"\n    >\n      <Flex gap={3}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <DesktopIcon />\n          </Text>\n        </Box>\n        <Stack flex={1} space={2}>\n          <Text size={1} weight=\"medium\">\n            {node.title}\n          </Text>\n          <Text muted size={1} textOverflow=\"ellipsis\">\n            {node.href}\n          </Text>\n        </Stack>\n      </Flex>\n    </Card>\n  )\n}\n","import {rem, Stack} from '@sanity/ui'\nimport {type ReactNode, useContext} from 'react'\nimport {type ObjectSchemaType, type PublishedId} from 'sanity'\nimport {PresentationDocumentContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {type PresentationPluginOptions} from '../types'\nimport {useDocumentLocations} from '../useDocumentLocations'\nimport {LocationsBanner} from './LocationsBanner'\n\nconst LocationStack = styled(Stack)`\n  min-height: ${rem(42)};\n\n  & + &:empty {\n    display: none;\n  }\n`\n\nexport function PresentationDocumentHeader(props: {\n  documentId: PublishedId\n  version: string | undefined\n  options: PresentationPluginOptions\n  schemaType: ObjectSchemaType\n}): ReactNode {\n  const {documentId, options, schemaType, version} = props\n  const context = useContext(PresentationDocumentContext)\n  const {state, status} = useDocumentLocations({\n    id: documentId,\n    version,\n    resolvers: options.resolve?.locations || options.locate,\n    type: schemaType.name,\n  })\n\n  if ((context && context.options[0] !== options) || status === 'empty') {\n    return null\n  }\n\n  const contextOptions = context?.options || []\n\n  return (\n    <LocationStack marginBottom={5} space={5}>\n      <Stack space={2}>\n        {contextOptions.map(\n          (\n            // eslint-disable-next-line @typescript-eslint/no-shadow\n            options,\n            idx,\n          ) => (\n            <LocationsBanner\n              documentId={documentId}\n              isResolving={status === 'resolving'}\n              key={idx}\n              options={options}\n              schemaType={schemaType}\n              showPresentationTitle={contextOptions.length > 1}\n              state={state}\n            />\n          ),\n        )}\n      </Stack>\n    </LocationStack>\n  )\n}\n","import {type ReactNode, useCallback, useContext, useLayoutEffect, useMemo, useState} from 'react'\nimport {PresentationDocumentContext} from 'sanity/_singletons'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {type PresentationPluginOptions} from '../types'\nimport {type PresentationDocumentContextValue} from './types'\n\n/** @internal */\nexport function PresentationDocumentProvider(props: {\n  children?: ReactNode\n  options: PresentationPluginOptions\n}): React.JSX.Element {\n  const {children, options} = props\n  const parent = useContext(PresentationDocumentContext)\n  const parentRegister = parent?.register\n\n  const [optionsArray, setOptionsArray] = useState<PresentationPluginOptions[]>(() => [])\n\n  const register = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (options: PresentationPluginOptions) => {\n      if (parentRegister) {\n        return parentRegister(options)\n      }\n\n      setOptionsArray((prev) => [options].concat(prev))\n\n      return () => {\n        setOptionsArray((prev) => prev.filter((o) => o !== options))\n      }\n    },\n    [parentRegister],\n  )\n\n  const context: PresentationDocumentContextValue = useMemo(\n    () => ({\n      options: parent?.options || optionsArray,\n      register,\n    }),\n    [optionsArray, parent, register],\n  )\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const registerEffectEvent = useEffectEvent((options: PresentationPluginOptions) =>\n    register(options),\n  )\n  useLayoutEffect(() => registerEffectEvent(options), [options])\n\n  return (\n    <PresentationDocumentContext.Provider value={context}>\n      {children}\n    </PresentationDocumentContext.Provider>\n  )\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {useContext, useMemo} from 'react'\nimport {\n  defineDocumentFieldAction,\n  type DocumentFieldActionGroup,\n  type DocumentFieldActionItem,\n  type DocumentFieldActionProps,\n  isRecord,\n  pathToString,\n  type Tool,\n  useWorkspace,\n} from 'sanity'\nimport {PresentationContext} from 'sanity/_singletons'\nimport {useRouter} from 'sanity/router'\n\nimport {DEFAULT_TOOL_NAME} from '../constants'\n\nfunction useOpenInStructureAction(\n  props: DocumentFieldActionProps,\n): DocumentFieldActionItem | DocumentFieldActionGroup {\n  const {documentId, documentType, path} = props\n  const workspace = useWorkspace()\n  const {navigateIntent} = useRouter()\n  const presentation = useContext(PresentationContext)\n\n  const defaultStructureTool = useMemo(\n    () =>\n      findStructureTool(\n        workspace.tools,\n        documentId,\n        documentType,\n        presentation?.name || DEFAULT_TOOL_NAME,\n      ),\n    [documentId, documentType, workspace.tools, presentation],\n  )\n\n  return {\n    type: 'action',\n    hidden: !presentation || path.length > 0 || !defaultStructureTool,\n    icon: defaultStructureTool?.icon || MasterDetailIcon,\n    title: `Open in ${defaultStructureTool?.title || 'Structure'}`,\n    onAction() {\n      navigateIntent('edit', {\n        id: documentId,\n        type: documentType,\n        mode: 'structure',\n        path: pathToString(path),\n      })\n    },\n    renderAsButton: true,\n  }\n}\n\nexport const openInStructure = defineDocumentFieldAction({\n  name: 'presentation/openInStructure',\n  useAction: useOpenInStructureAction,\n})\n\nfunction findStructureTool(\n  tools: Tool[],\n  documentId: string,\n  documentType: string,\n  presentationToolName?: string,\n): Tool | undefined {\n  const results = tools\n    .filter((t) => t.name !== presentationToolName)\n    .map((t) => {\n      const match = t.canHandleIntent?.(\n        'edit',\n        {\n          id: documentId,\n          type: documentType,\n          mode: 'structure',\n        },\n        {},\n      )\n\n      return {tool: t, match}\n    })\n\n  const modeMatches = results.filter((t) => isRecord(t.match) && t.match.mode)\n\n  if (modeMatches.length > 0) {\n    return modeMatches[0].tool\n  }\n\n  const matches = results.filter((t) => t.match)\n\n  return matches[0]?.tool\n}\n","import {uuid} from '@sanity/uuid'\nimport {getPublishedId} from 'sanity'\nimport {encodeJsonParams, type RouterState, type SearchParam} from 'sanity/router'\n\nimport {type PresentationSearchParams, type PresentationStateParams} from './types'\n\nconst preservedSearchParamKeys: Array<keyof PresentationSearchParams> = ['preview', 'viewport']\n\n/**\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: RouterState | undefined,\n  payload: unknown,\n):\n  | (PresentationStateParams & {_searchParams: SearchParam[]})\n  | {intent: string; params: Record<string, string>; payload: unknown} {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const {id, mode, path, presentation, type, ...searchParams} = params\n\n  const preservedSearchParams = (routerState?._searchParams || [])\n    // @todo Casting https://github.com/microsoft/TypeScript/issues/14520\n    .filter(([key]) => preservedSearchParamKeys.includes(key as keyof PresentationSearchParams))\n    .reduce((acc, [key, value]) => ({...acc, [key]: value}), {} as Record<string, string>)\n\n  const _searchParams = {\n    ...preservedSearchParams,\n    ...searchParams,\n  }\n\n  if (intent === 'edit' && id) {\n    _searchParams.preview =\n      _searchParams.preview || new URLSearchParams(window.location.search).get('preview') || '/'\n    return {\n      type: type || '*',\n      id: getPublishedId(id),\n      path,\n      _searchParams: Object.entries(_searchParams),\n    }\n  }\n\n  if (intent === 'create') {\n    _searchParams.preview =\n      _searchParams.preview || new URLSearchParams(window.location.search).get('preview') || '/'\n\n    if (payload && typeof payload === 'object') {\n      _searchParams.templateParams = encodeJsonParams(payload as Record<string, unknown>)\n    }\n\n    return {\n      type: type || '*',\n      id: id || uuid(),\n      _searchParams: Object.entries(_searchParams),\n    }\n  }\n  return {intent, params, payload}\n}\n","import {Flex, Spinner} from '@sanity/ui'\n\nexport function PresentationSpinner(): React.JSX.Element {\n  return (\n    <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\" style={{width: '100%'}}>\n      <Spinner />\n    </Flex>\n  )\n}\n","import {route} from 'sanity/router'\n\n// eslint-disable-next-line camelcase\nexport const router = route.create('/', {__unsafe_disableScopedSearchParams: true}, [\n  route.intents('/intent'),\n  route.create(':type', [route.create(':id', [route.create(':path')])]),\n])\n","import {type SanityDocument} from '@sanity/client'\nimport {lazy, Suspense} from 'react'\nimport {\n  definePlugin,\n  getPublishedId,\n  getVersionFromId,\n  type InputProps,\n  isDocumentSchemaType,\n} from 'sanity'\n\nimport {DEFAULT_TOOL_ICON, DEFAULT_TOOL_NAME, EDIT_INTENT_MODE} from './constants'\nimport {PresentationDocumentHeader} from './document/PresentationDocumentHeader'\nimport {PresentationDocumentProvider} from './document/PresentationDocumentProvider'\nimport {openInStructure} from './fieldActions/openInStructure'\nimport {getIntentState} from './getIntentState'\nimport {presentationUsEnglishLocaleBundle} from './i18n'\nimport {PresentationSpinner} from './PresentationSpinner'\nimport {router} from './router'\nimport {\n  type DocumentLocationResolverObject,\n  type DocumentLocationsState,\n  type DocumentResolver,\n  type PresentationPluginOptions,\n} from './types'\n\nconst PresentationTool = lazy(() => import('./PresentationToolGrantsCheck'))\nconst BroadcastDisplayedDocument = lazy(() => import('./loader/BroadcastDisplayedDocument'))\n\n/**\n * Define locations for a given document type.\n * This function doesn't do anything itself, it is used to provide type information.\n * @param resolver - resolver that return locations for a document.\n * @public\n */\nexport function defineLocations<K extends string>(\n  resolver: DocumentLocationResolverObject<K> | DocumentLocationsState,\n): typeof resolver {\n  return resolver\n}\n\n/**\n * Define documents for a given location.\n * This function doesn't do anything itself, it is used to provide type information.\n * @param resolvers - resolvers that return documents.\n * @public\n */\nexport function defineDocuments(resolvers: DocumentResolver[]): typeof resolvers {\n  return resolvers\n}\n\n/** @public */\nexport const presentationTool = definePlugin<PresentationPluginOptions>((options) => {\n  const toolName = options.name || DEFAULT_TOOL_NAME\n\n  if ('locate' in options) {\n    // eslint-disable-next-line no-console\n    console.warn('Presentation’s `locate` option is deprecated. Use `resolve.locations` instead.')\n  }\n\n  const hasLocationsResolver = !!(options.resolve?.locations || options.locate)\n\n  function PresentationDocumentInput(props: InputProps) {\n    const value = props.value as SanityDocument\n    const documentId = value?._id ? getPublishedId(value?._id) : undefined\n    const documentVersion = value?._id ? getVersionFromId(value._id) : undefined\n    if (isDocumentSchemaType(props.schemaType)) {\n      return (\n        <PresentationDocumentProvider options={options}>\n          {hasLocationsResolver && documentId && (\n            <PresentationDocumentHeader\n              documentId={documentId}\n              version={documentVersion}\n              options={options}\n              schemaType={props.schemaType}\n            />\n          )}\n          <Suspense fallback={<PresentationSpinner />}>{props.renderDefault(props)}</Suspense>\n          <Suspense key=\"broadcast-displayed-document\">\n            <BroadcastDisplayedDocument key={documentId} value={value} />\n          </Suspense>\n        </PresentationDocumentProvider>\n      )\n    }\n\n    return props.renderDefault(props)\n  }\n\n  function canHandleCreateIntent(params: Record<string, unknown>) {\n    // We can't handle create intents without a `type` parameter\n    if (!('type' in params)) {\n      return false\n    }\n\n    if ('presentation' in params && params.presentation !== toolName) {\n      return false\n    }\n\n    return 'template' in params ? {template: true} : true\n  }\n\n  function canHandleEditIntent(params: Record<string, unknown>) {\n    // We can't handle edit intents without `type` or `id` parameters\n    if (!('type' in params) || !('id' in params)) {\n      return false\n    }\n\n    if ('presentation' in params && params.presentation !== toolName) {\n      return false\n    }\n\n    return 'mode' in params ? {mode: params.mode === EDIT_INTENT_MODE} : true\n  }\n\n  return {\n    i18n: {\n      bundles: [presentationUsEnglishLocaleBundle],\n    },\n    document: {\n      unstable_fieldActions: (prev) => {\n        return [\n          ...prev.filter((a) => a.name !== openInStructure.name), // prevent duplication\n          openInStructure,\n        ]\n      },\n    },\n\n    form: {\n      components: {\n        input: PresentationDocumentInput,\n      },\n    },\n\n    tools: [\n      {\n        icon: options.icon || DEFAULT_TOOL_ICON,\n        name: toolName,\n        title: options.title,\n        component: PresentationTool,\n        options,\n        canHandleIntent(intent, params) {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        router,\n        __internalApplicationType: 'sanity/presentation',\n      },\n    ],\n  }\n})\n","import {type Dispatch, type Reducer} from 'react'\nimport {boolean, fallback, object, parse, picklist} from 'valibot'\n\n/** @public */\nexport interface PresentationState {\n  mainDocument: boolean\n  iframe: {\n    status: 'loading' | 'loaded' | 'refreshing' | 'reloading'\n  }\n  visualEditing: {\n    overlaysEnabled: boolean\n  }\n}\n\n/** @public */\nexport const ACTION_IFRAME_LOADED = 'ACTION_IFRAME_LOADED'\n/** @public */\nexport const ACTION_IFRAME_REFRESH = 'ACTION_IFRAME_REFRESH'\n/** @public */\nexport const ACTION_IFRAME_RELOAD = 'ACTION_IFRAME_RELOAD'\n/** @public */\nexport const ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE = 'ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE'\n\n/** @public */\nexport interface IframeLoadedAction {\n  type: typeof ACTION_IFRAME_LOADED\n}\n/** @public */\nexport interface IframeRefreshAction {\n  type: typeof ACTION_IFRAME_REFRESH\n}\n/** @public */\nexport interface IframeReloadAction {\n  type: typeof ACTION_IFRAME_RELOAD\n}\n/** @public */\nexport interface VisualEditingOverlaysToggleAction {\n  type: typeof ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE\n  enabled: boolean\n}\n\n/** @public */\nexport type PresentationAction =\n  | IframeLoadedAction\n  | IframeRefreshAction\n  | IframeReloadAction\n  | VisualEditingOverlaysToggleAction\n\nexport const presentationReducer: Reducer<\n  Readonly<PresentationState>,\n  Readonly<PresentationAction>\n> = (state, action) => {\n  switch (action.type) {\n    case ACTION_IFRAME_LOADED:\n      return state.iframe.status === 'loaded'\n        ? state\n        : {\n            ...state,\n            iframe: {\n              ...state.iframe,\n              status: 'loaded',\n            },\n          }\n    case ACTION_IFRAME_REFRESH:\n      return state.iframe.status === 'refreshing'\n        ? state\n        : {\n            ...state,\n            iframe: {\n              ...state.iframe,\n              status: 'refreshing',\n            },\n          }\n    case ACTION_IFRAME_RELOAD:\n      return state.iframe.status === 'reloading'\n        ? state\n        : {\n            ...state,\n            iframe: {\n              ...state.iframe,\n              status: 'reloading',\n            },\n          }\n    case ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE:\n      return toggleVisualEditingOverlays(state, action)\n    default:\n      return state\n  }\n}\n\nconst toggleVisualEditingOverlays: Reducer<\n  Readonly<PresentationState>,\n  Readonly<VisualEditingOverlaysToggleAction>\n> = (state, action) => {\n  if (state.visualEditing.overlaysEnabled === action.enabled) return state\n  return {\n    ...state,\n    visualEditing: {\n      ...state.visualEditing,\n      overlaysEnabled: action.enabled,\n    },\n  }\n}\n\nconst mainDocumentSchema = fallback(boolean(), false)\n\nconst iframeStatusSchema = picklist(['loading', 'loaded', 'refreshing', 'reloading'])\n\nconst initStateSchema = object({\n  mainDocument: mainDocumentSchema,\n  iframe: object({\n    status: iframeStatusSchema,\n  }),\n  visualEditing: object({overlaysEnabled: boolean()}),\n})\n\nconst INITIAL_PRESENTATION_STATE = {\n  mainDocument: false,\n  iframe: {\n    status: 'loading',\n  },\n  visualEditing: {\n    overlaysEnabled: false,\n  },\n} as const satisfies PresentationState\n\nexport function presentationReducerInit(\n  state: Readonly<Partial<PresentationState>>,\n): Readonly<PresentationState> {\n  return parse(initStateSchema, {...INITIAL_PRESENTATION_STATE, ...state})\n}\n\n/** @public */\nexport type DispatchPresentationAction = Dispatch<Readonly<PresentationAction>>\n","import {useContext} from 'react'\nimport {PresentationNavigateContext} from 'sanity/_singletons'\n\nimport {type PresentationNavigateContextValue} from './types'\n\n/** @public */\nexport function usePresentationNavigate(): PresentationNavigateContextValue {\n  const navigate = useContext(PresentationNavigateContext)\n\n  if (!navigate) {\n    throw new Error('Presentation navigate context is missing')\n  }\n\n  return navigate\n}\n\nexport type {PresentationNavigateContextValue}\n","import {useContext} from 'react'\nimport {PresentationParamsContext} from 'sanity/_singletons'\n\nimport {type PresentationParamsContextValue} from './types'\n\n/** @public */\nexport function usePresentationParams(throwOnMissingContext?: true): PresentationParamsContextValue\n/** @public */\nexport function usePresentationParams(\n  throwOnMissingContext: false,\n): PresentationParamsContextValue | null\n/** @public */\nexport function usePresentationParams(\n  throwOnMissingContext = true,\n): PresentationParamsContextValue | null {\n  const params = useContext(PresentationParamsContext)\n\n  if (throwOnMissingContext && !params) {\n    throw new Error('Presentation params context is missing')\n  }\n\n  return params\n}\n"],"names":["useSharedState","key","value","$","_c","context","useContext","PresentationSharedStateContext","Error","setValue","t0","t1","useEffect","DEFAULT_TOOL_ICON","ComposeIcon","DEFAULT_TOOL_NAME","DEFAULT_TOOL_TITLE","EDIT_INTENT_MODE","MAX_TIME_TO_OVERLAYS_CONNECTION","API_VERSION","apiVersion","MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL","LOADER_QUERY_GC_INTERVAL","POPUP_CHECK_INTERVAL","keysOf","Object","keys","setKey","source","props","options","Observable","observer","subscribe","pipe","switchMap","object","keyObservables","map","isObservable","from","val","of","wait","combineLatest","pairs","reduce","acc","mergeAll","scan","INITIAL_STATE","locations","getDocumentId","isReference","_ref","_id","undefined","cleanPreviewable","id","previewable","clean","_type","_weak","_dataset","_projectId","_strengthenOnPublish","listen","fields","store","query","fetch","join","params","draftId","getDraftId","listenQuery","perspective","tag","observeDocument","paths","currentValue","headlessPaths","filter","path","length","Set","snapshot","leads","forEach","head","tail","push","next","res","tails","isRecord","observeForLocations","documentId","resolver","documentStore","select","values","String","split","doc","get","resolve","useDocumentLocations","resolvers","type","version","useDocumentStore","perspectiveStack","usePerspective","locationsState","setLocationsState","useState","locationsStatus","setLocationsStatus","bb0","_result","result","t2","sub","state","unsubscribe","t3","status","presentationLocaleNamespace","presentationUsEnglishLocaleBundle","defineLocaleResourceBundle","locale","namespace","resources","usePresentationTool","throwOnMissingContext","presentation","PresentationContext","useCurrentPresentationToolName","name","TONE_ICONS","positive","InfoOutlineIcon","caution","WarningOutlineIcon","critical","ErrorOutlineIcon","LocationsBanner","isResolving","schemaType","showPresentationTitle","message","tone","len","t","useTranslation","presentationName","expanded","setExpanded","_temp","toggle","count","title","ToneIcon","Symbol","for","margin","t4","transform","transition","l","index","href","preview","t5","t6","v","LocationItem","documentType","node","active","toolName","currentPresentationToolName","isCurrentTool","navigate","structureParams","intent","mode","presentationLinkProps","useIntentLink","handleCurrentToolClick","onClick","t7","t8","t9","LocationStack","styled","Stack","rem","PresentationDocumentHeader","PresentationDocumentContext","locate","contextOptions","options_0","idx","PresentationDocumentProvider","children","parent","parentRegister","register","optionsArray","setOptionsArray","prev","concat","prev_0","o","options_1","registerEffectEvent","useEffectEvent","useLayoutEffect","useOpenInStructureAction","workspace","useWorkspace","navigateIntent","useRouter","tools","findStructureTool","defaultStructureTool","icon","MasterDetailIcon","hidden","onAction","pathToString","renderAsButton","openInStructure","defineDocumentFieldAction","useAction","presentationToolName","results","match","canHandleIntent","tool","modeMatches","preservedSearchParamKeys","getIntentState","routerState","payload","searchParams","_searchParams","includes","URLSearchParams","window","location","search","getPublishedId","entries","templateParams","encodeJsonParams","uuid","PresentationSpinner","width","router","route","create","__unsafe_disableScopedSearchParams","intents","PresentationTool","lazy","BroadcastDisplayedDocument","defineLocations","defineDocuments","presentationTool","definePlugin","console","warn","hasLocationsResolver","PresentationDocumentInput","getVersionFromId","documentVersion","isDocumentSchemaType","renderDefault","canHandleCreateIntent","template","canHandleEditIntent","i18n","bundles","document","unstable_fieldActions","a","form","components","input","component","__internalApplicationType","ACTION_IFRAME_LOADED","ACTION_IFRAME_REFRESH","ACTION_IFRAME_RELOAD","ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE","presentationReducer","action","iframe","toggleVisualEditingOverlays","visualEditing","overlaysEnabled","enabled","mainDocumentSchema","fallback","boolean","iframeStatusSchema","picklist","initStateSchema","mainDocument","INITIAL_PRESENTATION_STATE","presentationReducerInit","parse","usePresentationNavigate","PresentationNavigateContext","usePresentationParams","PresentationParamsContext"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"debugId":null}}]
}