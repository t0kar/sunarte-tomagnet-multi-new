{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"index.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/helpers.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/reference/asserters.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/assets/asserters.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/crossDatasetReference/asserters.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/documents/asserters.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/globalDocumentReference/asserters.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/markers/asserters.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/mutations/asserters.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/paths/asserters.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/portableText/asserters.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/schema/asserters.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/schema/define.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/search/types.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/search/asserters.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/slug/asserters.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/transactionLog/asserters.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/types/src/validation/asserters.ts"],"sourcesContent":["export function isObject(obj: unknown): obj is Record<string, unknown> {\n  return typeof obj === 'object' && obj !== null && !Array.isArray(obj)\n}\n","import {isObject} from '../helpers'\nimport {type Reference} from './types'\n\n/** @internal */\nexport function isReference(reference: unknown): reference is Reference {\n  return isObject(reference) && typeof reference._ref === 'string'\n}\n","import {isObject} from '../helpers'\nimport {isReference} from '../reference'\nimport {type Image} from './types'\n\n/** @public */\nexport function isImage(value: unknown): value is Image {\n  return isObject(value) && isReference(value.asset) && value.asset._ref.startsWith('image-')\n}\n","import {isObject} from '../helpers'\nimport {type CrossDatasetReferenceValue} from './types'\n\n/** @beta */\nexport function isCrossDatasetReference(\n  reference: unknown,\n): reference is CrossDatasetReferenceValue {\n  return (\n    isObject(reference) &&\n    typeof reference._ref === 'string' &&\n    typeof reference._dataset === 'string' &&\n    typeof reference._projectId === 'string'\n  )\n}\n","import {isObject} from '../helpers'\nimport {type KeyedObject, type SanityDocument, type TypedObject} from './types'\n\n/** @public */\nexport function isSanityDocument(document: unknown): document is SanityDocument {\n  return (\n    isObject(document) && typeof document._id === 'string' && typeof document._type === 'string'\n  )\n}\n\n/** @public */\nexport function isTypedObject(obj: unknown): obj is TypedObject {\n  return isObject(obj) && typeof obj._type === 'string'\n}\n\n/** @public */\nexport function isKeyedObject(obj: unknown): obj is KeyedObject {\n  return isObject(obj) && typeof obj._key === 'string'\n}\n","import {isObject} from '../helpers'\nimport {type GlobalDocumentReferenceValue} from './types'\n\n/** @beta */\nexport function isGlobalDocumentReference(\n  reference: unknown,\n): reference is GlobalDocumentReferenceValue {\n  if (!isObject(reference) || typeof reference._ref !== 'string') {\n    return false\n  }\n\n  return reference._ref.split(':').length === 3\n}\n","import {type ValidationMarker} from './types'\n\n/** @internal */\nexport function isValidationErrorMarker(\n  marker: ValidationMarker,\n): marker is ValidationMarker & {level: 'error'} {\n  return marker.level === 'error'\n}\n\n/** @internal */\nexport function isValidationWarningMarker(\n  marker: ValidationMarker,\n): marker is ValidationMarker & {level: 'warning'} {\n  return marker.level === 'warning'\n}\n\n/** @internal */\nexport function isValidationInfoMarker(\n  marker: ValidationMarker,\n): marker is ValidationMarker & {level: 'info'} {\n  return marker.level === 'info'\n}\n","import {type TransactionLogMutation} from '../transactionLog'\nimport {\n  type CreateIfNotExistsMutation,\n  type CreateMutation,\n  type CreateOrReplaceMutation,\n  type DeleteMutation,\n  type Mutation,\n  type PatchMutation,\n} from './types'\n\n/** @internal */\nexport function isCreateMutation(\n  mutation: Mutation | TransactionLogMutation,\n): mutation is CreateMutation {\n  return 'create' in mutation\n}\n\n/** @internal */\nexport function isCreateIfNotExistsMutation(\n  mutation: Mutation | TransactionLogMutation,\n): mutation is CreateIfNotExistsMutation {\n  return 'createIfNotExists' in mutation\n}\n\n/** @internal */\nexport function isCreateOrReplaceMutation(\n  mutation: Mutation | TransactionLogMutation,\n): mutation is CreateOrReplaceMutation {\n  return 'createOrReplace' in mutation\n}\n\n/** @internal */\nexport function isDeleteMutation(\n  mutation: Mutation | TransactionLogMutation,\n): mutation is DeleteMutation {\n  return 'delete' in mutation\n}\n\n/** @internal */\nexport function isPatchMutation(\n  mutation: Mutation | TransactionLogMutation,\n): mutation is PatchMutation {\n  return 'patch' in mutation\n}\n","import {type IndexTuple, type KeyedSegment, type PathSegment} from './types'\n\nconst reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/\nconst reIndexTuple = /^\\d*:\\d*$/\n\n/** @internal */\nexport function isIndexSegment(segment: PathSegment): segment is number {\n  return typeof segment === 'number' || (typeof segment === 'string' && /^\\[\\d+\\]$/.test(segment))\n}\n\n/** @internal */\nexport function isKeySegment(segment: PathSegment): segment is KeyedSegment {\n  if (typeof segment === 'string') {\n    return reKeySegment.test(segment.trim())\n  }\n\n  return typeof segment === 'object' && '_key' in segment\n}\n\n/** @internal */\nexport function isIndexTuple(segment: PathSegment): segment is IndexTuple {\n  if (typeof segment === 'string' && reIndexTuple.test(segment)) {\n    return true\n  }\n\n  if (!Array.isArray(segment) || segment.length !== 2) {\n    return false\n  }\n\n  const [from, to] = segment\n  return (typeof from === 'number' || from === '') && (typeof to === 'number' || to === '')\n}\n","import {type PortableTextObject, type PortableTextSpan, type PortableTextTextBlock} from './types'\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return !!value && (typeof value == 'object' || typeof value == 'function')\n}\n\n/**\n * Assert that a given object is a portable-text text-block type object\n *\n * @remarks\n * * The `markDefs` and `style` property of a block is optional.\n * * Block types can be named, so expect anything of the _type property.\n *\n * @alpha\n */\nexport function isPortableTextTextBlock<T = PortableTextSpan | PortableTextObject>(\n  value: unknown,\n): value is PortableTextTextBlock<T> {\n  return (\n    isRecord(value) &&\n    typeof value._type === 'string' && // block types can be named, so expect anything here.\n    Array.isArray(value.children) &&\n    value.children.every((child) => isRecord(child)) &&\n    ('markDefs' in value // optional property\n      ? Array.isArray(value.markDefs) && value.markDefs.every((def) => isRecord(def))\n      : true) &&\n    ('style' in value ? typeof value.style === 'string' : true) // optional property\n  )\n}\n\n/**\n * Assert that a given object is a portable-text span-type object\n *\n * @remarks\n * The `marks` property of a block is optional.\n *\n * @alpha\n */\nexport function isPortableTextSpan(value: unknown): value is PortableTextSpan {\n  return (\n    isRecord(value) &&\n    value._type === 'span' &&\n    typeof value.text === 'string' &&\n    ('marks' in value // optional property\n      ? Array.isArray(value.marks) && value.marks.every((mark) => typeof mark === 'string')\n      : true)\n  )\n}\n\n/**\n * Assert that a given object is a portable-text list-text-block-type object\n *\n * @remarks\n * Uses `isPortableTextTextBlock` and checks for `listItem` and `level`\n *\n * @see isPortableTextTextBlock\n *\n * @alpha\n */\nexport function isPortableTextListBlock<T = PortableTextSpan | PortableTextObject>(\n  value: unknown,\n): value is PortableTextTextBlock<T> {\n  return (\n    isPortableTextTextBlock(value) &&\n    'listItem' in value &&\n    typeof value.listItem === 'string' &&\n    'level' in value &&\n    Number.isInteger(value.level)\n  )\n}\n","import {type CrossDatasetReferenceSchemaType} from '../crossDatasetReference'\nimport {type TitledListValue} from './definition'\nimport {\n  type ArraySchemaType,\n  type BaseSchemaType,\n  type BlockChildrenObjectField,\n  type BlockListObjectField,\n  type BlockSchemaType,\n  type BlockStyleObjectField,\n  type BooleanSchemaType,\n  type DeprecatedSchemaType,\n  type DeprecationConfiguration,\n  type FileSchemaType,\n  type ImageSchemaType,\n  type NumberSchemaType,\n  type ObjectSchemaType,\n  type ReferenceSchemaType,\n  type SchemaType,\n  type SpanSchemaType,\n  type StringSchemaType,\n} from './types'\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return !!value && (typeof value == 'object' || typeof value == 'function')\n}\n\n/**\n * Returns wether or not the given type is a document type\n * (eg that it was defined as `type: 'document'`)\n *\n * @param type - Schema type to test\n * @returns True if type is a document type, false otherwise\n *\n * @public\n */\nexport function isDocumentSchemaType(type: unknown): type is ObjectSchemaType {\n  if (!isObjectSchemaType(type)) {\n    return false\n  }\n\n  let current: SchemaType | undefined = type as SchemaType\n  while (current) {\n    if (current.name === 'document') {\n      return true\n    }\n\n    current = current.type\n  }\n  return false\n}\n\n/** @internal */\nexport function isObjectSchemaType(type: unknown): type is ObjectSchemaType {\n  if (!isRecord(type)) return false\n  return type.jsonType === 'object'\n}\n\n/** @internal */\nexport function isArraySchemaType(type: unknown): type is ArraySchemaType {\n  if (!isRecord(type)) return false\n  return type.jsonType === 'array'\n}\n\n/** @internal */\nexport function isArrayOfBlocksSchemaType(\n  type: unknown,\n): type is ArraySchemaType<ObjectSchemaType> {\n  return isArraySchemaType(type) && type.of.some((memberType) => isBlockSchemaType(memberType))\n}\n\n/** @internal */\nexport function isArrayOfObjectsSchemaType(\n  type: unknown,\n): type is ArraySchemaType<ObjectSchemaType> {\n  return isArraySchemaType(type) && type.of.every((memberType) => isObjectSchemaType(memberType))\n}\n\n/** @internal */\nexport function isArrayOfPrimitivesSchemaType(type: unknown): type is ArraySchemaType {\n  return isArraySchemaType(type) && type.of.every((memberType) => isPrimitiveSchemaType(memberType))\n}\n\n/** @internal */\nexport function isBooleanSchemaType(type: unknown): type is BooleanSchemaType {\n  if (!isRecord(type)) return false\n  return type.jsonType === 'boolean'\n}\n\n/** @internal */\nexport function isStringSchemaType(type: unknown): type is StringSchemaType {\n  if (!isRecord(type)) return false\n  return type.jsonType === 'string'\n}\n\n/** @internal */\nexport function isNumberSchemaType(type: unknown): type is NumberSchemaType {\n  if (!isRecord(type)) return false\n  return type.jsonType === 'number'\n}\n\n/** @internal */\nexport function isPrimitiveSchemaType(\n  type: unknown,\n): type is BooleanSchemaType | StringSchemaType | NumberSchemaType {\n  return isBooleanSchemaType(type) || isStringSchemaType(type) || isNumberSchemaType(type)\n}\n\n/** @internal */\nexport function isReferenceSchemaType(type: unknown): type is ReferenceSchemaType {\n  return isRecord(type) && (type.name === 'reference' || isReferenceSchemaType(type.type))\n}\n\n/** @internal */\nexport function isImageSchemaType(type: unknown): type is ImageSchemaType {\n  return isRecord(type) && (type.name === 'image' || isImageSchemaType(type.type))\n}\n\n/** @internal */\nexport function isFileSchemaType(type: unknown): type is FileSchemaType {\n  return isRecord(type) && (type.name === 'file' || isFileSchemaType(type.type))\n}\n\n/** @internal */\nexport function isDeprecatedSchemaType<TSchemaType extends BaseSchemaType>(\n  type: TSchemaType,\n): type is DeprecatedSchemaType<TSchemaType> {\n  if (!isRecord(type)) return false\n  return typeof type.deprecated !== 'undefined'\n}\n\n/** @internal */\nexport function isDeprecationConfiguration(type: unknown): type is DeprecationConfiguration {\n  if (!isRecord(type)) return false\n  return typeof type.deprecated !== 'undefined'\n}\n\n/** @internal */\nexport function isCrossDatasetReferenceSchemaType(\n  type: unknown,\n): type is CrossDatasetReferenceSchemaType {\n  return (\n    isRecord(type) &&\n    (type.name === 'crossDatasetReference' || isCrossDatasetReferenceSchemaType(type.type))\n  )\n}\n\n/** @internal */\nexport function isTitledListValue(item: unknown): item is TitledListValue {\n  return typeof item === 'object' && item !== null && 'title' in item && 'value' in item\n}\n\n/** @internal */\nexport function isSpanSchemaType(type: unknown): type is SpanSchemaType {\n  if (!isRecord(type)) return false\n  // we check for `annotations` and `decorators` instead of `type.name` because\n  // schema names can technically change if someone extends the type\n  return Array.isArray(type.annotations) && Array.isArray(type.decorators)\n}\n\n/** @internal */\nexport function isBlockSchemaType(type: unknown): type is BlockSchemaType {\n  if (!isRecord(type)) return false\n  if (!Array.isArray(type.fields)) return false\n  const maybeSpanChildren = type.fields.find(isBlockChildrenObjectField)\n  const maybeStyle = type.fields.find(isBlockStyleObjectField)\n  const maybeList = type.fields.find(isBlockListObjectField)\n  return (\n    isBlockChildrenObjectField(maybeSpanChildren) &&\n    isBlockStyleObjectField(maybeStyle) &&\n    isBlockListObjectField(maybeList)\n  )\n}\n\n/** @internal */\nexport function isBlockStyleObjectField(field: unknown): field is BlockStyleObjectField {\n  if (!isRecord(field)) return false\n  if (field.name !== 'style') return false\n  return isRecord(field.type) && field.type.jsonType === 'string'\n}\n\n/** @internal */\nexport function isBlockListObjectField(field: unknown): field is BlockListObjectField {\n  if (!isRecord(field)) return false\n  if (field.name !== 'listItem') return false\n  return isRecord(field.type) && field.type.jsonType === 'string'\n}\n\n/** @internal */\nexport function isBlockChildrenObjectField(field: unknown): field is BlockChildrenObjectField {\n  if (!isRecord(field)) return false\n  if (field.name !== 'children') return false\n  if (!isArraySchemaType(field.type)) return false\n  // there will always be a span item in `SpanChildrenObjectField`\n  return field.type.of.some(isSpanSchemaType)\n}\n","import {\n  type DefineArrayMemberBase,\n  type DefineSchemaBase,\n  type DefineSchemaOptions,\n  type MaybeAllowUnknownProps,\n  type NarrowPreview,\n  type StrictDefinition,\n  type WidenInitialValue,\n  type WidenValidation,\n} from './defineTypes'\nimport {type FieldDefinitionBase, type IntrinsicTypeName} from './definition'\nimport {type AutocompleteString} from './types'\n\n/**\n * Helper function for defining a Sanity type definition. This function does not do anything on its own;\n * it exists to check that your schema definition is correct, and help autocompletion in your IDE.\n *\n * This function will narrow the schema type down to fields and options based on the provided type-string.\n *\n * Schema types defined using `defineType` should typically be added to the Studio config under `schema.types`.\n * Defined types can be referenced by their `name`. This is referred to as a type-alias.\n *\n * When using type-aliases as `type`, `defineType` cannot know the base-type, so type-safety will be reduced.\n * If you know the base type of the type-alias, provide `defineOptions.aliasFor: <base type name>`.\n * This will enforce that the schema definition conforms with the provided type.\n *\n * By default, `defineType` only allows known properties and options.\n * Use `defineOptions.strict: false` to allow unknown properties and options.\n *\n * ### Basic usage\n *\n * ```ts\n * defineType({\n *   type: 'object',\n *   name: 'custom-object',\n *   fields: [ {type: 'string', name: 'title', title: 'Title'}],\n * })\n * ```\n *\n * ### Usage with aliasFor narrowing\n *\n * ```ts\n * defineType({\n *   type: 'custom-object',\n *   name: 'redefined-custom-object',\n *   options: {\n *     columns: 2\n *   }\n * }, {aliasFor: 'object' })\n * ```\n *\n * ### Allow unknown properties\n *\n * ```ts\n * defineType({\n *   type: 'custom-object',\n *   name: 'redefined-custom-object',\n *   allowsUnknownProperties: true\n *   options: {\n *     columns: 2,\n *     allowsUnknownOptions: true\n *   }\n * }, {strict: false})\n * ```\n * ### Maximum safety and best autocompletion\n *\n * Use {@link defineType}, {@link defineField} and {@link defineArrayMember}:\n *\n * ```ts\n *  defineType({\n *    type: 'object',\n *    name: 'custom-object',\n *    fields: [\n *      defineField({\n *        type: 'array',\n *        name: 'arrayField',\n *        title: 'Things',\n *        of: [\n *          defineArrayMember({\n *            type: 'object',\n *            name: 'type-name-in-array',\n *            fields: [defineField({type: 'string', name: 'title', title: 'Title'})],\n *          }),\n *        ],\n *      }),\n *    ],\n *  })\n * ```\n *\n * ## Note on type-safety in the current implementation\n *\n * Type-safety inside array-like properties (schema properties like `fields` and `of`) can only be guaranteed when\n * {@link defineField} and {@link defineArrayMember} are used to wrap each value in the array.\n *\n * For array-values without a function-wrapper, TypeScript will resolve to a union type of all possible properties across\n * all schema types. This result in less precise typing.\n *\n * ### Extending the Sanity Schema types\n *\n * If you want to extend the Sanity Schema types with your own properties or options to make them typesafe,\n * you can use [TypeScript declaration merging](https://www.typescriptlang.org/docs/handbook/declaration-merging.html).\n *\n * With declaration merging, properties and options will be available in a type-safe manner, and\n * `strict: false` will not be necessary.\n *\n * #### Example: Add option to StringOptions\n *\n * ```ts\n * // string.ts\n *\n * //redeclare the sanity module\n * declare module 'sanity' {\n *  // redeclare StringOptions; it will be merged with StringOptions in the sanity module\n *  export interface StringOptions {\n *    myCustomOption?: boolean\n *  }\n * }\n *\n * // the option is now part of the StringOptions type, just as if it was declared in the sanity codebase:\n * defineType({\n *   type: 'string',\n *   name: 'my-string',\n *   options: {\n *     myCustomOption: true // this does not give an error anymore\n *   }\n * })\n *\n * ```\n *\n * #### Example: Add a schema definition to \"intrinsic-types\"\n *\n * ```ts\n * //my-custom-type-definition.ts\n *\n * // create a new schema definition based on object (we remove the ability to assign field, change the type add some options)\n *  export type MagicallyAddedDefinition = Omit<Schema.ObjectDefinition, 'type' | 'fields'> & {\n *    type: 'magically-added-type'\n *    options?: {\n *      sparkles?: boolean\n *    }\n *  }\n *\n *  // redeclares sanity module so we can add interfaces props to it\n * declare module 'sanity' {\n *     // redeclares IntrinsicDefinitions and adds a named definition to it\n *     // it is important that the key is the same as the type in the definition ('magically-added-type')\n *     export interface IntrinsicDefinitions {\n *       'magically-added-type': MagicallyAddedDefinition\n *     }\n * }\n *\n * // defineType will now narrow `type: 'magically-added-type'` to `MagicallyAddedDefinition`\n * defineType({\n *   type: 'magically-added-type'\n *   name: 'magic',\n *   options: {\n *     sparkles: true // this is allowed,\n *     //@ts-expect-error this is not allowed in MagicallyAddedDefinition.options\n *     sparks: true\n *   }\n * })\n * ```\n *\n * @param schemaDefinition - should be a valid schema type definition.\n * @param defineOptions - optional param to provide type hints for `schemaDefinition`.\n *\n * @see defineField\n * @see defineArrayMember\n * @see typed\n *\n * @beta\n */\nexport function defineType<\n  const TType extends IntrinsicTypeName | AutocompleteString,\n  const TName extends string,\n  TSelect extends Record<string, string> | undefined,\n  TPrepareValue extends Record<keyof TSelect, any> | undefined,\n  TAlias extends IntrinsicTypeName | undefined,\n  TStrict extends StrictDefinition,\n>(\n  schemaDefinition: {\n    type: TType\n    name: TName\n  } & DefineSchemaBase<TType, TAlias> &\n    NarrowPreview<TType, TAlias, TSelect, TPrepareValue> &\n    MaybeAllowUnknownProps<TStrict>,\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  defineOptions?: DefineSchemaOptions<TStrict, TAlias>,\n): typeof schemaDefinition {\n  return schemaDefinition\n}\n\n/**\n * Define a field within a document, object, image or file definition `fields` array.\n *\n * This function will narrow the schema type down to fields and options based on the provided\n * type-string.\n *\n * Using `defineField` is optional, but should provide improved autocompletion in your IDE, when building your schema.\n * Field-properties like `validation` and `initialValue`will also be more specific.\n *\n * See {@link defineType} for more examples.\n *\n * @param schemaField - should be a valid field type definition.\n * @param defineOptions - optional param to provide type hints for `schemaField`.\n *\n * @see defineField\n * @see defineArrayMember\n * @see typed\n *\n * @beta\n */\nexport function defineField<\n  const TType extends IntrinsicTypeName | AutocompleteString,\n  const TName extends string,\n  TSelect extends Record<string, string> | undefined,\n  TPrepareValue extends Record<keyof TSelect, any> | undefined,\n  TAlias extends IntrinsicTypeName | undefined,\n  TStrict extends StrictDefinition,\n>(\n  schemaField: {\n    type: TType\n    name: TName\n  } & DefineSchemaBase<TType, TAlias> &\n    NarrowPreview<TType, TAlias, TSelect, TPrepareValue> &\n    MaybeAllowUnknownProps<TStrict> &\n    FieldDefinitionBase,\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  defineOptions?: DefineSchemaOptions<TStrict, TAlias>,\n): typeof schemaField & WidenValidation & WidenInitialValue {\n  // TODO: re-evaluate the need for this cast\n  return schemaField as typeof schemaField & WidenValidation & WidenInitialValue\n}\n\n/**\n * Define an array item member type within an array definition `of`-array.\n *\n * This function will narrow the schema type down to fields and options based on the provided\n * `type` string.\n *\n * Using `defineArrayMember` is optional, but should provide improved autocompletion in your IDE, when building your schema.\n * Field properties like `validation` and `initialValue` will also be more specific.\n *\n * See {@link defineType} for example usage.\n *\n * @param arrayOfSchema - should be a valid `array.of` member definition.\n * @param defineOptions - optional param to provide type hints for `arrayOfSchema`.\n *\n * @see defineType\n * @see defineField\n * @see typed\n *\n * @beta\n */\nexport function defineArrayMember<\n  const TType extends IntrinsicTypeName | AutocompleteString,\n  const TName extends string,\n  TSelect extends Record<string, string> | undefined,\n  TPrepareValue extends Record<keyof TSelect, any> | undefined,\n  TAlias extends IntrinsicTypeName | undefined,\n  TStrict extends StrictDefinition,\n>(\n  arrayOfSchema: {\n    type: TType\n    /**\n     * When provided, `name` is used as `_type` for the array item when stored.\n     *\n     * Necessary when an array contains multiple entries with the same `type`, each with\n     * different configuration (title and initialValue for instance).\n     */\n    name?: TName\n  } & DefineArrayMemberBase<TType, TAlias> &\n    NarrowPreview<TType, TAlias, TSelect, TPrepareValue> &\n    MaybeAllowUnknownProps<TStrict>,\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  defineOptions?: DefineSchemaOptions<TStrict, TAlias>,\n): typeof arrayOfSchema & WidenValidation & WidenInitialValue {\n  // TODO: re-evaluate the need for this cast\n  return arrayOfSchema as typeof arrayOfSchema & WidenValidation & WidenInitialValue\n}\n\n/**\n * `typed` can be used to ensure that an object conforms to an exact interface.\n *\n * It can be useful when working with `defineType` and `defineField` on occasions where a wider type with\n * custom options or properties is required.\n *\n * ## Example  usage\n * ```ts\n *  defineField({\n *    type: 'string',\n *    name: 'nestedField',\n *    options: typed<StringOptions & {myCustomOption: boolean}>({\n *      layout: 'radio',\n *      // allowed\n *      myCustomOption: true,\n *      //@ts-expect-error unknownProp is not part of StringOptions & {myCustomOption: boolean}\n *      unknownProp: 'not allowed in typed context',\n *    }),\n *  }),\n * ```\n *\n * @param input - returned directly\n *\n * @internal\n */\nexport function typed<T>(input: T): T {\n  return input\n}\n","/**\n * @public\n */\nexport const searchStrategies = ['groqLegacy', 'groq2024'] as const\n\n/**\n * @public\n */\nexport type SearchStrategy = (typeof searchStrategies)[number]\n","import {searchStrategies, type SearchStrategy} from './types'\n\n/**\n * @internal\n */\nexport function isSearchStrategy(\n  maybeSearchStrategy: unknown,\n): maybeSearchStrategy is SearchStrategy {\n  return searchStrategies.includes(maybeSearchStrategy as SearchStrategy)\n}\n","import {isObject} from '../helpers'\nimport {type Slug} from './types'\n\n/**\n * Checks whether the given `thing` is a slug, eg an object with a `current` string property.\n *\n * @param thing - The thing to check\n * @returns True if slug, false otherwise\n * @public\n */\nexport function isSlug(thing: unknown): thing is Slug {\n  return isObject(thing) && typeof thing.current === 'string'\n}\n","import {type Mutation} from '../mutations'\nimport {type CreateSquashedMutation, type TransactionLogMutation} from './types'\n\n/** @internal */\nexport function isCreateSquashedMutation(\n  mutation: Mutation | TransactionLogMutation,\n): mutation is CreateSquashedMutation {\n  return 'createSquashed' in mutation\n}\n","import {type FormNodeValidation} from './types'\n\n/** @internal */\nexport function isValidationError(\n  node: FormNodeValidation,\n): node is FormNodeValidation & {level: 'error'} {\n  return node.level === 'error'\n}\n\n/** @internal */\nexport function isValidationWarning(\n  node: FormNodeValidation,\n): node is FormNodeValidation & {level: 'warning'} {\n  return node.level === 'warning'\n}\n\n/** @internal */\nexport function isValidationInfo(\n  node: FormNodeValidation,\n): node is FormNodeValidation & {level: 'info'} {\n  return node.level === 'info'\n}\n"],"names":["isRecord"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"file":"paths.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/util/src/paths.ts"],"sourcesContent":["import {\n  type IndexTuple,\n  isIndexSegment,\n  isIndexTuple,\n  isKeySegment,\n  type KeyedSegment,\n  type Path,\n  type PathSegment,\n} from '@sanity/types'\n\nconst rePropName =\n  /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g\nconst reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/\nconst EMPTY_PATH: Path = []\n\nexport const FOCUS_TERMINATOR = '$'\n\n// Fields named as GROQ data types cannot be accessed using dot notation. These fields must instead\n// be serialized using square bracket notation.\nconst GROQ_DATA_TYPE_VALUES = ['true', 'false', 'null']\n\nexport function get<R>(obj: unknown, path: Path | string): R | undefined\nexport function get<R>(obj: unknown, path: Path | string, defaultValue: R): R\nexport function get(obj: unknown, path: Path | string, defaultVal?: unknown): unknown {\n  const select = typeof path === 'string' ? fromString(path) : path\n  if (!Array.isArray(select)) {\n    throw new Error('Path must be an array or a string')\n  }\n\n  let acc: unknown | undefined = obj\n  for (let i = 0; i < select.length; i++) {\n    const segment = select[i]\n    if (isIndexSegment(segment)) {\n      if (!Array.isArray(acc)) {\n        return defaultVal\n      }\n\n      acc = acc[segment]\n    }\n\n    if (isKeySegment(segment)) {\n      if (!Array.isArray(acc)) {\n        return defaultVal\n      }\n\n      acc = acc.find((item) => item._key === segment._key)\n    }\n\n    if (typeof segment === 'string') {\n      acc =\n        typeof acc === 'object' && acc !== null\n          ? ((acc as Record<string, unknown>)[segment] as Record<string, unknown>)\n          : undefined\n    }\n\n    if (typeof acc === 'undefined') {\n      return defaultVal\n    }\n  }\n\n  return acc\n}\n\nconst pathsMemo = new Map<string, Path>()\nexport function pathFor(path: Path): Path {\n  if (path.length === 0) {\n    return EMPTY_PATH\n  }\n  const asString = toString(path)\n  if (pathsMemo.has(asString)) {\n    return pathsMemo.get(asString)!\n  }\n  pathsMemo.set(asString, path)\n  Object.freeze(path)\n  return path\n}\n\nexport function isEqual(path: Path, otherPath: Path): boolean {\n  return (\n    path.length === otherPath.length &&\n    path.every((segment, i) => isSegmentEqual(segment, otherPath[i]))\n  )\n}\n\nexport function numEqualSegments(path: Path, otherPath: Path): number {\n  const length = Math.min(path.length, otherPath.length)\n  for (let i = 0; i < length; i++) {\n    if (!isSegmentEqual(path[i], otherPath[i])) {\n      return i\n    }\n  }\n  return length\n}\n\nexport function isSegmentEqual(segmentA: PathSegment, segmentB: PathSegment): boolean {\n  if (isKeySegment(segmentA) && isKeySegment(segmentB)) {\n    return segmentA._key === segmentB._key\n  }\n\n  if (isIndexSegment(segmentA)) {\n    return Number(segmentA) === Number(segmentB)\n  }\n\n  if (isIndexTuple(segmentA) && isIndexTuple(segmentB)) {\n    return segmentA[0] === segmentB[0] && segmentA[1] === segmentB[1]\n  }\n\n  return segmentA === segmentB\n}\n\nexport function hasFocus(focusPath: Path, path: Path): boolean {\n  const withoutTerminator =\n    focusPath[focusPath.length - 1] === FOCUS_TERMINATOR ? focusPath.slice(0, -1) : focusPath\n  return isEqual(withoutTerminator, path)\n}\n\nexport function hasItemFocus(focusPath: Path, item: PathSegment): boolean {\n  return focusPath.length === 1 && isSegmentEqual(focusPath[0], item)\n}\n\nexport function isExpanded(segment: PathSegment, focusPath: Path): boolean {\n  const [head, ...tail] = focusPath\n  return tail.length > 0 && isSegmentEqual(segment, head)\n}\n\nexport function startsWith(prefix: Path, path: Path): boolean {\n  return prefix.every((segment, i) => isSegmentEqual(segment, path[i]))\n}\n\nexport function trimLeft(prefix: Path, path: Path): Path {\n  if (prefix.length === 0 || path.length === 0) {\n    return path\n  }\n  const [prefixHead, ...prefixTail] = prefix\n  const [pathHead, ...pathTail] = path\n  if (!isSegmentEqual(prefixHead, pathHead)) {\n    return path\n  }\n  return pathFor(trimLeft(prefixTail, pathTail))\n}\n\nexport function trimRight(suffix: Path, path: Path): Path {\n  const sufLen = suffix.length\n  const pathLen = path.length\n  if (sufLen === 0 || pathLen === 0) {\n    return path\n  }\n\n  let i = 0\n  while (\n    i < sufLen &&\n    i < pathLen &&\n    isSegmentEqual(path[pathLen - i - 1], suffix[sufLen - i - 1])\n  ) {\n    i++\n  }\n\n  return pathFor(path.slice(0, pathLen - i))\n}\n\nexport function trimChildPath(path: Path, childPath: Path): Path {\n  return startsWith(path, childPath) ? trimLeft(path, childPath) : EMPTY_PATH\n}\n\nexport function toString(path: Path): string {\n  if (!Array.isArray(path)) {\n    throw new Error('Path is not an array')\n  }\n\n  return path.reduce<string>((target, segment, i) => {\n    const isHead = i === 0\n\n    if (typeof segment === 'number') {\n      return `${target}[${segment}]`\n    }\n\n    if (typeof segment === 'string') {\n      if (isHead) {\n        return segment\n      }\n\n      if (GROQ_DATA_TYPE_VALUES.includes(segment)) {\n        return `${target}[\"${segment}\"]`\n      }\n\n      return `${target}.${segment}`\n    }\n\n    if (isKeySegment(segment) && segment._key) {\n      return `${target}[_key==\"${segment._key}\"]`\n    }\n\n    if (Array.isArray(segment)) {\n      const [from, to] = segment\n      return `${target}[${from}:${to}]`\n    }\n\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``)\n  }, '')\n}\n\nexport function _resolveKeyedPath(value: unknown, path: Path): Path {\n  if (path.length === 0) {\n    return path\n  }\n  const [next, ...rest] = path\n  if (typeof next === 'number') {\n    if (!Array.isArray(value) || !(next in value)) {\n      return []\n    }\n    const item = value[next]\n    const key = item?._key\n    return [typeof key === 'string' ? {_key: item._key} : next, ..._resolveKeyedPath(item, rest)]\n  }\n  const nextVal = get(value, [next])\n  return [next, ..._resolveKeyedPath(nextVal, rest)]\n}\n\n/**\n * Takes a value and a path that may include numeric indices and attempts to replace numeric indices with keyed paths\n *\n * @param value - any json value\n * @param path - a Path that may include numeric indices\n * @returns a path where numeric indices has been replaced by keyed segments (e.g. `{_key: <key>}`)\n * Will do as good attempt as possible, but in case of missing array items, it will return the best possible match:\n * - `resolveKeyedPath([0, 'bar'], [])` will return [] since array has no value at index 0\n * - `resolveKeyedPath([0, 'foo'], [{_key: 'xyz', 'foo': 'bar'}, {_key: 'abc'}])` will return `[{_key: 'xyz'}, 'foo']` since array has no value at index 0\n * - `resolveKeyedPath([0, 'foo', 'bar'], [{_key: 'xyz'}])` will return `[{_key: 'xyz'}, 'foo', 'bar']` since array has no value at index 0\n * Object keys will be preserved as-is, e.g. `resolveKeyedPath(['foo', 'bar'], undefined)` will return `['foo', 'bar']`\n */\nexport function resolveKeyedPath(value: unknown, path: Path): Path {\n  if (!Array.isArray(path)) {\n    throw new Error('Path is not an array')\n  }\n  return pathFor(_resolveKeyedPath(value, path))\n}\n\nexport function fromString(path: string): Path {\n  if (typeof path !== 'string') {\n    throw new Error('Path is not a string')\n  }\n\n  const segments = path.match(rePropName)\n  if (!segments) {\n    throw new Error('Invalid path string')\n  }\n\n  return segments.map(normalizePathSegment)\n}\n\nfunction normalizePathSegment(segment: string): PathSegment {\n  if (isIndexSegment(segment)) {\n    return normalizeIndexSegment(segment)\n  }\n\n  if (isKeySegment(segment)) {\n    return normalizeKeySegment(segment)\n  }\n\n  if (isIndexTuple(segment)) {\n    return normalizeIndexTupleSegment(segment)\n  }\n\n  return segment\n}\n\nfunction normalizeIndexSegment(segment: string): PathSegment {\n  return Number(segment.replace(/[^\\d]/g, ''))\n}\n\nfunction normalizeKeySegment(segment: string): KeyedSegment {\n  const segments = segment.match(reKeySegment)\n  return {_key: segments![1]}\n}\n\nfunction normalizeIndexTupleSegment(segment: string): IndexTuple {\n  const [from, to] = segment.split(':').map((seg) => (seg === '' ? seg : Number(seg)))\n  return [from, to]\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"file":"legacyDateFormat.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/util/src/legacyDateFormat.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-shadow */\nimport moment from 'moment'\n\nexport const DEFAULT_DATE_FORMAT = 'YYYY-MM-DD'\nexport const DEFAULT_TIME_FORMAT = 'HH:mm'\n\nexport type ParseResult = {isValid: boolean; date?: Date; error?: string} & (\n  | {isValid: true; date: Date}\n  | {isValid: false; error?: string}\n)\n\n// todo: find a way to get rid of moment there.\n// note: the format comes from peoples schema types, so we need to deprecate it for a while and\n// find a way to tell people that they need to change it\nexport function format(input: Date, format: string, useUTC = false) {\n  if (useUTC) return moment.utc(input).format(format)\n\n  return moment(input).format(format)\n}\n\nexport function parse(dateString: string, format: string): ParseResult {\n  const parsed = moment(dateString, format, true)\n  if (parsed.isValid()) {\n    return {isValid: true, date: parsed.toDate()}\n  }\n  return {isValid: false, error: `Invalid date. Must be on the format \"${format}\"`}\n}\n"],"names":["format"],"mappings":";;;;;;;;AAGa,MAAA,sBAAsB,cACtB,sBAAsB;AAU5B,SAAS,OAAO,KAAA,EAAaA,OAAAA,EAAgB,SAAS,CAAA,CAAA,EAAO;IAClE,OAAI,6IAAe,UAAA,CAAO,GAAA,CAAI,KAAK,EAAE,MAAA,CAAOA,OAAM,4IAE3C,UAAA,EAAO,KAAK,EAAE,MAAA,CAAOA,OAAM;AACpC;AAEgB,SAAA,MAAM,UAAA,EAAoBA,OAAAA,EAA6B;IACrE,MAAM,UAAS,iJAAA,EAAO,YAAYA,SAAQ,CAAA,CAAI;IAC9C,OAAI,OAAO,OAAA,KACF;QAAC,SAAS,CAAA;QAAM,MAAM,OAAO,MAAA,CAAO;IAAA,IAEtC;QAAC,SAAS,CAAA;QAAO,OAAO,CAAA,qCAAA,EAAwCA,OAAM,CAAA,CAAA,CAAA;IAAG;AAClF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 447, "column": 0}, "map": {"version":3,"file":"content.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/util/src/content/hasOwn.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/util/src/content/isDeepEmpty.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/util/src/content/isShallowEmptyObject.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/util/src/content/randomKey.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/util/src/content/resolveJSType.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/util/src/content/resolveTypeName.ts"],"sourcesContent":["export default Object.prototype.hasOwnProperty.call.bind(Object.prototype.hasOwnProperty)\n","import hasOwn from './hasOwn'\n\nfunction isDeepEmptyObject(value: {[key: string]: any}): boolean {\n  for (const key in value) {\n    if (key === '_type' || key === '_key') {\n      continue\n    }\n    if (hasOwn(value, key) && !isDeepEmpty(value[key])) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction isDeepEmptyArray(value: unknown[]): boolean {\n  for (let i = 0; i < value.length; i++) {\n    if (!isDeepEmpty(value[i])) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Looks at the value and determines if it is deeply empty while not considering _type and _key attributes on objects.\n * A value will be considered deeply empty if it is:\n *  - undefined or null\n *  - an object where all property values are deeply empty\n *  - an array where all items are deeply empty\n * @param value - the value to check for deep emptiness\n */\nexport function isDeepEmpty(value: unknown): boolean {\n  if (value === undefined || value === null) {\n    return true\n  }\n  const type = typeof value\n\n  if (Array.isArray(value)) {\n    return isDeepEmptyArray(value)\n  }\n  if (type === 'object') {\n    return isDeepEmptyObject(value)\n  }\n  return false\n}\n\n/**\n * @deprecated Use `isDeepEmpty` instead\n * todo: remove in v4\n */\nexport const isEmptyArray = isDeepEmptyArray\n\n/**\n * @deprecated Use `isDeepEmpty` instead\n * todo: remove in v4\n */\nexport const isEmpty = isDeepEmpty\n\n/**\n * @deprecated Use `isDeepEmpty` instead\n * todo: remove in v4\n */\nexport const isEmptyObject = isDeepEmptyObject\n","import hasOwn from './hasOwn'\n\nexport function isShallowEmptyObject(value: {[key: string]: unknown}): boolean {\n  for (const key in value) {\n    if (key === '_type' || key === '_key') {\n      continue\n    }\n    if (hasOwn(value, key) && value[key] !== undefined) {\n      return false\n    }\n  }\n  return true\n}\n","import getRandomValues from 'get-random-values-esm'\n\nconst getByteHexTable = (() => {\n  let table: any[]\n  return () => {\n    if (table) {\n      return table\n    }\n\n    table = []\n    for (let i = 0; i < 256; ++i) {\n      table[i] = (i + 0x100).toString(16).slice(1)\n    }\n    return table\n  }\n})()\n\n// WHATWG crypto RNG - https://w3c.github.io/webcrypto/Overview.html\nfunction whatwgRNG(length = 16) {\n  const rnds8 = new Uint8Array(length)\n  getRandomValues(rnds8)\n  return rnds8\n}\n\nexport function randomKey(length?: number): string {\n  const table = getByteHexTable()\n  return whatwgRNG(length)\n    .reduce((str, n) => str + table[n], '')\n    .slice(0, length)\n}\n","const toString = Object.prototype.toString\n// Copied from https://github.com/ForbesLindesay/type-of, but inlined to have fine grained control\n\nexport function resolveJSType(val: unknown) {\n  switch (toString.call(val)) {\n    case '[object Function]':\n      return 'function'\n    case '[object Date]':\n      return 'date'\n    case '[object RegExp]':\n      return 'regexp'\n    case '[object Arguments]':\n      return 'arguments'\n    case '[object Array]':\n      return 'array'\n    case '[object String]':\n      return 'string'\n    default:\n  }\n\n  if (typeof val == 'object' && val && typeof (val as any).length == 'number') {\n    try {\n      if (typeof (val as any).callee == 'function') {\n        // eslint-disable-line max-depth\n        return 'arguments'\n      }\n    } catch (ex) {\n      if (ex instanceof TypeError) {\n        // eslint-disable-line max-depth\n        return 'arguments'\n      }\n    }\n  }\n\n  if (val === null) {\n    return 'null'\n  }\n\n  if (val === undefined) {\n    return 'undefined'\n  }\n\n  if (val && (val as any).nodeType === 1) {\n    return 'element'\n  }\n\n  if (val === Object(val)) {\n    return 'object'\n  }\n\n  return typeof val\n}\n","import {resolveJSType} from './resolveJSType'\n\nexport function resolveTypeName(value: unknown): string {\n  const jsType = resolveJSType(value)\n  if (jsType !== 'object') {\n    return jsType\n  }\n\n  const obj = value as Record<string, unknown> & {_type?: string}\n  return ('_type' in obj && obj._type) || jsType\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA,IAAA,SAAe,OAAO,SAAA,CAAU,cAAA,CAAe,IAAA,CAAK,IAAA,CAAK,OAAO,SAAA,CAAU,cAAc;ACExF,SAAS,kBAAkB,KAAA,EAAsC;IAC/D,IAAA,MAAW,OAAO,MAChB,IAAI,CAAA,CAAQ,QAAA,WAAW,QAAQ,MAAA,KAG3B,OAAO,OAAO,GAAG,KAAK,CAAC,YAAY,KAAA,CAAM,GAAG,CAAC,GACxC,OAAA,CAAA;IAGJ,OAAA,CAAA;AACT;AAEA,SAAS,iBAAiB,KAAA,EAA2B;IACnD,IAAA,IAAS,IAAI,GAAG,IAAI,MAAM,MAAA,EAAQ,IAChC,IAAI,CAAC,YAAY,KAAA,CAAM,CAAC,CAAC,GAChB,OAAA,CAAA;IAGJ,OAAA,CAAA;AACT;AAUO,SAAS,YAAY,KAAA,EAAyB;IACnD,IAA2B,SAAU,MAC5B,OAAA,CAAA;IAET,MAAM,OAAO,OAAO;IAEhB,OAAA,MAAM,OAAA,CAAQ,KAAK,IACd,iBAAiB,KAAK,IAE3B,SAAS,WACJ,kBAAkB,KAAK,IAEzB,CAAA;AACT;AAMO,MAAM,eAAe,kBAMf,UAAU,aAMV,gBAAgB;AC5DtB,SAAS,qBAAqB,KAAA,EAA0C;IAC7E,IAAA,MAAW,OAAO,MACZ,IAAA,CAAA,CAAA,QAAQ,WAAW,QAAQ,MAAA,KAG3B,OAAO,OAAO,GAAG,KAAK,KAAA,CAAM,GAAG,CAAA,KAAM,KAAA,GAChC,OAAA,CAAA;IAGJ,OAAA,CAAA;AACT;ACVA,MAAM,kBAAyB,aAAA,GAAA,CAAA,MAAA;IACzB,IAAA;IACJ,OAAO,MAAM;QACP,IAAA,OACK,OAAA;QAGT,QAAQ,CAAC,CAAA;QACT,IAAA,IAAS,IAAI,GAAG,IAAI,KAAK,EAAE,EACnB,KAAA,CAAA,CAAC,CAAA,GAAA,CAAK,IAAI,GAAA,EAAO,QAAA,CAAS,EAAE,EAAE,KAAA,CAAM,CAAC;QAEtC,OAAA;IACT;AACF,CAAA,EAAG;AAGH,SAAS,UAAU,SAAS,EAAA,EAAI;IACxB,MAAA,QAAQ,IAAI,WAAW,MAAM;IACnC,OAAA,0KAAA,EAAgB,KAAK,GACd;AACT;AAEO,SAAS,UAAU,MAAA,EAAyB;IACjD,MAAM,QAAQ,gBAAgB;IAC9B,OAAO,UAAU,MAAM,EACpB,MAAA,CAAO,CAAC,KAAK,IAAM,MAAM,KAAA,CAAM,CAAC,CAAA,EAAG,EAAE,EACrC,KAAA,CAAM,GAAG,MAAM;AACpB;AC7BA,MAAM,WAAW,OAAO,SAAA,CAAU,QAAA;AAG3B,SAAS,cAAc,GAAA,EAAc;IAClC,OAAA,SAAS,IAAA,CAAK,GAAG,GAAG;QAC1B,KAAK;YACI,OAAA;QACT,KAAK;YACI,OAAA;QACT,KAAK;YACI,OAAA;QACT,KAAK;YACI,OAAA;QACT,KAAK;YACI,OAAA;QACT,KAAK;YACI,OAAA;IACT;IAGF,IAAI,OAAO,OAAO,YAAY,OAAO,OAAQ,IAAY,MAAA,IAAU,UAC7D,IAAA;QACE,IAAA,OAAQ,IAAY,MAAA,IAAU,YAEzB,OAAA;IAAA,EAAA,OAEF,IAAI;QACX,IAAI,cAAc,WAET,OAAA;IAAA;IAKb,OAAI,QAAQ,OACH,SAGL,QAAQ,KAAA,IACH,cAGL,OAAQ,IAAY,QAAA,KAAa,IAC5B,YAGL,QAAQ,OAAO,GAAG,IACb,WAGF,OAAO;AAChB;ACjDO,SAAS,gBAAgB,KAAA,EAAwB;IAChD,MAAA,SAAS,cAAc,KAAK;IAClC,IAAI,WAAW,UACN,OAAA;IAGT,MAAM,MAAM;IACJ,OAAA,WAAW,OAAO,IAAI,KAAA,IAAU;AAC1C","ignoreList":[0,1,2,3,4,5],"debugId":null}},
    {"offset": {"line": 531, "column": 0}, "map": {"version":3,"file":"concurrency-limiter.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/util/src/concurrency-limiter.ts"],"sourcesContent":["/**\n * ConcurrencyLimiter manages the number of concurrent operations that can be performed.\n * It ensures that the number of operations does not exceed a specified maximum limit.\n */\nexport class ConcurrencyLimiter {\n  current = 0\n  resolvers: Array<() => void> = []\n  constructor(public max: number) {}\n\n  /**\n   * Indicates when a slot for a new operation is ready.\n   * If under the limit, it resolves immediately; otherwise, it waits until a slot is free.\n   */\n  ready = (): Promise<void> => {\n    if (this.max === Infinity) return Promise.resolve()\n\n    if (this.current < this.max) {\n      this.current++\n      return Promise.resolve()\n    }\n\n    return new Promise<void>((resolve) => {\n      this.resolvers.push(resolve)\n    })\n  }\n\n  /**\n   * Releases a slot, decrementing the current count of operations if nothing is in the queue.\n   * If there are operations waiting, it allows the next one in the queue to proceed.\n   */\n  release = (): void => {\n    if (this.max === Infinity) return\n\n    const nextResolver = this.resolvers.shift()\n    if (nextResolver) {\n      nextResolver()\n      return\n    }\n\n    this.current = Math.max(0, this.current - 1)\n  }\n}\n"],"names":[],"mappings":";;;AAIO,MAAM,mBAAmB;IAG9B,YAAmB,GAAA,CAAa;QAAb,IAAA,CAAA,GAAA,GAAA;IAAA;IAFnB,UAAU,EAAA;IACV,YAA+B,CAAC,CAAA,CAAA;IAAA;;;GAAA,GAOhC,QAAQ,IACF,IAAA,CAAK,GAAA,KAAQ,IAAA,IAAiB,QAAQ,OAAA,KAEtC,IAAA,CAAK,OAAA,GAAU,IAAA,CAAK,GAAA,GAAA,CACtB,IAAA,CAAK,OAAA,IACE,QAAQ,OAAA,EAAA,IAGV,IAAI,QAAc,CAAC,YAAY;YAC/B,IAAA,CAAA,SAAA,CAAU,IAAA,CAAK,OAAO;QAAA,CAC5B,EAAA;IAAA;;;GAAA,GAOH,UAAU,MAAY;QAChB,IAAA,IAAA,CAAK,GAAA,KAAQ,IAAA,EAAU,CAAA;QAErB,MAAA,eAAe,IAAA,CAAK,SAAA,CAAU,KAAA,CAAM;QAC1C,IAAI,cAAc;YACH,aAAA;YACb;QAAA;QAGF,IAAA,CAAK,OAAA,GAAU,KAAK,GAAA,CAAI,GAAG,IAAA,CAAK,OAAA,GAAU,CAAC;IAC7C,EAAA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"file":"client.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/util/src/client/concurrency-limiter/createClientConcurrencyLimiter.ts"],"sourcesContent":["import {type ObservableSanityClient, type SanityClient} from '@sanity/client'\nimport {finalize, from, switchMap} from 'rxjs'\n\nimport {ConcurrencyLimiter} from '../../concurrency-limiter'\n\n/**\n * Decorates a sanity client to limit the concurrency of `client.fetch`\n * requests. Keeps the concurrency limit state and returns wrapped clients with\n * that same state if the `clone` `config` or `withConfig` methods are called.\n */\nexport function createClientConcurrencyLimiter(\n  maxConcurrency: number,\n): (input: SanityClient) => SanityClient {\n  const limiter = new ConcurrencyLimiter(maxConcurrency)\n\n  function wrapClient(client: SanityClient): SanityClient {\n    return new Proxy(client, {\n      get: (target, property) => {\n        switch (property) {\n          case 'fetch': {\n            return async (...args: Parameters<SanityClient['fetch']>) => {\n              await limiter.ready()\n              try {\n                // note we want to await before we return so the finally block\n                // will run after the promise has been fulfilled or rejected\n                return await target.fetch(...args)\n              } finally {\n                limiter.release()\n              }\n            }\n          }\n          case 'clone': {\n            return (...args: Parameters<SanityClient['clone']>) => {\n              return wrapClient(target.clone(...args))\n            }\n          }\n          case 'config': {\n            return (...args: Parameters<SanityClient['config']>) => {\n              const result = target.config(...args)\n\n              // if there is a config, it returns a client so we need to wrap again\n              if (args[0]) return wrapClient(result)\n              return result\n            }\n          }\n          case 'withConfig': {\n            return (...args: Parameters<SanityClient['withConfig']>) => {\n              return wrapClient(target.withConfig(...args))\n            }\n          }\n          case 'observable': {\n            return wrapObservableClient(target.observable)\n          }\n          default: {\n            return target[property as keyof SanityClient]\n          }\n        }\n      },\n    })\n  }\n\n  function wrapObservableClient(\n    observableSanityClient: ObservableSanityClient,\n  ): ObservableSanityClient {\n    return new Proxy(observableSanityClient, {\n      get: (target, property) => {\n        switch (property) {\n          case 'fetch': {\n            return (...args: Parameters<ObservableSanityClient['fetch']>) =>\n              from(limiter.ready()).pipe(\n                switchMap(() => target.fetch(...args)),\n                finalize(() => limiter.release()),\n              )\n          }\n          case 'clone': {\n            return (...args: Parameters<ObservableSanityClient['clone']>) => {\n              return wrapObservableClient(target.clone(...args))\n            }\n          }\n          case 'config': {\n            return (...args: Parameters<ObservableSanityClient['config']>) => {\n              const result = target.config(...args)\n\n              // if there is a config, it returns a client so we need to wrap again\n              if (args[0]) return wrapObservableClient(result)\n              return result\n            }\n          }\n          case 'withConfig': {\n            return (...args: Parameters<ObservableSanityClient['withConfig']>) => {\n              return wrapObservableClient(target.withConfig(...args))\n            }\n          }\n          default: {\n            return target[property as keyof ObservableSanityClient]\n          }\n        }\n      },\n    })\n  }\n\n  return wrapClient\n}\n"],"names":[],"mappings":";;;;;;;;;AAUO,SAAS,+BACd,cAAA,EACuC;IACjC,MAAA,UAAU,0KAAI,qBAAA,CAAmB,cAAc;IAErD,SAAS,WAAW,MAAA,EAAoC;QAC/C,OAAA,IAAI,MAAM,QAAQ;YACvB,KAAK,CAAC,QAAQ,aAAa;gBACzB,OAAQ,UAAU;oBAChB,KAAK;wBACH,OAAO,OAAA,GAAU,SAA4C;4BAC3D,MAAM,QAAQ,KAAA,CAAM;4BAChB,IAAA;gCAGF,OAAO,MAAM,OAAO,KAAA,CAAM,GAAG,IAAI;4BAAA,SACjC;gCACA,QAAQ,OAAA,CAAQ;4BAAA;wBAEpB;oBAEF,KAAK;wBACH,OAAO,CAAA,GAAI,OACF,WAAW,OAAO,KAAA,CAAM,GAAG,IAAI,CAAC;oBAG3C,KAAK;wBACH,OAAO,CAAA,GAAI,SAA6C;4BACtD,MAAM,SAAS,OAAO,MAAA,CAAO,GAAG,IAAI;4BAGpC,OAAI,IAAA,CAAK,CAAC,CAAA,GAAU,WAAW,MAAM,IAC9B;wBACT;oBAEF,KAAK;wBACH,OAAO,CAAA,GAAI,OACF,WAAW,OAAO,UAAA,CAAW,GAAG,IAAI,CAAC;oBAGhD,KAAK;wBACI,OAAA,qBAAqB,OAAO,UAAU;oBAE/C;wBACE,OAAO,MAAA,CAAO,QAA8B,CAAA;gBAAA;YAEhD;QACF,CACD;IAAA;IAGH,SAAS,qBACP,sBAAA,EACwB;QACjB,OAAA,IAAI,MAAM,wBAAwB;YACvC,KAAK,CAAC,QAAQ,aAAa;gBACzB,OAAQ,UAAU;oBAChB,KAAK;wBACH,OAAO,CAAA,GAAI,qLACT,OAAA,EAAK,QAAQ,KAAA,CAAO,CAAA,EAAE,IAAA,mLACpB,YAAA,EAAU,IAAM,OAAO,KAAA,CAAM,GAAG,IAAI,CAAC,oLACrC,WAAA,EAAS,IAAM,QAAQ,OAAA,CAAS,CAAA;oBAGtC,KAAK;wBACH,OAAO,CAAA,GAAI,OACF,qBAAqB,OAAO,KAAA,CAAM,GAAG,IAAI,CAAC;oBAGrD,KAAK;wBACH,OAAO,CAAA,GAAI,SAAuD;4BAChE,MAAM,SAAS,OAAO,MAAA,CAAO,GAAG,IAAI;4BAGpC,OAAI,IAAA,CAAK,CAAC,CAAA,GAAU,qBAAqB,MAAM,IACxC;wBACT;oBAEF,KAAK;wBACH,OAAO,CAAA,GAAI,OACF,qBAAqB,OAAO,UAAA,CAAW,GAAG,IAAI,CAAC;oBAG1D;wBACE,OAAO,MAAA,CAAO,QAAwC,CAAA;gBAAA;YAE1D;QACF,CACD;IAAA;IAGI,OAAA;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 639, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/color/src/constants.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/color/src/lib/convert/hslToRgb.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/color/src/lib/convert/rgbToHex.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/color/src/buildTints.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/color/src/color.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/color/src/config.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/color/src/lib/convert/hexToRgb.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/color/src/lib/convert/rgbToHsl.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/color/src/lib/clamp.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/color/src/lib/transform/darken.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/color/src/lib/interpolate.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/color/src/lib/transform/limit.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/color/src/lib/transform/screen.ts"],"sourcesContent":["import {ColorHueKey, ColorTintKey} from './types'\n\n/**\n * Color hue keys.\n * @public\n */\nexport const COLOR_HUES: ColorHueKey[] = [\n  'gray',\n  'blue',\n  'purple',\n  'magenta',\n  'red',\n  'orange',\n  'yellow',\n  'green',\n  'cyan',\n]\n\n/**\n * Color tint keys.\n * @public\n */\nexport const COLOR_TINTS: ColorTintKey[] = [\n  '50',\n  '100',\n  '200',\n  '300',\n  '400',\n  '500',\n  '600',\n  '700',\n  '800',\n  '900',\n  '950',\n]\n","import {HSL, RGB} from '../../types'\n\n/** @internal */\nexport function hslToRgb(hsl: HSL): RGB {\n  const h = hsl[0]\n  const s = hsl[1] / 100\n  const l = hsl[2] / 100\n  const k = (n: number) => (n + h / 30) % 12\n  const a = s * Math.min(l, 1 - l)\n  const f = (n: number) => l - a * Math.max(-1, Math.min(k(n) - 3, Math.min(9 - k(n), 1)))\n\n  return [255 * f(0), 255 * f(8), 255 * f(4)]\n}\n","import {RGB} from '../../types'\n\n/** @internal */\nexport function rgbToHex([r, g, b]: RGB): string {\n  const _r = Math.round(r)\n  const _g = Math.round(g)\n  const _b = Math.round(b)\n\n  return '#' + ((1 << 24) + (_r << 16) + (_g << 8) + _b).toString(16).slice(1)\n}\n","import {COLOR_TINTS} from './constants'\nimport {hslToRgb} from './lib/convert/hslToRgb'\nimport {rgbToHex} from './lib/convert/rgbToHex'\nimport {ColorTintConfig, ColorHueConfig, ColorHueKey, ColorTints} from './types'\n\n/** @internal */\nexport function buildTints(options: {\n  hueKey: ColorHueKey\n  black: ColorTintConfig\n  color: ColorHueConfig\n}): ColorTints {\n  const {hueKey, color} = options\n\n  return COLOR_TINTS.reduce<Partial<ColorTints>>((acc, tintKey) => {\n    const tint = Number(tintKey)\n    const rgb = hslToRgb(color.tints[tintKey].hsl)\n    const hex = rgbToHex([Math.round(rgb[0]), Math.round(rgb[1]), Math.round(rgb[2])])\n\n    acc[tintKey] = {\n      title: `${hueKey.slice(0, 1).toUpperCase()}${hueKey.slice(1)} ${tint}`,\n      hex,\n    }\n\n    return acc\n  }, {}) as ColorTints\n}\n","/* THIS FILE IS AUTO-GENERATED – DO NOT EDIT */\n\nimport {Color, ColorHues, ColorTint, ColorTints} from './types'\n\n/** @public */\nexport const black: ColorTint = {\n  title: 'Black',\n  hex: '#0d0e12',\n}\n\n/** @public */\nexport const white: ColorTint = {\n  title: 'White',\n  hex: '#ffffff',\n}\n\n/** @public */\nexport const gray: ColorTints = {\n  '50': {\n    title: 'Gray 50',\n    hex: '#f6f6f8',\n  },\n  '100': {\n    title: 'Gray 100',\n    hex: '#eeeef1',\n  },\n  '200': {\n    title: 'Gray 200',\n    hex: '#e3e4e8',\n  },\n  '300': {\n    title: 'Gray 300',\n    hex: '#bbbdc9',\n  },\n  '400': {\n    title: 'Gray 400',\n    hex: '#9499ad',\n  },\n  '500': {\n    title: 'Gray 500',\n    hex: '#727892',\n  },\n  '600': {\n    title: 'Gray 600',\n    hex: '#515870',\n  },\n  '700': {\n    title: 'Gray 700',\n    hex: '#383d51',\n  },\n  '800': {\n    title: 'Gray 800',\n    hex: '#252837',\n  },\n  '900': {\n    title: 'Gray 900',\n    hex: '#1b1d27',\n  },\n  '950': {\n    title: 'Gray 950',\n    hex: '#13141b',\n  },\n}\n\n/** @public */\nexport const blue: ColorTints = {\n  '50': {\n    title: 'Blue 50',\n    hex: '#f5f8ff',\n  },\n  '100': {\n    title: 'Blue 100',\n    hex: '#e5edff',\n  },\n  '200': {\n    title: 'Blue 200',\n    hex: '#dbe5ff',\n  },\n  '300': {\n    title: 'Blue 300',\n    hex: '#a8bfff',\n  },\n  '400': {\n    title: 'Blue 400',\n    hex: '#7595ff',\n  },\n  '500': {\n    title: 'Blue 500',\n    hex: '#556bfc',\n  },\n  '600': {\n    title: 'Blue 600',\n    hex: '#4043e7',\n  },\n  '700': {\n    title: 'Blue 700',\n    hex: '#2927aa',\n  },\n  '800': {\n    title: 'Blue 800',\n    hex: '#192457',\n  },\n  '900': {\n    title: 'Blue 900',\n    hex: '#161a41',\n  },\n  '950': {\n    title: 'Blue 950',\n    hex: '#101228',\n  },\n}\n\n/** @public */\nexport const purple: ColorTints = {\n  '50': {\n    title: 'Purple 50',\n    hex: '#f8f5ff',\n  },\n  '100': {\n    title: 'Purple 100',\n    hex: '#f1ebff',\n  },\n  '200': {\n    title: 'Purple 200',\n    hex: '#ece1fe',\n  },\n  '300': {\n    title: 'Purple 300',\n    hex: '#ccb1fc',\n  },\n  '400': {\n    title: 'Purple 400',\n    hex: '#b087f7',\n  },\n  '500': {\n    title: 'Purple 500',\n    hex: '#8f57ef',\n  },\n  '600': {\n    title: 'Purple 600',\n    hex: '#721fe5',\n  },\n  '700': {\n    title: 'Purple 700',\n    hex: '#4c1a9e',\n  },\n  '800': {\n    title: 'Purple 800',\n    hex: '#2f1862',\n  },\n  '900': {\n    title: 'Purple 900',\n    hex: '#23173f',\n  },\n  '950': {\n    title: 'Purple 950',\n    hex: '#181128',\n  },\n}\n\n/** @public */\nexport const magenta: ColorTints = {\n  '50': {\n    title: 'Magenta 50',\n    hex: '#fef6f9',\n  },\n  '100': {\n    title: 'Magenta 100',\n    hex: '#fde8ef',\n  },\n  '200': {\n    title: 'Magenta 200',\n    hex: '#fcdee9',\n  },\n  '300': {\n    title: 'Magenta 300',\n    hex: '#f7abc5',\n  },\n  '400': {\n    title: 'Magenta 400',\n    hex: '#f0709b',\n  },\n  '500': {\n    title: 'Magenta 500',\n    hex: '#e72767',\n  },\n  '600': {\n    title: 'Magenta 600',\n    hex: '#b11651',\n  },\n  '700': {\n    title: 'Magenta 700',\n    hex: '#7c1342',\n  },\n  '800': {\n    title: 'Magenta 800',\n    hex: '#4b1130',\n  },\n  '900': {\n    title: 'Magenta 900',\n    hex: '#341325',\n  },\n  '950': {\n    title: 'Magenta 950',\n    hex: '#1f0f14',\n  },\n}\n\n/** @public */\nexport const red: ColorTints = {\n  '50': {\n    title: 'Red 50',\n    hex: '#fff6f5',\n  },\n  '100': {\n    title: 'Red 100',\n    hex: '#ffe7e5',\n  },\n  '200': {\n    title: 'Red 200',\n    hex: '#ffdedc',\n  },\n  '300': {\n    title: 'Red 300',\n    hex: '#fdada5',\n  },\n  '400': {\n    title: 'Red 400',\n    hex: '#f77769',\n  },\n  '500': {\n    title: 'Red 500',\n    hex: '#ef4434',\n  },\n  '600': {\n    title: 'Red 600',\n    hex: '#cc2819',\n  },\n  '700': {\n    title: 'Red 700',\n    hex: '#8b2018',\n  },\n  '800': {\n    title: 'Red 800',\n    hex: '#4d1714',\n  },\n  '900': {\n    title: 'Red 900',\n    hex: '#321615',\n  },\n  '950': {\n    title: 'Red 950',\n    hex: '#1e1011',\n  },\n}\n\n/** @public */\nexport const orange: ColorTints = {\n  '50': {\n    title: 'Orange 50',\n    hex: '#fff7f0',\n  },\n  '100': {\n    title: 'Orange 100',\n    hex: '#ffeadb',\n  },\n  '200': {\n    title: 'Orange 200',\n    hex: '#ffddc7',\n  },\n  '300': {\n    title: 'Orange 300',\n    hex: '#ffb685',\n  },\n  '400': {\n    title: 'Orange 400',\n    hex: '#ff8e42',\n  },\n  '500': {\n    title: 'Orange 500',\n    hex: '#fa6400',\n  },\n  '600': {\n    title: 'Orange 600',\n    hex: '#b14802',\n  },\n  '700': {\n    title: 'Orange 700',\n    hex: '#7c3404',\n  },\n  '800': {\n    title: 'Orange 800',\n    hex: '#461e07',\n  },\n  '900': {\n    title: 'Orange 900',\n    hex: '#32160b',\n  },\n  '950': {\n    title: 'Orange 950',\n    hex: '#21120d',\n  },\n}\n\n/** @public */\nexport const yellow: ColorTints = {\n  '50': {\n    title: 'Yellow 50',\n    hex: '#fefae1',\n  },\n  '100': {\n    title: 'Yellow 100',\n    hex: '#fcf3bb',\n  },\n  '200': {\n    title: 'Yellow 200',\n    hex: '#f9e994',\n  },\n  '300': {\n    title: 'Yellow 300',\n    hex: '#f7d455',\n  },\n  '400': {\n    title: 'Yellow 400',\n    hex: '#f9bc15',\n  },\n  '500': {\n    title: 'Yellow 500',\n    hex: '#d28a04',\n  },\n  '600': {\n    title: 'Yellow 600',\n    hex: '#965908',\n  },\n  '700': {\n    title: 'Yellow 700',\n    hex: '#653a0b',\n  },\n  '800': {\n    title: 'Yellow 800',\n    hex: '#3b220c',\n  },\n  '900': {\n    title: 'Yellow 900',\n    hex: '#271a11',\n  },\n  '950': {\n    title: 'Yellow 950',\n    hex: '#181410',\n  },\n}\n\n/** @public */\nexport const green: ColorTints = {\n  '50': {\n    title: 'Green 50',\n    hex: '#e7fef5',\n  },\n  '100': {\n    title: 'Green 100',\n    hex: '#c5fce8',\n  },\n  '200': {\n    title: 'Green 200',\n    hex: '#a9f9dc',\n  },\n  '300': {\n    title: 'Green 300',\n    hex: '#59f3ba',\n  },\n  '400': {\n    title: 'Green 400',\n    hex: '#0ff0a1',\n  },\n  '500': {\n    title: 'Green 500',\n    hex: '#04b97a',\n  },\n  '600': {\n    title: 'Green 600',\n    hex: '#01794f',\n  },\n  '700': {\n    title: 'Green 700',\n    hex: '#015133',\n  },\n  '800': {\n    title: 'Green 800',\n    hex: '#023120',\n  },\n  '900': {\n    title: 'Green 900',\n    hex: '#06231a',\n  },\n  '950': {\n    title: 'Green 950',\n    hex: '#071715',\n  },\n}\n\n/** @public */\nexport const cyan: ColorTints = {\n  '50': {\n    title: 'Cyan 50',\n    hex: '#e7fefe',\n  },\n  '100': {\n    title: 'Cyan 100',\n    hex: '#c5fcfc',\n  },\n  '200': {\n    title: 'Cyan 200',\n    hex: '#96f8f8',\n  },\n  '300': {\n    title: 'Cyan 300',\n    hex: '#62efef',\n  },\n  '400': {\n    title: 'Cyan 400',\n    hex: '#18e2e2',\n  },\n  '500': {\n    title: 'Cyan 500',\n    hex: '#04b8be',\n  },\n  '600': {\n    title: 'Cyan 600',\n    hex: '#037782',\n  },\n  '700': {\n    title: 'Cyan 700',\n    hex: '#024950',\n  },\n  '800': {\n    title: 'Cyan 800',\n    hex: '#042f34',\n  },\n  '900': {\n    title: 'Cyan 900',\n    hex: '#072227',\n  },\n  '950': {\n    title: 'Cyan 950',\n    hex: '#0d181c',\n  },\n}\n\n/** @public */\nexport const hues: ColorHues = {gray, blue, purple, magenta, red, orange, yellow, green, cyan}\n\n/** @public */\nexport const color: Color = {black, white, ...hues}\n","import {ColorConfig} from './types'\n\n/** @internal */\nexport const config: ColorConfig = {\n  black: {\n    title: 'Black',\n    hsl: [225, 16, 6],\n  },\n  white: {\n    title: 'White',\n    hsl: [0, 0, 100],\n  },\n  gray: {\n    title: 'Gray',\n    tints: {\n      50: {\n        title: 'Gray 50',\n        hsl: [240, 12, 97],\n      },\n      100: {\n        title: 'Gray 100',\n        hsl: [240, 10, 94],\n      },\n      200: {\n        title: 'Gray 200',\n        hsl: [231, 10, 90],\n      },\n      300: {\n        title: 'Gray 300',\n        hsl: [232, 11, 76],\n      },\n      400: {\n        title: 'Gray 400',\n        hsl: [228, 13, 63],\n      },\n      500: {\n        title: 'Gray 500',\n        hsl: [229, 13, 51],\n      },\n      600: {\n        title: 'Gray 600',\n        hsl: [228, 16, 38],\n      },\n      700: {\n        title: 'Gray 700',\n        hsl: [229, 18, 27],\n      },\n      800: {\n        title: 'Gray 800',\n        hsl: [229, 19, 18],\n      },\n      900: {\n        title: 'Gray 900',\n        hsl: [228, 19, 13],\n      },\n      950: {\n        title: 'Gray 950',\n        hsl: [233, 17, 9],\n      },\n    },\n  },\n  blue: {\n    title: 'Blue',\n    tints: {\n      50: {\n        title: 'Blue 50',\n        hsl: [222, 100, 98],\n      },\n      100: {\n        title: 'Blue 100',\n        hsl: [222, 100, 95],\n      },\n      200: {\n        title: 'Blue 200',\n        hsl: [223, 100, 93],\n      },\n      300: {\n        title: 'Blue 300',\n        hsl: [224, 100, 83],\n      },\n      400: {\n        title: 'Blue 400',\n        hsl: [226, 100, 73],\n      },\n      500: {\n        title: 'Blue 500',\n        hsl: [232, 96, 66],\n      },\n      600: {\n        title: 'Blue 600',\n        hsl: [239, 78, 58],\n      },\n      700: {\n        title: 'Blue 700',\n        hsl: [241, 63, 41],\n      },\n      800: {\n        title: 'Blue 800',\n        hsl: [230, 55, 22],\n      },\n      900: {\n        title: 'Blue 900',\n        hsl: [234, 49, 17],\n      },\n      950: {\n        title: 'Blue 950',\n        hsl: [235, 43, 11],\n      },\n    },\n  },\n  purple: {\n    title: 'Purple',\n    tints: {\n      50: {\n        title: 'Purple 50',\n        hsl: [260, 95, 98],\n      },\n      100: {\n        title: 'Purple 100',\n        hsl: [260, 98, 96],\n      },\n      200: {\n        title: 'Purple 200',\n        hsl: [263, 96, 94],\n      },\n      300: {\n        title: 'Purple 300',\n        hsl: [262, 92, 84],\n      },\n      400: {\n        title: 'Purple 400',\n        hsl: [262, 88, 75],\n      },\n      500: {\n        title: 'Purple 500',\n        hsl: [262, 83, 64],\n      },\n      600: {\n        title: 'Purple 600',\n        hsl: [265, 79, 51],\n      },\n      700: {\n        title: 'Purple 700',\n        hsl: [263, 72, 36],\n      },\n      800: {\n        title: 'Purple 800',\n        hsl: [258, 60, 24],\n      },\n      900: {\n        title: 'Purple 900',\n        hsl: [257, 46, 17],\n      },\n      950: {\n        title: 'Purple 950',\n        hsl: [260, 41, 11],\n      },\n    },\n  },\n  magenta: {\n    title: 'Magenta',\n    tints: {\n      50: {\n        title: 'Magenta 50',\n        hsl: [340, 82, 98],\n      },\n      100: {\n        title: 'Magenta 100',\n        hsl: [339, 83, 95],\n      },\n      200: {\n        title: 'Magenta 200',\n        hsl: [339, 83, 93],\n      },\n      300: {\n        title: 'Magenta 300',\n        hsl: [340, 82, 82],\n      },\n      400: {\n        title: 'Magenta 400',\n        hsl: [340, 81, 69],\n      },\n      500: {\n        title: 'Magenta 500',\n        hsl: [340, 80, 53],\n      },\n      600: {\n        title: 'Magenta 600',\n        hsl: [337, 78, 39],\n      },\n      700: {\n        title: 'Magenta 700',\n        hsl: [333, 73, 28],\n      },\n      800: {\n        title: 'Magenta 800',\n        hsl: [328, 63, 18],\n      },\n      900: {\n        title: 'Magenta 900',\n        hsl: [327, 46, 14],\n      },\n      950: {\n        title: 'Magenta 950',\n        hsl: [341, 35, 9],\n      },\n    },\n  },\n  red: {\n    title: 'Red',\n    tints: {\n      50: {\n        title: 'Red 50',\n        hsl: [5, 100, 98],\n      },\n      100: {\n        title: 'Red 100',\n        hsl: [4, 100, 95],\n      },\n      200: {\n        title: 'Red 200',\n        hsl: [4, 98, 93],\n      },\n      300: {\n        title: 'Red 300',\n        hsl: [5, 95, 82],\n      },\n      400: {\n        title: 'Red 400',\n        hsl: [6, 90, 69],\n      },\n      500: {\n        title: 'Red 500',\n        hsl: [5, 85, 57],\n      },\n      600: {\n        title: 'Red 600',\n        hsl: [5, 78, 45],\n      },\n      700: {\n        title: 'Red 700',\n        hsl: [4, 70, 32],\n      },\n      800: {\n        title: 'Red 800',\n        hsl: [3, 58, 19],\n      },\n      900: {\n        title: 'Red 900',\n        hsl: [2, 41, 14],\n      },\n      950: {\n        title: 'Red 950',\n        hsl: [356, 30, 9],\n      },\n    },\n  },\n  orange: {\n    title: 'Orange',\n    tints: {\n      50: {\n        title: 'Orange 50',\n        hsl: [28, 100, 97],\n      },\n      100: {\n        title: 'Orange 100',\n        hsl: [25, 100, 93],\n      },\n      200: {\n        title: 'Orange 200',\n        hsl: [24, 100, 89],\n      },\n      300: {\n        title: 'Orange 300',\n        hsl: [24, 100, 76],\n      },\n      400: {\n        title: 'Orange 400',\n        hsl: [24, 100, 63],\n      },\n      500: {\n        title: 'Orange 500',\n        hsl: [24, 100, 49],\n      },\n      600: {\n        title: 'Orange 600',\n        hsl: [24, 98, 35],\n      },\n      700: {\n        title: 'Orange 700',\n        hsl: [24, 94, 25],\n      },\n      800: {\n        title: 'Orange 800',\n        hsl: [22, 82, 15],\n      },\n      900: {\n        title: 'Orange 900',\n        hsl: [17, 65, 12],\n      },\n      950: {\n        title: 'Orange 950',\n        hsl: [14, 43, 9],\n      },\n    },\n  },\n  yellow: {\n    title: 'Yellow',\n    tints: {\n      50: {\n        title: 'Yellow 50',\n        hsl: [51, 94, 94],\n      },\n      100: {\n        title: 'Yellow 100',\n        hsl: [52, 91, 86],\n      },\n      200: {\n        title: 'Yellow 200',\n        hsl: [50, 90, 78],\n      },\n      300: {\n        title: 'Yellow 300',\n        hsl: [47, 91, 65],\n      },\n      400: {\n        title: 'Yellow 400',\n        hsl: [44, 95, 53],\n      },\n      500: {\n        title: 'Yellow 500',\n        hsl: [39, 96, 42],\n      },\n      600: {\n        title: 'Yellow 600',\n        hsl: [34, 90, 31],\n      },\n      700: {\n        title: 'Yellow 700',\n        hsl: [31, 80, 22],\n      },\n      800: {\n        title: 'Yellow 800',\n        hsl: [28, 66, 14],\n      },\n      900: {\n        title: 'Yellow 900',\n        hsl: [24, 40, 11],\n      },\n      950: {\n        title: 'Yellow 950',\n        hsl: [24, 20, 8],\n      },\n    },\n  },\n  green: {\n    title: 'Green',\n    tints: {\n      50: {\n        title: 'Green 50',\n        hsl: [157, 89, 95],\n      },\n      100: {\n        title: 'Green 100',\n        hsl: [158, 89, 88],\n      },\n      200: {\n        title: 'Green 200',\n        hsl: [158, 87, 82],\n      },\n      300: {\n        title: 'Green 300',\n        hsl: [158, 86, 65],\n      },\n      400: {\n        title: 'Green 400',\n        hsl: [159, 88, 50],\n      },\n      500: {\n        title: 'Green 500',\n        hsl: [159, 96, 37],\n      },\n      600: {\n        title: 'Green 600',\n        hsl: [159, 98, 24],\n      },\n      700: {\n        title: 'Green 700',\n        hsl: [158, 98, 16],\n      },\n      800: {\n        title: 'Green 800',\n        hsl: [158, 91, 10],\n      },\n      900: {\n        title: 'Green 900',\n        hsl: [162, 72, 8],\n      },\n      950: {\n        title: 'Green 950',\n        hsl: [172, 51, 6],\n      },\n    },\n  },\n  cyan: {\n    title: 'Cyan',\n    tints: {\n      50: {\n        title: 'Cyan 50',\n        hsl: [180, 92, 95],\n      },\n      100: {\n        title: 'Cyan 100',\n        hsl: [180, 91, 88],\n      },\n      200: {\n        title: 'Cyan 200',\n        hsl: [180, 87, 78],\n      },\n      300: {\n        title: 'Cyan 300',\n        hsl: [180, 81, 66],\n      },\n      400: {\n        title: 'Cyan 400',\n        hsl: [180, 81, 49],\n      },\n      500: {\n        title: 'Cyan 500',\n        hsl: [182, 96, 38],\n      },\n      600: {\n        title: 'Cyan 600',\n        hsl: [185, 96, 26],\n      },\n      700: {\n        title: 'Cyan 700',\n        hsl: [185, 95, 16],\n      },\n      800: {\n        title: 'Cyan 800',\n        hsl: [187, 86, 11],\n      },\n      900: {\n        title: 'Cyan 900',\n        hsl: [188, 68, 9],\n      },\n      950: {\n        title: 'Cyan 950',\n        hsl: [196, 37, 8],\n      },\n    },\n  },\n}\n","import {RGB} from '../../types'\n\n/** @internal */\nexport function hexToRgb(hex: string): RGB {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n\n  if (!result) {\n    throw new Error('input is not valid hex')\n  }\n\n  return [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)]\n}\n","import {HSL, RGB} from '../../types'\n\n/**\n * @see https://css-tricks.com/converting-color-spaces-in-javascript/\n *\n * @internal\n */\nexport function rgbToHsl([r, g, b]: RGB): HSL {\n  // Make r, g, and b fractions of 1\n  r /= 255\n  g /= 255\n  b /= 255\n\n  // Find greatest and smallest channel values\n  const cmin = Math.min(r, g, b)\n  const cmax = Math.max(r, g, b)\n  const delta = cmax - cmin\n\n  let h = 0\n  let s = 0\n  let l = 0\n\n  // Calculate hue\n  // No difference\n  if (delta == 0) h = 0\n  // Red is max\n  else if (cmax == r) h = ((g - b) / delta) % 6\n  // Green is max\n  else if (cmax == g) h = (b - r) / delta + 2\n  // Blue is max\n  else h = (r - g) / delta + 4\n\n  h = Math.round(h * 60)\n\n  // Make negative hues positive behind 360°\n  if (h < 0) h += 360\n\n  // Calculate lightness\n  l = (cmax + cmin) / 2\n\n  // Calculate saturation\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1))\n\n  // Multiply l and s by 100\n  s = +(s * 100).toFixed(0)\n  l = +(l * 100).toFixed(0)\n\n  return [h, s, l]\n}\n","/** @internal */\nexport function clamp(num: number): number {\n  return Math.max(Math.min(num, 255), 0)\n}\n","import {RGB} from '../../types'\nimport {clamp} from '../clamp'\n\nfunction darkenChannel(backdrop: number, source: number) {\n  return Math.min(backdrop, source)\n}\n\n/**\n * Apply the `darken` blend mode\n * Source: https://www.w3.org/TR/compositing-1/#blendingdarken\n *\n * @internal\n */\nexport function darken(b: RGB, s: RGB): RGB {\n  return [\n    Math.round(clamp(darkenChannel(b[0] / 255, s[0] / 255) * 255)),\n    Math.round(clamp(darkenChannel(b[1] / 255, s[1] / 255) * 255)),\n    Math.round(clamp(darkenChannel(b[2] / 255, s[2] / 255) * 255)),\n  ]\n}\n","/** @internal */\nexport function interpolate(min: number, max: number, val: number): number {\n  const size = max - min\n\n  return min + size * val\n}\n","import {RGB} from '../../types'\nimport {interpolate} from '../interpolate'\n\n/** @internal */\nexport function limit(darkest: RGB, lightest: RGB, source: RGB): RGB {\n  const r = Math.round(interpolate(darkest[0], lightest[0], source[0] / 255))\n  const g = Math.round(interpolate(darkest[1], lightest[1], source[1] / 255))\n  const b = Math.round(interpolate(darkest[2], lightest[2], source[2] / 255))\n\n  return [r, g, b]\n}\n","import {RGB} from '../../types'\nimport {clamp} from '../clamp'\n\nfunction screenChannel(backdrop: number, source: number) {\n  return backdrop + source - backdrop * source\n}\n\n/**\n * Apply the `screen` blend mode\n * Source: https://www.w3.org/TR/compositing-1/#blendingscreen\n *\n * @internal\n */\nexport function screen(b: RGB, s: RGB): RGB {\n  return [\n    Math.round(clamp(screenChannel(b[0] / 255, s[0] / 255) * 255)),\n    Math.round(clamp(screenChannel(b[1] / 255, s[1] / 255) * 255)),\n    Math.round(clamp(screenChannel(b[2] / 255, s[2] / 255) * 255)),\n  ]\n}\n"],"names":["color"],"mappings":"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AO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;AACF,GAGa,UAAsB;IACjC,IAAM;QACJ,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;AACF,GAGa,MAAkB;IAC7B,IAAM;QACJ,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;AACF,GAGa,SAAqB;IAChC,IAAM;QACJ,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;AACF,GAGa,SAAqB;IAChC,IAAM;QACJ,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;AACF,GAGa,QAAoB;IAC/B,IAAM;QACJ,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;IACP;AACF,GAGa,OAAmB;IAC9B,IAAM;QACJ,OAAO;QACP,KAAK;IACP;IACA,KAAO;QACL,OAAO;QACP,KAAK;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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12],"debugId":null}},
    {"offset": {"line": 2056, "column": 0}, "map": {"version":3,"file":"stegaClean.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/node_modules/%40vercel/stega/dist/index.mjs","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/stega/stegaClean.ts"],"sourcesContent":["var s={0:8203,1:8204,2:8205,3:8290,4:8291,5:8288,6:65279,7:8289,8:119155,9:119156,a:119157,b:119158,c:119159,d:119160,e:119161,f:119162},c={0:8203,1:8204,2:8205,3:65279},u=new Array(4).fill(String.fromCodePoint(c[0])).join(\"\"),m=String.fromCharCode(0);function E(t){let e=JSON.stringify(t);return`${u}${Array.from(e).map(r=>{let n=r.charCodeAt(0);if(n>255)throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);return Array.from(n.toString(4).padStart(4,\"0\")).map(o=>String.fromCodePoint(c[o])).join(\"\")}).join(\"\")}`}function y(t){let e=JSON.stringify(t);return Array.from(e).map(r=>{let n=r.charCodeAt(0);if(n>255)throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);return Array.from(n.toString(16).padStart(2,\"0\")).map(o=>String.fromCodePoint(s[o])).join(\"\")}).join(\"\")}function I(t){return!Number.isNaN(Number(t))||/[a-z]/i.test(t)&&!/\\d+(?:[-:\\/]\\d+){2}(?:T\\d+(?:[-:\\/]\\d+){1,2}(\\.\\d+)?Z?)?/.test(t)?!1:Boolean(Date.parse(t))}function T(t){try{new URL(t,t.startsWith(\"/\")?\"https://acme.com\":void 0)}catch{return!1}return!0}function C(t,e,r=\"auto\"){return r===!0||r===\"auto\"&&(I(t)||T(t))?t:`${t}${E(e)}`}var x=Object.fromEntries(Object.entries(c).map(t=>t.reverse())),g=Object.fromEntries(Object.entries(s).map(t=>t.reverse())),S=`${Object.values(s).map(t=>`\\\\u{${t.toString(16)}}`).join(\"\")}`,f=new RegExp(`[${S}]{4,}`,\"gu\");function G(t){let e=t.match(f);if(!!e)return h(e[0],!0)[0]}function $(t){let e=t.match(f);if(!!e)return e.map(r=>h(r)).flat()}function h(t,e=!1){let r=Array.from(t);if(r.length%2===0){if(r.length%4||!t.startsWith(u))return A(r,e)}else throw new Error(\"Encoded data has invalid length\");let n=[];for(let o=r.length*.25;o--;){let p=r.slice(o*4,o*4+4).map(d=>x[d.codePointAt(0)]).join(\"\");n.unshift(String.fromCharCode(parseInt(p,4)))}if(e){n.shift();let o=n.indexOf(m);return o===-1&&(o=n.length),[JSON.parse(n.slice(0,o).join(\"\"))]}return n.join(\"\").split(m).filter(Boolean).map(o=>JSON.parse(o))}function A(t,e){var d;let r=[];for(let i=t.length*.5;i--;){let a=`${g[t[i*2].codePointAt(0)]}${g[t[i*2+1].codePointAt(0)]}`;r.unshift(String.fromCharCode(parseInt(a,16)))}let n=[],o=[r.join(\"\")],p=10;for(;o.length;){let i=o.shift();try{if(n.push(JSON.parse(i)),e)return n}catch(a){if(!p--)throw a;let l=+((d=a.message.match(/\\sposition\\s(\\d+)$/))==null?void 0:d[1]);if(!l)throw a;o.unshift(i.substring(0,l),i.substring(l))}}return n}function _(t){var e;return{cleaned:t.replace(f,\"\"),encoded:((e=t.match(f))==null?void 0:e[0])||\"\"}}function O(t){return t&&JSON.parse(_(JSON.stringify(t)).cleaned)}export{f as VERCEL_STEGA_REGEX,y as legacyStegaEncode,O as vercelStegaClean,C as vercelStegaCombine,G as vercelStegaDecode,$ as vercelStegaDecodeAll,E as vercelStegaEncode,_ as vercelStegaSplit};\n","import {vercelStegaClean} from '@vercel/stega'\n\n/**\n * Can take a `result` JSON from a `const {result} = client.fetch(query, params, {filterResponse: false})`\n * and remove all stega-encoded data from it.\n * @public\n */\nexport function stegaClean<Result = unknown>(result: Result): Result {\n  return vercelStegaClean<Result>(result)\n}\n\n/**\n * Can take a `result` JSON from a `const {result} = client.fetch(query, params, {filterResponse: false})`\n * and remove all stega-encoded data from it.\n * @alpha\n * @deprecated Use `stegaClean` instead\n */\nexport const vercelStegaCleanAll = stegaClean\n"],"names":["vercelStegaClean"],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 2131, "column": 0}, "map": {"version":3,"file":"index.browser.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/http/errors.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/http/request.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/generateHelpUrl.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/validators.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/util/once.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/warnings.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/config.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/data/eventsource.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/util/getSelection.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/data/patch.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/data/transaction.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/http/requestOptions.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/data/encodeQueryString.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/data/dataMethods.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/assets/AssetsClient.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/util/defaults.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/util/pick.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/data/eventsourcePolyfill.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/data/reconnectOnConnectionFailure.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/data/listen.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/util/shareReplayLatest.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/data/live.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/datasets/DatasetsClient.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/projects/ProjectsClient.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/users/UsersClient.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/SanityClient.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/defineCreateClient.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/defineDeprecatedCreateClient.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/http/browserMiddleware.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/index.browser.ts"],"sourcesContent":["import type {ActionError, Any, ErrorProps, MutationError} from '../types'\n\nconst MAX_ITEMS_IN_ERROR_MESSAGE = 5\n\n/** @public */\nexport class ClientError extends Error {\n  response: ErrorProps['response']\n  statusCode: ErrorProps['statusCode'] = 400\n  responseBody: ErrorProps['responseBody']\n  details: ErrorProps['details']\n\n  constructor(res: Any) {\n    const props = extractErrorProps(res)\n    super(props.message)\n    Object.assign(this, props)\n  }\n}\n\n/** @public */\nexport class ServerError extends Error {\n  response: ErrorProps['response']\n  statusCode: ErrorProps['statusCode'] = 500\n  responseBody: ErrorProps['responseBody']\n  details: ErrorProps['details']\n\n  constructor(res: Any) {\n    const props = extractErrorProps(res)\n    super(props.message)\n    Object.assign(this, props)\n  }\n}\n\nfunction extractErrorProps(res: Any): ErrorProps {\n  const body = res.body\n  const props = {\n    response: res,\n    statusCode: res.statusCode,\n    responseBody: stringifyBody(body, res),\n    message: '',\n    details: undefined as Any,\n  }\n\n  // API/Boom style errors ({statusCode, error, message})\n  if (body.error && body.message) {\n    props.message = `${body.error} - ${body.message}`\n    return props\n  }\n\n  // Mutation errors (specifically)\n  if (isMutationError(body) || isActionError(body)) {\n    const allItems = body.error.items || []\n    const items = allItems\n      .slice(0, MAX_ITEMS_IN_ERROR_MESSAGE)\n      .map((item) => item.error?.description)\n      .filter(Boolean)\n    let itemsStr = items.length ? `:\\n- ${items.join('\\n- ')}` : ''\n    if (allItems.length > MAX_ITEMS_IN_ERROR_MESSAGE) {\n      itemsStr += `\\n...and ${allItems.length - MAX_ITEMS_IN_ERROR_MESSAGE} more`\n    }\n    props.message = `${body.error.description}${itemsStr}`\n    props.details = body.error\n    return props\n  }\n\n  // Query/database errors ({error: {description, other, arb, props}})\n  if (body.error && body.error.description) {\n    props.message = body.error.description\n    props.details = body.error\n    return props\n  }\n\n  // Other, more arbitrary errors\n  props.message = body.error || body.message || httpErrorMessage(res)\n  return props\n}\n\nfunction isMutationError(body: Any): body is MutationError {\n  return (\n    isPlainObject(body) &&\n    isPlainObject(body.error) &&\n    body.error.type === 'mutationError' &&\n    typeof body.error.description === 'string'\n  )\n}\n\nfunction isActionError(body: Any): body is ActionError {\n  return (\n    isPlainObject(body) &&\n    isPlainObject(body.error) &&\n    body.error.type === 'actionError' &&\n    typeof body.error.description === 'string'\n  )\n}\n\nfunction isPlainObject(obj: Any): obj is Record<string, unknown> {\n  return typeof obj === 'object' && obj !== null && !Array.isArray(obj)\n}\n\nfunction httpErrorMessage(res: Any) {\n  const statusMessage = res.statusMessage ? ` ${res.statusMessage}` : ''\n  return `${res.method}-request to ${res.url} resulted in HTTP ${res.statusCode}${statusMessage}`\n}\n\nfunction stringifyBody(body: Any, res: Any) {\n  const contentType = (res.headers['content-type'] || '').toLowerCase()\n  const isJson = contentType.indexOf('application/json') !== -1\n  return isJson ? JSON.stringify(body, null, 2) : body\n}\n\n/** @public */\nexport class CorsOriginError extends Error {\n  projectId: string\n  addOriginUrl?: URL\n\n  constructor({projectId}: {projectId: string}) {\n    super('CorsOriginError')\n    this.name = 'CorsOriginError'\n    this.projectId = projectId\n\n    const url = new URL(`https://sanity.io/manage/project/${projectId}/api`)\n    if (typeof location !== 'undefined') {\n      const {origin} = location\n      url.searchParams.set('cors', 'add')\n      url.searchParams.set('origin', origin)\n      this.addOriginUrl = url\n      this.message = `The current origin is not allowed to connect to the Live Content API. Add it here: ${url}`\n    } else {\n      this.message = `The current origin is not allowed to connect to the Live Content API. Change your configuration here: ${url}`\n    }\n  }\n}\n","import {getIt, type Middlewares, type Requester} from 'get-it'\nimport {jsonRequest, jsonResponse, observable, progress, retry} from 'get-it/middleware'\nimport {Observable} from 'rxjs'\n\nimport type {Any} from '../types'\nimport {ClientError, ServerError} from './errors'\n\nconst httpError = {\n  onResponse: (res: Any) => {\n    if (res.statusCode >= 500) {\n      throw new ServerError(res)\n    } else if (res.statusCode >= 400) {\n      throw new ClientError(res)\n    }\n\n    return res\n  },\n}\n\nfunction printWarnings() {\n  const seen: Record<string, boolean> = {}\n  return {\n    onResponse: (res: Any) => {\n      const warn = res.headers['x-sanity-warning']\n      const warnings = Array.isArray(warn) ? warn : [warn]\n      for (const msg of warnings) {\n        if (!msg || seen[msg]) continue\n        seen[msg] = true\n        console.warn(msg) // eslint-disable-line no-console\n      }\n      return res\n    },\n  }\n}\n\n/** @internal */\nexport function defineHttpRequest(envMiddleware: Middlewares): Requester {\n  return getIt([\n    retry({shouldRetry}),\n    ...envMiddleware,\n    printWarnings(),\n    jsonRequest(),\n    jsonResponse(),\n    progress(),\n    httpError,\n    observable({implementation: Observable}),\n  ])\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction shouldRetry(err: any, attempt: number, options: any) {\n  // Allow opting out of retries\n  if (options.maxRetries === 0) return false\n\n  // By default `retry.shouldRetry` doesn't retry on server errors so we add our own logic.\n\n  const isSafe = options.method === 'GET' || options.method === 'HEAD'\n  const uri = options.uri || options.url\n  const isQuery = uri.startsWith('/data/query')\n  const isRetriableResponse =\n    err.response &&\n    (err.response.statusCode === 429 ||\n      err.response.statusCode === 502 ||\n      err.response.statusCode === 503)\n\n  // We retry the following errors:\n  // - 429 means that the request was rate limited. It's a bit difficult\n  //   to know exactly how long it makes sense to wait and/or how many\n  //   attempts we should retry, but the backoff should alleviate the\n  //   additional load.\n  // - 502/503 can occur when certain components struggle to talk to their\n  //   upstream dependencies. This is most likely a temporary problem\n  //   and retrying makes sense.\n\n  if ((isSafe || isQuery) && isRetriableResponse) return true\n\n  return retry.shouldRetry(err, attempt, options)\n}\n","const BASE_URL = 'https://www.sanity.io/help/'\n\nexport function generateHelpUrl(slug: string) {\n  return BASE_URL + slug\n}\n","import type {Any, InitializedClientConfig} from './types'\n\nconst VALID_ASSET_TYPES = ['image', 'file']\nconst VALID_INSERT_LOCATIONS = ['before', 'after', 'replace']\n\nexport const dataset = (name: string) => {\n  if (!/^(~[a-z0-9]{1}[-\\w]{0,63}|[a-z0-9]{1}[-\\w]{0,63})$/.test(name)) {\n    throw new Error(\n      'Datasets can only contain lowercase characters, numbers, underscores and dashes, and start with tilde, and be maximum 64 characters',\n    )\n  }\n}\n\nexport const projectId = (id: string) => {\n  if (!/^[-a-z0-9]+$/i.test(id)) {\n    throw new Error('`projectId` can only contain only a-z, 0-9 and dashes')\n  }\n}\n\nexport const validateAssetType = (type: string) => {\n  if (VALID_ASSET_TYPES.indexOf(type) === -1) {\n    throw new Error(`Invalid asset type: ${type}. Must be one of ${VALID_ASSET_TYPES.join(', ')}`)\n  }\n}\n\nexport const validateObject = (op: string, val: Any) => {\n  if (val === null || typeof val !== 'object' || Array.isArray(val)) {\n    throw new Error(`${op}() takes an object of properties`)\n  }\n}\n\nexport const validateDocumentId = (op: string, id: string) => {\n  if (typeof id !== 'string' || !/^[a-z0-9_][a-z0-9_.-]{0,127}$/i.test(id) || id.includes('..')) {\n    throw new Error(`${op}(): \"${id}\" is not a valid document ID`)\n  }\n}\n\nexport const requireDocumentId = (op: string, doc: Record<string, Any>) => {\n  if (!doc._id) {\n    throw new Error(`${op}() requires that the document contains an ID (\"_id\" property)`)\n  }\n\n  validateDocumentId(op, doc._id)\n}\n\nexport const validateInsert = (at: string, selector: string, items: Any[]) => {\n  const signature = 'insert(at, selector, items)'\n  if (VALID_INSERT_LOCATIONS.indexOf(at) === -1) {\n    const valid = VALID_INSERT_LOCATIONS.map((loc) => `\"${loc}\"`).join(', ')\n    throw new Error(`${signature} takes an \"at\"-argument which is one of: ${valid}`)\n  }\n\n  if (typeof selector !== 'string') {\n    throw new Error(`${signature} takes a \"selector\"-argument which must be a string`)\n  }\n\n  if (!Array.isArray(items)) {\n    throw new Error(`${signature} takes an \"items\"-argument which must be an array`)\n  }\n}\n\nexport const hasDataset = (config: InitializedClientConfig): string => {\n  if (!config.dataset) {\n    throw new Error('`dataset` must be provided to perform queries')\n  }\n\n  return config.dataset || ''\n}\n\nexport const requestTag = (tag: string) => {\n  if (typeof tag !== 'string' || !/^[a-z0-9._-]{1,75}$/i.test(tag)) {\n    throw new Error(\n      `Tag can only contain alphanumeric characters, underscores, dashes and dots, and be between one and 75 characters long.`,\n    )\n  }\n\n  return tag\n}\n","import type {Any} from '../types'\n\nexport function once(fn: Any) {\n  let didCall = false\n  let returnValue: Any\n  return (...args: Any[]) => {\n    if (didCall) {\n      return returnValue\n    }\n    returnValue = fn(...args)\n    didCall = true\n    return returnValue\n  }\n}\n","import {generateHelpUrl} from './generateHelpUrl'\nimport {type Any} from './types'\nimport {once} from './util/once'\n\nconst createWarningPrinter = (message: string[]) =>\n  // eslint-disable-next-line no-console\n  once((...args: Any[]) => console.warn(message.join(' '), ...args))\n\nexport const printCdnAndWithCredentialsWarning = createWarningPrinter([\n  `Because you set \\`withCredentials\\` to true, we will override your \\`useCdn\\``,\n  `setting to be false since (cookie-based) credentials are never set on the CDN`,\n])\n\nexport const printCdnWarning = createWarningPrinter([\n  `Since you haven't set a value for \\`useCdn\\`, we will deliver content using our`,\n  `global, edge-cached API-CDN. If you wish to have content delivered faster, set`,\n  `\\`useCdn: false\\` to use the Live API. Note: You may incur higher costs using the live API.`,\n])\n\nexport const printCdnPreviewDraftsWarning = createWarningPrinter([\n  `The Sanity client is configured with the \\`perspective\\` set to \\`drafts\\` or \\`previewDrafts\\`, which doesn't support the API-CDN.`,\n  `The Live API will be used instead. Set \\`useCdn: false\\` in your configuration to hide this warning.`,\n])\n\nexport const printPreviewDraftsDeprecationWarning = createWarningPrinter([\n  `The \\`previewDrafts\\` perspective has been renamed to  \\`drafts\\` and will be removed in a future API version`,\n])\n\nexport const printBrowserTokenWarning = createWarningPrinter([\n  'You have configured Sanity client to use a token in the browser. This may cause unintentional security issues.',\n  `See ${generateHelpUrl(\n    'js-client-browser-token',\n  )} for more information and how to hide this warning.`,\n])\n\nexport const printNoApiVersionSpecifiedWarning = createWarningPrinter([\n  'Using the Sanity client without specifying an API version is deprecated.',\n  `See ${generateHelpUrl('js-client-api-version')}`,\n])\n\nexport const printNoDefaultExport = createWarningPrinter([\n  'The default export of @sanity/client has been deprecated. Use the named export `createClient` instead.',\n])\n","import {generateHelpUrl} from './generateHelpUrl'\nimport type {ClientConfig, ClientPerspective, InitializedClientConfig} from './types'\nimport * as validate from './validators'\nimport * as warnings from './warnings'\n\nconst defaultCdnHost = 'apicdn.sanity.io'\nexport const defaultConfig = {\n  apiHost: 'https://api.sanity.io',\n  apiVersion: '1',\n  useProjectHostname: true,\n  stega: {enabled: false},\n} satisfies ClientConfig\n\nconst LOCALHOSTS = ['localhost', '127.0.0.1', '0.0.0.0']\nconst isLocal = (host: string) => LOCALHOSTS.indexOf(host) !== -1\n\nfunction validateApiVersion(apiVersion: string) {\n  if (apiVersion === '1' || apiVersion === 'X') {\n    return\n  }\n\n  const apiDate = new Date(apiVersion)\n  const apiVersionValid =\n    /^\\d{4}-\\d{2}-\\d{2}$/.test(apiVersion) && apiDate instanceof Date && apiDate.getTime() > 0\n\n  if (!apiVersionValid) {\n    throw new Error('Invalid API version string, expected `1` or date in format `YYYY-MM-DD`')\n  }\n}\n\nconst VALID_PERSPECTIVE = /^[a-z0-9_]+$/i\n\n/**\n * @internal - it may have breaking changes in any release\n */\nexport function validateApiPerspective(\n  perspective: unknown,\n): asserts perspective is ClientPerspective {\n  if (Array.isArray(perspective)) {\n    if (perspective.includes('raw')) {\n      throw new TypeError(\n        `Invalid API perspective value: \"raw\". The raw-perspective can not be combined with other perspectives`,\n      )\n    }\n  }\n\n  const invalid = (Array.isArray(perspective) ? perspective : [perspective]).filter(\n    (perspectiveName) =>\n      typeof perspectiveName !== 'string' || !VALID_PERSPECTIVE.test(perspectiveName),\n  )\n  if (invalid.length > 0) {\n    const formatted = invalid.map((v) => JSON.stringify(v))\n    throw new TypeError(\n      `Invalid API perspective value${invalid.length === 1 ? '' : 's'}: ${formatted.join(', ')}, expected \\`published\\`, \\`drafts\\`, \\`raw\\` or a release identifier string`,\n    )\n  }\n}\n\nexport const initConfig = (\n  config: Partial<ClientConfig>,\n  prevConfig: Partial<ClientConfig>,\n): InitializedClientConfig => {\n  const specifiedConfig = {\n    ...prevConfig,\n    ...config,\n    stega: {\n      ...(typeof prevConfig.stega === 'boolean'\n        ? {enabled: prevConfig.stega}\n        : prevConfig.stega || defaultConfig.stega),\n      ...(typeof config.stega === 'boolean' ? {enabled: config.stega} : config.stega || {}),\n    },\n  }\n  if (!specifiedConfig.apiVersion) {\n    warnings.printNoApiVersionSpecifiedWarning()\n  }\n\n  const newConfig = {\n    ...defaultConfig,\n    ...specifiedConfig,\n  } as InitializedClientConfig\n  const projectBased = newConfig.useProjectHostname\n\n  if (typeof Promise === 'undefined') {\n    const helpUrl = generateHelpUrl('js-client-promise-polyfill')\n    throw new Error(`No native Promise-implementation found, polyfill needed - see ${helpUrl}`)\n  }\n\n  if (projectBased && !newConfig.projectId) {\n    throw new Error('Configuration must contain `projectId`')\n  }\n\n  if (typeof newConfig.perspective !== 'undefined') {\n    validateApiPerspective(newConfig.perspective)\n  }\n\n  if ('encodeSourceMap' in newConfig) {\n    throw new Error(\n      `It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMap' is not supported in '@sanity/client'. Did you mean 'stega.enabled'?`,\n    )\n  }\n  if ('encodeSourceMapAtPath' in newConfig) {\n    throw new Error(\n      `It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMapAtPath' is not supported in '@sanity/client'. Did you mean 'stega.filter'?`,\n    )\n  }\n  if (typeof newConfig.stega.enabled !== 'boolean') {\n    throw new Error(`stega.enabled must be a boolean, received ${newConfig.stega.enabled}`)\n  }\n  if (newConfig.stega.enabled && newConfig.stega.studioUrl === undefined) {\n    throw new Error(`stega.studioUrl must be defined when stega.enabled is true`)\n  }\n  if (\n    newConfig.stega.enabled &&\n    typeof newConfig.stega.studioUrl !== 'string' &&\n    typeof newConfig.stega.studioUrl !== 'function'\n  ) {\n    throw new Error(\n      `stega.studioUrl must be a string or a function, received ${newConfig.stega.studioUrl}`,\n    )\n  }\n\n  const isBrowser = typeof window !== 'undefined' && window.location && window.location.hostname\n  const isLocalhost = isBrowser && isLocal(window.location.hostname)\n\n  if (isBrowser && isLocalhost && newConfig.token && newConfig.ignoreBrowserTokenWarning !== true) {\n    warnings.printBrowserTokenWarning()\n  } else if (typeof newConfig.useCdn === 'undefined') {\n    warnings.printCdnWarning()\n  }\n\n  if (projectBased) {\n    validate.projectId(newConfig.projectId!)\n  }\n\n  if (newConfig.dataset) {\n    validate.dataset(newConfig.dataset)\n  }\n\n  if ('requestTagPrefix' in newConfig) {\n    // Allow setting and unsetting request tag prefix\n    newConfig.requestTagPrefix = newConfig.requestTagPrefix\n      ? validate.requestTag(newConfig.requestTagPrefix).replace(/\\.+$/, '')\n      : undefined\n  }\n\n  newConfig.apiVersion = `${newConfig.apiVersion}`.replace(/^v/, '')\n  newConfig.isDefaultApi = newConfig.apiHost === defaultConfig.apiHost\n\n  if (newConfig.useCdn === true && newConfig.withCredentials) {\n    warnings.printCdnAndWithCredentialsWarning()\n  }\n\n  // If `useCdn` is undefined, we treat it as `true`\n  newConfig.useCdn = newConfig.useCdn !== false && !newConfig.withCredentials\n\n  validateApiVersion(newConfig.apiVersion)\n\n  const hostParts = newConfig.apiHost.split('://', 2)\n  const protocol = hostParts[0]\n  const host = hostParts[1]\n  const cdnHost = newConfig.isDefaultApi ? defaultCdnHost : host\n\n  if (newConfig.useProjectHostname) {\n    newConfig.url = `${protocol}://${newConfig.projectId}.${host}/v${newConfig.apiVersion}`\n    newConfig.cdnUrl = `${protocol}://${newConfig.projectId}.${cdnHost}/v${newConfig.apiVersion}`\n  } else {\n    newConfig.url = `${newConfig.apiHost}/v${newConfig.apiVersion}`\n    newConfig.cdnUrl = newConfig.url\n  }\n\n  return newConfig\n}\n","import {defer, isObservable, mergeMap, Observable, of} from 'rxjs'\n\nimport {type Any} from '../types'\n\n/**\n * @public\n * Thrown if the EventSource connection could not be established.\n * Note that ConnectionFailedErrors are rare, and disconnects will normally be handled by the EventSource instance itself and emitted as `reconnect` events.\n */\nexport class ConnectionFailedError extends Error {\n  readonly name = 'ConnectionFailedError'\n}\n\n/**\n * The listener has been told to explicitly disconnect.\n *  This is a rare situation, but may occur if the API knows reconnect attempts will fail,\n *  eg in the case of a deleted dataset, a blocked project or similar events.\n * @public\n */\nexport class DisconnectError extends Error {\n  readonly name = 'DisconnectError'\n  readonly reason?: string\n  constructor(message: string, reason?: string, options: ErrorOptions = {}) {\n    super(message, options)\n    this.reason = reason\n  }\n}\n\n/**\n * @public\n * The server sent a `channelError` message. Usually indicative of a bad or malformed request\n */\nexport class ChannelError extends Error {\n  readonly name = 'ChannelError'\n  readonly data?: unknown\n  constructor(message: string, data: unknown) {\n    super(message)\n    this.data = data\n  }\n}\n\n/**\n * @public\n * The server sent an `error`-event to tell the client that an unexpected error has happened.\n */\nexport class MessageError extends Error {\n  readonly name = 'MessageError'\n  readonly data?: unknown\n  constructor(message: string, data: unknown, options: ErrorOptions = {}) {\n    super(message, options)\n    this.data = data\n  }\n}\n\n/**\n * @public\n * An error occurred while parsing the message sent by the server as JSON. Should normally not happen.\n */\nexport class MessageParseError extends Error {\n  readonly name = 'MessageParseError'\n}\n\n/**\n * @public\n */\nexport interface ServerSentEvent<Name extends string> {\n  type: Name\n  id?: string\n  data?: unknown\n}\n\n// Always listen for these events, no matter what\nconst REQUIRED_EVENTS = ['channelError', 'disconnect']\n\n/**\n * @internal\n */\nexport type EventSourceEvent<Name extends string> = ServerSentEvent<Name>\n\n/**\n * @internal\n */\nexport type EventSourceInstance = InstanceType<typeof globalThis.EventSource>\n\n/**\n * Sanity API specific EventSource handler shared between the listen and live APIs\n *\n * Since the `EventSource` API is not provided by all environments, this function enables custom initialization of the EventSource instance\n * for runtimes that requires polyfilling or custom setup logic (e.g. custom HTTP headers)\n * via the passed `initEventSource` function which must return an EventSource instance.\n *\n * Possible errors to be thrown on the returned observable are:\n * - {@link MessageError}\n * - {@link MessageParseError}\n * - {@link ChannelError}\n * - {@link DisconnectError}\n * - {@link ConnectionFailedError}\n *\n * @param initEventSource - A function that returns an EventSource instance or an Observable that resolves to an EventSource instance\n * @param events - an array of named events from the API to listen for.\n *\n * @internal\n */\nexport function connectEventSource<EventName extends string>(\n  initEventSource: () => EventSourceInstance | Observable<EventSourceInstance>,\n  events: EventName[],\n) {\n  return defer(() => {\n    const es = initEventSource()\n    return isObservable(es) ? es : of(es)\n  }).pipe(mergeMap((es) => connectWithESInstance(es, events))) as Observable<\n    ServerSentEvent<EventName>\n  >\n}\n\n/**\n * Provides an observable from the passed EventSource instance, subscribing to the passed list of names of events types to listen for\n * Handles connection logic, adding/removing event listeners, payload parsing, error propagation, etc.\n *\n * @param es - The EventSource instance\n * @param events - List of event names to listen for\n */\nfunction connectWithESInstance<EventTypeName extends string>(\n  es: EventSourceInstance,\n  events: EventTypeName[],\n) {\n  return new Observable<EventSourceEvent<EventTypeName>>((observer) => {\n    const emitOpen = (events as string[]).includes('open')\n    const emitReconnect = (events as string[]).includes('reconnect')\n\n    // EventSource will emit a regular Event if it fails to connect, however the API may also emit an `error` MessageEvent\n    // So we need to handle both cases\n    function onError(evt: MessageEvent | Event) {\n      // If the event has a `data` property, then it`s a MessageEvent emitted by the API and we should forward the error\n      if ('data' in evt) {\n        const [parseError, event] = parseEvent(evt as MessageEvent)\n        observer.error(\n          parseError\n            ? new MessageParseError('Unable to parse EventSource error message', {cause: event})\n            : new MessageError((event?.data as {message: string}).message, event),\n        )\n        return\n      }\n\n      // We should never be in a disconnected state. By default, EventSource will reconnect\n      // automatically, but in some cases (like when a laptop lid is closed), it will trigger onError\n      // if it can't reconnect.\n      // see https://html.spec.whatwg.org/multipage/server-sent-events.html#sse-processing-model\n      if (es.readyState === es.CLOSED) {\n        // In these cases we'll signal to consumers (via the error path) that a retry/reconnect is needed.\n        observer.error(new ConnectionFailedError('EventSource connection failed'))\n      } else if (emitReconnect) {\n        observer.next({type: 'reconnect' as EventTypeName})\n      }\n    }\n\n    function onOpen() {\n      // The open event of the EventSource API is fired when a connection with an event source is opened.\n      observer.next({type: 'open' as EventTypeName})\n    }\n\n    function onMessage(message: MessageEvent) {\n      const [parseError, event] = parseEvent(message)\n      if (parseError) {\n        observer.error(\n          new MessageParseError('Unable to parse EventSource message', {cause: parseError}),\n        )\n        return\n      }\n      if (message.type === 'channelError') {\n        // An error occurred. This is different from a network-level error (which will be emitted as 'error').\n        // Possible causes are things such as malformed filters, non-existant datasets or similar.\n        observer.error(new ChannelError(extractErrorMessage(event?.data), event.data))\n        return\n      }\n      if (message.type === 'disconnect') {\n        // The listener has been told to explicitly disconnect and not reconnect.\n        // This is a rare situation, but may occur if the API knows reconnect attempts will fail,\n        // eg in the case of a deleted dataset, a blocked project or similar events.\n        observer.error(\n          new DisconnectError(\n            `Server disconnected client: ${\n              (event.data as {reason?: string})?.reason || 'unknown error'\n            }`,\n          ),\n        )\n        return\n      }\n      observer.next({\n        type: message.type as EventTypeName,\n        id: message.lastEventId,\n        ...(event.data ? {data: event.data} : {}),\n      })\n    }\n\n    es.addEventListener('error', onError)\n\n    if (emitOpen) {\n      es.addEventListener('open', onOpen)\n    }\n\n    // Make sure we have a unique list of events types to avoid listening multiple times,\n    const cleanedEvents = [...new Set([...REQUIRED_EVENTS, ...events])]\n      // filter out events that are handled separately\n      .filter((type) => type !== 'error' && type !== 'open' && type !== 'reconnect')\n\n    cleanedEvents.forEach((type: string) => es.addEventListener(type, onMessage))\n\n    return () => {\n      es.removeEventListener('error', onError)\n      if (emitOpen) {\n        es.removeEventListener('open', onOpen)\n      }\n      cleanedEvents.forEach((type: string) => es.removeEventListener(type, onMessage))\n      es.close()\n    }\n  })\n}\n\nfunction parseEvent(\n  message: MessageEvent,\n): [null, {type: string; id: string; data?: unknown}] | [Error, null] {\n  try {\n    const data = typeof message.data === 'string' && JSON.parse(message.data)\n    return [\n      null,\n      {\n        type: message.type,\n        id: message.lastEventId,\n        ...(isEmptyObject(data) ? {} : {data}),\n      },\n    ]\n  } catch (err) {\n    return [err as Error, null]\n  }\n}\n\nfunction extractErrorMessage(err: Any) {\n  if (!err.error) {\n    return err.message || 'Unknown listener error'\n  }\n\n  if (err.error.description) {\n    return err.error.description\n  }\n\n  return typeof err.error === 'string' ? err.error : JSON.stringify(err.error, null, 2)\n}\n\nfunction isEmptyObject(data: object) {\n  for (const _ in data) {\n    return false\n  }\n  return true\n}\n","import type {MutationSelection} from '../types'\n\nexport function getSelection(sel: unknown): MutationSelection {\n  if (typeof sel === 'string') {\n    return {id: sel}\n  }\n\n  if (Array.isArray(sel)) {\n    return {query: '*[_id in $ids]', params: {ids: sel}}\n  }\n\n  if (typeof sel === 'object' && sel !== null && 'query' in sel && typeof sel.query === 'string') {\n    return 'params' in sel && typeof sel.params === 'object' && sel.params !== null\n      ? {query: sel.query, params: sel.params}\n      : {query: sel.query}\n  }\n\n  const selectionOpts = [\n    '* Document ID (<docId>)',\n    '* Array of document IDs',\n    '* Object containing `query`',\n  ].join('\\n')\n\n  throw new Error(`Unknown selection - must be one of:\\n\\n${selectionOpts}`)\n}\n","import {type Observable} from 'rxjs'\n\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {\n  AllDocumentIdsMutationOptions,\n  AllDocumentsMutationOptions,\n  Any,\n  AttributeSet,\n  BaseMutationOptions,\n  FirstDocumentIdMutationOptions,\n  FirstDocumentMutationOptions,\n  MultipleMutationResult,\n  PatchMutationOperation,\n  PatchOperations,\n  PatchSelection,\n  SanityDocument,\n  SingleMutationResult,\n} from '../types'\nimport {getSelection} from '../util/getSelection'\nimport {validateInsert, validateObject} from '../validators'\n\n/** @internal */\nexport class BasePatch {\n  protected selection: PatchSelection\n  protected operations: PatchOperations\n  constructor(selection: PatchSelection, operations: PatchOperations = {}) {\n    this.selection = selection\n    this.operations = operations\n  }\n\n  /**\n   * Sets the given attributes to the document. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  set(attrs: AttributeSet): this {\n    return this._assign('set', attrs)\n  }\n\n  /**\n   * Sets the given attributes to the document if they are not currently set. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  setIfMissing(attrs: AttributeSet): this {\n    return this._assign('setIfMissing', attrs)\n  }\n\n  /**\n   * Performs a \"diff-match-patch\" operation on the string attributes provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to perform operation on. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"dmp\"\\}\n   */\n  diffMatchPatch(attrs: AttributeSet): this {\n    validateObject('diffMatchPatch', attrs)\n    return this._assign('diffMatchPatch', attrs)\n  }\n\n  /**\n   * Unsets the attribute paths provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attribute paths to unset.\n   */\n  unset(attrs: string[]): this {\n    if (!Array.isArray(attrs)) {\n      throw new Error('unset(attrs) takes an array of attributes to unset, non-array given')\n    }\n\n    this.operations = Object.assign({}, this.operations, {unset: attrs})\n    return this\n  }\n\n  /**\n   * Increment a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to increment, values representing the number to increment by.\n   */\n  inc(attrs: {[key: string]: number}): this {\n    return this._assign('inc', attrs)\n  }\n\n  /**\n   * Decrement a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to decrement, values representing the number to decrement by.\n   */\n  dec(attrs: {[key: string]: number}): this {\n    return this._assign('dec', attrs)\n  }\n\n  /**\n   * Provides methods for modifying arrays, by inserting, appending and replacing elements via a JSONPath expression.\n   *\n   * @param at - Location to insert at, relative to the given selector, or 'replace' the matched path\n   * @param selector - JSONPath expression, eg `comments[-1]` or `blocks[_key==\"abc123\"]`\n   * @param items - Array of items to insert/replace\n   */\n  insert(at: 'before' | 'after' | 'replace', selector: string, items: Any[]): this {\n    validateInsert(at, selector, items)\n    return this._assign('insert', {[at]: selector, items})\n  }\n\n  /**\n   * Append the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to append to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to append to the array\n   */\n  append(selector: string, items: Any[]): this {\n    return this.insert('after', `${selector}[-1]`, items)\n  }\n\n  /**\n   * Prepend the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to prepend to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to prepend to the array\n   */\n  prepend(selector: string, items: Any[]): this {\n    return this.insert('before', `${selector}[0]`, items)\n  }\n\n  /**\n   * Change the contents of an array by removing existing elements and/or adding new elements.\n   *\n   * @param selector - Attribute or JSONPath expression for array\n   * @param start - Index at which to start changing the array (with origin 0). If greater than the length of the array, actual starting index will be set to the length of the array. If negative, will begin that many elements from the end of the array (with origin -1) and will be set to 0 if absolute value is greater than the length of the array.x\n   * @param deleteCount - An integer indicating the number of old array elements to remove.\n   * @param items - The elements to add to the array, beginning at the start index. If you don't specify any elements, splice() will only remove elements from the array.\n   */\n  splice(selector: string, start: number, deleteCount?: number, items?: Any[]): this {\n    // Negative indexes doesn't mean the same in Sanity as they do in JS;\n    // -1 means \"actually at the end of the array\", which allows inserting\n    // at the end of the array without knowing its length. We therefore have\n    // to substract negative indexes by one to match JS. If you want Sanity-\n    // behaviour, just use `insert('replace', selector, items)` directly\n    const delAll = typeof deleteCount === 'undefined' || deleteCount === -1\n    const startIndex = start < 0 ? start - 1 : start\n    const delCount = delAll ? -1 : Math.max(0, start + deleteCount)\n    const delRange = startIndex < 0 && delCount >= 0 ? '' : delCount\n    const rangeSelector = `${selector}[${startIndex}:${delRange}]`\n    return this.insert('replace', rangeSelector, items || [])\n  }\n\n  /**\n   * Adds a revision clause, preventing the document from being patched if the `_rev` property does not match the given value\n   *\n   * @param rev - Revision to lock the patch to\n   */\n  ifRevisionId(rev: string): this {\n    this.operations.ifRevisionID = rev\n    return this\n  }\n\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  serialize(): PatchMutationOperation {\n    return {...getSelection(this.selection), ...this.operations}\n  }\n\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  toJSON(): PatchMutationOperation {\n    return this.serialize()\n  }\n\n  /**\n   * Clears the patch of all operations\n   */\n  reset(): this {\n    this.operations = {}\n    return this\n  }\n\n  protected _assign(op: keyof PatchOperations, props: Any, merge = true): this {\n    validateObject(op, props)\n    this.operations = Object.assign({}, this.operations, {\n      [op]: Object.assign({}, (merge && this.operations[op]) || {}, props),\n    })\n    return this\n  }\n\n  protected _set(op: keyof PatchOperations, props: Any): this {\n    return this._assign(op, props, false)\n  }\n}\n\n/** @public */\nexport class ObservablePatch extends BasePatch {\n  #client?: ObservableSanityClient\n\n  constructor(\n    selection: PatchSelection,\n    operations?: PatchOperations,\n    client?: ObservableSanityClient,\n  ) {\n    super(selection, operations)\n    this.#client = client\n  }\n\n  /**\n   * Clones the patch\n   */\n  clone(): ObservablePatch {\n    return new ObservablePatch(this.selection, {...this.operations}, this.#client)\n  }\n\n  /**\n   * Commit the patch, returning an observable that produces the first patched document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options: FirstDocumentMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Commit the patch, returning an observable that produces an array of the mutated documents\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options: AllDocumentsMutationOptions,\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Commit the patch, returning an observable that produces a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: FirstDocumentIdMutationOptions): Observable<SingleMutationResult>\n  /**\n   * Commit the patch, returning an observable that produces a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: AllDocumentIdsMutationOptions): Observable<MultipleMutationResult>\n  /**\n   * Commit the patch, returning an observable that produces the first patched document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?: BaseMutationOptions,\n  ): Observable<SanityDocument<R>>\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?:\n      | FirstDocumentMutationOptions\n      | AllDocumentsMutationOptions\n      | FirstDocumentIdMutationOptions\n      | AllDocumentIdsMutationOptions\n      | BaseMutationOptions,\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    if (!this.#client) {\n      throw new Error(\n        'No `client` passed to patch, either provide one or pass the ' +\n          'patch to a clients `mutate()` method',\n      )\n    }\n\n    const returnFirst = typeof this.selection === 'string'\n    const opts = Object.assign({returnFirst, returnDocuments: true}, options)\n    return this.#client.mutate<R>({patch: this.serialize()} as Any, opts)\n  }\n}\n\n/** @public */\nexport class Patch extends BasePatch {\n  #client?: SanityClient\n  constructor(selection: PatchSelection, operations?: PatchOperations, client?: SanityClient) {\n    super(selection, operations)\n    this.#client = client\n  }\n\n  /**\n   * Clones the patch\n   */\n  clone(): Patch {\n    return new Patch(this.selection, {...this.operations}, this.#client)\n  }\n\n  /**\n   * Commit the patch, returning a promise that resolves to the first patched document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options: FirstDocumentMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Commit the patch, returning a promise that resolves to an array of the mutated documents\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options: AllDocumentsMutationOptions,\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Commit the patch, returning a promise that resolves to a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: FirstDocumentIdMutationOptions): Promise<SingleMutationResult>\n  /**\n   * Commit the patch, returning a promise that resolves to a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: AllDocumentIdsMutationOptions): Promise<MultipleMutationResult>\n  /**\n   * Commit the patch, returning a promise that resolves to the first patched document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?: BaseMutationOptions,\n  ): Promise<SanityDocument<R>>\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?:\n      | FirstDocumentMutationOptions\n      | AllDocumentsMutationOptions\n      | FirstDocumentIdMutationOptions\n      | AllDocumentIdsMutationOptions\n      | BaseMutationOptions,\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    if (!this.#client) {\n      throw new Error(\n        'No `client` passed to patch, either provide one or pass the ' +\n          'patch to a clients `mutate()` method',\n      )\n    }\n\n    const returnFirst = typeof this.selection === 'string'\n    const opts = Object.assign({returnFirst, returnDocuments: true}, options)\n    return this.#client.mutate<R>({patch: this.serialize()} as Any, opts)\n  }\n}\n","import type {Observable} from 'rxjs'\n\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {\n  Any,\n  BaseMutationOptions,\n  IdentifiedSanityDocumentStub,\n  MultipleMutationResult,\n  Mutation,\n  MutationSelection,\n  PatchOperations,\n  SanityDocument,\n  SanityDocumentStub,\n  SingleMutationResult,\n  TransactionAllDocumentIdsMutationOptions,\n  TransactionAllDocumentsMutationOptions,\n  TransactionFirstDocumentIdMutationOptions,\n  TransactionFirstDocumentMutationOptions,\n} from '../types'\nimport * as validators from '../validators'\nimport {ObservablePatch, Patch} from './patch'\n\n/** @public */\nexport type PatchBuilder = (patch: Patch) => Patch\n/** @public */\nexport type ObservablePatchBuilder = (patch: ObservablePatch) => ObservablePatch\n\nconst defaultMutateOptions = {returnDocuments: false}\n\n/** @internal */\nexport class BaseTransaction {\n  protected operations: Mutation[]\n  protected trxId?: string\n  constructor(operations: Mutation[] = [], transactionId?: string) {\n    this.operations = operations\n    this.trxId = transactionId\n  }\n  /**\n   * Creates a new Sanity document. If `_id` is provided and already exists, the mutation will fail. If no `_id` is given, one will automatically be generated by the database.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create. Requires a `_type` property.\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(doc: SanityDocumentStub<R>): this {\n    validators.validateObject('create', doc)\n    return this._add({create: doc})\n  }\n\n  /**\n   * Creates a new Sanity document. If a document with the same `_id` already exists, the create operation will be ignored.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create if it does not already exist. Requires `_id` and `_type` properties.\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    doc: IdentifiedSanityDocumentStub<R>,\n  ): this {\n    const op = 'createIfNotExists'\n    validators.validateObject(op, doc)\n    validators.requireDocumentId(op, doc)\n    return this._add({[op]: doc})\n  }\n\n  /**\n   * Creates a new Sanity document, or replaces an existing one if the same `_id` is already used.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create or replace. Requires `_id` and `_type` properties.\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    doc: IdentifiedSanityDocumentStub<R>,\n  ): this {\n    const op = 'createOrReplace'\n    validators.validateObject(op, doc)\n    validators.requireDocumentId(op, doc)\n    return this._add({[op]: doc})\n  }\n\n  /**\n   * Deletes the document with the given document ID\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to delete\n   */\n  delete(documentId: string): this {\n    validators.validateDocumentId('delete', documentId)\n    return this._add({delete: {id: documentId}})\n  }\n\n  /**\n   * Gets the current transaction ID, if any\n   */\n  transactionId(): string | undefined\n  /**\n   * Set the ID of this transaction.\n   *\n   * @param id - Transaction ID\n   */\n  transactionId(id: string): this\n  transactionId(id?: string): this | string | undefined {\n    if (!id) {\n      return this.trxId\n    }\n\n    this.trxId = id\n    return this\n  }\n\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  serialize(): Mutation[] {\n    return [...this.operations]\n  }\n\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  toJSON(): Mutation[] {\n    return this.serialize()\n  }\n\n  /**\n   * Clears the transaction of all operations\n   */\n  reset(): this {\n    this.operations = []\n    return this\n  }\n\n  protected _add(mut: Mutation): this {\n    this.operations.push(mut)\n    return this\n  }\n}\n\n/** @public */\nexport class Transaction extends BaseTransaction {\n  #client?: SanityClient\n  constructor(operations?: Mutation[], client?: SanityClient, transactionId?: string) {\n    super(operations, transactionId)\n    this.#client = client\n  }\n\n  /**\n   * Clones the transaction\n   */\n  clone(): Transaction {\n    return new Transaction([...this.operations], this.#client, this.trxId)\n  }\n\n  /**\n   * Commit the transaction, returning a promise that resolves to the first mutated document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any>>(\n    options: TransactionFirstDocumentMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Commit the transaction, returning a promise that resolves to an array of the mutated documents\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any>>(\n    options: TransactionAllDocumentsMutationOptions,\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Commit the transaction, returning a promise that resolves to a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: TransactionFirstDocumentIdMutationOptions): Promise<SingleMutationResult>\n  /**\n   * Commit the transaction, returning a promise that resolves to a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: TransactionAllDocumentIdsMutationOptions): Promise<MultipleMutationResult>\n  /**\n   * Commit the transaction, returning a promise that resolves to a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options?: BaseMutationOptions): Promise<MultipleMutationResult>\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?:\n      | TransactionFirstDocumentMutationOptions\n      | TransactionAllDocumentsMutationOptions\n      | TransactionFirstDocumentIdMutationOptions\n      | TransactionAllDocumentIdsMutationOptions\n      | BaseMutationOptions,\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    if (!this.#client) {\n      throw new Error(\n        'No `client` passed to transaction, either provide one or pass the ' +\n          'transaction to a clients `mutate()` method',\n      )\n    }\n\n    return this.#client.mutate<R>(\n      this.serialize() as Any,\n      Object.assign({transactionId: this.trxId}, defaultMutateOptions, options || {}),\n    )\n  }\n\n  /**\n   * Performs a patch on the given document ID. Can either be a builder function or an object of patch operations.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to perform the patch operation on\n   * @param patchOps - Operations to perform, or a builder function\n   */\n  patch(documentId: string, patchOps?: PatchBuilder | PatchOperations): this\n  /**\n   * Performs a patch on the given selection. Can either be a builder function or an object of patch operations.\n   *\n   * @param selection - An object with `query` and optional `params`, defining which document(s) to patch\n   * @param patchOps - Operations to perform, or a builder function\n   */\n  patch(patch: MutationSelection, patchOps?: PatchBuilder | PatchOperations): this\n  /**\n   * Adds the given patch instance to the transaction.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param patch - Patch to execute\n   */\n  patch(patch: Patch): this\n  patch(\n    patchOrDocumentId: Patch | MutationSelection | string,\n    patchOps?: PatchBuilder | PatchOperations,\n  ): this {\n    const isBuilder = typeof patchOps === 'function'\n    const isPatch = typeof patchOrDocumentId !== 'string' && patchOrDocumentId instanceof Patch\n    const isMutationSelection =\n      typeof patchOrDocumentId === 'object' &&\n      ('query' in patchOrDocumentId || 'id' in patchOrDocumentId)\n\n    // transaction.patch(client.patch('documentId').inc({visits: 1}))\n    if (isPatch) {\n      return this._add({patch: patchOrDocumentId.serialize()})\n    }\n\n    // patch => patch.inc({visits: 1}).set({foo: 'bar'})\n    if (isBuilder) {\n      const patch = patchOps(new Patch(patchOrDocumentId, {}, this.#client))\n      if (!(patch instanceof Patch)) {\n        throw new Error('function passed to `patch()` must return the patch')\n      }\n\n      return this._add({patch: patch.serialize()})\n    }\n\n    /**\n     * transaction.patch(\n     *   {query: \"*[_type == 'person' && points >= $threshold]\", params: { threshold: 100 }},\n     *   {dec: { points: 100 }, inc: { bonuses: 1 }}\n     * )\n     */\n    if (isMutationSelection) {\n      const patch = new Patch(patchOrDocumentId, patchOps || {}, this.#client)\n      return this._add({patch: patch.serialize()})\n    }\n\n    return this._add({patch: {id: patchOrDocumentId, ...patchOps}})\n  }\n}\n\n/** @public */\nexport class ObservableTransaction extends BaseTransaction {\n  #client?: ObservableSanityClient\n  constructor(operations?: Mutation[], client?: ObservableSanityClient, transactionId?: string) {\n    super(operations, transactionId)\n    this.#client = client\n  }\n\n  /**\n   * Clones the transaction\n   */\n  clone(): ObservableTransaction {\n    return new ObservableTransaction([...this.operations], this.#client, this.trxId)\n  }\n\n  /**\n   * Commit the transaction, returning an observable that produces the first mutated document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any>>(\n    options: TransactionFirstDocumentMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Commit the transaction, returning an observable that produces an array of the mutated documents\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any>>(\n    options: TransactionAllDocumentsMutationOptions,\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Commit the transaction, returning an observable that produces a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: TransactionFirstDocumentIdMutationOptions): Observable<SingleMutationResult>\n  /**\n   * Commit the transaction, returning an observable that produces a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: TransactionAllDocumentIdsMutationOptions): Observable<MultipleMutationResult>\n  /**\n   * Commit the transaction, returning an observable that produces a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options?: BaseMutationOptions): Observable<MultipleMutationResult>\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?:\n      | TransactionFirstDocumentMutationOptions\n      | TransactionAllDocumentsMutationOptions\n      | TransactionFirstDocumentIdMutationOptions\n      | TransactionAllDocumentIdsMutationOptions\n      | BaseMutationOptions,\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    if (!this.#client) {\n      throw new Error(\n        'No `client` passed to transaction, either provide one or pass the ' +\n          'transaction to a clients `mutate()` method',\n      )\n    }\n\n    return this.#client.mutate<R>(\n      this.serialize() as Any,\n      Object.assign({transactionId: this.trxId}, defaultMutateOptions, options || {}),\n    )\n  }\n\n  /**\n   * Performs a patch on the given document ID. Can either be a builder function or an object of patch operations.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to perform the patch operation on\n   * @param patchOps - Operations to perform, or a builder function\n   */\n  patch(documentId: string, patchOps?: ObservablePatchBuilder | PatchOperations): this\n  /**\n   * Adds the given patch instance to the transaction.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param patch - ObservablePatch to execute\n   */\n  patch(patch: ObservablePatch): this\n  patch(\n    patchOrDocumentId: ObservablePatch | string,\n    patchOps?: ObservablePatchBuilder | PatchOperations,\n  ): this {\n    const isBuilder = typeof patchOps === 'function'\n    const isPatch =\n      typeof patchOrDocumentId !== 'string' && patchOrDocumentId instanceof ObservablePatch\n\n    // transaction.patch(client.patch('documentId').inc({visits: 1}))\n    if (isPatch) {\n      return this._add({patch: patchOrDocumentId.serialize()})\n    }\n\n    // patch => patch.inc({visits: 1}).set({foo: 'bar'})\n    if (isBuilder) {\n      const patch = patchOps(new ObservablePatch(patchOrDocumentId, {}, this.#client))\n      if (!(patch instanceof ObservablePatch)) {\n        throw new Error('function passed to `patch()` must return the patch')\n      }\n\n      return this._add({patch: patch.serialize()})\n    }\n\n    return this._add({patch: {id: patchOrDocumentId, ...patchOps}})\n  }\n}\n","import type {RequestOptions} from 'get-it'\n\nimport type {Any} from '../types'\n\nconst projectHeader = 'X-Sanity-Project-ID'\n\nexport function requestOptions(config: Any, overrides: Any = {}): Omit<RequestOptions, 'url'> {\n  const headers: Any = {}\n\n  const token = overrides.token || config.token\n  if (token) {\n    headers.Authorization = `Bearer ${token}`\n  }\n\n  if (!overrides.useGlobalApi && !config.useProjectHostname && config.projectId) {\n    headers[projectHeader] = config.projectId\n  }\n\n  const withCredentials = Boolean(\n    typeof overrides.withCredentials === 'undefined'\n      ? config.token || config.withCredentials\n      : overrides.withCredentials,\n  )\n\n  const timeout = typeof overrides.timeout === 'undefined' ? config.timeout : overrides.timeout\n  return Object.assign({}, overrides, {\n    headers: Object.assign({}, headers, overrides.headers || {}),\n    timeout: typeof timeout === 'undefined' ? 5 * 60 * 1000 : timeout,\n    proxy: overrides.proxy || config.proxy,\n    json: true,\n    withCredentials,\n    fetch:\n      typeof overrides.fetch === 'object' && typeof config.fetch === 'object'\n        ? {...config.fetch, ...overrides.fetch}\n        : overrides.fetch || config.fetch,\n  })\n}\n","import type {Any, ListenParams, QueryParams} from '../types'\n\nexport const encodeQueryString = ({\n  query,\n  params = {},\n  options = {},\n}: {\n  query: string\n  params?: ListenParams | QueryParams\n  options?: Any\n}) => {\n  const searchParams = new URLSearchParams()\n  // We generally want tag at the start of the query string\n  const {tag, includeMutations, returnQuery, ...opts} = options\n  // We're using `append` instead of `set` to support React Native: https://github.com/facebook/react-native/blob/1982c4722fcc51aa87e34cf562672ee4aff540f1/packages/react-native/Libraries/Blob/URL.js#L86-L88\n  if (tag) searchParams.append('tag', tag)\n  searchParams.append('query', query)\n\n  // Iterate params, the keys are prefixed with `$` and their values JSON stringified\n  for (const [key, value] of Object.entries(params)) {\n    searchParams.append(`$${key}`, JSON.stringify(value))\n  }\n  // Options are passed as-is\n  for (const [key, value] of Object.entries(opts)) {\n    // Skip falsy values\n    if (value) searchParams.append(key, `${value}`)\n  }\n\n  // `returnQuery` is default `true`, so needs an explicit `false` handling\n  if (returnQuery === false) searchParams.append('returnQuery', 'false')\n\n  // `includeMutations` is default `true`, so needs an explicit `false` handling\n  if (includeMutations === false) searchParams.append('includeMutations', 'false')\n\n  return `?${searchParams}`\n}\n","import {from, type MonoTypeOperatorFunction, Observable} from 'rxjs'\nimport {combineLatestWith, filter, map} from 'rxjs/operators'\n\nimport {validateApiPerspective} from '../config'\nimport {requestOptions} from '../http/requestOptions'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport {stegaClean} from '../stega/stegaClean'\nimport type {\n  Action,\n  AllDocumentIdsMutationOptions,\n  AllDocumentsMutationOptions,\n  Any,\n  BaseActionOptions,\n  BaseMutationOptions,\n  FirstDocumentIdMutationOptions,\n  FirstDocumentMutationOptions,\n  HttpRequest,\n  HttpRequestEvent,\n  IdentifiedSanityDocumentStub,\n  InitializedStegaConfig,\n  MultipleActionResult,\n  MultipleMutationResult,\n  Mutation,\n  MutationSelection,\n  QueryOptions,\n  RawQueryResponse,\n  RequestObservableOptions,\n  RequestOptions,\n  SanityDocument,\n  SingleActionResult,\n  SingleMutationResult,\n} from '../types'\nimport {getSelection} from '../util/getSelection'\nimport * as validate from '../validators'\nimport * as validators from '../validators'\nimport {printCdnPreviewDraftsWarning, printPreviewDraftsDeprecationWarning} from '../warnings'\nimport {encodeQueryString} from './encodeQueryString'\nimport {ObservablePatch, Patch} from './patch'\nimport {ObservableTransaction, Transaction} from './transaction'\n\nconst excludeFalsey = (param: Any, defValue: Any) => {\n  const value = typeof param === 'undefined' ? defValue : param\n  return param === false ? undefined : value\n}\n\nconst getMutationQuery = (options: BaseMutationOptions = {}) => {\n  return {\n    dryRun: options.dryRun,\n    returnIds: true,\n    returnDocuments: excludeFalsey(options.returnDocuments, true),\n    visibility: options.visibility || 'sync',\n    autoGenerateArrayKeys: options.autoGenerateArrayKeys,\n    skipCrossDatasetReferenceValidation: options.skipCrossDatasetReferenceValidation,\n  }\n}\n\nconst isResponse = (event: Any) => event.type === 'response'\nconst getBody = (event: Any) => event.body\n\nconst indexBy = (docs: Any[], attr: Any) =>\n  docs.reduce((indexed, doc) => {\n    indexed[attr(doc)] = doc\n    return indexed\n  }, Object.create(null))\n\nconst getQuerySizeLimit = 11264\n\n/** @internal */\nexport function _fetch<R, Q>(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  _stega: InitializedStegaConfig,\n  query: string,\n  _params: Q = {} as Q,\n  options: QueryOptions = {},\n): Observable<RawQueryResponse<R> | R> {\n  const stega =\n    'stega' in options\n      ? {\n          ...(_stega || {}),\n          ...(typeof options.stega === 'boolean' ? {enabled: options.stega} : options.stega || {}),\n        }\n      : _stega\n  const params = stega.enabled ? stegaClean(_params) : _params\n  const mapResponse =\n    options.filterResponse === false ? (res: Any) => res : (res: Any) => res.result\n\n  const {cache, next, ...opts} = {\n    // Opt out of setting a `signal` on an internal `fetch` if one isn't provided.\n    // This is necessary in React Server Components to avoid opting out of Request Memoization.\n    useAbortSignal: typeof options.signal !== 'undefined',\n    // Set `resultSourceMap' when stega is enabled, as it's required for encoding.\n    resultSourceMap: stega.enabled ? 'withKeyArraySelector' : options.resultSourceMap,\n    ...options,\n    // Default to not returning the query, unless `filterResponse` is `false`,\n    // or `returnQuery` is explicitly set. `true` is the default in Content Lake, so skip if truthy\n    returnQuery: options.filterResponse === false && options.returnQuery !== false,\n  }\n  const reqOpts =\n    typeof cache !== 'undefined' || typeof next !== 'undefined'\n      ? {...opts, fetch: {cache, next}}\n      : opts\n\n  const $request = _dataRequest(client, httpRequest, 'query', {query, params}, reqOpts)\n  return stega.enabled\n    ? $request.pipe(\n        combineLatestWith(\n          from(\n            import('../stega/stegaEncodeSourceMap').then(\n              ({stegaEncodeSourceMap}) => stegaEncodeSourceMap,\n            ),\n          ),\n        ),\n        map(\n          ([res, stegaEncodeSourceMap]: [\n            Any,\n            (typeof import('../stega/stegaEncodeSourceMap'))['stegaEncodeSourceMap'],\n          ]) => {\n            const result = stegaEncodeSourceMap(res.result, res.resultSourceMap, stega)\n            return mapResponse({...res, result})\n          },\n        ),\n      )\n    : $request.pipe(map(mapResponse))\n}\n\n/** @internal */\nexport function _getDocument<R extends Record<string, Any>>(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  id: string,\n  opts: {signal?: AbortSignal; tag?: string} = {},\n): Observable<SanityDocument<R> | undefined> {\n  const options = {\n    uri: _getDataUrl(client, 'doc', id),\n    json: true,\n    tag: opts.tag,\n    signal: opts.signal,\n  }\n  return _requestObservable<SanityDocument<R> | undefined>(client, httpRequest, options).pipe(\n    filter(isResponse),\n    map((event) => event.body.documents && event.body.documents[0]),\n  )\n}\n\n/** @internal */\nexport function _getDocuments<R extends Record<string, Any>>(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  ids: string[],\n  opts: {signal?: AbortSignal; tag?: string} = {},\n): Observable<(SanityDocument<R> | null)[]> {\n  const options = {\n    uri: _getDataUrl(client, 'doc', ids.join(',')),\n    json: true,\n    tag: opts.tag,\n    signal: opts.signal,\n  }\n  return _requestObservable<(SanityDocument<R> | null)[]>(client, httpRequest, options).pipe(\n    filter(isResponse),\n    map((event: Any) => {\n      const indexed = indexBy(event.body.documents || [], (doc: Any) => doc._id)\n      return ids.map((id) => indexed[id] || null)\n    }),\n  )\n}\n\n/** @internal */\nexport function _createIfNotExists<R extends Record<string, Any>>(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  doc: IdentifiedSanityDocumentStub<R>,\n  options?:\n    | AllDocumentIdsMutationOptions\n    | AllDocumentsMutationOptions\n    | BaseMutationOptions\n    | FirstDocumentIdMutationOptions\n    | FirstDocumentMutationOptions,\n): Observable<\n  SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n> {\n  validators.requireDocumentId('createIfNotExists', doc)\n  return _create<R>(client, httpRequest, doc, 'createIfNotExists', options)\n}\n\n/** @internal */\nexport function _createOrReplace<R extends Record<string, Any>>(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  doc: IdentifiedSanityDocumentStub<R>,\n  options?:\n    | AllDocumentIdsMutationOptions\n    | AllDocumentsMutationOptions\n    | BaseMutationOptions\n    | FirstDocumentIdMutationOptions\n    | FirstDocumentMutationOptions,\n): Observable<\n  SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n> {\n  validators.requireDocumentId('createOrReplace', doc)\n  return _create<R>(client, httpRequest, doc, 'createOrReplace', options)\n}\n\n/** @internal */\nexport function _delete<R extends Record<string, Any>>(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  selection: string | MutationSelection,\n  options?:\n    | AllDocumentIdsMutationOptions\n    | AllDocumentsMutationOptions\n    | BaseMutationOptions\n    | FirstDocumentIdMutationOptions\n    | FirstDocumentMutationOptions,\n): Observable<\n  SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n> {\n  return _dataRequest(\n    client,\n    httpRequest,\n    'mutate',\n    {mutations: [{delete: getSelection(selection)}]},\n    options,\n  )\n}\n\n/** @internal */\nexport function _mutate<R extends Record<string, Any>>(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  mutations: Mutation<R>[] | Patch | ObservablePatch | Transaction | ObservableTransaction,\n  options?:\n    | AllDocumentIdsMutationOptions\n    | AllDocumentsMutationOptions\n    | BaseMutationOptions\n    | FirstDocumentIdMutationOptions\n    | FirstDocumentMutationOptions,\n): Observable<\n  SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n> {\n  let mut: Mutation | Mutation[]\n  if (mutations instanceof Patch || mutations instanceof ObservablePatch) {\n    mut = {patch: mutations.serialize()}\n  } else if (mutations instanceof Transaction || mutations instanceof ObservableTransaction) {\n    mut = mutations.serialize()\n  } else {\n    mut = mutations\n  }\n\n  const muts = Array.isArray(mut) ? mut : [mut]\n  const transactionId = (options && options.transactionId) || undefined\n  return _dataRequest(client, httpRequest, 'mutate', {mutations: muts, transactionId}, options)\n}\n\n/**\n * @internal\n */\nexport function _action(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  actions: Action | Action[],\n  options?: BaseActionOptions,\n): Observable<SingleActionResult | MultipleActionResult> {\n  const acts = Array.isArray(actions) ? actions : [actions]\n  const transactionId = (options && options.transactionId) || undefined\n  const skipCrossDatasetReferenceValidation =\n    (options && options.skipCrossDatasetReferenceValidation) || undefined\n  const dryRun = (options && options.dryRun) || undefined\n\n  return _dataRequest(\n    client,\n    httpRequest,\n    'actions',\n    {actions: acts, transactionId, skipCrossDatasetReferenceValidation, dryRun},\n    options,\n  )\n}\n\n/**\n * @internal\n */\nexport function _dataRequest(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  endpoint: string,\n  body: Any,\n  options: Any = {},\n): Any {\n  const isMutation = endpoint === 'mutate'\n  const isAction = endpoint === 'actions'\n  const isQuery = endpoint === 'query'\n\n  // Check if the query string is within a configured threshold,\n  // in which case we can use GET. Otherwise, use POST.\n  const strQuery = isMutation || isAction ? '' : encodeQueryString(body)\n  const useGet = !isMutation && !isAction && strQuery.length < getQuerySizeLimit\n  const stringQuery = useGet ? strQuery : ''\n  const returnFirst = options.returnFirst\n  const {timeout, token, tag, headers, returnQuery, lastLiveEventId, cacheMode} = options\n\n  const uri = _getDataUrl(client, endpoint, stringQuery)\n\n  const reqOptions = {\n    method: useGet ? 'GET' : 'POST',\n    uri: uri,\n    json: true,\n    body: useGet ? undefined : body,\n    query: isMutation && getMutationQuery(options),\n    timeout,\n    headers,\n    token,\n    tag,\n    returnQuery,\n    perspective: options.perspective,\n    resultSourceMap: options.resultSourceMap,\n    lastLiveEventId: Array.isArray(lastLiveEventId) ? lastLiveEventId[0] : lastLiveEventId,\n    cacheMode: cacheMode,\n    canUseCdn: isQuery,\n    signal: options.signal,\n    fetch: options.fetch,\n    useAbortSignal: options.useAbortSignal,\n    useCdn: options.useCdn,\n  }\n\n  return _requestObservable(client, httpRequest, reqOptions).pipe(\n    filter(isResponse),\n    map(getBody),\n    map((res) => {\n      if (!isMutation) {\n        return res\n      }\n\n      // Should we return documents?\n      const results = res.results || []\n      if (options.returnDocuments) {\n        return returnFirst\n          ? results[0] && results[0].document\n          : results.map((mut: Any) => mut.document)\n      }\n\n      // Return a reduced subset\n      const key = returnFirst ? 'documentId' : 'documentIds'\n      const ids = returnFirst ? results[0] && results[0].id : results.map((mut: Any) => mut.id)\n      return {\n        transactionId: res.transactionId,\n        results: results,\n        [key]: ids,\n      }\n    }),\n  )\n}\n\n/**\n * @internal\n */\nexport function _create<R extends Record<string, Any>>(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  doc: Any,\n  op: Any,\n  options: Any = {},\n): Observable<\n  SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n> {\n  const mutation = {[op]: doc}\n  const opts = Object.assign({returnFirst: true, returnDocuments: true}, options)\n  return _dataRequest(client, httpRequest, 'mutate', {mutations: [mutation]}, opts)\n}\n\n/**\n * @internal\n */\nexport function _requestObservable<R>(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  options: RequestObservableOptions,\n): Observable<HttpRequestEvent<R>> {\n  const uri = options.url || (options.uri as string)\n  const config = client.config()\n\n  // If the `canUseCdn`-option is not set we detect it automatically based on the method + URL.\n  // Only the /data endpoint is currently available through API-CDN.\n  const canUseCdn =\n    typeof options.canUseCdn === 'undefined'\n      ? ['GET', 'HEAD'].indexOf(options.method || 'GET') >= 0 && uri.indexOf('/data/') === 0\n      : options.canUseCdn\n\n  let useCdn = (options.useCdn ?? config.useCdn) && canUseCdn\n\n  const tag =\n    options.tag && config.requestTagPrefix\n      ? [config.requestTagPrefix, options.tag].join('.')\n      : options.tag || config.requestTagPrefix\n\n  if (tag && options.tag !== null) {\n    options.query = {tag: validate.requestTag(tag), ...options.query}\n  }\n\n  // GROQ query-only parameters\n  if (\n    ['GET', 'HEAD', 'POST'].indexOf(options.method || 'GET') >= 0 &&\n    uri.indexOf('/data/query/') === 0\n  ) {\n    const resultSourceMap = options.resultSourceMap ?? config.resultSourceMap\n    if (resultSourceMap !== undefined && resultSourceMap !== false) {\n      options.query = {resultSourceMap, ...options.query}\n    }\n    const perspectiveOption = options.perspective || config.perspective\n    if (typeof perspectiveOption !== 'undefined') {\n      if (perspectiveOption === 'previewDrafts') {\n        printPreviewDraftsDeprecationWarning()\n      }\n      validateApiPerspective(perspectiveOption)\n      options.query = {\n        perspective: Array.isArray(perspectiveOption)\n          ? perspectiveOption.join(',')\n          : perspectiveOption,\n        ...options.query,\n      }\n      // If the perspective is set to `drafts` or multiple perspectives we can't use the CDN, the API will throw\n      if (\n        ((Array.isArray(perspectiveOption) && perspectiveOption.length > 0) ||\n          // previewDrafts was renamed to drafts, but keep for backwards compat\n          perspectiveOption === 'previewDrafts' ||\n          perspectiveOption === 'drafts') &&\n        useCdn\n      ) {\n        useCdn = false\n        printCdnPreviewDraftsWarning()\n      }\n    }\n\n    if (options.lastLiveEventId) {\n      options.query = {...options.query, lastLiveEventId: options.lastLiveEventId}\n    }\n\n    if (options.returnQuery === false) {\n      options.query = {returnQuery: 'false', ...options.query}\n    }\n\n    if (useCdn && options.cacheMode == 'noStale') {\n      options.query = {cacheMode: 'noStale', ...options.query}\n    }\n  }\n\n  const reqOptions = requestOptions(\n    config,\n    Object.assign({}, options, {\n      url: _getUrl(client, uri, useCdn),\n    }),\n  ) as RequestOptions\n\n  const request = new Observable<HttpRequestEvent<R>>((subscriber) =>\n    httpRequest(reqOptions, config.requester!).subscribe(subscriber),\n  )\n\n  return options.signal ? request.pipe(_withAbortSignal(options.signal)) : request\n}\n\n/**\n * @internal\n */\nexport function _request<R>(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  options: Any,\n): Observable<R> {\n  const observable = _requestObservable<R>(client, httpRequest, options).pipe(\n    filter((event: Any) => event.type === 'response'),\n    map((event: Any) => event.body),\n  )\n\n  return observable\n}\n\n/**\n * @internal\n */\nexport function _getDataUrl(\n  client: SanityClient | ObservableSanityClient,\n  operation: string,\n  path?: string,\n): string {\n  const config = client.config()\n  const catalog = validators.hasDataset(config)\n  const baseUri = `/${operation}/${catalog}`\n  const uri = path ? `${baseUri}/${path}` : baseUri\n  return `/data${uri}`.replace(/\\/($|\\?)/, '$1')\n}\n\n/**\n * @internal\n */\nexport function _getUrl(\n  client: SanityClient | ObservableSanityClient,\n  uri: string,\n  canUseCdn = false,\n): string {\n  const {url, cdnUrl} = client.config()\n  const base = canUseCdn ? cdnUrl : url\n  return `${base}/${uri.replace(/^\\//, '')}`\n}\n\n/**\n * @internal\n */\nfunction _withAbortSignal<T>(signal: AbortSignal): MonoTypeOperatorFunction<T> {\n  return (input) => {\n    return new Observable((observer) => {\n      const abort = () => observer.error(_createAbortError(signal))\n\n      if (signal && signal.aborted) {\n        abort()\n        return\n      }\n      const subscription = input.subscribe(observer)\n      signal.addEventListener('abort', abort)\n      return () => {\n        signal.removeEventListener('abort', abort)\n        subscription.unsubscribe()\n      }\n    })\n  }\n}\n// DOMException is supported on most modern browsers and Node.js 18+.\n// @see https://developer.mozilla.org/en-US/docs/Web/API/DOMException#browser_compatibility\nconst isDomExceptionSupported = Boolean(globalThis.DOMException)\n\n/**\n * @internal\n * @param signal\n * Original source copied from https://github.com/sindresorhus/ky/blob/740732c78aad97e9aec199e9871bdbf0ae29b805/source/errors/DOMException.ts\n * TODO: When targeting Node.js 18, use `signal.throwIfAborted()` (https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/throwIfAborted)\n */\nfunction _createAbortError(signal?: AbortSignal) {\n  /*\n  NOTE: Use DomException with AbortError name as specified in MDN docs (https://developer.mozilla.org/en-US/docs/Web/API/AbortController/abort)\n  > When abort() is called, the fetch() promise rejects with an Error of type DOMException, with name AbortError.\n  */\n  if (isDomExceptionSupported) {\n    return new DOMException(signal?.reason ?? 'The operation was aborted.', 'AbortError')\n  }\n\n  // DOMException not supported. Fall back to use of error and override name.\n  const error = new Error(signal?.reason ?? 'The operation was aborted.')\n  error.name = 'AbortError'\n\n  return error\n}\n","import {lastValueFrom, type Observable} from 'rxjs'\nimport {filter, map} from 'rxjs/operators'\n\nimport {_requestObservable} from '../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {\n  Any,\n  HttpRequest,\n  HttpRequestEvent,\n  ResponseEvent,\n  SanityAssetDocument,\n  SanityImageAssetDocument,\n  UploadBody,\n  UploadClientConfig,\n} from '../types'\nimport * as validators from '../validators'\n\n/** @internal */\nexport class ObservableAssetsClient {\n  #client: ObservableSanityClient\n  #httpRequest: HttpRequest\n  constructor(client: ObservableSanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Uploads a file asset to the configured dataset\n   *\n   * @param assetType - Asset type (file)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'file',\n    body: UploadBody,\n    options?: UploadClientConfig,\n  ): Observable<HttpRequestEvent<{document: SanityAssetDocument}>>\n\n  /**\n   * Uploads an image asset to the configured dataset\n   *\n   * @param assetType - Asset type (image)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'image',\n    body: UploadBody,\n    options?: UploadClientConfig,\n  ): Observable<HttpRequestEvent<{document: SanityImageAssetDocument}>>\n  /**\n   * Uploads a file or an image asset to the configured dataset\n   *\n   * @param assetType - Asset type (file/image)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'file' | 'image',\n    body: UploadBody,\n    options?: UploadClientConfig,\n  ): Observable<HttpRequestEvent<{document: SanityAssetDocument | SanityImageAssetDocument}>>\n  upload(\n    assetType: 'file' | 'image',\n    body: UploadBody,\n    options?: UploadClientConfig,\n  ): Observable<HttpRequestEvent<{document: SanityAssetDocument | SanityImageAssetDocument}>> {\n    return _upload(this.#client, this.#httpRequest, assetType, body, options)\n  }\n}\n\n/** @internal */\nexport class AssetsClient {\n  #client: SanityClient\n  #httpRequest: HttpRequest\n  constructor(client: SanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Uploads a file asset to the configured dataset\n   *\n   * @param assetType - Asset type (file)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'file',\n    body: UploadBody,\n    options?: UploadClientConfig,\n  ): Promise<SanityAssetDocument>\n  /**\n   * Uploads an image asset to the configured dataset\n   *\n   * @param assetType - Asset type (image)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'image',\n    body: UploadBody,\n    options?: UploadClientConfig,\n  ): Promise<SanityImageAssetDocument>\n  /**\n   * Uploads a file or an image asset to the configured dataset\n   *\n   * @param assetType - Asset type (file/image)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'file' | 'image',\n    body: UploadBody,\n    options?: UploadClientConfig,\n  ): Promise<SanityAssetDocument | SanityImageAssetDocument>\n  upload(\n    assetType: 'file' | 'image',\n    body: UploadBody,\n    options?: UploadClientConfig,\n  ): Promise<SanityAssetDocument | SanityImageAssetDocument> {\n    const observable = _upload(this.#client, this.#httpRequest, assetType, body, options)\n    return lastValueFrom(\n      observable.pipe(\n        filter((event: Any) => event.type === 'response'),\n        map(\n          (event) =>\n            (event as ResponseEvent<{document: SanityAssetDocument | SanityImageAssetDocument}>)\n              .body.document,\n        ),\n      ),\n    )\n  }\n}\n\nfunction _upload(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  assetType: 'image' | 'file',\n  body: UploadBody,\n  opts: UploadClientConfig = {},\n): Observable<HttpRequestEvent<{document: SanityAssetDocument | SanityImageAssetDocument}>> {\n  validators.validateAssetType(assetType)\n\n  // If an empty array is given, explicitly set `none` to override API defaults\n  let meta = opts.extract || undefined\n  if (meta && !meta.length) {\n    meta = ['none']\n  }\n\n  const dataset = validators.hasDataset(client.config())\n  const assetEndpoint = assetType === 'image' ? 'images' : 'files'\n  const options = optionsFromFile(opts, body)\n  const {tag, label, title, description, creditLine, filename, source} = options\n  const query: Any = {\n    label,\n    title,\n    description,\n    filename,\n    meta,\n    creditLine,\n  }\n  if (source) {\n    query.sourceId = source.id\n    query.sourceName = source.name\n    query.sourceUrl = source.url\n  }\n  return _requestObservable(client, httpRequest, {\n    tag,\n    method: 'POST',\n    timeout: options.timeout || 0,\n    uri: `/assets/${assetEndpoint}/${dataset}`,\n    headers: options.contentType ? {'Content-Type': options.contentType} : {},\n    query,\n    body,\n  })\n}\n\nfunction optionsFromFile(opts: Record<string, Any>, file: Any) {\n  if (typeof File === 'undefined' || !(file instanceof File)) {\n    return opts\n  }\n\n  return Object.assign(\n    {\n      filename: opts.preserveFilename === false ? undefined : file.name,\n      contentType: file.type,\n    },\n    opts,\n  )\n}\n","import type {Any} from '../types'\n\nexport default (obj: Any, defaults: Any) =>\n  Object.keys(defaults)\n    .concat(Object.keys(obj))\n    .reduce((target, prop) => {\n      target[prop] = typeof obj[prop] === 'undefined' ? defaults[prop] : obj[prop]\n\n      return target\n    }, {} as Any)\n","import {type Any} from '../types'\n\nexport const pick = (obj: Any, props: Any) =>\n  props.reduce((selection: Any, prop: Any) => {\n    if (typeof obj[prop] === 'undefined') {\n      return selection\n    }\n\n    selection[prop] = obj[prop]\n    return selection\n  }, {})\n","import {defer, shareReplay} from 'rxjs'\nimport {map} from 'rxjs/operators'\n\nexport const eventSourcePolyfill = defer(() => import('@sanity/eventsource')).pipe(\n  map(({default: EventSource}) => EventSource as unknown as typeof globalThis.EventSource),\n  shareReplay(1),\n)\n","import {\n  catchError,\n  concat,\n  mergeMap,\n  Observable,\n  of,\n  type OperatorFunction,\n  throwError,\n  timer,\n} from 'rxjs'\n\nimport {ConnectionFailedError} from './eventsource'\n\n/**\n * Note: connection failure is not the same as network disconnect which may happen more frequent.\n * The EventSource instance will automatically reconnect in case of a network disconnect, however,\n * in some rare cases a ConnectionFailed Error will be thrown and this operator explicitly retries these\n */\nexport function reconnectOnConnectionFailure<T>(): OperatorFunction<T, T | {type: 'reconnect'}> {\n  return function (source: Observable<T>) {\n    return source.pipe(\n      catchError((err, caught) => {\n        if (err instanceof ConnectionFailedError) {\n          return concat(of({type: 'reconnect' as const}), timer(1000).pipe(mergeMap(() => caught)))\n        }\n        return throwError(() => err)\n      }),\n    )\n  }\n}\n","import {Observable, of, throwError} from 'rxjs'\nimport {filter, map} from 'rxjs/operators'\n\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport {\n  type Any,\n  type ListenEvent,\n  type ListenOptions,\n  type ListenParams,\n  type MutationEvent,\n} from '../types'\nimport defaults from '../util/defaults'\nimport {pick} from '../util/pick'\nimport {_getDataUrl} from './dataMethods'\nimport {encodeQueryString} from './encodeQueryString'\nimport {connectEventSource} from './eventsource'\nimport {eventSourcePolyfill} from './eventsourcePolyfill'\nimport {reconnectOnConnectionFailure} from './reconnectOnConnectionFailure'\n\n// Limit is 16K for a _request_, eg including headers. Have to account for an\n// unknown range of headers, but an average EventSource request from Chrome seems\n// to have around 700 bytes of cruft, so let us account for 1.2K to be \"safe\"\nconst MAX_URL_LENGTH = 16000 - 1200\n\nconst possibleOptions = [\n  'includePreviousRevision',\n  'includeResult',\n  'includeMutations',\n  'includeAllVersions',\n  'visibility',\n  'effectFormat',\n  'tag',\n]\n\nconst defaultOptions = {\n  includeResult: true,\n}\n\n/**\n * Set up a listener that will be notified when mutations occur on documents matching the provided query/filter.\n *\n * @param query - GROQ-filter to listen to changes for\n * @param params - Optional query parameters\n * @param options - Optional listener options\n * @public\n */\nexport function _listen<R extends Record<string, Any> = Record<string, Any>>(\n  this: SanityClient | ObservableSanityClient,\n  query: string,\n  params?: ListenParams,\n): Observable<MutationEvent<R>>\n/**\n * Set up a listener that will be notified when mutations occur on documents matching the provided query/filter.\n *\n * @param query - GROQ-filter to listen to changes for\n * @param params - Optional query parameters\n * @param options - Optional listener options\n * @public\n */\nexport function _listen<R extends Record<string, Any> = Record<string, Any>>(\n  this: SanityClient | ObservableSanityClient,\n  query: string,\n  params?: ListenParams,\n  options?: ListenOptions,\n): Observable<ListenEvent<R>>\n/** @public */\nexport function _listen<R extends Record<string, Any> = Record<string, Any>>(\n  this: SanityClient | ObservableSanityClient,\n  query: string,\n  params?: ListenParams,\n  opts: ListenOptions = {},\n): Observable<MutationEvent<R> | ListenEvent<R>> {\n  const {url, token, withCredentials, requestTagPrefix} = this.config()\n  const tag = opts.tag && requestTagPrefix ? [requestTagPrefix, opts.tag].join('.') : opts.tag\n  const options = {...defaults(opts, defaultOptions), tag}\n  const listenOpts = pick(options, possibleOptions)\n  const qs = encodeQueryString({query, params, options: {tag, ...listenOpts}})\n\n  const uri = `${url}${_getDataUrl(this, 'listen', qs)}`\n  if (uri.length > MAX_URL_LENGTH) {\n    return throwError(() => new Error('Query too large for listener'))\n  }\n\n  const listenFor = options.events ? options.events : ['mutation']\n\n  const esOptions: EventSourceInit & {headers?: Record<string, string>} = {}\n  if (token || withCredentials) {\n    esOptions.withCredentials = true\n  }\n\n  if (token) {\n    esOptions.headers = {\n      Authorization: `Bearer ${token}`,\n    }\n  }\n\n  const initEventSource = () =>\n    // use polyfill if there is no global EventSource or if we need to set headers\n    (typeof EventSource === 'undefined' || esOptions.headers\n      ? eventSourcePolyfill\n      : of(EventSource)\n    ).pipe(map((EventSource) => new EventSource(uri, esOptions)))\n\n  return connectEventSource(initEventSource, listenFor).pipe(\n    reconnectOnConnectionFailure(),\n    filter((event) => listenFor.includes(event.type)),\n    map(\n      (event) =>\n        ({\n          type: event.type,\n          ...('data' in event ? (event.data as object) : {}),\n        }) as MutationEvent<R> | ListenEvent<R>,\n    ),\n  )\n}\n","import {\n  finalize,\n  merge,\n  type MonoTypeOperatorFunction,\n  Observable,\n  share,\n  type ShareConfig,\n  tap,\n} from 'rxjs'\n\nexport type ShareReplayLatestConfig<T> = ShareConfig<T> & {predicate: (value: T) => boolean}\n\n/**\n * A variant of share that takes a predicate function to determine which value to replay to new subscribers\n * @param predicate - Predicate function to determine which value to replay\n */\nexport function shareReplayLatest<T>(predicate: (value: T) => boolean): MonoTypeOperatorFunction<T>\n\n/**\n * A variant of share that takes a predicate function to determine which value to replay to new subscribers\n * @param config - ShareConfig with additional predicate function\n */\nexport function shareReplayLatest<T>(\n  config: ShareReplayLatestConfig<T>,\n): MonoTypeOperatorFunction<T>\n\n/**\n * A variant of share that takes a predicate function to determine which value to replay to new subscribers\n * @param configOrPredicate - Predicate function to determine which value to replay\n * @param config - Optional ShareConfig\n */\nexport function shareReplayLatest<T>(\n  configOrPredicate: ShareReplayLatestConfig<T> | ShareReplayLatestConfig<T>['predicate'],\n  config?: ShareConfig<T>,\n) {\n  return _shareReplayLatest(\n    typeof configOrPredicate === 'function'\n      ? {predicate: configOrPredicate, ...config}\n      : configOrPredicate,\n  )\n}\nfunction _shareReplayLatest<T>(config: ShareReplayLatestConfig<T>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    let latest: T | undefined\n    let emitted = false\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const {predicate, ...shareConfig} = config\n\n    const wrapped = source.pipe(\n      tap((value) => {\n        if (config.predicate(value)) {\n          emitted = true\n          latest = value\n        }\n      }),\n      finalize(() => {\n        emitted = false\n        latest = undefined\n      }),\n      share(shareConfig),\n    )\n    const emitLatest = new Observable<T>((subscriber) => {\n      if (emitted) {\n        subscriber.next(latest)\n      }\n      subscriber.complete()\n    })\n    return merge(wrapped, emitLatest)\n  }\n}\n","import {catchError, concat, EMPTY, mergeMap, Observable, of} from 'rxjs'\nimport {finalize, map} from 'rxjs/operators'\n\nimport {CorsOriginError} from '../http/errors'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {\n  LiveEvent,\n  LiveEventMessage,\n  LiveEventReconnect,\n  LiveEventRestart,\n  LiveEventWelcome,\n  SyncTag,\n} from '../types'\nimport {shareReplayLatest} from '../util/shareReplayLatest'\nimport {_getDataUrl} from './dataMethods'\nimport {connectEventSource} from './eventsource'\nimport {eventSourcePolyfill} from './eventsourcePolyfill'\nimport {reconnectOnConnectionFailure} from './reconnectOnConnectionFailure'\n\nconst requiredApiVersion = '2021-03-25'\n\n/**\n * @public\n */\nexport class LiveClient {\n  #client: SanityClient | ObservableSanityClient\n  constructor(client: SanityClient | ObservableSanityClient) {\n    this.#client = client\n  }\n\n  /**\n   * Requires `apiVersion` to be `2021-03-25` or later.\n   */\n  events({\n    includeDrafts = false,\n    tag: _tag,\n  }: {\n    includeDrafts?: boolean\n    /**\n     * Optional request tag for the listener. Use to identify the request in logs.\n     *\n     * @defaultValue `undefined`\n     */\n    tag?: string\n  } = {}): Observable<LiveEvent> {\n    const {\n      projectId,\n      apiVersion: _apiVersion,\n      token,\n      withCredentials,\n      requestTagPrefix,\n    } = this.#client.config()\n    const apiVersion = _apiVersion.replace(/^v/, '')\n    if (apiVersion !== 'X' && apiVersion < requiredApiVersion) {\n      throw new Error(\n        `The live events API requires API version ${requiredApiVersion} or later. ` +\n          `The current API version is ${apiVersion}. ` +\n          `Please update your API version to use this feature.`,\n      )\n    }\n    if (includeDrafts && !token && !withCredentials) {\n      throw new Error(\n        `The live events API requires a token or withCredentials when 'includeDrafts: true'. Please update your client configuration. The token should have the lowest possible access role.`,\n      )\n    }\n    const path = _getDataUrl(this.#client, 'live/events')\n    const url = new URL(this.#client.getUrl(path, false))\n    const tag = _tag && requestTagPrefix ? [requestTagPrefix, _tag].join('.') : _tag\n    if (tag) {\n      url.searchParams.set('tag', tag)\n    }\n    if (includeDrafts) {\n      url.searchParams.set('includeDrafts', 'true')\n    }\n    const esOptions: EventSourceInit & {headers?: Record<string, string>} = {}\n    if (includeDrafts && token) {\n      esOptions.headers = {\n        Authorization: `Bearer ${token}`,\n      }\n    }\n    if (includeDrafts && withCredentials) {\n      esOptions.withCredentials = true\n    }\n\n    const key = `${url.href}::${JSON.stringify(esOptions)}`\n    const existing = eventsCache.get(key)\n\n    if (existing) {\n      return existing\n    }\n\n    const initEventSource = () =>\n      // use polyfill if there is no global EventSource or if we need to set headers\n      (typeof EventSource === 'undefined' || esOptions.headers\n        ? eventSourcePolyfill\n        : of(EventSource)\n      ).pipe(map((EventSource) => new EventSource(url.href, esOptions)))\n\n    const events = connectEventSource(initEventSource, [\n      'message',\n      'restart',\n      'welcome',\n      'reconnect',\n    ]).pipe(\n      reconnectOnConnectionFailure(),\n      map((event) => {\n        if (event.type === 'message') {\n          const {data, ...rest} = event\n          // Splat data properties from the eventsource message onto the returned event\n          return {...rest, tags: (data as {tags: SyncTag[]}).tags} as LiveEventMessage\n        }\n        return event as LiveEventRestart | LiveEventReconnect | LiveEventWelcome\n      }),\n    )\n\n    // Detect if CORS is allowed, the way the CORS is checked supports preflight caching, so when the EventSource boots up it knows it sees the preflight was already made and we're good to go\n    const checkCors = fetchObservable(url, {\n      method: 'OPTIONS',\n      mode: 'cors',\n      credentials: esOptions.withCredentials ? 'include' : 'omit',\n      headers: esOptions.headers,\n    }).pipe(\n      mergeMap(() => EMPTY),\n      catchError(() => {\n        // If the request fails, then we assume it was due to CORS, and we rethrow a special error that allows special handling in userland\n        throw new CorsOriginError({projectId: projectId!})\n      }),\n    )\n    const observable = concat(checkCors, events).pipe(\n      finalize(() => eventsCache.delete(key)),\n      shareReplayLatest({\n        predicate: (event) => event.type === 'welcome',\n      }),\n    )\n    eventsCache.set(key, observable)\n    return observable\n  }\n}\n\nfunction fetchObservable(url: URL, init: RequestInit) {\n  return new Observable((observer) => {\n    const controller = new AbortController()\n    const signal = controller.signal\n    fetch(url, {...init, signal: controller.signal}).then(\n      (response) => {\n        observer.next(response)\n        observer.complete()\n      },\n      (err) => {\n        if (!signal.aborted) {\n          observer.error(err)\n        }\n      },\n    )\n    return () => controller.abort()\n  })\n}\n\nconst eventsCache = new Map<string, Observable<LiveEvent>>()\n","import {lastValueFrom, type Observable} from 'rxjs'\n\nimport {_request} from '../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {DatasetAclMode, DatasetResponse, DatasetsResponse, HttpRequest} from '../types'\nimport * as validate from '../validators'\n\n/** @internal */\nexport class ObservableDatasetsClient {\n  #client: ObservableSanityClient\n  #httpRequest: HttpRequest\n  constructor(client: ObservableSanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name: string, options?: {aclMode?: DatasetAclMode}): Observable<DatasetResponse> {\n    return _modify<DatasetResponse>(this.#client, this.#httpRequest, 'PUT', name, options)\n  }\n\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name: string, options?: {aclMode?: DatasetAclMode}): Observable<DatasetResponse> {\n    return _modify<DatasetResponse>(this.#client, this.#httpRequest, 'PATCH', name, options)\n  }\n\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name: string): Observable<{deleted: true}> {\n    return _modify<{deleted: true}>(this.#client, this.#httpRequest, 'DELETE', name)\n  }\n\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list(): Observable<DatasetsResponse> {\n    return _request<DatasetsResponse>(this.#client, this.#httpRequest, {\n      uri: '/datasets',\n      tag: null,\n    })\n  }\n}\n\n/** @internal */\nexport class DatasetsClient {\n  #client: SanityClient\n  #httpRequest: HttpRequest\n  constructor(client: SanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name: string, options?: {aclMode?: DatasetAclMode}): Promise<DatasetResponse> {\n    return lastValueFrom(\n      _modify<DatasetResponse>(this.#client, this.#httpRequest, 'PUT', name, options),\n    )\n  }\n\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name: string, options?: {aclMode?: DatasetAclMode}): Promise<DatasetResponse> {\n    return lastValueFrom(\n      _modify<DatasetResponse>(this.#client, this.#httpRequest, 'PATCH', name, options),\n    )\n  }\n\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name: string): Promise<{deleted: true}> {\n    return lastValueFrom(_modify<{deleted: true}>(this.#client, this.#httpRequest, 'DELETE', name))\n  }\n\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list(): Promise<DatasetsResponse> {\n    return lastValueFrom(\n      _request<DatasetsResponse>(this.#client, this.#httpRequest, {uri: '/datasets', tag: null}),\n    )\n  }\n}\n\nfunction _modify<R = unknown>(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  method: 'DELETE' | 'PATCH' | 'PUT',\n  name: string,\n  options?: {aclMode?: DatasetAclMode},\n) {\n  validate.dataset(name)\n  return _request<R>(client, httpRequest, {\n    method,\n    uri: `/datasets/${name}`,\n    body: options,\n    tag: null,\n  })\n}\n","import {lastValueFrom, type Observable} from 'rxjs'\n\nimport {_request} from '../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {HttpRequest, SanityProject} from '../types'\n\n/** @internal */\nexport class ObservableProjectsClient {\n  #client: ObservableSanityClient\n  #httpRequest: HttpRequest\n  constructor(client: ObservableSanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Fetch a list of projects the authenticated user has access to.\n   *\n   * @param options - Options for the list request\n   * @param options.includeMembers - Whether to include members in the response (default: true)\n   */\n  list(options?: {includeMembers?: true}): Observable<SanityProject[]>\n  list(options?: {includeMembers?: false}): Observable<Omit<SanityProject, 'members'>[]>\n  list(options?: {\n    includeMembers?: boolean\n  }): Observable<SanityProject[] | Omit<SanityProject, 'members'>[]> {\n    const uri = options?.includeMembers === false ? '/projects?includeMembers=false' : '/projects'\n    return _request<SanityProject[]>(this.#client, this.#httpRequest, {uri})\n  }\n\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId: string): Observable<SanityProject> {\n    return _request<SanityProject>(this.#client, this.#httpRequest, {uri: `/projects/${projectId}`})\n  }\n}\n\n/** @internal */\nexport class ProjectsClient {\n  #client: SanityClient\n  #httpRequest: HttpRequest\n  constructor(client: SanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Fetch a list of projects the authenticated user has access to.\n   *\n   * @param options - Options for the list request\n   * @param options.includeMembers - Whether to include members in the response (default: true)\n   */\n  list(options?: {includeMembers?: true}): Promise<SanityProject[]>\n  list(options?: {includeMembers?: false}): Promise<Omit<SanityProject, 'members'>[]>\n  list(options?: {includeMembers?: boolean}): Promise<SanityProject[]> {\n    const uri = options?.includeMembers === false ? '/projects?includeMembers=false' : '/projects'\n    return lastValueFrom(_request<SanityProject[]>(this.#client, this.#httpRequest, {uri}))\n  }\n\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId: string): Promise<SanityProject> {\n    return lastValueFrom(\n      _request<SanityProject>(this.#client, this.#httpRequest, {uri: `/projects/${projectId}`}),\n    )\n  }\n}\n","import {lastValueFrom, type Observable} from 'rxjs'\n\nimport {_request} from '../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {CurrentSanityUser, HttpRequest, SanityUser} from '../types'\n\n/** @public */\nexport class ObservableUsersClient {\n  #client: ObservableSanityClient\n  #httpRequest: HttpRequest\n  constructor(client: ObservableSanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById<T extends 'me' | string>(\n    id: T,\n  ): Observable<T extends 'me' ? CurrentSanityUser : SanityUser> {\n    return _request<T extends 'me' ? CurrentSanityUser : SanityUser>(\n      this.#client,\n      this.#httpRequest,\n      {uri: `/users/${id}`},\n    )\n  }\n}\n\n/** @public */\nexport class UsersClient {\n  #client: SanityClient\n  #httpRequest: HttpRequest\n  constructor(client: SanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById<T extends 'me' | string>(\n    id: T,\n  ): Promise<T extends 'me' ? CurrentSanityUser : SanityUser> {\n    return lastValueFrom(\n      _request<T extends 'me' ? CurrentSanityUser : SanityUser>(this.#client, this.#httpRequest, {\n        uri: `/users/${id}`,\n      }),\n    )\n  }\n}\n","import {lastValueFrom, Observable} from 'rxjs'\n\nimport {AssetsClient, ObservableAssetsClient} from './assets/AssetsClient'\nimport {defaultConfig, initConfig} from './config'\nimport * as dataMethods from './data/dataMethods'\nimport {_listen} from './data/listen'\nimport {LiveClient} from './data/live'\nimport {ObservablePatch, Patch} from './data/patch'\nimport {ObservableTransaction, Transaction} from './data/transaction'\nimport {DatasetsClient, ObservableDatasetsClient} from './datasets/DatasetsClient'\nimport {ObservableProjectsClient, ProjectsClient} from './projects/ProjectsClient'\nimport type {\n  Action,\n  AllDocumentIdsMutationOptions,\n  AllDocumentsMutationOptions,\n  Any,\n  BaseActionOptions,\n  BaseMutationOptions,\n  ClientConfig,\n  ClientReturn,\n  FilteredResponseQueryOptions,\n  FirstDocumentIdMutationOptions,\n  FirstDocumentMutationOptions,\n  HttpRequest,\n  IdentifiedSanityDocumentStub,\n  InitializedClientConfig,\n  MultipleActionResult,\n  MultipleMutationResult,\n  Mutation,\n  MutationSelection,\n  PatchOperations,\n  PatchSelection,\n  QueryOptions,\n  QueryParams,\n  QueryWithoutParams,\n  RawQuerylessQueryResponse,\n  RawQueryResponse,\n  RawRequestOptions,\n  SanityDocument,\n  SanityDocumentStub,\n  SingleActionResult,\n  SingleMutationResult,\n  UnfilteredResponseQueryOptions,\n  UnfilteredResponseWithoutQuery,\n} from './types'\nimport {ObservableUsersClient, UsersClient} from './users/UsersClient'\n\nexport type {\n  _listen,\n  AssetsClient,\n  DatasetsClient,\n  LiveClient,\n  ObservableAssetsClient,\n  ObservableDatasetsClient,\n  ObservableProjectsClient,\n  ObservableUsersClient,\n  ProjectsClient,\n  UsersClient,\n}\n\n/** @public */\nexport class ObservableSanityClient {\n  assets: ObservableAssetsClient\n  datasets: ObservableDatasetsClient\n  live: LiveClient\n  projects: ObservableProjectsClient\n  users: ObservableUsersClient\n\n  /**\n   * Private properties\n   */\n  #clientConfig: InitializedClientConfig\n  #httpRequest: HttpRequest\n\n  /**\n   * Instance properties\n   */\n  listen = _listen\n\n  constructor(httpRequest: HttpRequest, config: ClientConfig = defaultConfig) {\n    this.config(config)\n\n    this.#httpRequest = httpRequest\n\n    this.assets = new ObservableAssetsClient(this, this.#httpRequest)\n    this.datasets = new ObservableDatasetsClient(this, this.#httpRequest)\n    this.live = new LiveClient(this)\n    this.projects = new ObservableProjectsClient(this, this.#httpRequest)\n    this.users = new ObservableUsersClient(this, this.#httpRequest)\n  }\n\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone(): ObservableSanityClient {\n    return new ObservableSanityClient(this.#httpRequest, this.config())\n  }\n\n  /**\n   * Returns the current client configuration\n   */\n  config(): InitializedClientConfig\n  /**\n   * Reconfigure the client. Note that this _mutates_ the current client.\n   */\n  config(newConfig?: Partial<ClientConfig>): this\n  config(newConfig?: Partial<ClientConfig>): ClientConfig | this {\n    if (newConfig === undefined) {\n      return {...this.#clientConfig}\n    }\n\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === false) {\n      throw new Error(\n        'Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client',\n      )\n    }\n\n    this.#clientConfig = initConfig(newConfig, this.#clientConfig || {})\n    return this\n  }\n\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig?: Partial<ClientConfig>): ObservableSanityClient {\n    const thisConfig = this.config()\n    return new ObservableSanityClient(this.#httpRequest, {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...(thisConfig.stega || {}),\n        ...(typeof newConfig?.stega === 'boolean'\n          ? {enabled: newConfig.stega}\n          : newConfig?.stega || {}),\n      },\n    })\n  }\n\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   */\n  fetch<\n    R = Any,\n    Q extends QueryWithoutParams = QueryWithoutParams,\n    const G extends string = string,\n  >(query: G, params?: Q | QueryWithoutParams): Observable<ClientReturn<G, R>>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Optional query parameters\n   * @param options - Optional request options\n   */\n  fetch<\n    R = Any,\n    Q extends QueryWithoutParams | QueryParams = QueryParams,\n    const G extends string = string,\n  >(\n    query: G,\n    params: Q extends QueryWithoutParams ? QueryWithoutParams : Q,\n    options?: FilteredResponseQueryOptions,\n  ): Observable<ClientReturn<G, R>>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Optional query parameters\n   * @param options - Request options\n   */\n  fetch<\n    R = Any,\n    Q extends QueryWithoutParams | QueryParams = QueryParams,\n    const G extends string = string,\n  >(\n    query: string,\n    params: Q extends QueryWithoutParams ? QueryWithoutParams : Q,\n    options: UnfilteredResponseQueryOptions,\n  ): Observable<RawQueryResponse<ClientReturn<G, R>>>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Optional query parameters\n   * @param options - Request options\n   */\n  fetch<\n    R = Any,\n    Q extends QueryWithoutParams | QueryParams = QueryParams,\n    const G extends string = string,\n  >(\n    query: G,\n    params: Q extends QueryWithoutParams ? QueryWithoutParams : Q,\n    options: UnfilteredResponseWithoutQuery,\n  ): Observable<RawQuerylessQueryResponse<ClientReturn<G, R>>>\n  fetch<R, Q, const G extends string>(\n    query: G,\n    params?: Q,\n    options?: QueryOptions,\n  ): Observable<RawQueryResponse<R> | R> {\n    return dataMethods._fetch<R, Q>(\n      this,\n      this.#httpRequest,\n      this.#clientConfig.stega,\n      query,\n      params,\n      options,\n    )\n  }\n\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options?: {tag?: string},\n  ): Observable<SanityDocument<R> | undefined> {\n    return dataMethods._getDocument<R>(this, this.#httpRequest, id, options)\n  }\n\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments<R extends Record<string, Any> = Record<string, Any>>(\n    ids: string[],\n    options?: {tag?: string},\n  ): Observable<(SanityDocument<R> | null)[]> {\n    return dataMethods._getDocuments<R>(this, this.#httpRequest, ids, options)\n  }\n\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns an observable that resolves to an array containing the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions,\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns an observable that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions,\n  ): Observable<SingleMutationResult>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns an observable that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions,\n  ): Observable<MultipleMutationResult>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options?: BaseMutationOptions,\n  ): Observable<SanityDocument<R>>\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions,\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return dataMethods._create<R>(this, this.#httpRequest, document, 'create', options)\n  }\n\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns an observable that resolves to an array containing the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions,\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns an observable that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions,\n  ): Observable<SingleMutationResult>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns an observable that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions,\n  ): Observable<MultipleMutationResult>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?: BaseMutationOptions,\n  ): Observable<SanityDocument<R>>\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions,\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return dataMethods._createIfNotExists<R>(this, this.#httpRequest, document, options)\n  }\n\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns an observable that resolves to an array containing the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions,\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns an observable that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions,\n  ): Observable<SingleMutationResult>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns an observable that resolves to a mutation result object containing the created document ID.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions,\n  ): Observable<MultipleMutationResult>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?: BaseMutationOptions,\n  ): Observable<SanityDocument<R>>\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions,\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return dataMethods._createOrReplace<R>(this, this.#httpRequest, document, options)\n  }\n\n  /**\n   * Deletes a document with the given document ID.\n   * Returns an observable that resolves to the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options: FirstDocumentMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns an observable that resolves to an array containing the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options: AllDocumentsMutationOptions,\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns an observable that resolves to a mutation result object containing the deleted document ID.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete(id: string, options: FirstDocumentIdMutationOptions): Observable<SingleMutationResult>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns an observable that resolves to a mutation result object containing the deleted document ID.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete(id: string, options: AllDocumentIdsMutationOptions): Observable<MultipleMutationResult>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns an observable that resolves to the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options?: BaseMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns an observable that resolves to first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options: FirstDocumentMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns an observable that resolves to an array containing the deleted documents.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options: AllDocumentsMutationOptions,\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns an observable that resolves to a mutation result object containing the ID of the first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete(\n    selection: MutationSelection,\n    options: FirstDocumentIdMutationOptions,\n  ): Observable<SingleMutationResult>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns an observable that resolves to a mutation result object containing the document IDs that were deleted.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete(\n    selection: MutationSelection,\n    options: AllDocumentIdsMutationOptions,\n  ): Observable<MultipleMutationResult>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns an observable that resolves to first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options?: BaseMutationOptions,\n  ): Observable<SanityDocument<R>>\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: string | MutationSelection,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions,\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return dataMethods._delete<R>(this, this.#httpRequest, selection, options)\n  }\n\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns an observable that resolves to the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options: FirstDocumentMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Perform mutation operations against the configured dataset.\n   * Returns an observable that resolves to an array of the mutated documents.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options: AllDocumentsMutationOptions,\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns an observable that resolves to a mutation result object containing the document ID of the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options: FirstDocumentIdMutationOptions,\n  ): Observable<SingleMutationResult>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns an observable that resolves to a mutation result object containing the mutated document IDs.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options: AllDocumentIdsMutationOptions,\n  ): Observable<MultipleMutationResult>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns an observable that resolves to the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options?: BaseMutationOptions,\n  ): Observable<SanityDocument<R>>\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options?:\n      | FirstDocumentMutationOptions\n      | AllDocumentsMutationOptions\n      | FirstDocumentIdMutationOptions\n      | AllDocumentIdsMutationOptions\n      | BaseMutationOptions,\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return dataMethods._mutate<R>(this, this.#httpRequest, operations, options)\n  }\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param documentId - Document ID to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentId: string, operations?: PatchOperations): ObservablePatch\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param documentIds - Array of document IDs to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentIds: string[], operations?: PatchOperations): ObservablePatch\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - An object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(selection: MutationSelection, operations?: PatchOperations): ObservablePatch\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(selection: PatchSelection, operations?: PatchOperations): ObservablePatch {\n    return new ObservablePatch(selection, operations, this)\n  }\n\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction<R extends Record<string, Any> = Record<string, Any>>(\n    operations?: Mutation<R>[],\n  ): ObservableTransaction {\n    return new ObservableTransaction(operations, this)\n  }\n\n  /**\n   * Perform action operations against the configured dataset\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(\n    operations: Action | Action[],\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult | MultipleActionResult> {\n    return dataMethods._action(this, this.#httpRequest, operations, options)\n  }\n\n  /**\n   * Perform an HTTP request against the Sanity API\n   *\n   * @param options - Request options\n   */\n  request<R = Any>(options: RawRequestOptions): Observable<R> {\n    return dataMethods._request(this, this.#httpRequest, options)\n  }\n\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri: string, canUseCdn?: boolean): string {\n    return dataMethods._getUrl(this, uri, canUseCdn)\n  }\n\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation: string, path?: string): string {\n    return dataMethods._getDataUrl(this, operation, path)\n  }\n}\n\n/** @public */\nexport class SanityClient {\n  assets: AssetsClient\n  datasets: DatasetsClient\n  live: LiveClient\n  projects: ProjectsClient\n  users: UsersClient\n\n  /**\n   * Observable version of the Sanity client, with the same configuration as the promise-based one\n   */\n  observable: ObservableSanityClient\n\n  /**\n   * Private properties\n   */\n  #clientConfig: InitializedClientConfig\n  #httpRequest: HttpRequest\n\n  /**\n   * Instance properties\n   */\n  listen = _listen\n\n  constructor(httpRequest: HttpRequest, config: ClientConfig = defaultConfig) {\n    this.config(config)\n\n    this.#httpRequest = httpRequest\n\n    this.assets = new AssetsClient(this, this.#httpRequest)\n    this.datasets = new DatasetsClient(this, this.#httpRequest)\n    this.live = new LiveClient(this)\n    this.projects = new ProjectsClient(this, this.#httpRequest)\n    this.users = new UsersClient(this, this.#httpRequest)\n\n    this.observable = new ObservableSanityClient(httpRequest, config)\n  }\n\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone(): SanityClient {\n    return new SanityClient(this.#httpRequest, this.config())\n  }\n\n  /**\n   * Returns the current client configuration\n   */\n  config(): InitializedClientConfig\n  /**\n   * Reconfigure the client. Note that this _mutates_ the current client.\n   */\n  config(newConfig?: Partial<ClientConfig>): this\n  config(newConfig?: Partial<ClientConfig>): ClientConfig | this {\n    if (newConfig === undefined) {\n      return {...this.#clientConfig}\n    }\n\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === false) {\n      throw new Error(\n        'Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client',\n      )\n    }\n\n    if (this.observable) {\n      this.observable.config(newConfig)\n    }\n\n    this.#clientConfig = initConfig(newConfig, this.#clientConfig || {})\n    return this\n  }\n\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig?: Partial<ClientConfig>): SanityClient {\n    const thisConfig = this.config()\n    return new SanityClient(this.#httpRequest, {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...(thisConfig.stega || {}),\n        ...(typeof newConfig?.stega === 'boolean'\n          ? {enabled: newConfig.stega}\n          : newConfig?.stega || {}),\n      },\n    })\n  }\n\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   */\n  fetch<\n    R = Any,\n    Q extends QueryWithoutParams = QueryWithoutParams,\n    const G extends string = string,\n  >(query: G, params?: Q | QueryWithoutParams): Promise<ClientReturn<G, R>>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Optional query parameters\n   * @param options - Optional request options\n   */\n  fetch<\n    R = Any,\n    Q extends QueryWithoutParams | QueryParams = QueryParams,\n    const G extends string = string,\n  >(\n    query: G,\n    params: Q extends QueryWithoutParams ? QueryWithoutParams : Q,\n    options?: FilteredResponseQueryOptions,\n  ): Promise<ClientReturn<G, R>>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Optional query parameters\n   * @param options - Request options\n   */\n  fetch<\n    R = Any,\n    Q extends QueryWithoutParams | QueryParams = QueryParams,\n    const G extends string = string,\n  >(\n    query: G,\n    params: Q extends QueryWithoutParams ? QueryWithoutParams : Q,\n    options: UnfilteredResponseQueryOptions,\n  ): Promise<RawQueryResponse<ClientReturn<G, R>>>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Optional query parameters\n   * @param options - Request options\n   */\n  fetch<\n    R = Any,\n    Q extends QueryWithoutParams | QueryParams = QueryParams,\n    const G extends string = string,\n  >(\n    query: G,\n    params: Q extends QueryWithoutParams ? QueryWithoutParams : Q,\n    options: UnfilteredResponseWithoutQuery,\n  ): Promise<RawQuerylessQueryResponse<ClientReturn<G, R>>>\n  fetch<R, Q, const G extends string>(\n    query: G,\n    params?: Q,\n    options?: QueryOptions,\n  ): Promise<RawQueryResponse<ClientReturn<G, R>> | ClientReturn<G, R>> {\n    return lastValueFrom(\n      dataMethods._fetch<ClientReturn<G, R>, Q>(\n        this,\n        this.#httpRequest,\n        this.#clientConfig.stega,\n        query,\n        params,\n        options,\n      ),\n    )\n  }\n\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options?: {signal?: AbortSignal; tag?: string},\n  ): Promise<SanityDocument<R> | undefined> {\n    return lastValueFrom(dataMethods._getDocument<R>(this, this.#httpRequest, id, options))\n  }\n\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments<R extends Record<string, Any> = Record<string, Any>>(\n    ids: string[],\n    options?: {signal?: AbortSignal; tag?: string},\n  ): Promise<(SanityDocument<R> | null)[]> {\n    return lastValueFrom(dataMethods._getDocuments<R>(this, this.#httpRequest, ids, options))\n  }\n\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns a promise that resolves to an array containing the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions,\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns a promise that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions,\n  ): Promise<SingleMutationResult>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns a promise that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions,\n  ): Promise<MultipleMutationResult>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options?: BaseMutationOptions,\n  ): Promise<SanityDocument<R>>\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions,\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return lastValueFrom(\n      dataMethods._create<R>(this, this.#httpRequest, document, 'create', options),\n    )\n  }\n\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns a promise that resolves to an array containing the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions,\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns a promise that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions,\n  ): Promise<SingleMutationResult>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns a promise that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions,\n  ): Promise<MultipleMutationResult>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?: BaseMutationOptions,\n  ): Promise<SanityDocument<R>>\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions,\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return lastValueFrom(\n      dataMethods._createIfNotExists<R>(this, this.#httpRequest, document, options),\n    )\n  }\n\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns a promise that resolves to an array containing the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions,\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns a promise that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions,\n  ): Promise<SingleMutationResult>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns a promise that resolves to a mutation result object containing the created document ID.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions,\n  ): Promise<MultipleMutationResult>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?: BaseMutationOptions,\n  ): Promise<SanityDocument<R>>\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions,\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return lastValueFrom(\n      dataMethods._createOrReplace<R>(this, this.#httpRequest, document, options),\n    )\n  }\n\n  /**\n   * Deletes a document with the given document ID.\n   * Returns a promise that resolves to the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options: FirstDocumentMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns a promise that resolves to an array containing the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options: AllDocumentsMutationOptions,\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns a promise that resolves to a mutation result object containing the deleted document ID.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete(id: string, options: FirstDocumentIdMutationOptions): Promise<SingleMutationResult>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns a promise that resolves to a mutation result object containing the deleted document ID.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete(id: string, options: AllDocumentIdsMutationOptions): Promise<MultipleMutationResult>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns a promise that resolves to the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options?: BaseMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns a promise that resolves to first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options: FirstDocumentMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns a promise that resolves to an array containing the deleted documents.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options: AllDocumentsMutationOptions,\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns a promise that resolves to a mutation result object containing the ID of the first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete(\n    selection: MutationSelection,\n    options: FirstDocumentIdMutationOptions,\n  ): Promise<SingleMutationResult>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns a promise that resolves to a mutation result object containing the document IDs that were deleted.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete(\n    selection: MutationSelection,\n    options: AllDocumentIdsMutationOptions,\n  ): Promise<MultipleMutationResult>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns a promise that resolves to first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options?: BaseMutationOptions,\n  ): Promise<SanityDocument<R>>\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: string | MutationSelection,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions,\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return lastValueFrom(dataMethods._delete<R>(this, this.#httpRequest, selection, options))\n  }\n\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns a promise that resolves to the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options: FirstDocumentMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Perform mutation operations against the configured dataset.\n   * Returns a promise that resolves to an array of the mutated documents.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options: AllDocumentsMutationOptions,\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns a promise that resolves to a mutation result object containing the document ID of the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options: FirstDocumentIdMutationOptions,\n  ): Promise<SingleMutationResult>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns a promise that resolves to a mutation result object containing the mutated document IDs.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options: AllDocumentIdsMutationOptions,\n  ): Promise<MultipleMutationResult>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns a promise that resolves to the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options?: BaseMutationOptions,\n  ): Promise<SanityDocument<R>>\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options?:\n      | FirstDocumentMutationOptions\n      | AllDocumentsMutationOptions\n      | FirstDocumentIdMutationOptions\n      | AllDocumentIdsMutationOptions\n      | BaseMutationOptions,\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return lastValueFrom(dataMethods._mutate<R>(this, this.#httpRequest, operations, options))\n  }\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param documentId - Document ID to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentId: string, operations?: PatchOperations): Patch\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param documentIds - Array of document IDs to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentIds: string[], operations?: PatchOperations): Patch\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - An object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(selection: MutationSelection, operations?: PatchOperations): Patch\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentId: PatchSelection, operations?: PatchOperations): Patch {\n    return new Patch(documentId, operations, this)\n  }\n\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction<R extends Record<string, Any> = Record<string, Any>>(\n    operations?: Mutation<R>[],\n  ): Transaction {\n    return new Transaction(operations, this)\n  }\n\n  /**\n   * Perform action operations against the configured dataset\n   * Returns a promise that resolves to the transaction result\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(\n    operations: Action | Action[],\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult | MultipleActionResult> {\n    return lastValueFrom(dataMethods._action(this, this.#httpRequest, operations, options))\n  }\n\n  /**\n   * Perform a request against the Sanity API\n   * NOTE: Only use this for Sanity API endpoints, not for your own APIs!\n   *\n   * @param options - Request options\n   * @returns Promise resolving to the response body\n   */\n  request<R = Any>(options: RawRequestOptions): Promise<R> {\n    return lastValueFrom(dataMethods._request<R>(this, this.#httpRequest, options))\n  }\n\n  /**\n   * Perform an HTTP request a `/data` sub-endpoint\n   * NOTE: Considered internal, thus marked as deprecated. Use `request` instead.\n   *\n   * @deprecated - Use `request()` or your own HTTP library instead\n   * @param endpoint - Endpoint to hit (mutate, query etc)\n   * @param body - Request body\n   * @param options - Request options\n   * @internal\n   */\n  dataRequest(endpoint: string, body: unknown, options?: BaseMutationOptions): Promise<Any> {\n    return lastValueFrom(dataMethods._dataRequest(this, this.#httpRequest, endpoint, body, options))\n  }\n\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri: string, canUseCdn?: boolean): string {\n    return dataMethods._getUrl(this, uri, canUseCdn)\n  }\n\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation: string, path?: string): string {\n    return dataMethods._getDataUrl(this, operation, path)\n  }\n}\n","import type {Middlewares} from 'get-it'\n\nimport {defineHttpRequest} from './http/request'\nimport type {Any, ClientConfig, HttpRequest} from './types'\n\nexport {validateApiPerspective} from './config'\nexport {\n  ChannelError,\n  connectEventSource,\n  ConnectionFailedError,\n  DisconnectError,\n  type EventSourceEvent,\n  type EventSourceInstance,\n  MessageError,\n  MessageParseError,\n  type ServerSentEvent,\n} from './data/eventsource'\nexport * from './data/patch'\nexport * from './data/transaction'\nexport {ClientError, CorsOriginError, ServerError} from './http/errors'\nexport * from './SanityClient'\nexport * from './types'\n\n/** @alpha */\nexport {adapter as unstable__adapter, environment as unstable__environment} from 'get-it'\n\n/**\n * Create the `requester` and `createClient` exports, that have environment specific middleware for node and browsers\n * @internal\n */\nexport default function defineCreateClientExports<\n  SanityClientType,\n  ClientConfigType extends ClientConfig,\n>(\n  envMiddleware: Middlewares,\n  ClassConstructor: new (httpRequest: HttpRequest, config: ClientConfigType) => SanityClientType,\n) {\n  // Set the http client to use for requests, and its environment specific middleware\n  const defaultRequester = defineHttpRequest(envMiddleware)\n\n  const createClient = (config: ClientConfigType) => {\n    const clientRequester = defineHttpRequest(envMiddleware)\n    return new ClassConstructor(\n      (options, requester) =>\n        (requester || clientRequester)({\n          maxRedirects: 0,\n          maxRetries: config.maxRetries,\n          retryDelay: config.retryDelay,\n          ...options,\n        } as Any),\n      config,\n    )\n  }\n\n  return {requester: defaultRequester, createClient}\n}\n","import {printNoDefaultExport} from './warnings'\n\n/* @internal */\nexport function defineDeprecatedCreateClient<SanityClientType, ClientConfigType>(\n  createClient: (config: ClientConfigType) => SanityClientType,\n) {\n  return function deprecatedCreateClient(config: ClientConfigType) {\n    printNoDefaultExport()\n    return createClient(config)\n  }\n}\n","export default []\n","import defineCreateClientExports, {type ClientConfig, SanityClient} from './defineCreateClient'\nimport {defineDeprecatedCreateClient} from './defineDeprecatedCreateClient'\nimport envMiddleware from './http/browserMiddleware'\n\nexport * from './defineCreateClient'\n\nconst exp = defineCreateClientExports<SanityClient, ClientConfig>(envMiddleware, SanityClient)\n\n/** @public */\nexport const requester = exp.requester\n\n/** @public */\nexport const createClient = exp.createClient\n\n/**\n * @public\n * @deprecated Use the named export `createClient` instead of the `default` export\n */\nconst deprecatedCreateClient = defineDeprecatedCreateClient(createClient)\nexport default deprecatedCreateClient\n"],"names":["projectId","envMiddleware","warnings.printNoApiVersionSpecifiedWarning","warnings.printBrowserTokenWarning","warnings.printCdnWarning","validate.projectId","validate.dataset","validate.requestTag","warnings.printCdnAndWithCredentialsWarning","merge","validators.validateObject","validators.requireDocumentId","validators.validateDocumentId","validators.hasDataset","observable","validators.validateAssetType","dataset","defaults","EventSource","finalize","dataMethods._fetch","dataMethods._getDocument","dataMethods._getDocuments","dataMethods._create","dataMethods._createIfNotExists","dataMethods._createOrReplace","dataMethods._delete","dataMethods._mutate","dataMethods._action","dataMethods._request","dataMethods._getUrl","dataMethods._getDataUrl","dataMethods._dataRequest","requester","createClient"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"debugId":null}},
    {"offset": {"line": 3795, "column": 0}, "map": {"version":3,"file":"resolveEditInfo.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/csm/studioPath.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/csm/draftUtils.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/csm/jsonPath.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/csm/resolveMapping.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/csm/isArray.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/csm/isRecord.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/csm/walkMap.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/csm/createEditUrl.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/client/src/csm/resolveEditInfo.ts"],"sourcesContent":["/** @alpha */\nexport type KeyedSegment = {_key: string}\n\n/** @alpha */\nexport type IndexTuple = [number | '', number | '']\n\n/** @alpha */\nexport type PathSegment = string | number | KeyedSegment | IndexTuple\n\n/** @alpha */\nexport type Path = PathSegment[]\n\nconst rePropName =\n  /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g\n/** @internal */\nexport const reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/\nconst reIndexTuple = /^\\d*:\\d*$/\n\n/** @internal */\nexport function isIndexSegment(segment: PathSegment): segment is number {\n  return typeof segment === 'number' || (typeof segment === 'string' && /^\\[\\d+\\]$/.test(segment))\n}\n\n/** @internal */\nexport function isKeySegment(segment: PathSegment): segment is KeyedSegment {\n  if (typeof segment === 'string') {\n    return reKeySegment.test(segment.trim())\n  }\n\n  return typeof segment === 'object' && '_key' in segment\n}\n\n/** @internal */\nexport function isIndexTuple(segment: PathSegment): segment is IndexTuple {\n  if (typeof segment === 'string' && reIndexTuple.test(segment)) {\n    return true\n  }\n\n  if (!Array.isArray(segment) || segment.length !== 2) {\n    return false\n  }\n\n  const [from, to] = segment\n  return (typeof from === 'number' || from === '') && (typeof to === 'number' || to === '')\n}\n\n/** @internal */\nexport function get<Result = unknown, Fallback = unknown>(\n  obj: unknown,\n  path: Path | string,\n  defaultVal?: Fallback,\n): Result | typeof defaultVal {\n  const select = typeof path === 'string' ? fromString(path) : path\n  if (!Array.isArray(select)) {\n    throw new Error('Path must be an array or a string')\n  }\n\n  let acc: unknown | undefined = obj\n  for (let i = 0; i < select.length; i++) {\n    const segment = select[i]\n    if (isIndexSegment(segment)) {\n      if (!Array.isArray(acc)) {\n        return defaultVal\n      }\n\n      acc = acc[segment]\n    }\n\n    if (isKeySegment(segment)) {\n      if (!Array.isArray(acc)) {\n        return defaultVal\n      }\n\n      acc = acc.find((item) => item._key === segment._key)\n    }\n\n    if (typeof segment === 'string') {\n      acc =\n        typeof acc === 'object' && acc !== null\n          ? ((acc as Record<string, unknown>)[segment] as Result)\n          : undefined\n    }\n\n    if (typeof acc === 'undefined') {\n      return defaultVal\n    }\n  }\n\n  return acc as Result\n}\n\n/** @alpha */\nexport function toString(path: Path): string {\n  if (!Array.isArray(path)) {\n    throw new Error('Path is not an array')\n  }\n\n  return path.reduce<string>((target, segment, i) => {\n    const segmentType = typeof segment\n    if (segmentType === 'number') {\n      return `${target}[${segment}]`\n    }\n\n    if (segmentType === 'string') {\n      const separator = i === 0 ? '' : '.'\n      return `${target}${separator}${segment}`\n    }\n\n    if (isKeySegment(segment) && segment._key) {\n      return `${target}[_key==\"${segment._key}\"]`\n    }\n\n    if (Array.isArray(segment)) {\n      const [from, to] = segment\n      return `${target}[${from}:${to}]`\n    }\n\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``)\n  }, '')\n}\n\n/** @alpha */\nexport function fromString(path: string): Path {\n  if (typeof path !== 'string') {\n    throw new Error('Path is not a string')\n  }\n\n  const segments = path.match(rePropName)\n  if (!segments) {\n    throw new Error('Invalid path string')\n  }\n\n  return segments.map(parsePathSegment)\n}\n\nfunction parsePathSegment(segment: string): PathSegment {\n  if (isIndexSegment(segment)) {\n    return parseIndexSegment(segment)\n  }\n\n  if (isKeySegment(segment)) {\n    return parseKeySegment(segment)\n  }\n\n  if (isIndexTuple(segment)) {\n    return parseIndexTupleSegment(segment)\n  }\n\n  return segment\n}\n\nfunction parseIndexSegment(segment: string): PathSegment {\n  return Number(segment.replace(/[^\\d]/g, ''))\n}\n\nfunction parseKeySegment(segment: string): KeyedSegment {\n  const segments = segment.match(reKeySegment)\n  return {_key: segments![1]}\n}\n\nfunction parseIndexTupleSegment(segment: string): IndexTuple {\n  const [from, to] = segment.split(':').map((seg) => (seg === '' ? seg : Number(seg)))\n  return [from, to]\n}\n","// nominal/opaque type hack\ntype Opaque<T, K> = T & {__opaqueId__: K}\n\n/** @internal */\nexport type DraftId = Opaque<string, 'draftId'>\n\n/** @internal */\nexport type PublishedId = Opaque<string, 'publishedId'>\n\n/** @internal */\nexport const DRAFTS_FOLDER = 'drafts'\n\n/** @internal */\nexport const VERSION_FOLDER = 'versions'\n\nconst PATH_SEPARATOR = '.'\nconst DRAFTS_PREFIX = `${DRAFTS_FOLDER}${PATH_SEPARATOR}`\nconst VERSION_PREFIX = `${VERSION_FOLDER}${PATH_SEPARATOR}`\n\n/** @internal */\nexport function isDraftId(id: string): id is DraftId {\n  return id.startsWith(DRAFTS_PREFIX)\n}\n\n/** @internal */\nexport function isVersionId(id: string): boolean {\n  return id.startsWith(VERSION_PREFIX)\n}\n\n/** @internal */\nexport function isPublishedId(id: string): id is PublishedId {\n  return !isDraftId(id) && !isVersionId(id)\n}\n\n/** @internal */\nexport function getDraftId(id: string): DraftId {\n  if (isVersionId(id)) {\n    const publishedId = getPublishedId(id)\n    return (DRAFTS_PREFIX + publishedId) as DraftId\n  }\n\n  return isDraftId(id) ? id : ((DRAFTS_PREFIX + id) as DraftId)\n}\n\n/**  @internal */\nexport function getVersionId(id: string, version: string): string {\n  if (version === 'drafts' || version === 'published') {\n    throw new Error('Version can not be \"published\" or \"drafts\"')\n  }\n\n  return `${VERSION_PREFIX}${version}${PATH_SEPARATOR}${getPublishedId(id)}`\n}\n\n/**\n *  @internal\n *  Given an id, returns the versionId if it exists.\n *  e.g. `versions.summer-drop.foo` = `summer-drop`\n *  e.g. `drafts.foo` = `undefined`\n *  e.g. `foo` = `undefined`\n */\nexport function getVersionFromId(id: string): string | undefined {\n  if (!isVersionId(id)) return undefined\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [_versionPrefix, versionId, ..._publishedId] = id.split(PATH_SEPARATOR)\n\n  return versionId\n}\n\n/** @internal */\nexport function getPublishedId(id: string): PublishedId {\n  if (isVersionId(id)) {\n    // make sure to only remove the versions prefix and the bundle name\n    return id.split(PATH_SEPARATOR).slice(2).join(PATH_SEPARATOR) as PublishedId as PublishedId\n  }\n\n  if (isDraftId(id)) {\n    return id.slice(DRAFTS_PREFIX.length) as PublishedId\n  }\n\n  return id as PublishedId\n}\n","import * as studioPath from './studioPath'\nimport type {\n  ContentSourceMapParsedPath,\n  ContentSourceMapParsedPathKeyedSegment,\n  ContentSourceMapPaths,\n  Path,\n} from './types'\n\nconst ESCAPE: Record<string, string> = {\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n  \"'\": \"\\\\'\",\n  '\\\\': '\\\\\\\\',\n}\n\nconst UNESCAPE: Record<string, string> = {\n  '\\\\f': '\\f',\n  '\\\\n': '\\n',\n  '\\\\r': '\\r',\n  '\\\\t': '\\t',\n  \"\\\\'\": \"'\",\n  '\\\\\\\\': '\\\\',\n}\n\n/**\n * @internal\n */\nexport function jsonPath(path: ContentSourceMapParsedPath): ContentSourceMapPaths[number] {\n  return `$${path\n    .map((segment) => {\n      if (typeof segment === 'string') {\n        const escapedKey = segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => {\n          return ESCAPE[match]\n        })\n        return `['${escapedKey}']`\n      }\n\n      if (typeof segment === 'number') {\n        return `[${segment}]`\n      }\n\n      if (segment._key !== '') {\n        const escapedKey = segment._key.replace(/['\\\\]/g, (match) => {\n          return ESCAPE[match]\n        })\n        return `[?(@._key=='${escapedKey}')]`\n      }\n\n      return `[${segment._index}]`\n    })\n    .join('')}`\n}\n\n/**\n * @internal\n */\nexport function parseJsonPath(path: ContentSourceMapPaths[number]): ContentSourceMapParsedPath {\n  const parsed: ContentSourceMapParsedPath = []\n\n  const parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g\n  let match: RegExpExecArray | null\n\n  while ((match = parseRe.exec(path)) !== null) {\n    if (match[1] !== undefined) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => {\n        return UNESCAPE[m]\n      })\n\n      parsed.push(key)\n      continue\n    }\n\n    if (match[2] !== undefined) {\n      parsed.push(parseInt(match[2], 10))\n      continue\n    }\n\n    if (match[3] !== undefined) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => {\n        return UNESCAPE[m]\n      })\n\n      parsed.push({\n        _key,\n        _index: -1,\n      })\n      continue\n    }\n  }\n\n  return parsed\n}\n\n/**\n * @internal\n */\nexport function jsonPathToStudioPath(path: ContentSourceMapParsedPath): Path {\n  return path.map((segment) => {\n    if (typeof segment === 'string') {\n      return segment\n    }\n\n    if (typeof segment === 'number') {\n      return segment\n    }\n\n    if (segment._key !== '') {\n      return {_key: segment._key}\n    }\n\n    if (segment._index !== -1) {\n      return segment._index\n    }\n\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`)\n  })\n}\n\n/**\n * @internal\n */\nexport function studioPathToJsonPath(path: Path | string): ContentSourceMapParsedPath {\n  const parsedPath = typeof path === 'string' ? studioPath.fromString(path) : path\n\n  return parsedPath.map((segment) => {\n    if (typeof segment === 'string') {\n      return segment\n    }\n\n    if (typeof segment === 'number') {\n      return segment\n    }\n\n    if (Array.isArray(segment)) {\n      throw new Error(`IndexTuple segments aren't supported:${JSON.stringify(segment)}`)\n    }\n\n    if (isContentSourceMapParsedPathKeyedSegment(segment)) {\n      return segment\n    }\n\n    if (segment._key) {\n      return {_key: segment._key, _index: -1}\n    }\n\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`)\n  })\n}\n\nfunction isContentSourceMapParsedPathKeyedSegment(\n  segment: studioPath.PathSegment | ContentSourceMapParsedPath[number],\n): segment is ContentSourceMapParsedPathKeyedSegment {\n  return typeof segment === 'object' && '_key' in segment && '_index' in segment\n}\n\n/**\n * @internal\n */\nexport function jsonPathToMappingPath(path: ContentSourceMapParsedPath): (string | number)[] {\n  return path.map((segment) => {\n    if (typeof segment === 'string') {\n      return segment\n    }\n\n    if (typeof segment === 'number') {\n      return segment\n    }\n\n    if (segment._index !== -1) {\n      return segment._index\n    }\n\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`)\n  })\n}\n","import {jsonPath, jsonPathToMappingPath} from './jsonPath'\nimport type {ContentSourceMap, ContentSourceMapMapping, ContentSourceMapParsedPath} from './types'\n\n/**\n * @internal\n */\nexport function resolveMapping(\n  resultPath: ContentSourceMapParsedPath,\n  csm?: ContentSourceMap,\n):\n  | {\n      mapping: ContentSourceMapMapping\n      matchedPath: string\n      pathSuffix: string\n    }\n  | undefined {\n  if (!csm?.mappings) {\n    return undefined\n  }\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath))\n\n  if (csm.mappings[resultMappingPath] !== undefined) {\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: '',\n    }\n  }\n\n  const mappings = Object.entries(csm.mappings)\n    .filter(([key]) => resultMappingPath.startsWith(key))\n    .sort(([key1], [key2]) => key2.length - key1.length)\n\n  if (mappings.length == 0) {\n    return undefined\n  }\n\n  const [matchedPath, mapping] = mappings[0]\n  const pathSuffix = resultMappingPath.substring(matchedPath.length)\n  return {mapping, matchedPath, pathSuffix}\n}\n","/** @internal */\nexport function isArray(value: unknown): value is Array<unknown> {\n  return value !== null && Array.isArray(value)\n}\n","/** @internal */\nexport function isRecord(value: unknown): value is Record<string, unknown> {\n  return typeof value === 'object' && value !== null\n}\n","import {isArray} from './isArray'\nimport {isRecord} from './isRecord'\nimport type {ContentSourceMapParsedPath, WalkMapFn} from './types'\n\n/**\n * generic way to walk a nested object or array and apply a mapping function to each value\n * @internal\n */\nexport function walkMap(\n  value: unknown,\n  mappingFn: WalkMapFn,\n  path: ContentSourceMapParsedPath = [],\n): unknown {\n  if (isArray(value)) {\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v['_key']\n        if (typeof _key === 'string') {\n          return walkMap(v, mappingFn, path.concat({_key, _index: idx}))\n        }\n      }\n\n      return walkMap(v, mappingFn, path.concat(idx))\n    })\n  }\n\n  if (isRecord(value)) {\n    // Handle Portable Text in a faster way\n    if (value._type === 'block' || value._type === 'span') {\n      const result = {...value}\n      if (value._type === 'block') {\n        result.children = walkMap(value.children, mappingFn, path.concat('children'))\n      } else if (value._type === 'span') {\n        result.text = walkMap(value.text, mappingFn, path.concat('text'))\n      }\n      return result\n    }\n\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))]),\n    )\n  }\n\n  return mappingFn(value, path)\n}\n","import {getPublishedId, getVersionFromId, isPublishedId, isVersionId} from './draftUtils'\nimport {jsonPathToStudioPath} from './jsonPath'\nimport * as studioPath from './studioPath'\nimport type {CreateEditUrlOptions, EditIntentUrl, StudioBaseUrl} from './types'\n\n/** @internal */\nexport function createEditUrl(options: CreateEditUrlOptions): `${StudioBaseUrl}${EditIntentUrl}` {\n  const {\n    baseUrl,\n    workspace: _workspace = 'default',\n    tool: _tool = 'default',\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset,\n  } = options\n\n  if (!baseUrl) {\n    throw new Error('baseUrl is required')\n  }\n  if (!path) {\n    throw new Error('path is required')\n  }\n  if (!_id) {\n    throw new Error('id is required')\n  }\n  if (baseUrl !== '/' && baseUrl.endsWith('/')) {\n    throw new Error('baseUrl must not end with a slash')\n  }\n\n  const workspace = _workspace === 'default' ? undefined : _workspace\n  const tool = _tool === 'default' ? undefined : _tool\n  const id = getPublishedId(_id)\n  const stringifiedPath = Array.isArray(path)\n    ? studioPath.toString(jsonPathToStudioPath(path))\n    : path\n\n  // eslint-disable-next-line no-warning-comments\n  // @TODO Using searchParams as a temporary workaround until `@sanity/overlays` can decode state from the path reliably\n  const searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath,\n  })\n  if (workspace) {\n    searchParams.set('workspace', workspace)\n  }\n  if (tool) {\n    searchParams.set('tool', tool)\n  }\n  if (projectId) {\n    searchParams.set('projectId', projectId)\n  }\n  if (dataset) {\n    searchParams.set('dataset', dataset)\n  }\n  if (isPublishedId(_id)) {\n    searchParams.set('perspective', 'published')\n  } else if (isVersionId(_id)) {\n    const versionId = getVersionFromId(_id)!\n    searchParams.set('perspective', versionId)\n  }\n\n  const segments = [baseUrl === '/' ? '' : baseUrl]\n  if (workspace) {\n    segments.push(workspace)\n  }\n  const routerParams = [\n    'mode=presentation',\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`,\n  ]\n  if (tool) {\n    routerParams.push(`tool=${tool}`)\n  }\n  segments.push('intent', 'edit', `${routerParams.join(';')}?${searchParams}`)\n  return segments.join('/') as unknown as `${StudioBaseUrl}${EditIntentUrl}`\n}\n","import {parseJsonPath} from './jsonPath'\nimport {resolveMapping} from './resolveMapping'\nimport type {\n  CreateEditUrlOptions,\n  ResolveEditInfoOptions,\n  StudioBaseRoute,\n  StudioBaseUrl,\n  StudioUrl,\n} from './types'\n\n/** @internal */\nexport function resolveEditInfo(options: ResolveEditInfoOptions): CreateEditUrlOptions | undefined {\n  const {resultSourceMap: csm, resultPath} = options\n  const {mapping, pathSuffix} = resolveMapping(resultPath, csm) || {}\n\n  if (!mapping) {\n    // console.warn('no mapping for path', { path: resultPath, sourceMap: csm })\n    return undefined\n  }\n\n  if (mapping.source.type === 'literal') {\n    return undefined\n  }\n\n  if (mapping.source.type === 'unknown') {\n    return undefined\n  }\n\n  const sourceDoc = csm.documents[mapping.source.document]\n  const sourcePath = csm.paths[mapping.source.path]\n\n  if (sourceDoc && sourcePath) {\n    const {baseUrl, workspace, tool} = resolveStudioBaseRoute(\n      typeof options.studioUrl === 'function' ? options.studioUrl(sourceDoc) : options.studioUrl,\n    )\n    if (!baseUrl) return undefined\n    const {_id, _type, _projectId, _dataset} = sourceDoc\n    return {\n      baseUrl,\n      workspace,\n      tool,\n      id: _id,\n      type: _type,\n      path: parseJsonPath(sourcePath + pathSuffix),\n      projectId: _projectId,\n      dataset: _dataset,\n    } satisfies CreateEditUrlOptions\n  }\n\n  return undefined\n}\n\n/** @internal */\nexport function resolveStudioBaseRoute(studioUrl: StudioUrl): StudioBaseRoute {\n  let baseUrl: StudioBaseUrl = typeof studioUrl === 'string' ? studioUrl : studioUrl.baseUrl\n  if (baseUrl !== '/') {\n    baseUrl = baseUrl.replace(/\\/$/, '')\n  }\n  if (typeof studioUrl === 'string') {\n    return {baseUrl}\n  }\n  return {...studioUrl, baseUrl}\n}\n"],"names":["studioPath.fromString","studioPath.toString"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8],"debugId":null}},
    {"offset": {"line": 4116, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/telemetry/src/createSessionId.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/telemetry/src/createTraceId.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/telemetry/src/utils/trimErrorMessage.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/telemetry/src/createStore.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/telemetry/src/createBatchedStore.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/telemetry/src/defineEvent.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/telemetry/src/defineTrace.ts"],"sourcesContent":["import {typeid} from 'typeid-js'\n\n/**\n * @public\n */\nexport type SessionId = string & {__type: 'SessionId'}\n\nexport function createSessionId(): SessionId {\n  return typeid('session').toString() as SessionId\n}\n","import {typeid} from 'typeid-js'\n\n/**\n * @public\n */\nexport type TraceId = string & {__type: 'TraceId'}\n\nexport function createTraceId(): TraceId {\n  return typeid('trace').toString() as TraceId\n}\n","function splitAt(str: string, index: number) {\n  return index < 1 ? [str, ''] : [str.substring(0, index), str.substring(index)]\n}\n\nconst MAX_LENGTH = 1024\n\nexport function trimErrorMessage(errorMessage: string) {\n  const newLineIndex = errorMessage.indexOf('\\n')\n  const splitIndex =\n    newLineIndex === -1 ? MAX_LENGTH : Math.min(newLineIndex, MAX_LENGTH)\n  const [first, rest] = splitAt(errorMessage, splitIndex)\n\n  return first + (rest ? `… (+${rest.length})` : '')\n}\n","import {\n  DefinedTelemetryLog,\n  DefinedTelemetryTrace,\n  TelemetryEvent,\n  TelemetryLogEvent,\n  TelemetryLogger,\n  TelemetryTrace,\n  TelemetryTraceEvent,\n} from './types'\nimport {Observable, Subject} from 'rxjs'\nimport {SessionId} from './createSessionId'\nimport {createTraceId} from './createTraceId'\nimport {trimErrorMessage} from './utils/trimErrorMessage'\n\n/**\n * Bare-bones store for logging and reacting to telemetry events\n * @internal\n * @param sessionId\n */\nexport function createStore<UserProperties>(sessionId: SessionId): {\n  events$: Observable<TelemetryEvent>\n  logger: TelemetryLogger<UserProperties>\n} {\n  const logEntries$ = new Subject<TelemetryEvent>()\n\n  function pushTraceError<Data, Err extends {message: string}>(\n    traceId: string,\n    telemetryTrace: DefinedTelemetryTrace<Data>,\n    error: {message: string},\n    context: unknown,\n  ) {\n    logEntries$.next({\n      sessionId,\n      type: 'trace.error',\n      traceId,\n      name: telemetryTrace.name,\n      version: telemetryTrace.version,\n      data: {message: trimErrorMessage(error.message)},\n      context,\n      createdAt: new Date().toISOString(),\n    })\n  }\n\n  function pushTraceEntry<Data>(\n    type: 'trace.start',\n    traceId: string,\n    telemetryTrace: DefinedTelemetryTrace<Data>,\n    data: undefined,\n    context: unknown,\n  ): void\n  function pushTraceEntry<Data>(\n    type: 'trace.log',\n    traceId: string,\n    telemetryTrace: DefinedTelemetryTrace<Data>,\n    data: Data,\n    context: unknown,\n  ): void\n  function pushTraceEntry<Data>(\n    type: 'trace.complete',\n    traceId: string,\n    telemetryTrace: DefinedTelemetryTrace<Data>,\n    data: Data,\n    context: unknown,\n  ): void\n\n  function pushTraceEntry<Data>(\n    type: TelemetryTraceEvent['type'],\n    traceId: string,\n    telemetryTrace: DefinedTelemetryTrace<Data>,\n    data: Data,\n    context: unknown,\n  ) {\n    logEntries$.next({\n      sessionId,\n      type,\n      traceId,\n      name: telemetryTrace.name,\n      version: telemetryTrace.version,\n      data,\n      context,\n      createdAt: new Date().toISOString(),\n    })\n  }\n\n  function pushLogEntry<Data>(\n    type: TelemetryLogEvent['type'],\n    event: DefinedTelemetryLog<Data>,\n    data?: unknown,\n  ) {\n    logEntries$.next({\n      sessionId,\n      type,\n      version: event.version,\n      name: event.name,\n      data,\n      createdAt: new Date().toISOString(),\n    })\n  }\n\n  function pushUserPropertiesEntry(properties: UserProperties) {\n    logEntries$.next({\n      sessionId,\n      type: 'userProperties',\n      properties: properties,\n      createdAt: new Date().toISOString(),\n    })\n  }\n\n  function createTrace<Data = void>(\n    traceId: string,\n    traceDef: DefinedTelemetryTrace<Data>,\n    context: unknown,\n  ): TelemetryTrace<UserProperties, Data> {\n    return {\n      start() {\n        pushTraceEntry('trace.start', traceId, traceDef, undefined, context)\n      },\n      newContext(name: string): TelemetryLogger<UserProperties> {\n        return {\n          trace<InnerData>(innerTraceDef: DefinedTelemetryTrace<InnerData>) {\n            return createTrace<InnerData>(\n              `${traceId}.${name}`,\n              innerTraceDef,\n              context,\n            )\n          },\n          updateUserProperties() {},\n          log,\n        }\n      },\n      log(data?: unknown) {\n        pushTraceEntry('trace.log', traceId, traceDef, data, context)\n      },\n      complete() {\n        pushTraceEntry('trace.complete', traceId, traceDef, undefined, context)\n      },\n      error(error: {message: string}) {\n        pushTraceError(traceId, traceDef, error, context)\n      },\n      await<P extends Promise<Data>>(promise: P, data?: Data): P {\n        this.start()\n        promise.then(\n          (result) => {\n            this.log(data ? data : result)\n            this.complete()\n            return result\n          },\n          (error) => {\n            this.error(error)\n            throw error\n          },\n        )\n        return promise\n      },\n    }\n  }\n\n  function log<Data>(event: DefinedTelemetryLog<Data>, data?: Data) {\n    pushLogEntry('log', event, data)\n  }\n\n  return {\n    events$: logEntries$.asObservable(),\n    logger: {\n      updateUserProperties(properties: UserProperties) {\n        pushUserPropertiesEntry(properties)\n      },\n      trace: <Data>(\n        traceDef: DefinedTelemetryTrace<Data>,\n        context: unknown,\n      ) => {\n        const traceId = createTraceId()\n        return createTrace(traceId, traceDef, context)\n      },\n      log,\n    },\n  }\n}\n","import {TelemetryEvent, TelemetryStore} from './types'\nimport {\n  catchError,\n  combineLatest,\n  combineLatestAll,\n  concatMap,\n  EMPTY,\n  from,\n  lastValueFrom,\n  map,\n  mergeMap,\n  Observable,\n  of,\n  tap,\n  throttle,\n} from 'rxjs'\nimport {SessionId} from './createSessionId'\nimport {createStore} from './createStore'\n\n/**\n * This is like rxjs.timer() except for that it's calling timeout.unref()\n * This prevents the timer from keeping the event loop active https://nodejs.org/api/timers.html#timeoutunref\n * We don't want any of our timers to hold up the process from completing\n * @param ms\n */\nconst unrefTimer = (ms: number) =>\n  new Observable((subscriber) => {\n    const timeout = setTimeout(() => {\n      subscriber.next()\n      subscriber.complete()\n    }, ms)\n    if (typeof timeout.unref === 'function') {\n      // unref the timeout to avoid holding the process open in node.js\n      timeout.unref()\n    }\n    return () => clearTimeout(timeout)\n  })\n\n/**\n * 'unknown' - we don't know if the user has consented or not (e.g. something went wrong)\n * 'unset' - the user has not yet been asked for consent\n * 'granted' - the user has consented\n * 'denied' - the user has denied consent\n */\nexport type ConsentStatus = 'undetermined' | 'unset' | 'granted' | 'denied'\n\nexport interface CreateBatchedStoreOptions {\n  /**\n   * Optionally provide a flush interval\n   */\n  flushInterval?: number\n\n  /**\n   *  Provide a strategy for resolving consent depending on context (e.g. studio/cli)\n   *  @public\n   */\n  resolveConsent: () => Promise<{status: ConsentStatus}>\n  /**\n   * Provide a strategy for submitting events (e.g. using fetch in browser, or node server side)\n   * @public\n   */\n  sendEvents: (events: TelemetryEvent[]) => Promise<unknown>\n\n  /**\n   * Optionally provide a strategy for submitting final events (e.g. events that's queued when the browser exits)\n   * @public\n   */\n  sendBeacon?: (events: TelemetryEvent[]) => boolean\n}\n\nexport function createBatchedStore<UserProperties>(\n  sessionId: SessionId,\n  options: CreateBatchedStoreOptions,\n): TelemetryStore<UserProperties> {\n  const store = createStore<UserProperties>(sessionId)\n\n  function resolveConsent(): Promise<{status: ConsentStatus}> {\n    return options.resolveConsent().catch((err) =>\n      // if we for some reason can't fetch consent we treat it as \"undetermined\", and try again at next flush\n      ({status: 'undetermined' as const}),\n    )\n  }\n\n  const _buffer: TelemetryEvent[] = []\n\n  function consume() {\n    const buf = _buffer.slice()\n    _buffer.length = 0\n    return buf\n  }\n\n  function submit() {\n    const pending = consume()\n    if (pending.length === 0) {\n      return EMPTY\n    }\n    return combineLatest([of(pending), resolveConsent()]).pipe(\n      mergeMap(([events, consent]) => {\n        if (events.length === 0 || consent.status !== 'granted') {\n          // consent is not granted, we just consumed (cleared) the buffer so we can return empty\n          return EMPTY\n        }\n        return from(options.sendEvents(events)).pipe(\n          catchError((err) => {\n            // In case of error, put events back on the buffer\n            _buffer.unshift(...events)\n            // and ignore the error\n            return EMPTY\n          }),\n        )\n      }),\n    )\n  }\n\n  const flushInterval = options.flushInterval ?? 30000\n\n  const flush$ = store.events$.pipe(\n    tap((ev) => _buffer.push(ev)),\n    map(() => {}), // void to avoid accidental use of events further down the pipe\n    throttle(() => unrefTimer(flushInterval), {\n      leading: false,\n      trailing: true,\n    }),\n    concatMap(() => submit()),\n  )\n\n  function flush() {\n    return lastValueFrom(submit(), {\n      defaultValue: undefined,\n    }).then(() => {})\n  }\n\n  // start subscribing to events\n  const subscription = flush$.subscribe()\n\n  function endWithBeacon() {\n    if (!options.sendBeacon) {\n      // we don't have a beacon strategy, so we just flush - this may make us lose events, but it's the best we can do\n      end()\n      return true\n    }\n    const events = consume()\n    subscription.unsubscribe()\n    return events.length > 0 ? options.sendBeacon(events) : true\n  }\n\n  function end() {\n    // flush before destroying\n    return flush()\n      .then(\n        () => {}, // void promise\n        () => {}, // ignore errors\n      )\n      .finally(() => {\n        // Note: we might end up with an error here\n        subscription.unsubscribe()\n      })\n  }\n\n  return {\n    end,\n    endWithBeacon,\n    // Note: flush may fail\n    flush,\n    logger: store.logger,\n  }\n}\n","import {DefinedTelemetryLog, TelemetryLogOptions} from './types'\n\n/**\n * @param options\n */\nexport function defineEvent<Data = void>(\n  options: TelemetryLogOptions,\n): DefinedTelemetryLog<Data> {\n  return {\n    type: 'log',\n    name: options.name,\n    version: options.version,\n    description: options.description,\n    schema: undefined as unknown as Data,\n  }\n}\n","import {DefinedTelemetryTrace, TelemetryTraceOptions} from './types'\n\n/**\n * @param options\n * */\nexport function defineTrace<Data = void, Context = void>(\n  options: TelemetryTraceOptions,\n): DefinedTelemetryTrace<Data, Context> {\n  return {\n    type: 'trace',\n    name: options.name,\n    version: options.version,\n    description: options.description,\n    schema: undefined as unknown as Data,\n    context: undefined as unknown as Context,\n  }\n}\n"],"names":["createSessionId","typeid","toString","createTraceId","splitAt","str","index","substring","MAX_LENGTH","trimErrorMessage","errorMessage","newLineIndex","indexOf","splitIndex","Math","min","first","rest","concat","length","createStore","sessionId","logEntries$","Subject","pushTraceError","traceId","telemetryTrace","error","context","next","type","name","version","data","message","createdAt","Date","toISOString","pushTraceEntry","pushLogEntry","event","pushUserPropertiesEntry","properties","createTrace","traceDef","start","newContext","trace","innerTraceDef","updateUserProperties","log","complete","await","promise","then","result","events$","asObservable","logger","unrefTimer","ms","Observable","subscriber","timeout","setTimeout","unref","clearTimeout","createBatchedStore","options","_a","store","resolveConsent","catch","err","status","_buffer","consume","buf","slice","submit","pending","EMPTY","combineLatest","of","pipe","mergeMap","_ref","events","consent","from","sendEvents","catchError","unshift","flushInterval","flush$","tap","ev","push","map","throttle","leading","trailing","concatMap","flush","lastValueFrom","defaultValue","subscription","subscribe","endWithBeacon","sendBeacon","end","unsubscribe","finally","defineEvent","description","schema","defineTrace"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6],"debugId":null}},
    {"offset": {"line": 4367, "column": 0}, "map": {"version":3,"file":"noopLogger-b5b1676e.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/telemetry/src/utils/browserEvents.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/telemetry/src/noopLogger.ts"],"sourcesContent":["import {TelemetryStore} from '@sanity/telemetry'\n\nconst capture = {capture: true}\n\nfunction listen(target: EventTarget, type: string, cb: () => void) {\n  target.addEventListener(type, cb, capture)\n  return () => target.removeEventListener(type, cb, capture)\n}\n\nexport function onPageHide(listener: () => void) {\n  // prefer pagehide to unload event\n  if ('onpagehide' in window) {\n    return listen(window, 'pagehide', listener)\n  }\n  // only register beforeunload/unload in browsers that don't support\n  // pagehide to avoid breaking bfcache\n  const cleanupUnload = listen(window, 'unload', listener)\n  const cleanupBeforeUnload = listen(window, 'unload', listener)\n  return () => {\n    cleanupUnload()\n    cleanupBeforeUnload()\n  }\n}\n\nexport function onVisibilityHidden(cb: () => void) {\n  return listen(document, 'visibilitychange', () => {\n    if (document.visibilityState === 'hidden') {\n      cb()\n    }\n  })\n}\n\nexport function registerLifecycleEvents(store: TelemetryStore<unknown>) {\n  const unregisterVisibilityHidden = onVisibilityHidden(() => store.flush())\n  const unregisterPageHide = onPageHide(() => store.endWithBeacon())\n  return () => {\n    unregisterPageHide()\n    unregisterVisibilityHidden()\n  }\n}\n","import {DefinedTelemetryTrace, TelemetryLogger, TelemetryTrace} from './types'\n\nfunction createNoopLogger(): TelemetryLogger<unknown> {\n  const logger = {\n    updateUserProperties() {},\n    trace,\n    log,\n  }\n  function trace(\n    telemetryTrace: DefinedTelemetryTrace<unknown, unknown>,\n  ): TelemetryTrace<unknown, unknown> {\n    return {\n      start() {},\n      log(data?: unknown) {},\n      complete() {},\n      newContext(name: string) {\n        return logger\n      },\n      error(error: Error) {},\n      await: (promise: Promise<unknown>) => promise,\n    }\n  }\n\n  function log(event: unknown, data?: unknown) {}\n\n  return logger\n}\n\nexport const noopLogger = createNoopLogger()\n"],"names":["capture","listen","target","type","cb","addEventListener","removeEventListener","onPageHide","listener","window","cleanupUnload","cleanupBeforeUnload","onVisibilityHidden","document","visibilityState","registerLifecycleEvents","store","unregisterVisibilityHidden","flush","unregisterPageHide","endWithBeacon","createNoopLogger","logger","updateUserProperties","trace","log","telemetryTrace","start","data","complete","newContext","name","error","await","promise","event","noopLogger"],"mappings":";;;;;;AAEA,MAAMA,OAAA,GAAU;IAACA,OAAA,EAAS;CAAI;AAE9B,SAASC,MAAAA,CAAOC,MAAqB,EAAAC,IAAA,EAAcC,EAAgB,EAAA;IAC1DF,MAAA,CAAAG,gBAAA,CAAiBF,IAAM,EAAAC,EAAA,EAAIJ,OAAO,CAAA;IACzC,OAAO,IAAME,MAAA,CAAOI,mBAAoB,CAAAH,IAAA,EAAMC,IAAIJ,OAAO,CAAA;AAC3D;AAEO,SAASO,WAAWC,QAAsB,EAAA;IAE/C,IAAI,gBAAgBC,MAAQ,EAAA;QACnB,OAAAR,MAAA,CAAOQ,MAAQ,EAAA,UAAA,EAAYD,QAAQ,CAAA;IAC5C;IAGA,MAAME,aAAgB,GAAAT,MAAA,CAAOQ,MAAQ,EAAA,QAAA,EAAUD,QAAQ,CAAA;IACvD,MAAMG,mBAAsB,GAAAV,MAAA,CAAOQ,MAAQ,EAAA,QAAA,EAAUD,QAAQ,CAAA;IAC7D,OAAO,MAAM;QACGE,aAAA,EAAA;QACMC,mBAAA,EAAA;IAAA,CACtB;AACF;AAEO,SAASC,mBAAmBR,EAAgB,EAAA;IAC1C,OAAAH,MAAA,CAAOY,QAAU,EAAA,kBAAA,EAAoB,MAAM;QAC5C,IAAAA,QAAA,CAASC,eAAAA,KAAoB,QAAU,EAAA;YACtCV,EAAA,EAAA;QACL;IAAA,CACD,CAAA;AACH;AAEO,SAASW,wBAAwBC,KAAgC,EAAA;IACtE,MAAMC,0BAA6B,GAAAL,kBAAA,CAAmB,IAAMI,KAAA,CAAME,KAAAA,CAAO,CAAA,CAAA;IACzE,MAAMC,kBAAqB,GAAAZ,UAAA,CAAW,IAAMS,KAAA,CAAMI,aAAAA,CAAe,CAAA,CAAA;IACjE,OAAO,MAAM;QACQD,kBAAA,EAAA;QACQF,0BAAA,EAAA;IAAA,CAC7B;AACF;ACrCA,SAASI,gBAA6CA,CAAA,EAAA;IACpD,MAAMC,MAAS,GAAA;QACbC,oBAAuBA,CAAA,EAAA,EAAC,CAAA;QACxBC,KAAA;QACAC;IAAA,CACF;IACA,SAASD,MACPE,cACkC,EAAA;QAC3B,OAAA;YACLC,KAAQA,CAAA,EAAA,EAAC,CAAA;YACTF,KAAIG,IAAgB,EAAA,CAAC,CAAA;YACrBC,QAAWA,CAAA,EAAA,EAAC,CAAA;YACZC,YAAWC,IAAc,EAAA;gBAChB,OAAAT,MAAA;YACT,CAAA;YACAU,OAAMA,KAAc,EAAA,CAAC,CAAA;YACrBC,KAAA,GAAQC,OAA8B,GAAAA;QAAA,CACxC;IACF;IAES,SAAAT,GAAAA,CAAIU,KAAAA,EAAgBP,IAAgB,EAAA,CAAC;IAEvC,OAAAN,MAAA;AACT;AAEO,MAAMc,aAAaf,gBAAiB,CAAA,CAAA","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 4436, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/telemetry/src/react/useTelemetryStoreLifeCycleEvents.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/telemetry/src/react/TelemetryProvider.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/telemetry/src/react/useTelemetry.ts"],"sourcesContent":["import type {TelemetryStore} from '../types'\nimport {useEffect} from 'react'\nimport {onPageHide, onVisibilityHidden} from '../utils/browserEvents'\n\nexport function useTelemetryStoreLifeCycleEvents(\n  store: TelemetryStore<unknown>,\n) {\n  // when visibility changes to hidden, flush events, but continue tracking\n  useEffect(() => onVisibilityHidden(store.flush), [store.flush])\n  // when browser navigates away, closes or reloads the page, use provided sendBeacon method to send events\n  useEffect(() => onPageHide(store.endWithBeacon), [store.endWithBeacon])\n}\n","import type React from 'react'\nimport {createContext} from 'react'\nimport {TelemetryLogger, TelemetryStore} from '../types'\nimport {useTelemetryStoreLifeCycleEvents} from './useTelemetryStoreLifeCycleEvents'\nimport {noopLogger} from '../noopLogger'\n\n/**\n * @internal\n */\nexport const TelemetryLoggerContext =\n  createContext<TelemetryLogger<unknown>>(noopLogger)\n\nexport function TelemetryProvider<UserProperties>({\n  children,\n  store,\n}: {\n  children: React.ReactNode\n  store: TelemetryStore<UserProperties>\n}) {\n  // Hook the telemetry store up to page life cycle events like hide/unload\n  useTelemetryStoreLifeCycleEvents(store)\n\n  return (\n    <TelemetryLoggerContext.Provider value={store.logger}>\n      {children}\n    </TelemetryLoggerContext.Provider>\n  )\n}\n","import {useContext} from 'react'\nimport {TelemetryLoggerContext} from './TelemetryProvider'\nimport type {TelemetryLogger} from '../'\n\nexport function useTelemetry<\n  UserProperties,\n>(): TelemetryLogger<UserProperties> {\n  return useContext(TelemetryLoggerContext) as TelemetryLogger<UserProperties>\n}\n"],"names":["useTelemetryStoreLifeCycleEvents","store","useEffect","onVisibilityHidden","flush","onPageHide","endWithBeacon","TelemetryLoggerContext","createContext","noopLogger","TelemetryProvider","_ref","children","Provider","value","logger","useTelemetry","useContext"],"mappings":";;;;;;;;;;;AAIO,SAASA,iCACdC,KACA,EAAA;sKAEUC,YAAAA,AAAA;sDAAA,8LAAMC,qBAAAA,EAAmBF,KAAM,CAAAG,KAAK;qDAAG;QAACH,KAAA,CAAMG,KAAK;KAAC,CAAA;IAEpDF,8KAAAA,AAAA;sDAAA,8LAAMG,aAAAA,EAAWJ,KAAM,CAAAK,aAAa;qDAAG;QAACL,KAAA,CAAMK,aAAa;KAAC,CAAA;AACxE;ACFa,MAAAC,sBAAA,IACXC,iLAAAA,wLAAwCC,aAAU,CAAA;AAE7C,SAASC,iBAAkCA,CAAAC,IAAA,EAM/C;IAAA,IAN+C,EAChDC,QAAA,EACAX,KAAAA,EAIC,GAAAU,IAAA;IAEDX,gCAAA,CAAiCC,KAAK,CAAA;IAEtC,OAAA,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EACGM,sBAAuB,CAAAM,QAAA,EAAvB;QAAgCC,KAAO,EAAAb,KAAA,CAAMc,MAAAA;QAC3CH;IACH,CAAA,CAAA;AAEJ;ACvBO,SAASI,YAEqBA,CAAA,EAAA;IACnC,yKAAOC,aAAAA,EAAWV,sBAAsB,CAAA;AAC1C","ignoreList":[0,1,2],"debugId":null}},
    {"offset": {"line": 4488, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/asset-utils/src/constants.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/asset-utils/src/errors.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/asset-utils/src/utils.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/asset-utils/src/asserters.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/asset-utils/src/hotspotCrop.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/asset-utils/src/paths.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/asset-utils/src/parse.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/asset-utils/src/resolve.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/asset-utils/src/urls.ts"],"sourcesContent":["/**\n * @internal\n */\nexport const cdnUrl = 'https://cdn.sanity.io'\n\n/**\n * @internal\n */\nexport const cdnUrlPattern = /^https:\\/\\/cdn\\.sanity\\./\n\n/**\n * @internal\n */\nexport const customCdnUrlPattern =\n  /^https:\\/\\/cdn\\.[^/]+\\/(images|files)\\/[^/]+\\/.*?[a-zA-Z0-9_]{24,40}.*$/\n\n/**\n * @internal\n */\nexport const fileAssetFilenamePattern = /^([a-zA-Z0-9_]{24,40}|[a-f0-9]{40})+\\.[a-z0-9]+$/\n\n/**\n * @internal\n */\nexport const fileAssetIdPattern = /^file-([a-zA-Z0-9_]{24,40}|[a-f0-9]{40})+-[a-z0-9]+$/\n\n/**\n * @internal\n */\nexport const imageAssetFilenamePattern = /^([a-zA-Z0-9_]{24,40}|[a-f0-9]{40})-\\d+x\\d+\\.[a-z0-9]+$/\n\n/**\n * @internal\n */\nexport const imageAssetIdPattern = /^image-([a-zA-Z0-9_]{24,40}|[a-f0-9]{40})+-\\d+x\\d+-[a-z0-9]+$/\n\n/**\n * @internal\n */\nexport const assetFilenamePattern =\n  /^(([a-zA-Z0-9_]{24,40}|[a-f0-9]{40})+|([a-zA-Z0-9_]{24,40}|[a-f0-9]{40})+-\\d+x\\d+\\.[a-z0-9]+)$/\n\n/**\n * @internal\n */\nexport const pathPattern = /^(images|files)\\/([a-z0-9]+)\\/([a-z0-9][-\\w]*)\\//\n\n/**\n * @internal\n */\nexport const idPattern =\n  /^(?:image-(?:[a-zA-Z0-9_]{24,40}|[a-f0-9]{40})+-\\d+x\\d+-[a-z0-9]+|file-(?:[a-zA-Z0-9_]{24,40}|[a-f0-9]{40})+-[a-z0-9]+)$/\n\n/**\n * For use in cases where the project and dataset doesn't really matter\n *\n * @internal\n */\nexport const dummyProject = {projectId: 'a', dataset: 'b'}\n","/**\n * Error type thrown when the library fails to resolve a value, such as an asset ID,\n * filename or project ID/dataset information.\n *\n * The `input` property holds the value passed as the input, which failed to be\n * resolved to something meaningful.\n *\n * @public\n */\nexport class UnresolvableError extends Error {\n  unresolvable = true\n\n  // The input may not be a valid source, so let's not type it as one\n  input?: unknown\n\n  constructor(inputSource: unknown, message = 'Failed to resolve asset ID from source') {\n    super(message)\n    this.input = inputSource\n  }\n}\n\n/**\n * Checks whether or not an error instance is of type UnresolvableError\n *\n * @param err - Error to check for unresolvable error type\n * @returns True if the passed error instance appears to be an unresolvable error\n * @public\n */\nexport function isUnresolvableError(err: unknown): err is UnresolvableError {\n  const error = err as UnresolvableError\n  return Boolean(error.unresolvable && 'input' in error)\n}\n","import {isUnresolvableError} from './errors'\nimport type {SafeFunction} from './types'\n\n/**\n * Returns a getter which returns `undefined` instead of throwing,\n * if encountering an `UnresolvableError`\n *\n * @param method - Function to use as resolver\n * @returns Function that returns `undefined` if passed resolver throws UnresolvableError\n * @internal\n */\nexport function getForgivingResolver<Args extends unknown[], Return>(\n  method: (...args: Args) => Return,\n): SafeFunction<Args, Return> {\n  return (...args: Args): Return | undefined => {\n    try {\n      return method(...args)\n    } catch (err) {\n      if (isUnresolvableError(err)) {\n        return undefined\n      }\n\n      throw err\n    }\n  }\n}\n\n/**\n * Checks whether or not the passed object is an object (and not `null`)\n *\n * @param obj Item to check whether or not is an object\n * @returns Whether or not `obj` is an object\n * @internal\n */\nexport function isObject(obj: unknown): obj is object {\n  return obj !== null && !Array.isArray(obj) && typeof obj === 'object'\n}\n","import {\n  cdnUrlPattern,\n  customCdnUrlPattern,\n  fileAssetIdPattern,\n  imageAssetIdPattern,\n} from './constants.js'\nimport type {\n  SanityAssetIdStub,\n  SanityAssetObjectStub,\n  SanityAssetPathStub,\n  SanityAssetUrlStub,\n  SanityFileAsset,\n  SanityImageAsset,\n  SanityReference,\n} from './types.js'\nimport {isObject} from './utils.js'\n\n/**\n * Checks whether or not the given source is a Sanity reference\n * (an object containing _ref string key)\n *\n * @param ref - Possible reference\n * @returns Whether or not the passed object is a reference\n * @public\n */\nexport function isReference(ref: unknown): ref is SanityReference {\n  return isObject(ref) && typeof (ref as SanityReference)._ref === 'string'\n}\n\n/**\n * Checks whether or not the given source is an asset ID stub\n * (an object containing an `_id` property)\n *\n * @param stub - Possible asset id stub\n * @returns Whether or not the passed object is an object id stub\n * @public\n */\nexport function isAssetIdStub(stub: unknown): stub is SanityAssetIdStub {\n  return isObject(stub) && typeof (stub as SanityAssetIdStub)._id === 'string'\n}\n\n/**\n * Checks whether or not the given source is an asset path stub\n * (an object containing a `path` property)\n *\n * @param stub - Possible asset path stub\n * @returns Whether or not the passed object is an object path stub\n * @public\n */\nexport function isAssetPathStub(stub: unknown): stub is SanityAssetPathStub {\n  return isObject(stub) && typeof (stub as SanityAssetPathStub).path === 'string'\n}\n\n/**\n * Checks whether or not the given source is an asset URL stub\n * (an object containing a `url` property)\n *\n * @param stub - Possible asset url stub\n * @returns Whether or not the passed object is an object url stub\n * @public\n */\nexport function isAssetUrlStub(stub: unknown): stub is SanityAssetUrlStub {\n  return isObject(stub) && typeof (stub as SanityAssetUrlStub).url === 'string'\n}\n\n/**\n * Checks whether or not the given source is a (partial) sanity file asset document.\n * Only checks the `_type` property, all other properties _may_ be missing\n *\n * @param src - Source to check\n * @returns Whether or not the given source is a file asset\n * @public\n */\nexport function isSanityFileAsset(src: unknown): src is SanityFileAsset {\n  return isObject(src) && (src as SanityFileAsset)._type === 'sanity.fileAsset'\n}\n\n/**\n * Checks whether or not the given source is a (partial) sanity image asset document.\n * Only checks the `_type` property, all other properties _may_ be missing\n *\n * @param src - Source to check\n * @returns Whether or not the given source is a file asset\n * @public\n */\nexport function isSanityImageAsset(src: unknown): src is SanityImageAsset {\n  return isObject(src) && (src as SanityImageAsset)._type === 'sanity.imageAsset'\n}\n\n/**\n * Checks whether or not the given document ID is a valid Sanity image asset document ID\n *\n * @param documentId - Document ID to check\n * @returns Whether or not the given document ID is a Sanity image asset document ID\n * @public\n */\nexport function isImageAssetId(documentId: string): boolean {\n  return imageAssetIdPattern.test(documentId)\n}\n\n/**\n * Checks whether or not the given document ID is a valid Sanity file asset document ID\n *\n * @param documentId - Document ID to check\n * @returns Whether or not the given document ID is a Sanity file asset document ID\n * @public\n */\nexport function isFileAssetId(documentId: string): boolean {\n  return fileAssetIdPattern.test(documentId)\n}\n\n/**\n * Checks whether or not the given document ID is a valid Sanity asset document ID (file or image)\n *\n * @param documentId - Document ID to check\n * @returns Whether or not the given document ID is a Sanity asset document ID (file or image)\n * @public\n */\nexport function isAssetId(documentId: string): boolean {\n  return isImageAssetId(documentId) || isFileAssetId(documentId)\n}\n\n/**\n * Checks whether or not the given source is an asset object stub\n *\n * @param stub - Possible asset object stub\n * @returns Whether or not the passed object is an object stub\n * @public\n */\nexport function isAssetObjectStub(stub: unknown): stub is SanityAssetObjectStub {\n  const item = stub as SanityAssetObjectStub\n  return isObject(item) && item.asset && typeof item.asset === 'object'\n}\n\n/**\n * Checks whether or not the given URL is a valid Sanity CDN URL or what appears to be a valid\n * custom CDN URL (has to be prefixed with `cdn.`, and follow the same path pattern as Sanity CDN )\n *\n * @param url - URL to check\n * @returns True if Sanity CDN URL/Custom CDN URL, false otherwise\n * @internal\n */\nexport function isCdnUrl(url: string): boolean {\n  return cdnUrlPattern.test(url) || customCdnUrlPattern.test(url)\n}\n","import type {SanityImageCrop, SanityImageHotspot} from './types.js'\n\n/**\n * Default crop (equals to \"whole image\")\n *\n * @public\n */\nexport const DEFAULT_CROP: Readonly<SanityImageCrop> = Object.freeze({\n  left: 0,\n  top: 0,\n  bottom: 0,\n  right: 0,\n})\n\n/**\n * Default hotspot (equals to horizontal/vertical center, full size of image)\n *\n * @public\n */\nexport const DEFAULT_HOTSPOT: Readonly<SanityImageHotspot> = Object.freeze({\n  x: 0.5,\n  y: 0.5,\n  height: 1,\n  width: 1,\n})\n\n/**\n * Returns cloned version of the default crop (prevents accidental mutations)\n *\n * @returns Default image crop object\n * @public\n */\nexport const getDefaultCrop = (): SanityImageCrop => ({...DEFAULT_CROP})\n\n/**\n * Returns cloned version of the default hotspot (prevents accidental mutations)\n *\n * @returns Default image hotspot object\n * @public\n */\nexport const getDefaultHotspot = (): SanityImageHotspot => ({...DEFAULT_HOTSPOT})\n\n/**\n * Returns whether or not the passed crop has the default values for a crop region\n *\n * @param crop - The crop to return whether or not is the default crop\n * @returns True if passed crop matches default, false otherwise\n * @public\n */\nexport const isDefaultCrop = (crop: SanityImageCrop): boolean => {\n  const {top, bottom, left, right} = crop\n  const {\n    top: defaultTop,\n    bottom: defaultBottom,\n    left: defaultLeft,\n    right: defaultRight,\n  } = DEFAULT_CROP\n\n  return (\n    top === defaultTop && bottom === defaultBottom && left === defaultLeft && right === defaultRight\n  )\n}\n\n/**\n * Returns whether or not the passed hotspot has the default values for a hotspot region\n *\n * @param hotspot - The hotspot to return whether or not is the default hotspot\n * @returns True if passed hotspot matches default, false otherwise\n * @public\n */\nexport const isDefaultHotspot = (hotspot: SanityImageHotspot): boolean => {\n  const {x, y, width, height} = hotspot\n  const {x: defaultX, y: defaultY, width: defaultWidth, height: defaultHeight} = DEFAULT_HOTSPOT\n\n  return x === defaultX && y === defaultY && width === defaultWidth && height === defaultHeight\n}\n","import {\n  isAssetObjectStub,\n  isAssetPathStub,\n  isAssetUrlStub,\n  isCdnUrl,\n  isReference,\n} from './asserters.js'\nimport {\n  cdnUrl,\n  fileAssetFilenamePattern,\n  imageAssetFilenamePattern,\n  pathPattern,\n} from './constants.js'\nimport {UnresolvableError} from './errors.js'\nimport type {\n  FileUrlBuilderOptions,\n  ImageUrlBuilderOptions,\n  PathBuilderOptions,\n  SanityAssetSource,\n  SanityFileUrlParts,\n  SanityImageUrlParts,\n} from './types.js'\nimport {getForgivingResolver} from './utils.js'\n\n/**\n * Builds the base image path from the minimal set of parts required to assemble it\n *\n * @param asset - An asset-like shape defining ID, dimensions and extension\n * @param options - Project ID and dataset the image belongs to, along with other options\n * @returns The path to the image\n * @public\n */\nexport function buildImagePath(\n  asset: ImageUrlBuilderOptions | SanityImageUrlParts,\n  options?: PathBuilderOptions,\n): string {\n  const projectId = options?.projectId || asset.projectId\n  const dataset = options?.dataset || asset.dataset\n  if (!projectId || !dataset) {\n    throw new Error('Project details (projectId and dataset) required to resolve path for image')\n  }\n\n  const dimensions =\n    'metadata' in asset ? asset.metadata.dimensions : {width: asset.width, height: asset.height}\n  const originalFilename = 'originalFilename' in asset ? asset.originalFilename : undefined\n  const {assetId, extension, vanityFilename} = asset\n  const {width, height} = dimensions\n  const vanity = getVanityStub(originalFilename, vanityFilename, options)\n\n  return `images/${projectId}/${dataset}/${assetId}-${width}x${height}.${extension}${vanity}`\n}\n\n/**\n * Builds the base image URL from the minimal set of parts required to assemble it\n *\n * @param asset - An asset-like shape defining ID, dimensions and extension\n * @param options - Project ID and dataset the image belongs to\n * @returns The URL to the image, as a string\n * @public\n */\nexport function buildImageUrl(\n  asset: ImageUrlBuilderOptions | SanityImageUrlParts,\n  options?: PathBuilderOptions,\n): string {\n  const baseUrl = options?.baseUrl || cdnUrl\n  return `${baseUrl}/${buildImagePath(asset, options)}`\n}\n\n/**\n * Builds the base file path from the minimal set of parts required to assemble it\n *\n * @param asset - An asset-like shape defining ID, dimensions and extension\n * @param options - Project ID and dataset the file belongs to, along with other options\n * @returns The path to the file\n * @public\n */\nexport function buildFilePath(\n  asset: FileUrlBuilderOptions | SanityFileUrlParts,\n  options?: PathBuilderOptions,\n): string {\n  const projectId = options?.projectId || asset.projectId\n  const dataset = options?.dataset || asset.dataset\n  if (!projectId || !dataset) {\n    throw new Error('Project details (projectId and dataset) required to resolve path for file')\n  }\n\n  const originalFilename = 'originalFilename' in asset ? asset.originalFilename : undefined\n  const {assetId, extension, vanityFilename} = asset\n  const vanity = getVanityStub(originalFilename, vanityFilename, options)\n\n  return `files/${projectId}/${dataset}/${assetId}.${extension}${vanity}`\n}\n\n/**\n * Builds the base file URL from the minimal set of parts required to assemble it\n *\n * @param asset - An asset-like shape defining ID and extension\n * @param options - Project ID and dataset the file belongs to, along with other options\n * @returns The URL to the file, as a string\n * @public\n */\nexport function buildFileUrl(asset: FileUrlBuilderOptions, options?: PathBuilderOptions): string {\n  const baseUrl = options?.baseUrl || cdnUrl\n  return `${baseUrl}/${buildFilePath(asset, options)}`\n}\n\n/**\n * Checks whether or not the given URL contains an asset path\n *\n * @param url - URL or path name\n * @returns Whether or not it contained an asset path\n * @public\n */\nfunction hasPath(urlOrPath: string): boolean {\n  return pathPattern.test(tryGetUrlPath(urlOrPath) || '')\n}\n\n/**\n * Tries to get the asset path from a given asset source\n *\n * @param src - The source image to infer an asset path from\n * @returns A path if resolvable, undefined otherwise\n * @public\n */\nexport function tryGetAssetPath(src: SanityAssetSource): string | undefined {\n  if (isAssetObjectStub(src)) {\n    return tryGetAssetPath(src.asset)\n  }\n\n  if (isReference(src)) {\n    return undefined\n  }\n\n  if (typeof src === 'string') {\n    return hasPath(src) ? getUrlPath(src) : undefined\n  }\n\n  if (isAssetPathStub(src)) {\n    return src.path\n  }\n\n  if (isAssetUrlStub(src)) {\n    return getUrlPath(src.url)\n  }\n\n  return undefined\n}\n\n/**\n * Strips the CDN URL and query params from a URL, eg:\n * `https://cdn.sanity.io/images/project/dataset/filename-200x200.jpg?foo=bar` →\n * `images/project/dataset/filename-200x200.jpg`\n *\n * @param url - URL to get path name from\n * @returns The path of a CDN URL\n * @public\n * @throws If URL is not a valid Sanity asset URL\n */\nexport function getUrlPath(url: string): string {\n  if (pathPattern.test(url)) {\n    // Already just a path\n    return url\n  }\n\n  if (!isCdnUrl(url)) {\n    throw new UnresolvableError(`Failed to resolve path from URL \"${url}\"`)\n  }\n\n  return new URL(url).pathname.replace(/^\\/+/, '')\n}\n\n/**\n * {@inheritDoc getUrlPath}\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\n * @public\n */\nexport const tryGetUrlPath = getForgivingResolver(getUrlPath)\n\n/**\n * Strips the CDN URL, path and query params from a URL, eg:\n * `https://cdn.sanity.io/images/project/dataset/filename-200x200.jpg?foo=bar` →\n * `filename-200x200.jpg`\n *\n * @param url - URL to get filename from\n * @returns The filename of an URL, if URL matches the CDN URL\n * @public\n * @throws If URL is not a valid Sanity asset URL\n */\nexport function getUrlFilename(url: string): string {\n  const path = tryGetUrlPath(url) || url\n  const filename = path.replace(/^(images|files)\\/[a-z0-9]+\\/[a-z0-9][-\\w]\\/*/, '')\n  if (!isValidFilename(filename)) {\n    throw new UnresolvableError(`Failed to resolve filename from URL \"${url}\"`)\n  }\n\n  return filename\n}\n\n/**\n * {@inheritDoc getUrlFilename}\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\n * @public\n */\nexport const tryGetUrlFilename = getForgivingResolver(getUrlFilename)\n\n/**\n * Checks whether or not a given filename matches the expected Sanity asset filename pattern\n *\n * @param filename - Filename to check for validity\n * @returns Whether or not the specified filename is valid\n * @public\n */\nexport function isValidFilename(filename: string): boolean {\n  return fileAssetFilenamePattern.test(filename) || imageAssetFilenamePattern.test(filename)\n}\n\n/**\n * Get the \"path stub\" at the end of the path, if the user hasn't explicitly opted out of this behavior\n *\n * @param originalFilename - The original filename of the asset\n * @param vanityFilename - The vanity filename of the asset\n * @param options - Options to control the behavior of the path builder\n * @returns The vanity stub, if any\n * @public\n */\nexport function getVanityStub(\n  originalFilename: string | undefined,\n  vanityFilename: string | undefined,\n  options?: PathBuilderOptions,\n): string {\n  const vanity = vanityFilename || originalFilename\n  return options?.useVanityName === false || !vanity ? '' : `/${vanity}`\n}\n","import {isCdnUrl} from './asserters.js'\nimport {\n  fileAssetIdPattern,\n  imageAssetFilenamePattern,\n  imageAssetIdPattern,\n  pathPattern,\n} from './constants.js'\nimport {isValidFilename, tryGetUrlFilename} from './paths.js'\nimport type {\n  SanityAssetIdParts,\n  SanityAssetUrlParts,\n  SanityFileAssetIdParts,\n  SanityFileUrlParts,\n  SanityImageAssetIdParts,\n  SanityImageUrlParts,\n} from './types.js'\n\n/**\n * @internal\n */\nconst exampleFileId = 'file-027401f31c3ac1e6d78c5d539ccd1beff72b9b11-pdf'\n\n/**\n * @internal\n */\nconst exampleImageId = 'image-027401f31c3ac1e6d78c5d539ccd1beff72b9b11-2000x3000-jpg'\n\n/**\n * Parses a Sanity asset document ID into individual parts (type, id, extension, width/height etc)\n *\n * @param documentId - Document ID to parse into named parts\n * @returns Object of named properties\n * @public\n * @throws If document ID is invalid\n */\nexport function parseAssetId(documentId: string): SanityAssetIdParts {\n  if (imageAssetIdPattern.test(documentId)) {\n    return parseImageAssetId(documentId)\n  }\n\n  if (fileAssetIdPattern.test(documentId)) {\n    return parseFileAssetId(documentId)\n  }\n\n  throw new Error(`Invalid image/file asset ID: ${documentId}`)\n}\n\n/**\n * Parses a Sanity file asset document ID into individual parts (type, id, extension)\n *\n * @param documentId - File asset document ID to parse into named parts\n * @returns Object of named properties\n * @public\n * @throws If document ID invalid\n */\nexport function parseFileAssetId(documentId: string): SanityFileAssetIdParts {\n  if (!fileAssetIdPattern.test(documentId)) {\n    throw new Error(\n      `Malformed file asset ID '${documentId}'. Expected an id like \"${exampleFileId}\"`,\n    )\n  }\n\n  const [, assetId, extension] = documentId.split('-')\n  return {type: 'file', assetId, extension}\n}\n\n/**\n * Parses a Sanity image asset document ID into individual parts (type, id, extension, width, height)\n *\n * @param documentId - Image asset document ID to parse into named parts\n * @returns Object of named properties\n * @public\n * @throws If document ID invalid\n */\nexport function parseImageAssetId(documentId: string): SanityImageAssetIdParts {\n  const [, assetId, dimensionString, extension] = documentId.split('-')\n  const [width, height] = (dimensionString || '').split('x').map(Number)\n\n  if (!assetId || !dimensionString || !extension || !(width > 0) || !(height > 0)) {\n    throw new Error(`Malformed asset ID '${documentId}'. Expected an id like \"${exampleImageId}\".`)\n  }\n\n  return {type: 'image', assetId, width, height, extension}\n}\n\n/**\n * Parses a Sanity asset filename into individual parts (type, id, extension, width, height)\n *\n * @param filename - Filename to parse into named parts\n * @returns Object of named properties\n * @public\n * @throws If image/filename is invalid\n */\nexport function parseAssetFilename(filename: string): SanityAssetIdParts {\n  const file = tryGetUrlFilename(filename) || ''\n  if (!isValidFilename(file)) {\n    throw new Error(`Invalid image/file asset filename: ${filename}`)\n  }\n\n  try {\n    const type = imageAssetFilenamePattern.test(file) ? 'image' : 'file'\n    const assetId = file.replace(/\\.([a-z0-9+]+)$/i, '-$1')\n    return parseAssetId(`${type}-${assetId}`)\n  } catch (err) {\n    throw new Error(`Invalid image/file asset filename: ${filename}`)\n  }\n}\n\n/**\n * Parses a full Sanity asset URL into individual parts\n * (type, project ID, dataset, id, extension, width, height)\n *\n * @param url - Full URL to parse into named parts\n * @returns Object of named properties\n * @public\n * @throws If URL is invalid or not a Sanity asset URL\n */\nexport function parseAssetUrl(url: string): SanityAssetUrlParts {\n  if (!isCdnUrl(url)) {\n    throw new Error(`URL is not a valid Sanity asset URL: ${url}`)\n  }\n\n  const path = new URL(url).pathname.replace(/^\\/+/, '')\n  const [projectPath, , projectId, dataset] = path.match(pathPattern) || []\n  if (!projectPath || !projectId || !dataset) {\n    throw new Error(`URL is not a valid Sanity asset URL: ${url}`)\n  }\n\n  const [filename, vanityFilename] = path.slice(projectPath.length).split('/')\n  const parsed = parseAssetFilename(filename)\n\n  return {\n    ...parsed,\n    projectId,\n    dataset,\n    vanityFilename,\n  }\n}\n\n/**\n * Parses a full Sanity image asset URL into individual parts\n * (type, project ID, dataset, id, extension, width, height)\n *\n * @param url - Full URL to parse into named parts\n * @returns Object of named properties\n * @public\n * @throws If URL is invalid or not a Sanity image asset URL\n */\nexport function parseImageAssetUrl(url: string): SanityImageUrlParts {\n  const parsed = parseAssetUrl(url)\n  if (parsed.type !== 'image') {\n    throw new Error(`URL is not a valid Sanity image asset URL: ${url}`)\n  }\n\n  return parsed\n}\n\n/**\n * Parses a full Sanity file asset URL into individual parts\n * (type, project ID, dataset, id, extension, width, height)\n *\n * @param url - Full URL to parse into named parts\n * @returns Object of named properties\n * @public\n * @throws If URL is invalid or not a Sanity file asset URL\n */\nexport function parseFileAssetUrl(url: string): SanityFileUrlParts {\n  const parsed = parseAssetUrl(url)\n  if (parsed.type !== 'file') {\n    throw new Error(`URL is not a valid Sanity file asset URL: ${url}`)\n  }\n\n  return parsed\n}\n\n/**\n * Validates that a given URL is a Sanity asset URL, and returns the asset type if valid.\n *\n * @param url - URL to extract asset type from\n * @returns Asset type if valid URL, false otherwise\n * @public\n */\nexport function getAssetUrlType(url: string): 'image' | 'file' | false {\n  try {\n    return parseAssetUrl(url).type\n  } catch (err) {\n    return false\n  }\n}\n","import {\n  isAssetIdStub,\n  isAssetObjectStub,\n  isAssetPathStub,\n  isAssetUrlStub,\n  isCdnUrl,\n  isReference,\n  isSanityFileAsset,\n  isSanityImageAsset,\n} from './asserters.js'\nimport {\n  cdnUrl,\n  dummyProject,\n  fileAssetFilenamePattern,\n  idPattern,\n  imageAssetFilenamePattern,\n  pathPattern,\n} from './constants.js'\nimport {UnresolvableError} from './errors.js'\nimport {getDefaultCrop, getDefaultHotspot} from './hotspotCrop.js'\nimport {parseFileAssetId, parseImageAssetId} from './parse.js'\nimport {\n  buildFilePath,\n  buildFileUrl,\n  buildImagePath,\n  buildImageUrl,\n  getUrlPath,\n  tryGetAssetPath,\n} from './paths.js'\nimport type {\n  PathBuilderOptions,\n  ResolvedSanityFile,\n  ResolvedSanityImage,\n  SanityAssetSource,\n  SanityFileAsset,\n  SanityFileObjectStub,\n  SanityFileSource,\n  SanityImageAsset,\n  SanityImageDimensions,\n  SanityImageObjectStub,\n  SanityImageSource,\n  SanityProjectDetails,\n} from './types.js'\nimport {getForgivingResolver} from './utils.js'\n\n/**\n * Returns the width, height and aspect ratio of a passed image asset, from any\n * inferrable structure (id, url, path, asset document, image object etc)\n *\n * @param src - Input source (image object, asset, reference, id, url, path)\n * @returns Object with width, height and aspect ratio properties\n *\n * @throws {@link UnresolvableError}\n * Throws if passed image source could not be resolved to an asset ID\n * @public\n */\nexport function getImageDimensions(src: SanityImageSource): SanityImageDimensions {\n  const imageId = getAssetDocumentId(src)\n  const {width, height} = parseImageAssetId(imageId)\n  const aspectRatio = width / height\n  return {width, height, aspectRatio}\n}\n\n/**\n * {@inheritDoc getImageDimensions}\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\n * @public\n */\nexport const tryGetImageDimensions = getForgivingResolver(getImageDimensions)\n\n/**\n * Returns the file extension for a given asset\n *\n * @param src - Input source (file/image object, asset, reference, id, url, path)\n * @returns The file extension, if resolvable (no `.` included)\n *\n * @throws {@link UnresolvableError}\n * Throws if passed asset source could not be resolved to an asset ID\n * @public\n */\nexport function getExtension(src: SanityAssetSource): string {\n  return isFileSource(src)\n    ? getFile(src, dummyProject).asset.extension\n    : getImage(src, dummyProject).asset.extension\n}\n\n/**\n * {@inheritDoc getExtension}\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\n * @public\n */\nexport const tryGetExtension = getForgivingResolver(getExtension)\n\n/**\n * Tries to resolve an image object with as much information as possible,\n * from any inferrable structure (id, url, path, image object etc)\n *\n * @param src - Input source (image object, asset, reference, id, url, path)\n * @param project - Project ID and dataset the image belongs to\n * @returns Image object\n *\n * @throws {@link UnresolvableError}\n * Throws if passed image source could not be resolved to an asset ID\n * @public\n */\nexport function getImage(\n  src: SanityImageSource,\n  project?: SanityProjectDetails,\n): ResolvedSanityImage {\n  const projectDetails = project || tryGetProject(src)\n  const asset = getImageAsset(src, projectDetails)\n\n  const img = src as SanityImageObjectStub\n  return {\n    asset,\n    crop: img.crop || getDefaultCrop(),\n    hotspot: img.hotspot || getDefaultHotspot(),\n  }\n}\n\n/**\n * {@inheritDoc getImage}\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\n * @public\n */\nexport const tryGetImage = getForgivingResolver(getImage)\n\n/**\n * Tries to resolve a (partial) image asset document with as much information as possible,\n * from any inferrable structure (id, url, path, image object etc)\n *\n * @param src - Input source (image object, asset, reference, id, url, path)\n * @param project - Project ID and dataset the image belongs to\n * @returns Image asset document\n *\n * @throws {@link UnresolvableError}\n * Throws if passed image source could not be resolved to an asset ID\n * @public\n */\nexport function getImageAsset(\n  src: SanityImageSource,\n  project?: SanityProjectDetails,\n): SanityImageAsset {\n  const projectDetails = project || getProject(src)\n  const pathOptions: PathBuilderOptions = {...projectDetails, useVanityName: false}\n\n  const _id = getAssetDocumentId(src)\n  const sourceObj = src as SanityImageObjectStub\n  const source = (sourceObj.asset || src) as SanityImageAsset\n  const metadata = source.metadata || {}\n  const {assetId, width, height, extension} = parseImageAssetId(_id)\n  const aspectRatio = width / height\n  const baseAsset: SanityImageAsset = {\n    ...(isSanityImageAsset(src) ? src : {}),\n    _id,\n    _type: 'sanity.imageAsset',\n    assetId,\n    extension,\n    metadata: {\n      ...metadata,\n      dimensions: {width, height, aspectRatio},\n    },\n\n    // Placeholders, overwritten below\n    url: '',\n    path: '',\n  }\n\n  return {\n    ...baseAsset,\n    path: buildImagePath(baseAsset, pathOptions),\n    url: buildImageUrl(baseAsset, pathOptions),\n  }\n}\n\n/**\n * {@inheritDoc getImageAsset}\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\n * @public\n */\nexport const tryGetImageAsset = getForgivingResolver(getImageAsset)\n\n/**\n * Tries to resolve an file object with as much information as possible,\n * from any inferrable structure (id, url, path, file object etc)\n *\n * @param src - Input source (file object, asset, reference, id, url, path)\n * @param project - Project ID and dataset the file belongs to\n * @returns File object\n *\n * @throws {@link UnresolvableError}\n * Throws if passed file source could not be resolved to an asset ID\n * @public\n */\nexport function getFile(src: SanityFileSource, project?: SanityProjectDetails): ResolvedSanityFile {\n  const projectDetails = project || tryGetProject(src)\n  const asset = getFileAsset(src, projectDetails)\n  return {asset}\n}\n\n/**\n * {@inheritDoc getFile}\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\n * @public\n */\nexport const tryGetFile = getForgivingResolver(getFile)\n\n/**\n * Tries to resolve a (partial) file asset document with as much information as possible,\n * from any inferrable structure (id, url, path, file object etc)\n *\n * @param src - Input source (file object, asset, reference, id, url, path)\n * @param options - Project ID and dataset the file belongs to, along with other options\n * @returns File asset document\n *\n * @throws {@link UnresolvableError}\n * Throws if passed file source could not be resolved to an asset ID\n * @public\n */\nexport function getFileAsset(src: SanityFileSource, options?: PathBuilderOptions): SanityFileAsset {\n  const projectDetails: PathBuilderOptions = {...(options || getProject(src)), useVanityName: false}\n\n  const _id = getAssetDocumentId(src)\n  const sourceObj = src as SanityFileObjectStub\n  const source = (sourceObj.asset || src) as SanityFileAsset\n  const {assetId, extension} = parseFileAssetId(_id)\n  const baseAsset: SanityFileAsset = {\n    ...(isSanityFileAsset(src) ? src : {}),\n    _id,\n    _type: 'sanity.fileAsset',\n    assetId,\n    extension,\n    metadata: source.metadata || {},\n\n    // Placeholders, overwritten below\n    url: '',\n    path: '',\n  }\n\n  return {\n    ...baseAsset,\n    path: buildFilePath(baseAsset, projectDetails),\n    url: buildFileUrl(baseAsset, projectDetails),\n  }\n}\n\n/**\n * {@inheritDoc getFileAsset}\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\n * @public\n */\nexport const tryGetFileAsset = getForgivingResolver(getFileAsset)\n\n/**\n * Tries to resolve the asset document ID from any inferrable structure\n *\n * @param src - Input source (image/file object, asset, reference, id, url, path)\n * @returns The asset document ID\n *\n * @throws {@link UnresolvableError}\n * Throws if passed asset source could not be resolved to an asset document ID\n * @public\n */\nexport function getAssetDocumentId(src: unknown): string {\n  const source = isAssetObjectStub(src) ? src.asset : src\n\n  let id = ''\n  if (typeof source === 'string') {\n    id = getIdFromString(source)\n  } else if (isReference(source)) {\n    id = source._ref\n  } else if (isAssetIdStub(source)) {\n    id = source._id\n  } else if (isAssetPathStub(source)) {\n    id = idFromUrl(`${cdnUrl}/${source.path}`)\n  } else if (isAssetUrlStub(source)) {\n    id = idFromUrl(source.url)\n  }\n\n  const hasId = id && idPattern.test(id)\n  if (!hasId) {\n    throw new UnresolvableError(src)\n  }\n\n  return id\n}\n\n/**\n * {@inheritDoc getAssetDocumentId}\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\n * @public\n */\nexport const tryGetAssetDocumentId = getForgivingResolver(getAssetDocumentId)\n\n/**\n * Tries to cooerce a string (ID, URL or path) to an image asset ID\n *\n * @param str - Input string (ID, URL or path)\n * @returns string\n *\n *\n * @throws {@link UnresolvableError}\n * Throws if passed image source could not be resolved to an asset ID\n * @public\n */\nexport function getIdFromString(str: string): string {\n  if (idPattern.test(str)) {\n    // Already an ID\n    return str\n  }\n\n  const isAbsoluteUrl = isCdnUrl(str)\n  const path = isAbsoluteUrl ? new URL(str).pathname : str\n\n  if (path.indexOf('/images') === 0 || path.indexOf('/files') === 0) {\n    // Full URL\n    return idFromUrl(str)\n  }\n\n  if (pathPattern.test(str)) {\n    // Path\n    return idFromUrl(`${cdnUrl}/${str}`)\n  }\n\n  if (isFileAssetFilename(str)) {\n    // Just a filename (projectId/dataset irrelevant: just need asset ID)\n    return idFromUrl(`${cdnUrl}/files/a/b/${str}`)\n  }\n\n  if (isImageAssetFilename(str)) {\n    // Just a filename (projectId/dataset irrelevant: just need asset ID)\n    return idFromUrl(`${cdnUrl}/images/a/b/${str}`)\n  }\n\n  throw new UnresolvableError(str)\n}\n\n/**\n * {@inheritDoc getIdFromString}\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\n * @public\n */\nexport const tryGetIdFromString = getForgivingResolver(getIdFromString)\n\n/**\n * Converts from a full asset URL to just the asset document ID\n *\n * @param url - A full asset URL to convert\n * @returns string\n * @public\n */\nfunction idFromUrl(url: string): string {\n  const path = getUrlPath(url)\n  const [type, , , fileName] = path.split('/')\n  const prefix = type.replace(/s$/, '')\n  return `${prefix}-${fileName.replace(/\\./g, '-')}`\n}\n\n/**\n * Resolves project ID and dataset the image belongs to, based on full URL or path\n * @param src - Image URL or path\n * @returns object | undefined\n *\n * @throws {@link UnresolvableError}\n * Throws if passed image source could not be resolved to an asset ID\n * @public\n */\nexport function getProject(src: SanityImageSource): SanityProjectDetails {\n  const path = tryGetAssetPath(src)\n  if (!path) {\n    throw new UnresolvableError(src, 'Failed to resolve project ID and dataset from source')\n  }\n\n  const [, , projectId, dataset] = path.match(pathPattern) || []\n  if (!projectId || !dataset) {\n    throw new UnresolvableError(src, 'Failed to resolve project ID and dataset from source')\n  }\n\n  return {projectId, dataset}\n}\n\n/**\n * {@inheritDoc getProject}\n * @returns Returns `undefined` instead of throwing if a value cannot be resolved\n * @public\n */\nexport const tryGetProject = getForgivingResolver(getProject)\n\n/**\n * Returns whether or not the passed filename is a valid image asset filename\n *\n * @param filename - Filename to validate\n * @returns Whether or not the filename is an image asset filename\n * @public\n */\nexport function isImageAssetFilename(filename: string): boolean {\n  return imageAssetFilenamePattern.test(filename)\n}\n\n/**\n * Returns whether or not the passed filename is a valid file asset filename\n *\n * @param filename - Filename to validate\n * @returns Whether or not the filename is a file asset filename\n * @public\n */\nexport function isFileAssetFilename(filename: string): boolean {\n  return fileAssetFilenamePattern.test(filename)\n}\n\n/**\n * Returns whether or not the passed filename is a valid file or image asset filename\n *\n * @param filename - Filename to validate\n * @returns Whether or not the filename is an asset filename\n * @public\n */\nexport function isAssetFilename(filename: string): boolean {\n  return isImageAssetFilename(filename) || isFileAssetFilename(filename)\n}\n\n/**\n * Return whether or not the passed source is a file source\n *\n * @param src - Source to check\n * @returns Whether or not the given source is a file source\n * @public\n */\nexport function isFileSource(src: unknown): src is SanityFileSource {\n  const assetId = tryGetAssetDocumentId(src)\n  return assetId ? assetId.startsWith('file-') : false\n}\n\n/**\n * Return whether or not the passed source is an image source\n *\n * @param src - Source to check\n * @returns Whether or not the given source is an image source\n * @public\n */\nexport function isImageSource(src: unknown): src is SanityImageSource {\n  const assetId = tryGetAssetDocumentId(src)\n  return assetId ? assetId.startsWith('image-') : false\n}\n","import {getAssetUrlType} from './parse.js'\n\n/**\n * Checks whether or not a given URL is a valid Sanity asset URL\n *\n * @param url - URL to test\n * @returns True if url is a valid Sanity asset URL, false otherwise\n * @public\n */\nexport function isSanityAssetUrl(url: string): boolean {\n  return getAssetUrlType(url) !== false\n}\n\n/**\n * Checks whether or not a given URL is a valid Sanity image asset URL\n *\n * @param url - URL to test\n * @returns True if url is a valid Sanity image asset URL, false otherwise\n * @public\n */\nexport function isSanityImageUrl(url: string): boolean {\n  return getAssetUrlType(url) === 'image'\n}\n\n/**\n * Checks whether or not a given URL is a valid Sanity file asset URL\n *\n * @param url - URL to test\n * @returns True if url is a valid Sanity file asset URL, false otherwise\n * @public\n */\nexport function isSanityFileUrl(url: string): boolean {\n  return getAssetUrlType(url) === 'file'\n}\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8],"debugId":null}},
    {"offset": {"line": 4895, "column": 0}, "map": {"version":3,"file":"image-url.umd.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/image-url/src/parseAssetId.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/image-url/src/parseSource.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/image-url/src/urlForImage.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/image-url/src/builder.ts"],"sourcesContent":["const example = 'image-Tb9Ew8CXIwaY6R1kjMvI0uRR-2000x3000-jpg'\n\nexport default function parseAssetId(ref: string) {\n  const [, id, dimensionString, format] = ref.split('-')\n\n  if (!id || !dimensionString || !format) {\n    throw new Error(`Malformed asset _ref '${ref}'. Expected an id like \"${example}\".`)\n  }\n\n  const [imgWidthStr, imgHeightStr] = dimensionString.split('x')\n\n  const width = +imgWidthStr\n  const height = +imgHeightStr\n\n  const isValidAssetId = isFinite(width) && isFinite(height)\n  if (!isValidAssetId) {\n    throw new Error(`Malformed asset _ref '${ref}'. Expected an id like \"${example}\".`)\n  }\n\n  return {id, width, height, format}\n}\n","import {\n  SanityAsset,\n  SanityImageObject,\n  SanityImageSource,\n  SanityImageWithAssetStub,\n  SanityReference,\n} from './types'\n\nconst isRef = (src: SanityImageSource): src is SanityReference => {\n  const source = src as SanityReference\n  return source ? typeof source._ref === 'string' : false\n}\n\nconst isAsset = (src: SanityImageSource): src is SanityAsset => {\n  const source = src as SanityAsset\n  return source ? typeof source._id === 'string' : false\n}\n\nconst isAssetStub = (src: SanityImageSource): src is SanityImageWithAssetStub => {\n  const source = src as SanityImageWithAssetStub\n  return source && source.asset ? typeof source.asset.url === 'string' : false\n}\n\n// Convert an asset-id, asset or image to an image record suitable for processing\n// eslint-disable-next-line complexity\nexport default function parseSource(source?: SanityImageSource) {\n  if (!source) {\n    return null\n  }\n\n  let image: SanityImageObject\n\n  if (typeof source === 'string' && isUrl(source)) {\n    // Someone passed an existing image url?\n    image = {\n      asset: {_ref: urlToId(source)},\n    }\n  } else if (typeof source === 'string') {\n    // Just an asset id\n    image = {\n      asset: {_ref: source},\n    }\n  } else if (isRef(source)) {\n    // We just got passed an asset directly\n    image = {\n      asset: source,\n    }\n  } else if (isAsset(source)) {\n    // If we were passed an image asset document\n    image = {\n      asset: {\n        _ref: source._id || '',\n      },\n    }\n  } else if (isAssetStub(source)) {\n    // If we were passed a partial asset (`url`, but no `_id`)\n    image = {\n      asset: {\n        _ref: urlToId(source.asset.url),\n      },\n    }\n  } else if (typeof source.asset === 'object') {\n    // Probably an actual image with materialized asset\n    image = {...source}\n  } else {\n    // We got something that does not look like an image, or it is an image\n    // that currently isn't sporting an asset.\n    return null\n  }\n\n  const img = source as SanityImageObject\n  if (img.crop) {\n    image.crop = img.crop\n  }\n\n  if (img.hotspot) {\n    image.hotspot = img.hotspot\n  }\n\n  return applyDefaults(image)\n}\n\nfunction isUrl(url: string) {\n  return /^https?:\\/\\//.test(`${url}`)\n}\n\nfunction urlToId(url: string) {\n  const parts = url.split('/').slice(-1)\n  return `image-${parts[0]}`.replace(/\\.([a-z]+)$/, '-$1')\n}\n\n// Mock crop and hotspot if image lacks it\nfunction applyDefaults(image: SanityImageObject) {\n  if (image.crop && image.hotspot) {\n    return image as Required<SanityImageObject>\n  }\n\n  // We need to pad in default values for crop or hotspot\n  const result = {...image}\n\n  if (!result.crop) {\n    result.crop = {\n      left: 0,\n      top: 0,\n      bottom: 0,\n      right: 0,\n    }\n  }\n\n  if (!result.hotspot) {\n    result.hotspot = {\n      x: 0.5,\n      y: 0.5,\n      height: 1.0,\n      width: 1.0,\n    }\n  }\n\n  return result as Required<SanityImageObject>\n}\n","import parseAssetId from './parseAssetId'\nimport parseSource from './parseSource'\nimport {\n  CropSpec,\n  HotspotSpec,\n  ImageUrlBuilderOptions,\n  ImageUrlBuilderOptionsWithAsset,\n  SanityAsset,\n  SanityImageFitResult,\n  SanityImageRect,\n  SanityReference,\n} from './types'\n\nexport const SPEC_NAME_TO_URL_NAME_MAPPINGS = [\n  ['width', 'w'],\n  ['height', 'h'],\n  ['format', 'fm'],\n  ['download', 'dl'],\n  ['blur', 'blur'],\n  ['sharpen', 'sharp'],\n  ['invert', 'invert'],\n  ['orientation', 'or'],\n  ['minHeight', 'min-h'],\n  ['maxHeight', 'max-h'],\n  ['minWidth', 'min-w'],\n  ['maxWidth', 'max-w'],\n  ['quality', 'q'],\n  ['fit', 'fit'],\n  ['crop', 'crop'],\n  ['saturation', 'sat'],\n  ['auto', 'auto'],\n  ['dpr', 'dpr'],\n  ['pad', 'pad'],\n  ['frame', 'frame']\n]\n\nexport default function urlForImage(options: ImageUrlBuilderOptions): string {\n  let spec = {...(options || {})}\n  const source = spec.source\n  delete spec.source\n\n  const image = parseSource(source)\n  if (!image) {\n    throw new Error(`Unable to resolve image URL from source (${JSON.stringify(source)})`)\n  }\n\n  const id = (image.asset as SanityReference)._ref || (image.asset as SanityAsset)._id || ''\n  const asset = parseAssetId(id)\n\n  // Compute crop rect in terms of pixel coordinates in the raw source image\n  const cropLeft = Math.round(image.crop.left * asset.width)\n  const cropTop = Math.round(image.crop.top * asset.height)\n  const crop = {\n    left: cropLeft,\n    top: cropTop,\n    width: Math.round(asset.width - image.crop.right * asset.width - cropLeft),\n    height: Math.round(asset.height - image.crop.bottom * asset.height - cropTop),\n  }\n\n  // Compute hot spot rect in terms of pixel coordinates\n  const hotSpotVerticalRadius = (image.hotspot.height * asset.height) / 2\n  const hotSpotHorizontalRadius = (image.hotspot.width * asset.width) / 2\n  const hotSpotCenterX = image.hotspot.x * asset.width\n  const hotSpotCenterY = image.hotspot.y * asset.height\n  const hotspot = {\n    left: hotSpotCenterX - hotSpotHorizontalRadius,\n    top: hotSpotCenterY - hotSpotVerticalRadius,\n    right: hotSpotCenterX + hotSpotHorizontalRadius,\n    bottom: hotSpotCenterY + hotSpotVerticalRadius,\n  }\n\n  // If irrelevant, or if we are requested to: don't perform crop/fit based on\n  // the crop/hotspot.\n  if (!(spec.rect || spec.focalPoint || spec.ignoreImageParams || spec.crop)) {\n    spec = {...spec, ...fit({crop, hotspot}, spec)}\n  }\n\n  return specToImageUrl({...spec, asset})\n}\n\n// eslint-disable-next-line complexity\nfunction specToImageUrl(spec: ImageUrlBuilderOptionsWithAsset) {\n  const cdnUrl = (spec.baseUrl || 'https://cdn.sanity.io').replace(/\\/+$/, '')\n  const vanityStub = spec.vanityName ? `/${spec.vanityName}` : '' \n  const filename = `${spec.asset.id}-${spec.asset.width}x${spec.asset.height}.${spec.asset.format}${vanityStub}`\n  const baseUrl = `${cdnUrl}/images/${spec.projectId}/${spec.dataset}/${filename}` \n\n  const params = []\n\n  if (spec.rect) {\n    // Only bother url with a crop if it actually crops anything\n    const {left, top, width, height} = spec.rect\n    const isEffectiveCrop =\n      left !== 0 || top !== 0 || height !== spec.asset.height || width !== spec.asset.width\n\n    if (isEffectiveCrop) {\n      params.push(`rect=${left},${top},${width},${height}`)\n    }\n  }\n\n  if (spec.bg) {\n    params.push(`bg=${spec.bg}`)\n  }\n\n  if (spec.focalPoint) {\n    params.push(`fp-x=${spec.focalPoint.x}`)\n    params.push(`fp-y=${spec.focalPoint.y}`)\n  }\n\n  const flip = [spec.flipHorizontal && 'h', spec.flipVertical && 'v'].filter(Boolean).join('')\n  if (flip) {\n    params.push(`flip=${flip}`)\n  }\n\n  // Map from spec name to url param name, and allow using the actual param name as an alternative\n  SPEC_NAME_TO_URL_NAME_MAPPINGS.forEach((mapping) => {\n    const [specName, param] = mapping\n    if (typeof spec[specName] !== 'undefined') {\n      params.push(`${param}=${encodeURIComponent(spec[specName])}`)\n    } else if (typeof spec[param] !== 'undefined') {\n      params.push(`${param}=${encodeURIComponent(spec[param])}`)\n    }\n  })\n\n  if (params.length === 0) {\n    return baseUrl\n  }\n\n  return `${baseUrl}?${params.join('&')}`\n}\n\nfunction fit(\n  source: {crop: CropSpec; hotspot: HotspotSpec},\n  spec: ImageUrlBuilderOptions\n): SanityImageFitResult {\n  let cropRect: SanityImageRect\n\n  const imgWidth = spec.width\n  const imgHeight = spec.height\n\n  // If we are not constraining the aspect ratio, we'll just use the whole crop\n  if (!(imgWidth && imgHeight)) {\n    return {width: imgWidth, height: imgHeight, rect: source.crop}\n  }\n\n  const crop = source.crop\n  const hotspot = source.hotspot\n\n  // If we are here, that means aspect ratio is locked and fitting will be a bit harder\n  const desiredAspectRatio = imgWidth / imgHeight\n  const cropAspectRatio = crop.width / crop.height\n\n  if (cropAspectRatio > desiredAspectRatio) {\n    // The crop is wider than the desired aspect ratio. That means we are cutting from the sides\n    const height = Math.round(crop.height)\n    const width = Math.round(height * desiredAspectRatio)\n    const top = Math.max(0, Math.round(crop.top))\n\n    // Center output horizontally over hotspot\n    const hotspotXCenter = Math.round((hotspot.right - hotspot.left) / 2 + hotspot.left)\n    let left = Math.max(0, Math.round(hotspotXCenter - width / 2))\n\n    // Keep output within crop\n    if (left < crop.left) {\n      left = crop.left\n    } else if (left + width > crop.left + crop.width) {\n      left = crop.left + crop.width - width\n    }\n\n    cropRect = {left, top, width, height}\n  } else {\n    // The crop is taller than the desired ratio, we are cutting from top and bottom\n    const width = crop.width\n    const height = Math.round(width / desiredAspectRatio)\n    const left = Math.max(0, Math.round(crop.left))\n\n    // Center output vertically over hotspot\n    const hotspotYCenter = Math.round((hotspot.bottom - hotspot.top) / 2 + hotspot.top)\n    let top = Math.max(0, Math.round(hotspotYCenter - height / 2))\n\n    // Keep output rect within crop\n    if (top < crop.top) {\n      top = crop.top\n    } else if (top + height > crop.top + crop.height) {\n      top = crop.top + crop.height - height\n    }\n\n    cropRect = {left, top, width, height}\n  }\n\n  return {\n    width: imgWidth,\n    height: imgHeight,\n    rect: cropRect,\n  }\n}\n\n// For backwards-compatibility\nexport {parseSource}\n","import type {\n  AutoMode,\n  CropMode,\n  FitMode,\n  ImageFormat,\n  ImageUrlBuilderOptions,\n  ImageUrlBuilderOptionsWithAliases,\n  SanityModernClientLike,\n  Orientation,\n  SanityClientLike,\n  SanityImageSource,\n  SanityProjectDetails,\n} from './types'\nimport urlForImage, {SPEC_NAME_TO_URL_NAME_MAPPINGS} from './urlForImage'\n\nconst validFits = ['clip', 'crop', 'fill', 'fillmax', 'max', 'scale', 'min']\nconst validCrops = ['top', 'bottom', 'left', 'right', 'center', 'focalpoint', 'entropy']\nconst validAutoModes = ['format']\n\nfunction isSanityModernClientLike(\n  client?: SanityClientLike | SanityProjectDetails | SanityModernClientLike\n): client is SanityModernClientLike {\n  return client && 'config' in client ? typeof client.config === 'function' : false\n}\n\nfunction isSanityClientLike(\n  client?: SanityClientLike | SanityProjectDetails | SanityModernClientLike\n): client is SanityClientLike {\n  return client && 'clientConfig' in client ? typeof client.clientConfig === 'object' : false\n}\n\nfunction rewriteSpecName(key: string) {\n  const specs = SPEC_NAME_TO_URL_NAME_MAPPINGS\n  for (const entry of specs) {\n    const [specName, param] = entry\n    if (key === specName || key === param) {\n      return specName\n    }\n  }\n\n  return key\n}\n\nexport default function urlBuilder(\n  options?: SanityClientLike | SanityProjectDetails | SanityModernClientLike\n) {\n  // Did we get a modernish client?\n  if (isSanityModernClientLike(options)) {\n    // Inherit config from client\n    const {apiHost: apiUrl, projectId, dataset} = options.config()\n    const apiHost = apiUrl || 'https://api.sanity.io'\n    return new ImageUrlBuilder(null, {\n      baseUrl: apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n      projectId,\n      dataset,\n    })\n  }\n\n  // Did we get a SanityClient?\n  if (isSanityClientLike(options)) {\n    // Inherit config from client\n    const {apiHost: apiUrl, projectId, dataset} = options.clientConfig\n    const apiHost = apiUrl || 'https://api.sanity.io'\n    return new ImageUrlBuilder(null, {\n      baseUrl: apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n      projectId,\n      dataset,\n    })\n  }\n\n  // Or just accept the options as given\n  return new ImageUrlBuilder(null, options || {})\n}\n\nexport class ImageUrlBuilder {\n  public options: ImageUrlBuilderOptions\n\n  constructor(parent: ImageUrlBuilder | null, options: ImageUrlBuilderOptions) {\n    this.options = parent\n      ? {...(parent.options || {}), ...(options || {})} // Merge parent options\n      : {...(options || {})} // Copy options\n  }\n\n  withOptions(options: Partial<ImageUrlBuilderOptionsWithAliases>) {\n    const baseUrl = options.baseUrl || this.options.baseUrl\n\n    const newOptions: {[key: string]: any} = {baseUrl}\n    for (const key in options) {\n      if (options.hasOwnProperty(key)) {\n        const specKey = rewriteSpecName(key)\n        newOptions[specKey] = options[key]\n      }\n    }\n\n    return new ImageUrlBuilder(this, {baseUrl, ...newOptions})\n  }\n\n  // The image to be represented. Accepts a Sanity 'image'-document, 'asset'-document or\n  // _id of asset. To get the benefit of automatic hot-spot/crop integration with the content\n  // studio, the 'image'-document must be provided.\n  image(source: SanityImageSource) {\n    return this.withOptions({source})\n  }\n\n  // Specify the dataset\n  dataset(dataset: string) {\n    return this.withOptions({dataset})\n  }\n\n  // Specify the projectId\n  projectId(projectId: string) {\n    return this.withOptions({projectId})\n  }\n\n  // Specify background color\n  bg(bg: string) {\n    return this.withOptions({bg})\n  }\n\n  // Set DPR scaling factor\n  dpr(dpr: number) {\n    // A DPR of 1 is the default - so only include it if we have a different value\n    return this.withOptions(dpr && dpr !== 1 ? {dpr} : {})\n  }\n\n  // Specify the width of the image in pixels\n  width(width: number) {\n    return this.withOptions({width})\n  }\n\n  // Specify the height of the image in pixels\n  height(height: number) {\n    return this.withOptions({height})\n  }\n\n  // Specify focal point in fraction of image dimensions. Each component 0.0-1.0\n  focalPoint(x: number, y: number) {\n    return this.withOptions({focalPoint: {x, y}})\n  }\n\n  maxWidth(maxWidth: number) {\n    return this.withOptions({maxWidth})\n  }\n\n  minWidth(minWidth: number) {\n    return this.withOptions({minWidth})\n  }\n\n  maxHeight(maxHeight: number) {\n    return this.withOptions({maxHeight})\n  }\n\n  minHeight(minHeight: number) {\n    return this.withOptions({minHeight})\n  }\n\n  // Specify width and height in pixels\n  size(width: number, height: number) {\n    return this.withOptions({width, height})\n  }\n\n  // Specify blur between 0 and 100\n  blur(blur: number) {\n    return this.withOptions({blur})\n  }\n\n  sharpen(sharpen: number) {\n    return this.withOptions({sharpen})\n  }\n\n  // Specify the desired rectangle of the image\n  rect(left: number, top: number, width: number, height: number) {\n    return this.withOptions({rect: {left, top, width, height}})\n  }\n\n  // Specify the image format of the image. 'jpg', 'pjpg', 'png', 'webp'\n  format(format?: ImageFormat | undefined) {\n    return this.withOptions({format})\n  }\n\n  invert(invert: boolean) {\n    return this.withOptions({invert})\n  }\n\n  // Rotation in degrees 0, 90, 180, 270\n  orientation(orientation: Orientation) {\n    return this.withOptions({orientation})\n  }\n\n  // Compression quality 0-100\n  quality(quality: number) {\n    return this.withOptions({quality})\n  }\n\n  // Make it a download link. Parameter is default filename.\n  forceDownload(download: boolean | string) {\n    return this.withOptions({download})\n  }\n\n  // Flip image horizontally\n  flipHorizontal() {\n    return this.withOptions({flipHorizontal: true})\n  }\n\n  // Flip image vertically\n  flipVertical() {\n    return this.withOptions({flipVertical: true})\n  }\n\n  // Ignore crop/hotspot from image record, even when present\n  ignoreImageParams() {\n    return this.withOptions({ignoreImageParams: true})\n  }\n\n  fit(value: FitMode) {\n    if (validFits.indexOf(value) === -1) {\n      throw new Error(`Invalid fit mode \"${value}\"`)\n    }\n\n    return this.withOptions({fit: value})\n  }\n\n  crop(value: CropMode) {\n    if (validCrops.indexOf(value) === -1) {\n      throw new Error(`Invalid crop mode \"${value}\"`)\n    }\n\n    return this.withOptions({crop: value})\n  }\n\n  // Saturation\n  saturation(saturation: number) {\n    return this.withOptions({saturation})\n  }\n\n  auto(value: AutoMode) {\n    if (validAutoModes.indexOf(value) === -1) {\n      throw new Error(`Invalid auto mode \"${value}\"`)\n    }\n\n    return this.withOptions({auto: value})\n  }\n\n  // Specify the number of pixels to pad the image\n  pad(pad: number) {\n    return this.withOptions({pad})\n  }\n\n  // Vanity URL for more SEO friendly URLs\n  vanityName(value: string) {\n    return this.withOptions({vanityName: value})\n  }\n\n  frame(frame: number) {\n    if (frame !== 1) {\n      throw new Error(`Invalid frame value \"${frame}\"`)\n    }\n\n    return this.withOptions({frame})\n  }\n\n  // Gets the url based on the submitted parameters\n  url() {\n    return urlForImage(this.options)\n  }\n\n  // Alias for url()\n  toString() {\n    return this.url()\n  }\n}\n"],"names":["example","parseAssetId","ref","_ref$split","split","id","dimensionString","format","Error","_dimensionString$spli","imgWidthStr","imgHeightStr","width","height","isValidAssetId","isFinite","isRef","src","source","_ref","isAsset","_id","isAssetStub","asset","url","parseSource","image","isUrl","urlToId","_extends","img","crop","hotspot","applyDefaults","test","parts","slice","replace","result","left","top","bottom","right","x","y","SPEC_NAME_TO_URL_NAME_MAPPINGS","urlForImage","options","spec","JSON","stringify","cropLeft","Math","round","cropTop","hotSpotVerticalRadius","hotSpotHorizontalRadius","hotSpotCenterX","hotSpotCenterY","rect","focalPoint","ignoreImageParams","fit","specToImageUrl","cdnUrl","baseUrl","vanityStub","vanityName","filename","projectId","dataset","params","_spec$rect","isEffectiveCrop","push","bg","flip","flipHorizontal","flipVertical","filter","Boolean","join","forEach","mapping","specName","param","encodeURIComponent","length","cropRect","imgWidth","imgHeight","desiredAspectRatio","cropAspectRatio","max","hotspotXCenter","hotspotYCenter","validFits","validCrops","validAutoModes","isSanityModernClientLike","client","config","isSanityClientLike","clientConfig","rewriteSpecName","key","specs","_iterator","_createForOfIteratorHelperLoose","_step","done","entry","value","urlBuilder","_options$config","apiUrl","apiHost","ImageUrlBuilder","_options$clientConfig","parent","_proto","prototype","withOptions","newOptions","hasOwnProperty","specKey","dpr","maxWidth","minWidth","maxHeight","minHeight","size","blur","sharpen","invert","orientation","quality","forceDownload","download","indexOf","saturation","auto","pad","frame","toString"],"mappings":"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","ignoreList":[0,1,2,3],"debugId":null}},
    {"offset": {"line": 5574, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/diff/clone.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/diff/commonOverlap.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/diff/commonPrefix.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/diff/commonSuffix.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/utils/surrogatePairs.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/diff/bisect.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/diff/halfMatch.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/diff/charsToLines.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/diff/linesToChars.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/diff/lineMode.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/diff/compute.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/diff/diff.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/diff/cleanup.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/match/bitap.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/match/match.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/diff/diffText.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/diff/levenshtein.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/diff/xIndex.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/utils/utf8Indices.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/patch/constants.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/patch/addPadding.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/patch/createPatchObject.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/patch/splitMax.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/patch/apply.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/patch/make.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/patch/parse.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-match-patch/src/patch/stringify.ts"],"sourcesContent":["import {type Diff} from './diff.js'\n\n/**\n * Clones a diff tuple.\n *\n * @param diff - Tuple to clone.\n * @returns New, cloned tuple.\n * @internal\n */\nexport function cloneDiff(diff: Diff): Diff {\n  const [type, patch] = diff\n  return [type, patch]\n}\n","/**\n * Determine if the suffix of one string is the prefix of another.\n *\n * @param textA - First string.\n * @param textB - Second string.\n * @returns Number of characters common to the end of the first string\n *   and the start of the second string.\n * @internal\n */\nexport function getCommonOverlap(textA: string, textB: string): number {\n  let text1 = textA\n  let text2 = textB\n\n  // Cache the text lengths to prevent multiple calls.\n  const text1Length = text1.length\n  const text2Length = text2.length\n\n  // Eliminate the null case.\n  if (text1Length === 0 || text2Length === 0) {\n    return 0\n  }\n\n  // Truncate the longer string.\n  if (text1Length > text2Length) {\n    text1 = text1.substring(text1Length - text2Length)\n  } else if (text1Length < text2Length) {\n    text2 = text2.substring(0, text1Length)\n  }\n  const textLength = Math.min(text1Length, text2Length)\n\n  // Quick check for the worst case.\n  if (text1 === text2) {\n    return textLength\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  let best = 0\n  let length = 1\n\n  for (let found = 0; found !== -1; ) {\n    const pattern = text1.substring(textLength - length)\n    found = text2.indexOf(pattern)\n    if (found === -1) {\n      return best\n    }\n    length += found\n    if (found === 0 || text1.substring(textLength - length) === text2.substring(0, length)) {\n      best = length\n      length++\n    }\n  }\n\n  // Only for typescript, never reached\n  return best\n}\n","/**\n * Determine the common prefix of two strings.\n *\n * @param text1 - First string.\n * @param text2 - Second string.\n * @returns The number of characters common to the start of each string.\n * @internal\n */\nexport function getCommonPrefix(text1: string, text2: string): number {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1[0] !== text2[0]) {\n    return 0\n  }\n\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  let pointerMin = 0\n  let pointerMax = Math.min(text1.length, text2.length)\n  let pointerMid = pointerMax\n  let pointerStart = 0\n  while (pointerMin < pointerMid) {\n    if (text1.substring(pointerStart, pointerMid) === text2.substring(pointerStart, pointerMid)) {\n      pointerMin = pointerMid\n      pointerStart = pointerMin\n    } else {\n      pointerMax = pointerMid\n    }\n    pointerMid = Math.floor((pointerMax - pointerMin) / 2 + pointerMin)\n  }\n  return pointerMid\n}\n","/**\n * Determine the common suffix of two strings.\n *\n * @param text1 - First string.\n * @param text2 - Second string.\n * @returns The number of characters common to the end of each string.\n * @internal\n */\nexport function getCommonSuffix(text1: string, text2: string): number {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1[text1.length - 1] !== text2[text2.length - 1]) {\n    return 0\n  }\n\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  let pointerMin = 0\n  let pointerMax = Math.min(text1.length, text2.length)\n  let pointerMid = pointerMax\n  let pointerEnd = 0\n  while (pointerMin < pointerMid) {\n    if (\n      text1.substring(text1.length - pointerMid, text1.length - pointerEnd) ===\n      text2.substring(text2.length - pointerMid, text2.length - pointerEnd)\n    ) {\n      pointerMin = pointerMid\n      pointerEnd = pointerMin\n    } else {\n      pointerMax = pointerMid\n    }\n    pointerMid = Math.floor((pointerMax - pointerMin) / 2 + pointerMin)\n  }\n\n  return pointerMid\n}\n","/**\n * Checks if the character is a high surrogate\n *\n * @param char - Character to check\n * @returns True if high surrogate, false otherwise\n */\nexport function isHighSurrogate(char: string): boolean {\n  const charCode = char.charCodeAt(0)\n  return charCode >= 0xd800 && charCode <= 0xdbff\n}\n\n/**\n * Checks if the character is a low surrogate\n *\n * @param char - Character to check\n * @returns True if low surrogate, false otherwise\n */\nexport function isLowSurrogate(char: string): boolean {\n  const charCode = char.charCodeAt(0)\n  return charCode >= 0xdc00 && charCode <= 0xdfff\n}\n","import {type Diff, DIFF_DELETE, DIFF_INSERT, doDiff} from './diff.js'\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n *\n * @param text1 - Old string to be diffed.\n * @param text2 - New string to be diffed.\n * @returns Array of diff tuples.\n * @internal\n */\nexport function bisect(text1: string, text2: string, deadline: number): Diff[] {\n  // Cache the text lengths to prevent multiple calls.\n  const text1Length = text1.length\n  const text2Length = text2.length\n  const maxD = Math.ceil((text1Length + text2Length) / 2)\n  const vOffset = maxD\n  const vLength = 2 * maxD\n  const v1 = new Array(vLength)\n  const v2 = new Array(vLength)\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (let x = 0; x < vLength; x++) {\n    v1[x] = -1\n    v2[x] = -1\n  }\n  v1[vOffset + 1] = 0\n  v2[vOffset + 1] = 0\n  const delta = text1Length - text2Length\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  const front = delta % 2 !== 0\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  let k1start = 0\n  let k1end = 0\n  let k2start = 0\n  let k2end = 0\n  for (let d = 0; d < maxD; d++) {\n    // Bail out if deadline is reached.\n    if (Date.now() > deadline) {\n      break\n    }\n    // Walk the front path one step.\n    for (let k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      const k1Offset = vOffset + k1\n      let x1\n      if (k1 === -d || (k1 !== d && v1[k1Offset - 1] < v1[k1Offset + 1])) {\n        x1 = v1[k1Offset + 1]\n      } else {\n        x1 = v1[k1Offset - 1] + 1\n      }\n      let y1 = x1 - k1\n      while (x1 < text1Length && y1 < text2Length && text1.charAt(x1) === text2.charAt(y1)) {\n        x1++\n        y1++\n      }\n      v1[k1Offset] = x1\n      if (x1 > text1Length) {\n        // Ran off the right of the graph.\n        k1end += 2\n      } else if (y1 > text2Length) {\n        // Ran off the bottom of the graph.\n        k1start += 2\n      } else if (front) {\n        const k2Offset = vOffset + delta - k1\n        if (k2Offset >= 0 && k2Offset < vLength && v2[k2Offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          const x2 = text1Length - v2[k2Offset]\n          if (x1 >= x2) {\n            // Overlap detected.\n            return bisectSplit(text1, text2, x1, y1, deadline)\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (let k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      const k2Offset = vOffset + k2\n      let x2\n      if (k2 === -d || (k2 !== d && v2[k2Offset - 1] < v2[k2Offset + 1])) {\n        x2 = v2[k2Offset + 1]\n      } else {\n        x2 = v2[k2Offset - 1] + 1\n      }\n      let y2 = x2 - k2\n      while (\n        x2 < text1Length &&\n        y2 < text2Length &&\n        text1.charAt(text1Length - x2 - 1) === text2.charAt(text2Length - y2 - 1)\n      ) {\n        x2++\n        y2++\n      }\n      v2[k2Offset] = x2\n      if (x2 > text1Length) {\n        // Ran off the left of the graph.\n        k2end += 2\n      } else if (y2 > text2Length) {\n        // Ran off the top of the graph.\n        k2start += 2\n      } else if (!front) {\n        const k1Offset = vOffset + delta - k2\n        if (k1Offset >= 0 && k1Offset < vLength && v1[k1Offset] !== -1) {\n          const x1 = v1[k1Offset]\n          const y1 = vOffset + x1 - k1Offset\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1Length - x2\n          if (x1 >= x2) {\n            // Overlap detected.\n            return bisectSplit(text1, text2, x1, y1, deadline)\n          }\n        }\n      }\n    }\n  }\n  // Number of diffs equals number of characters, no commonality at all.\n  return [\n    [DIFF_DELETE, text1],\n    [DIFF_INSERT, text2],\n  ]\n}\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n *\n * @param text1 - Old string to be diffed.\n * @param text2 - New string to be diffed.\n * @param x - Index of split point in text1.\n * @param y - Index of split point in text2.\n * @param deadline - Time at which to bail if not yet complete.\n * @returns Array of diff tuples.\n * @internal\n */\nfunction bisectSplit(text1: string, text2: string, x: number, y: number, deadline: number): Diff[] {\n  const text1a = text1.substring(0, x)\n  const text2a = text2.substring(0, y)\n  const text1b = text1.substring(x)\n  const text2b = text2.substring(y)\n\n  // Compute both diffs serially.\n  const diffs = doDiff(text1a, text2a, {checkLines: false, deadline})\n  const diffsb = doDiff(text1b, text2b, {checkLines: false, deadline})\n\n  return diffs.concat(diffsb)\n}\n","import {getCommonPrefix} from './commonPrefix.js'\nimport {getCommonSuffix} from './commonSuffix.js'\n\ntype HalfMatch = [string, string, string, string, string]\n\n/**\n * Does a slice of shorttext exist within longtext such that the slice\n * is at least half the length of longtext?\n *\n * @param longtext - Longer string.\n * @param shorttext - Shorter string.\n * @param i - Start index of quarter length slice within longtext.\n * @returns Five element Array, containing the prefix of\n *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n *     of shorttext and the common middle.  Or null if there was no match.\n * @internal\n */\nexport function findHalfMatch(text1: string, text2: string, timeout = 1): null | HalfMatch {\n  if (timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null\n  }\n\n  const longText = text1.length > text2.length ? text1 : text2\n  const shortText = text1.length > text2.length ? text2 : text1\n  if (longText.length < 4 || shortText.length * 2 < longText.length) {\n    return null // Pointless.\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  const halfMatch1 = halfMatchI(longText, shortText, Math.ceil(longText.length / 4))\n  // Check again based on the third quarter.\n  const halfMatch2 = halfMatchI(longText, shortText, Math.ceil(longText.length / 2))\n\n  let halfMatch\n  if (halfMatch1 && halfMatch2) {\n    // Both matched.  Select the longest.\n    halfMatch = halfMatch1[4].length > halfMatch2[4].length ? halfMatch1 : halfMatch2\n  } else if (!halfMatch1 && !halfMatch2) {\n    return null\n  } else if (!halfMatch2) {\n    halfMatch = halfMatch1\n  } else if (!halfMatch1) {\n    halfMatch = halfMatch2\n  }\n\n  if (!halfMatch) {\n    throw new Error('Unable to find a half match.')\n  }\n\n  // A half-match was found, sort out the return data.\n  let text1A: string\n  let text1B: string\n  let text2A: string\n  let text2B: string\n\n  if (text1.length > text2.length) {\n    text1A = halfMatch[0]\n    text1B = halfMatch[1]\n    text2A = halfMatch[2]\n    text2B = halfMatch[3]\n  } else {\n    text2A = halfMatch[0]\n    text2B = halfMatch[1]\n    text1A = halfMatch[2]\n    text1B = halfMatch[3]\n  }\n  const midCommon = halfMatch[4]\n  return [text1A, text1B, text2A, text2B, midCommon]\n}\n\n/**\n * Do the two texts share a slice which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n *\n * @param longText - First string.\n * @param shortText - Second string.\n * @returns Five element array, containing the prefix of longText,\n *     the suffix of longText, the prefix of shortText, the suffix of\n *     shortText and the common middle.  Or null if there was no match.\n * @internal\n */\nfunction halfMatchI(longText: string, shortText: string, i: number): null | HalfMatch {\n  // Start with a 1/4 length slice at position i as a seed.\n  const seed = longText.slice(i, i + Math.floor(longText.length / 4))\n  let j = -1\n  let bestCommon = ''\n  let bestLongTextA\n  let bestLongTextB\n  let bestShortTextA\n  let bestShortTextB\n\n  while ((j = shortText.indexOf(seed, j + 1)) !== -1) {\n    const prefixLength = getCommonPrefix(longText.slice(i), shortText.slice(j))\n    const suffixLength = getCommonSuffix(longText.slice(0, i), shortText.slice(0, j))\n    if (bestCommon.length < suffixLength + prefixLength) {\n      bestCommon = shortText.slice(j - suffixLength, j) + shortText.slice(j, j + prefixLength)\n      bestLongTextA = longText.slice(0, i - suffixLength)\n      bestLongTextB = longText.slice(i + prefixLength)\n      bestShortTextA = shortText.slice(0, j - suffixLength)\n      bestShortTextB = shortText.slice(j + prefixLength)\n    }\n  }\n  if (bestCommon.length * 2 >= longText.length) {\n    return [\n      bestLongTextA || '',\n      bestLongTextB || '',\n      bestShortTextA || '',\n      bestShortTextB || '',\n      bestCommon || '',\n    ]\n  }\n\n  return null\n}\n","import {type Diff} from './diff.js'\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of text.\n *\n * @param diffs - Array of diff tuples.\n * @param lineArray - Array of unique strings.\n * @internal\n */\nexport function charsToLines(diffs: Diff[], lineArray: string[]): void {\n  for (let x = 0; x < diffs.length; x++) {\n    const chars = diffs[x][1]\n    const text: string[] = []\n    for (let y = 0; y < chars.length; y++) {\n      text[y] = lineArray[chars.charCodeAt(y)]\n    }\n    diffs[x][1] = text.join('')\n  }\n}\n","/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n *\n * @param textA - First string.\n * @param textB - Second string.\n * @returns An object containing the encoded textA, the encoded textB and\n *   the array of unique strings. The zeroth element of the array of unique\n *   strings is intentionally blank.\n * @internal\n */\nexport function linesToChars(\n  textA: string,\n  textB: string,\n): {\n  chars1: string\n  chars2: string\n  lineArray: string[]\n} {\n  const lineArray: string[] = [] // e.g. lineArray[4] === 'Hello\\n'\n  const lineHash: {[key: string]: number} = {} // e.g. lineHash['Hello\\n'] === 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = ''\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   *\n   * @param text - String to encode.\n   * @returns Encoded string.\n   * @internal\n   */\n  function diffLinesToMunge(text: string) {\n    let chars = ''\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    let lineStart = 0\n    let lineEnd = -1\n    // Keeping our own length variable is faster than looking it up.\n    let lineArrayLength = lineArray.length\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart)\n      if (lineEnd === -1) {\n        lineEnd = text.length - 1\n      }\n      let line = text.slice(lineStart, lineEnd + 1)\n\n      // eslint-disable-next-line no-prototype-builtins\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) : lineHash[line] !== undefined) {\n        chars += String.fromCharCode(lineHash[line])\n      } else {\n        if (lineArrayLength === maxLines) {\n          // Bail out at 65535 because\n          // String.fromCharCode(65536) == String.fromCharCode(0)\n          line = text.slice(lineStart)\n          lineEnd = text.length\n        }\n        chars += String.fromCharCode(lineArrayLength)\n        lineHash[line] = lineArrayLength\n        lineArray[lineArrayLength++] = line\n      }\n      lineStart = lineEnd + 1\n    }\n    return chars\n  }\n  // Allocate 2/3rds of the space for textA, the rest for textB.\n  let maxLines = 40000\n  const chars1 = diffLinesToMunge(textA)\n  maxLines = 65535\n  const chars2 = diffLinesToMunge(textB)\n  return {chars1, chars2, lineArray}\n}\n","import {charsToLines} from './charsToLines.js'\nimport {cleanupSemantic} from './cleanup.js'\nimport {\n  type Diff,\n  DIFF_DELETE,\n  DIFF_EQUAL,\n  DIFF_INSERT,\n  doDiff,\n  type InternalDiffOptions,\n} from './diff.js'\nimport {linesToChars} from './linesToChars.js'\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n *\n * @param textA - Old string to be diffed.\n * @param textB - New string to be diffed.\n * @param options - Options for the differ.\n * @returns Array of diff tuples.\n * @internal\n */\nexport function doLineModeDiff(textA: string, textB: string, opts: InternalDiffOptions): Diff[] {\n  // Don't reassign fn params\n  let text1 = textA\n  let text2 = textB\n\n  // Scan the text on a line-by-line basis first.\n  const a = linesToChars(text1, text2)\n  text1 = a.chars1\n  text2 = a.chars2\n  const linearray = a.lineArray\n\n  let diffs = doDiff(text1, text2, {\n    checkLines: false,\n    deadline: opts.deadline,\n  })\n\n  // Convert the diff back to original text.\n  charsToLines(diffs, linearray)\n  // Eliminate freak matches (e.g. blank lines)\n  diffs = cleanupSemantic(diffs)\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push([DIFF_EQUAL, ''])\n  let pointer = 0\n  let countDelete = 0\n  let countInsert = 0\n  let textDelete = ''\n  let textInsert = ''\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        countInsert++\n        textInsert += diffs[pointer][1]\n        break\n      case DIFF_DELETE:\n        countDelete++\n        textDelete += diffs[pointer][1]\n        break\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (countDelete >= 1 && countInsert >= 1) {\n          // Delete the offending records and add the merged ones.\n          diffs.splice(pointer - countDelete - countInsert, countDelete + countInsert)\n          pointer = pointer - countDelete - countInsert\n          const aa = doDiff(textDelete, textInsert, {\n            checkLines: false,\n            deadline: opts.deadline,\n          })\n          for (let j = aa.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, aa[j])\n          }\n          pointer += aa.length\n        }\n        countInsert = 0\n        countDelete = 0\n        textDelete = ''\n        textInsert = ''\n        break\n      default:\n        throw new Error('Unknown diff operation.')\n    }\n    pointer++\n  }\n  diffs.pop() // Remove the dummy entry at the end.\n\n  return diffs\n}\n","import {bisect} from './bisect.js'\nimport {\n  type Diff,\n  DIFF_DELETE,\n  DIFF_EQUAL,\n  DIFF_INSERT,\n  doDiff,\n  type InternalDiffOptions,\n} from './diff.js'\nimport {findHalfMatch} from './halfMatch.js'\nimport {doLineModeDiff} from './lineMode.js'\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n *\n * @param text1 - Old string to be diffed.\n * @param text2 - New string to be diffed.\n * @param checklines - Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param deadline - Time when the diff should be complete by.\n * @returns Array of diff tuples.\n * @internal\n */\nexport function computeDiff(text1: string, text2: string, opts: InternalDiffOptions): Diff[] {\n  let diffs: Diff[]\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]]\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]]\n  }\n\n  const longtext = text1.length > text2.length ? text1 : text2\n  const shorttext = text1.length > text2.length ? text2 : text1\n  const i = longtext.indexOf(shorttext)\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)],\n    ]\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = DIFF_DELETE\n      diffs[2][0] = DIFF_DELETE\n    }\n    return diffs\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [\n      [DIFF_DELETE, text1],\n      [DIFF_INSERT, text2],\n    ]\n  }\n\n  // Check to see if the problem can be split in two.\n  const halfMatch = findHalfMatch(text1, text2)\n  if (halfMatch) {\n    // A half-match was found, sort out the return data.\n    const text1A = halfMatch[0]\n    const text1B = halfMatch[1]\n    const text2A = halfMatch[2]\n    const text2B = halfMatch[3]\n    const midCommon = halfMatch[4]\n    // Send both pairs off for separate processing.\n    const diffsA = doDiff(text1A, text2A, opts)\n    const diffsB = doDiff(text1B, text2B, opts)\n    // Merge the results.\n    return diffsA.concat([[DIFF_EQUAL, midCommon]], diffsB)\n  }\n\n  if (opts.checkLines && text1.length > 100 && text2.length > 100) {\n    return doLineModeDiff(text1, text2, opts)\n  }\n\n  return bisect(text1, text2, opts.deadline)\n}\n","import {isHighSurrogate, isLowSurrogate} from '../utils/surrogatePairs.js'\nimport {cleanupMerge} from './cleanup.js'\nimport {getCommonPrefix} from './commonPrefix.js'\nimport {getCommonSuffix} from './commonSuffix.js'\nimport {computeDiff} from './compute.js'\n\n/**\n * Diff type for deleted text.\n *\n * @public\n */\nexport const DIFF_DELETE = -1\n\n/**\n * Diff type for inserted text.\n *\n * @public\n */\nexport const DIFF_INSERT = 1\n\n/**\n * Diff type for text that is equal.\n *\n * @public\n */\nexport const DIFF_EQUAL = 0\n\n/**\n * The three different types of changes possible in a diff:\n * - `DIFF_DELETE`: a deletion of text\n * - `DIFF_INSERT`: an insertion of text\n * - `DIFF_EQUAL` : an equal text\n *\n * @public\n */\nexport type DiffType = typeof DIFF_DELETE | typeof DIFF_INSERT | typeof DIFF_EQUAL\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n *\n * @public\n */\nexport type Diff = [DiffType, string]\n\n/**\n * Options for generating a diff.\n *\n * @public\n */\nexport interface DiffOptions {\n  checkLines: boolean\n  timeout: number\n}\n\n/**\n * @internal\n */\nexport interface InternalDiffOptions {\n  checkLines: boolean\n\n  /**\n   * Time when the diff should be complete by.\n   */\n  deadline: number\n}\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n *\n * @param textA - Old string to be diffed.\n * @param textA - New string to be diffed.\n * @returns Array of diff tuples.\n * @public\n */\nexport function diff(\n  textA: null | string,\n  textB: null | string,\n  opts?: Partial<DiffOptions>,\n): Diff[] {\n  // Check for null inputs.\n  if (textA === null || textB === null) {\n    throw new Error('Null input. (diff)')\n  }\n\n  const diffs = doDiff(textA, textB, createInternalOpts(opts || {}))\n  adjustDiffForSurrogatePairs(diffs)\n  return diffs\n}\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n *\n * @param textA - Old string to be diffed.\n * @param textB - New string to be diffed.\n * @returns Array of diff tuples.\n * @internal\n */\nexport function doDiff(textA: string, textB: string, options: InternalDiffOptions): Diff[] {\n  // Don't reassign fn params\n  let text1 = textA\n  let text2 = textB\n\n  // Check for equality (speedup).\n  if (text1 === text2) {\n    return text1 ? [[DIFF_EQUAL, text1]] : []\n  }\n\n  // Trim off common prefix (speedup).\n  let commonlength = getCommonPrefix(text1, text2)\n  const commonprefix = text1.substring(0, commonlength)\n  text1 = text1.substring(commonlength)\n  text2 = text2.substring(commonlength)\n\n  // Trim off common suffix (speedup).\n  commonlength = getCommonSuffix(text1, text2)\n  const commonsuffix = text1.substring(text1.length - commonlength)\n  text1 = text1.substring(0, text1.length - commonlength)\n  text2 = text2.substring(0, text2.length - commonlength)\n\n  // Compute the diff on the middle block.\n  let diffs = computeDiff(text1, text2, options)\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix])\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix])\n  }\n  diffs = cleanupMerge(diffs)\n  return diffs\n}\n\nfunction createDeadLine(timeout: undefined | number): number {\n  let t = 1\n  if (typeof timeout !== 'undefined') {\n    t = timeout <= 0 ? Number.MAX_VALUE : timeout\n  }\n  return Date.now() + t * 1000\n}\n\nfunction createInternalOpts(opts: Partial<DiffOptions>): InternalDiffOptions {\n  return {\n    checkLines: true,\n    deadline: createDeadLine(opts.timeout || 1.0),\n    ...opts,\n  }\n}\n\nfunction combineChar(data: string, char: string, dir: 1 | -1) {\n  return dir === 1 ? data + char : char + data\n}\n\n/**\n * Splits out a character in a given direction.\n */\nfunction splitChar(data: string, dir: 1 | -1): [string, string] {\n  return dir === 1\n    ? [data.substring(0, data.length - 1), data[data.length - 1]]\n    : [data.substring(1), data[0]]\n}\n\n/**\n * Checks if two entries of the diff has the same character in the same \"direction\".\n */\nfunction hasSharedChar(diffs: Diff[], i: number, j: number, dir: 1 | -1): boolean {\n  return dir === 1\n    ? diffs[i][1][diffs[i][1].length - 1] === diffs[j][1][diffs[j][1].length - 1]\n    : diffs[i][1][0] === diffs[j][1][0]\n}\n\n/**\n * Takes in a position of an EQUAL diff-type and attempts to \"deisolate\" the character for a given direction.\n * By this we mean that we attempt to either \"shift\" it to the later diffs, or bring another character next into this one.\n *\n * It's easier to understand with an example:\n *   [INSERT a, DELETE b, EQUAL cde, INSERT f, DELETE g]\n * shifting this forward will produce\n *   [INSERT a, DELETE b, EQUAL cd, INSERT ef, DELETE eg]\n *\n * This behavior is useful when `e` is actually a high surrogate character.\n *\n * Shifting it backwards produces\n *   [INSERT ac, DELETE bc, EQUAL cde, INSERT f, DELETE g]\n * which is useful when `c` is a low surrogate character.\n *\n * Note that these diffs are 100% semantically equal.\n *\n * If there's not a matching INSERT/DELETE then it's forced to insert an additional entry:\n *   [EQUAL abc, INSERT d, EQUAL e]\n * shifted forward becomes:\n *   [EQUAL ab, INSERT cd, DELETE c, EQUAL e]\n *\n * If the INSERT and DELETE ends with the same character it will instead deisolate it by\n * bring that charcter into _this_ equal:\n *   [EQUAL abc, INSERT de, DELETE df]\n * shifted forward actually becomes\n *   [EQUAL abcd, INSERT e, DELETE f]\n *\n * The original diff here is typically never produced by the diff algorithm directly,\n * but they occur when we isolate characters in other places.\n */\nfunction deisolateChar(diffs: Diff[], i: number, dir: 1 | -1) {\n  const inv = dir === 1 ? -1 : 1\n  let insertIdx: null | number = null\n  let deleteIdx: null | number = null\n\n  let j = i + dir\n  for (; j >= 0 && j < diffs.length && (insertIdx === null || deleteIdx === null); j += dir) {\n    const [op, text] = diffs[j]\n    if (text.length === 0) {\n      continue\n    }\n\n    if (op === DIFF_INSERT) {\n      if (insertIdx === null) {\n        insertIdx = j\n      }\n      continue\n    } else if (op === DIFF_DELETE) {\n      if (deleteIdx === null) {\n        deleteIdx = j\n      }\n      continue\n    } else if (op === DIFF_EQUAL) {\n      if (insertIdx === null && deleteIdx === null) {\n        // This means that there was two consecutive EQUAL. Kinda weird, but easy to handle.\n        const [rest, char] = splitChar(diffs[i][1], dir)\n        diffs[i][1] = rest\n        diffs[j][1] = combineChar(diffs[j][1], char, inv)\n        return\n      }\n      break\n    }\n  }\n\n  if (insertIdx !== null && deleteIdx !== null && hasSharedChar(diffs, insertIdx, deleteIdx, dir)) {\n    // Special case.\n    const [insertText, insertChar] = splitChar(diffs[insertIdx][1], inv)\n    const [deleteText] = splitChar(diffs[deleteIdx][1], inv)\n    diffs[insertIdx][1] = insertText\n    diffs[deleteIdx][1] = deleteText\n    diffs[i][1] = combineChar(diffs[i][1], insertChar, dir)\n    return\n  }\n\n  const [text, char] = splitChar(diffs[i][1], dir)\n  diffs[i][1] = text\n\n  if (insertIdx === null) {\n    diffs.splice(j, 0, [DIFF_INSERT, char])\n\n    // We need to adjust deleteIdx here since it's been shifted\n    if (deleteIdx !== null && deleteIdx >= j) deleteIdx++\n  } else {\n    diffs[insertIdx][1] = combineChar(diffs[insertIdx][1], char, inv)\n  }\n\n  if (deleteIdx === null) {\n    diffs.splice(j, 0, [DIFF_DELETE, char])\n  } else {\n    diffs[deleteIdx][1] = combineChar(diffs[deleteIdx][1], char, inv)\n  }\n}\n\nfunction adjustDiffForSurrogatePairs(diffs: Diff[]) {\n  // Go over each pair of diffs and see if there was a split at a surrogate pair\n  for (let i = 0; i < diffs.length; i++) {\n    const [diffType, diffText] = diffs[i]\n\n    if (diffText.length === 0) continue\n\n    const firstChar = diffText[0]\n    const lastChar = diffText[diffText.length - 1]\n\n    if (isHighSurrogate(lastChar) && diffType === DIFF_EQUAL) {\n      deisolateChar(diffs, i, 1)\n    }\n\n    if (isLowSurrogate(firstChar) && diffType === DIFF_EQUAL) {\n      deisolateChar(diffs, i, -1)\n    }\n  }\n\n  for (let i = 0; i < diffs.length; i++) {\n    // Remove any empty diffs\n    if (diffs[i][1].length === 0) {\n      diffs.splice(i, 1)\n    }\n  }\n}\n","import {cloneDiff} from './clone.js'\nimport {getCommonOverlap} from './commonOverlap.js'\nimport {getCommonPrefix} from './commonPrefix.js'\nimport {getCommonSuffix} from './commonSuffix.js'\nimport {type Diff, DIFF_DELETE, DIFF_EQUAL, DIFF_INSERT} from './diff.js'\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n *\n * @param rawDiffs - Array of diff tuples.\n * @returns Array of diff tuples.\n * @public\n */\nexport function cleanupSemantic(rawDiffs: Diff[]): Diff[] {\n  let diffs: Diff[] = rawDiffs.map((diff) => cloneDiff(diff))\n\n  let hasChanges = false\n  const equalities: number[] = [] // Stack of indices where equalities are found.\n  let equalitiesLength = 0 // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  let lastEquality = null\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  let pointer = 0 // Index of current position.\n  // Number of characters that changed prior to the equality.\n  let lengthInsertions1 = 0\n  let lengthDeletions1 = 0\n  // Number of characters that changed after the equality.\n  let lengthInsertions2 = 0\n  let lengthDeletions2 = 0\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] === DIFF_EQUAL) {\n      // Equality found.\n      equalities[equalitiesLength++] = pointer\n      lengthInsertions1 = lengthInsertions2\n      lengthDeletions1 = lengthDeletions2\n      lengthInsertions2 = 0\n      lengthDeletions2 = 0\n      lastEquality = diffs[pointer][1]\n    } else {\n      // An insertion or deletion.\n      if (diffs[pointer][0] === DIFF_INSERT) {\n        lengthInsertions2 += diffs[pointer][1].length\n      } else {\n        lengthDeletions2 += diffs[pointer][1].length\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (\n        lastEquality &&\n        lastEquality.length <= Math.max(lengthInsertions1, lengthDeletions1) &&\n        lastEquality.length <= Math.max(lengthInsertions2, lengthDeletions2)\n      ) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastEquality])\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT\n        // Throw away the equality we just deleted.\n        equalitiesLength--\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1\n        lengthInsertions1 = 0 // Reset the counters.\n        lengthDeletions1 = 0\n        lengthInsertions2 = 0\n        lengthDeletions2 = 0\n        lastEquality = null\n        hasChanges = true\n      }\n    }\n    pointer++\n  }\n\n  // Normalize the diff.\n  if (hasChanges) {\n    diffs = cleanupMerge(diffs)\n  }\n  diffs = cleanupSemanticLossless(diffs)\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abczzz</del><ins>zzzdef</ins>\n  //   -> <del>abc</del>zzz<ins>def</ins>\n  // e.g: <del>zzzabc</del><ins>defzzz</ins>\n  //   -> <ins>def</ins>zzz<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] === DIFF_DELETE && diffs[pointer][0] === DIFF_INSERT) {\n      const deletion = diffs[pointer - 1][1]\n      const insertion = diffs[pointer][1]\n      const overlapLength1 = getCommonOverlap(deletion, insertion)\n      const overlapLength2 = getCommonOverlap(insertion, deletion)\n      if (overlapLength1 >= overlapLength2) {\n        if (overlapLength1 >= deletion.length / 2 || overlapLength1 >= insertion.length / 2) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0, [DIFF_EQUAL, insertion.substring(0, overlapLength1)])\n          diffs[pointer - 1][1] = deletion.substring(0, deletion.length - overlapLength1)\n          diffs[pointer + 1][1] = insertion.substring(overlapLength1)\n          pointer++\n        }\n      } else if (overlapLength2 >= deletion.length / 2 || overlapLength2 >= insertion.length / 2) {\n        // Reverse overlap found.\n        // Insert an equality and swap and trim the surrounding edits.\n        diffs.splice(pointer, 0, [DIFF_EQUAL, deletion.substring(0, overlapLength2)])\n        diffs[pointer - 1][0] = DIFF_INSERT\n        diffs[pointer - 1][1] = insertion.substring(0, insertion.length - overlapLength2)\n        diffs[pointer + 1][0] = DIFF_DELETE\n        diffs[pointer + 1][1] = deletion.substring(overlapLength2)\n        pointer++\n      }\n      pointer++\n    }\n    pointer++\n  }\n  return diffs\n}\n\n// Define some regex patterns for matching boundaries.\nconst nonAlphaNumericRegex = /[^a-zA-Z0-9]/\nconst whitespaceRegex = /\\s/\nconst linebreakRegex = /[\\r\\n]/\nconst blanklineEndRegex = /\\n\\r?\\n$/\nconst blanklineStartRegex = /^\\r?\\n\\r?\\n/\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n *\n * @param rawDiffs - Array of diff tuples.\n * @returns Array of diff tuples.\n * @public\n */\nexport function cleanupSemanticLossless(rawDiffs: Diff[]): Diff[] {\n  const diffs = rawDiffs.map((diff) => cloneDiff(diff))\n\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   *\n   * @param one - First string.\n   * @param two - Second string.\n   * @returns The score.\n   * @internal\n   */\n  function diffCleanupSemanticScore(one: string, two: string) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    const char1 = one.charAt(one.length - 1)\n    const char2 = two.charAt(0)\n    const nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex)\n    const nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex)\n    const whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex)\n    const whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex)\n    const lineBreak1 = whitespace1 && char1.match(linebreakRegex)\n    const lineBreak2 = whitespace2 && char2.match(linebreakRegex)\n    const blankLine1 = lineBreak1 && one.match(blanklineEndRegex)\n    const blankLine2 = lineBreak2 && two.match(blanklineStartRegex)\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1\n    }\n    return 0\n  }\n\n  let pointer = 1\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      let equality1 = diffs[pointer - 1][1]\n      let edit = diffs[pointer][1]\n      let equality2 = diffs[pointer + 1][1]\n\n      // First, shift the edit as far left as possible.\n      const commonOffset = getCommonSuffix(equality1, edit)\n      if (commonOffset) {\n        const commonString = edit.substring(edit.length - commonOffset)\n        equality1 = equality1.substring(0, equality1.length - commonOffset)\n        edit = commonString + edit.substring(0, edit.length - commonOffset)\n        equality2 = commonString + equality2\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      let bestEquality1 = equality1\n      let bestEdit = edit\n      let bestEquality2 = equality2\n      let bestScore =\n        diffCleanupSemanticScore(equality1, edit) + diffCleanupSemanticScore(edit, equality2)\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0)\n        edit = edit.substring(1) + equality2.charAt(0)\n        equality2 = equality2.substring(1)\n        const score =\n          diffCleanupSemanticScore(equality1, edit) + diffCleanupSemanticScore(edit, equality2)\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score\n          bestEquality1 = equality1\n          bestEdit = edit\n          bestEquality2 = equality2\n        }\n      }\n\n      if (diffs[pointer - 1][1] !== bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1\n        } else {\n          diffs.splice(pointer - 1, 1)\n          pointer--\n        }\n        diffs[pointer][1] = bestEdit\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2\n        } else {\n          diffs.splice(pointer + 1, 1)\n          pointer--\n        }\n      }\n    }\n    pointer++\n  }\n\n  return diffs\n}\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n *\n * @param rawDiffs - Array of diff tuples.\n * @returns Array of diff tuples.\n * @public\n */\nexport function cleanupMerge(rawDiffs: Diff[]): Diff[] {\n  let diffs = rawDiffs.map((diff) => cloneDiff(diff))\n\n  // Add a dummy entry at the end.\n  diffs.push([DIFF_EQUAL, ''])\n  let pointer = 0\n  let countDelete = 0\n  let countInsert = 0\n  let textDelete = ''\n  let textInsert = ''\n  let commonlength\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        countInsert++\n        textInsert += diffs[pointer][1]\n        pointer++\n        break\n      case DIFF_DELETE:\n        countDelete++\n        textDelete += diffs[pointer][1]\n        pointer++\n        break\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (countDelete + countInsert > 1) {\n          if (countDelete !== 0 && countInsert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = getCommonPrefix(textInsert, textDelete)\n            if (commonlength !== 0) {\n              if (\n                pointer - countDelete - countInsert > 0 &&\n                diffs[pointer - countDelete - countInsert - 1][0] === DIFF_EQUAL\n              ) {\n                diffs[pointer - countDelete - countInsert - 1][1] += textInsert.substring(\n                  0,\n                  commonlength,\n                )\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL, textInsert.substring(0, commonlength)])\n                pointer++\n              }\n              textInsert = textInsert.substring(commonlength)\n              textDelete = textDelete.substring(commonlength)\n            }\n            // Factor out any common suffixies.\n            commonlength = getCommonSuffix(textInsert, textDelete)\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                textInsert.substring(textInsert.length - commonlength) + diffs[pointer][1]\n              textInsert = textInsert.substring(0, textInsert.length - commonlength)\n              textDelete = textDelete.substring(0, textDelete.length - commonlength)\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          pointer -= countDelete + countInsert\n          diffs.splice(pointer, countDelete + countInsert)\n          if (textDelete.length) {\n            diffs.splice(pointer, 0, [DIFF_DELETE, textDelete])\n            pointer++\n          }\n          if (textInsert.length) {\n            diffs.splice(pointer, 0, [DIFF_INSERT, textInsert])\n            pointer++\n          }\n          pointer++\n        } else if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1]\n          diffs.splice(pointer, 1)\n        } else {\n          pointer++\n        }\n        countInsert = 0\n        countDelete = 0\n        textDelete = ''\n        textInsert = ''\n        break\n      default:\n        throw new Error('Unknown diff operation')\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop() // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  let hasChanges = false\n  pointer = 1\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (\n        diffs[pointer][1].substring(diffs[pointer][1].length - diffs[pointer - 1][1].length) ===\n        diffs[pointer - 1][1]\n      ) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] =\n          diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length)\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1]\n        diffs.splice(pointer - 1, 1)\n        hasChanges = true\n      } else if (\n        diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) === diffs[pointer + 1][1]\n      ) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1]\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1]\n        diffs.splice(pointer + 1, 1)\n        hasChanges = true\n      }\n    }\n    pointer++\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (hasChanges) {\n    diffs = cleanupMerge(diffs)\n  }\n\n  return diffs\n}\n\nfunction trueCount(...args: boolean[]) {\n  return args.reduce((n, bool) => n + (bool ? 1 : 0), 0)\n}\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n *\n * @param rawDiffs - Array of diff tuples.\n * @param editCost - Cost of an empty edit operation in terms of edit characters.\n * @returns Array of diff tuples.\n * @public\n */\nexport function cleanupEfficiency(rawDiffs: Diff[], editCost: number = 4): Diff[] {\n  let diffs = rawDiffs.map((diff) => cloneDiff(diff))\n  let hasChanges = false\n  const equalities: number[] = [] // Stack of indices where equalities are found.\n  let equalitiesLength = 0 // Keeping our own length var is faster in JS.\n  let lastEquality: string | null = null\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  let pointer = 0 // Index of current position.\n  // Is there an insertion operation before the last equality.\n  let preIns = false\n  // Is there a deletion operation before the last equality.\n  let preDel = false\n  // Is there an insertion operation after the last equality.\n  let postIns = false\n  // Is there a deletion operation after the last equality.\n  let postDel = false\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] === DIFF_EQUAL) {\n      // Equality found.\n      if (diffs[pointer][1].length < editCost && (postIns || postDel)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer\n        preIns = postIns\n        preDel = postDel\n        lastEquality = diffs[pointer][1]\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0\n        lastEquality = null\n      }\n      postIns = false\n      postDel = false\n    } else {\n      // An insertion or deletion.\n      if (diffs[pointer][0] === DIFF_DELETE) {\n        postDel = true\n      } else {\n        postIns = true\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (\n        lastEquality &&\n        ((preIns && preDel && postIns && postDel) ||\n          (lastEquality.length < editCost / 2 && trueCount(preIns, preDel, postIns, postDel) === 3))\n      ) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastEquality])\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT\n        equalitiesLength-- // Throw away the equality we just deleted;\n        lastEquality = null\n        if (preIns && preDel) {\n          // No hasChanges made which could affect previous entry, keep going.\n          postIns = true\n          postDel = true\n          equalitiesLength = 0\n        } else {\n          equalitiesLength-- // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1\n          postIns = false\n          postDel = false\n        }\n        hasChanges = true\n      }\n    }\n    pointer++\n  }\n\n  if (hasChanges) {\n    diffs = cleanupMerge(diffs)\n  }\n\n  return diffs\n}\n","interface BitapOptions {\n  threshold: number\n  distance: number\n}\n\ninterface Alphabet {\n  [char: string]: number\n}\n\nconst DEFAULT_OPTIONS: BitapOptions = {\n  /**\n   * At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n   */\n  threshold: 0.5,\n\n  /**\n   * How far to search for a match (0 = exact location, 1000+ = broad match).\n   * A match this many characters away from the expected location will add\n   * 1.0 to the score (0.0 is a perfect match).\n   */\n  distance: 1000,\n}\n\nfunction applyDefaults(options: Partial<BitapOptions>): BitapOptions {\n  return {...DEFAULT_OPTIONS, ...options}\n}\n\n// The number of bits in an int.\nconst MAX_BITS = 32\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n * Bitap algorithm.\n *\n * @param text - The text to search.\n * @param pattern - The pattern to search for.\n * @param loc - The location to search around.\n * @param options - Options {@link BitapOptions}\n * @returns Best match index or -1.\n * @internal\n */\nexport function bitap(\n  text: string,\n  pattern: string,\n  loc: number,\n  opts: Partial<BitapOptions> = {},\n): number {\n  if (pattern.length > MAX_BITS) {\n    throw new Error('Pattern too long for this browser.')\n  }\n\n  const options = applyDefaults(opts)\n\n  // Initialise the alphabet.\n  const s = getAlphabetFromPattern(pattern)\n\n  /**\n   * Compute and return the score for a match with e errors and x location.\n   * Accesses loc and pattern through being a closure.\n   *\n   * @param e - Number of errors in match.\n   * @param x - Location of match.\n   * @returns Overall - score for match (0.0 = good, 1.0 = bad).\n   * @internal\n   */\n  function getBitapScore(e: number, x: number) {\n    const accuracy = e / pattern.length\n    const proximity = Math.abs(loc - x)\n    if (!options.distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy\n    }\n    return accuracy + proximity / options.distance\n  }\n\n  // Highest score beyond which we give up.\n  let scoreThreshold = options.threshold\n  // Is there a nearby exact match? (speedup)\n  let bestLoc = text.indexOf(pattern, loc)\n  if (bestLoc !== -1) {\n    scoreThreshold = Math.min(getBitapScore(0, bestLoc), scoreThreshold)\n    // What about in the other direction? (speedup)\n    bestLoc = text.lastIndexOf(pattern, loc + pattern.length)\n    if (bestLoc !== -1) {\n      scoreThreshold = Math.min(getBitapScore(0, bestLoc), scoreThreshold)\n    }\n  }\n\n  // Initialise the bit arrays.\n  const matchmask = 1 << (pattern.length - 1)\n  bestLoc = -1\n\n  let binMin\n  let binMid\n  let binMax = pattern.length + text.length\n  let lastRd: number[] = []\n  for (let d = 0; d < pattern.length; d++) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from 'loc' we can stray at this\n    // error level.\n    binMin = 0\n    binMid = binMax\n    while (binMin < binMid) {\n      if (getBitapScore(d, loc + binMid) <= scoreThreshold) {\n        binMin = binMid\n      } else {\n        binMax = binMid\n      }\n      binMid = Math.floor((binMax - binMin) / 2 + binMin)\n    }\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid\n    let start = Math.max(1, loc - binMid + 1)\n    const finish = Math.min(loc + binMid, text.length) + pattern.length\n\n    const rd: number[] = new Array(finish + 2)\n    rd[finish + 1] = (1 << d) - 1\n    for (let j = finish; j >= start; j--) {\n      // The alphabet (s) is a sparse hash, so the following line generates\n      // warnings.\n      const charMatch = s[text.charAt(j - 1)]\n      if (d === 0) {\n        // First pass: exact match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch\n      } else {\n        // Subsequent passes: fuzzy match.\n        rd[j] =\n          (((rd[j + 1] << 1) | 1) & charMatch) |\n          (((lastRd[j + 1] | lastRd[j]) << 1) | 1) |\n          lastRd[j + 1]\n      }\n      if (rd[j] & matchmask) {\n        const score = getBitapScore(d, j - 1)\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (score <= scoreThreshold) {\n          // Told you so.\n          scoreThreshold = score\n          bestLoc = j - 1\n          if (bestLoc > loc) {\n            // When passing loc, don't exceed our current distance from loc.\n            start = Math.max(1, 2 * loc - bestLoc)\n          } else {\n            // Already passed loc, downhill from here on in.\n            break\n          }\n        }\n      }\n    }\n    // No hope for a (better) match at greater error levels.\n    if (getBitapScore(d + 1, loc) > scoreThreshold) {\n      break\n    }\n    lastRd = rd\n  }\n  return bestLoc\n}\n\n/**\n * Initialise the alphabet for the Bitap algorithm.\n *\n * @param pattern - The text to encode.\n * @returns Hash of character locations.\n * @internal\n */\nfunction getAlphabetFromPattern(pattern: string): Alphabet {\n  const s: Alphabet = {}\n  for (let i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0\n  }\n  for (let i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1)\n  }\n  return s\n}\n","import {bitap} from './bitap.js'\n\n/**\n * @public\n */\nexport interface MatchOptions {\n  /**\n   * At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n   * The larger threshold is, the slower match() may take to compute\n   *\n   * Defaults to 0.5\n   */\n  threshold?: number\n\n  /**\n   * How far to search for a match (0 = exact location, 1000+ = broad match).\n   * A match this many characters away from the expected location will add\n   * 1.0 to the score (0.0 is a perfect match).\n   *\n   * The larger distance is, the slower match() may take to compute.\n   *\n   * Defaults to 1000.\n   */\n  distance?: number\n}\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\n *\n * @param text - The text to search.\n * @param pattern - The pattern to search for.\n * @param searchLocation - The location to search around.\n * @param options - Options {@link MatchOptions}\n * @returns Best match index or -1.\n * @public\n */\nexport function match(\n  text: string,\n  pattern: string,\n  searchLocation: number,\n  options: MatchOptions = {},\n): number {\n  // Check for null inputs.\n  if (text === null || pattern === null || searchLocation === null) {\n    throw new Error('Null input. (match())')\n  }\n\n  const loc = Math.max(0, Math.min(searchLocation, text.length))\n  if (text === pattern) {\n    // Shortcut (potentially not guaranteed by the algorithm)\n    return 0\n  } else if (!text.length) {\n    // Nothing to match.\n    return -1\n  } else if (text.substring(loc, loc + pattern.length) === pattern) {\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\n    return loc\n  }\n\n  // Do a fuzzy compare.\n  return bitap(text, pattern, loc, options)\n}\n","import {type Diff, DIFF_DELETE, DIFF_INSERT} from './diff.js'\n\n/**\n * Compute and return the source text (all equalities and deletions).\n *\n * @param diffs - Array of diff tuples.\n * @returns Source text.\n * @private\n */\nexport function diffText1(diffs: Diff[]): string {\n  const text: string[] = []\n  for (let x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1]\n    }\n  }\n  return text.join('')\n}\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n *\n * @param diffs - Array of diff tuples.\n * @returns Destination text.\n * @private\n */\nexport function diffText2(diffs: Diff[]): string {\n  const text: string[] = []\n  for (let x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1]\n    }\n  }\n  return text.join('')\n}\n","import {type Diff, DIFF_DELETE, DIFF_EQUAL, DIFF_INSERT} from './diff.js'\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n *\n * @param diffs - Array of diff tuples.\n * @returns Number of changes.\n * @internal\n */\nexport function levenshtein(diffs: Diff[]): number {\n  let leven = 0\n  let insertions = 0\n  let deletions = 0\n\n  for (let x = 0; x < diffs.length; x++) {\n    const op = diffs[x][0]\n    const data = diffs[x][1]\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length\n        break\n      case DIFF_DELETE:\n        deletions += data.length\n        break\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        leven += Math.max(insertions, deletions)\n        insertions = 0\n        deletions = 0\n        break\n      default:\n        throw new Error('Unknown diff operation.')\n    }\n  }\n  leven += Math.max(insertions, deletions)\n  return leven\n}\n","import {type Diff, DIFF_DELETE, DIFF_INSERT} from './diff.js'\n\n/**\n * loc is a location in textA, compute and return the equivalent location in\n * textB.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n *\n * @param diffs - Array of diff tuples.\n * @param location - Location within textA.\n * @returns Location within textB.\n * @public\n */\nexport function xIndex(diffs: Diff[], location: number): number {\n  let chars1 = 0\n  let chars2 = 0\n  let lastChars1 = 0\n  let lastChars2 = 0\n  let x\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      // Equality or deletion.\n      chars1 += diffs[x][1].length\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {\n      // Equality or insertion.\n      chars2 += diffs[x][1].length\n    }\n    if (chars1 > location) {\n      // Overshot the location.\n      break\n    }\n    lastChars1 = chars1\n    lastChars2 = chars2\n  }\n  // Was the location was deleted?\n  if (diffs.length !== x && diffs[x][0] === DIFF_DELETE) {\n    return lastChars2\n  }\n  // Add the remaining character length.\n  return lastChars2 + (location - lastChars1)\n}\n","import {cloneDiff} from '../diff/clone.js'\nimport {type Patch} from '../index.js'\n\n/**\n * Counts the number of bytes in a string.\n * Note that while this approach may seem heavy-handed, it is actually\n * significantly faster than both `new Blob([str]).size` and `TextEncoder`.\n *\n * @param str - String to count\n * @returns Number of bytes\n */\nexport function countUtf8Bytes(str: string): number {\n  let bytes = 0\n  for (let i = 0; i < str.length; i++) {\n    const codePoint = str.codePointAt(i)\n    if (typeof codePoint === 'undefined') {\n      throw new Error('Failed to get codepoint')\n    }\n    bytes += utf8len(codePoint)\n  }\n  return bytes\n}\n\n/**\n * Options for the index adjustment operations.\n *\n * @public\n */\nexport interface AdjustmentOptions {\n  /**\n   * When converting indices between UTF-8 and UCS-2, certain scenarios can occur\n   * where we go beyond the target offset. This can happen in particular with\n   * surrogate pairs/high codepoints, when the base string we are applying the\n   * patch to does not fully match the one that was used to generate the patch.\n   * Defaults to `false`.\n   */\n  allowExceedingIndices?: boolean\n}\n\n/**\n * Takes a `patches` array as produced by diff-match-patch and adjusts the\n * `start1` and `start2` properties so that they refer to UCS-2 index instead\n * of a UTF-8 index.\n *\n * @param patches - The patches to adjust\n * @param base - The base string to use for counting bytes\n * @param options - Options for the adjustment of indices\n * @returns A new array of patches with adjusted indicies\n * @beta\n */\nexport function adjustIndiciesToUcs2(\n  patches: Patch[],\n  base: string,\n  options: AdjustmentOptions = {},\n): Patch[] {\n  let byteOffset = 0\n  let idx = 0 // index into the input.\n\n  function advanceTo(target: number) {\n    for (; byteOffset < target; ) {\n      const codePoint = base.codePointAt(idx)\n      if (typeof codePoint === 'undefined') {\n        // Reached the end of the base string - the indicies won't be correct,\n        // but we also cannot advance any further to find a closer index.\n        return idx\n      }\n\n      byteOffset += utf8len(codePoint)\n\n      // This is encoded as a surrogate pair.\n      if (codePoint > 0xffff) {\n        idx += 2\n      } else {\n        idx += 1\n      }\n    }\n\n    if (!options.allowExceedingIndices && byteOffset !== target) {\n      throw new Error('Failed to determine byte offset')\n    }\n\n    return idx\n  }\n\n  const adjusted: Patch[] = []\n  for (const patch of patches) {\n    adjusted.push({\n      diffs: patch.diffs.map((diff) => cloneDiff(diff)),\n      start1: advanceTo(patch.start1),\n      start2: advanceTo(patch.start2),\n      utf8Start1: patch.utf8Start1,\n      utf8Start2: patch.utf8Start2,\n      length1: patch.length1,\n      length2: patch.length2,\n      utf8Length1: patch.utf8Length1,\n      utf8Length2: patch.utf8Length2,\n    })\n  }\n\n  return adjusted\n}\n\nfunction utf8len(codePoint: number): 1 | 2 | 3 | 4 {\n  // See table at https://en.wikipedia.org/wiki/UTF-8\n  if (codePoint <= 0x007f) return 1\n  if (codePoint <= 0x07ff) return 2\n  if (codePoint <= 0xffff) return 3\n  return 4\n}\n","// The number of bits in an int.\nexport const MAX_BITS = 32\n\nexport const DEFAULT_MARGIN = 4\n","import {DIFF_EQUAL} from '../diff/diff.js'\nimport {DEFAULT_MARGIN} from './constants.js'\nimport {type Patch} from './createPatchObject.js'\n\n/**\n * Add some padding on text start and end so that edges can match something.\n * Intended to be called only from within patch_apply.\n *\n * @param patches - Array of Patch objects.\n * @param margin - The margin length to add.\n * @returns The string, padded on each side.\n * @internal\n */\nexport function addPadding(patches: Patch[], margin: number = DEFAULT_MARGIN): string {\n  const paddingLength = margin\n  let nullPadding = ''\n  for (let x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x)\n  }\n\n  // Bump all the patches forward.\n  for (const p of patches) {\n    p.start1 += paddingLength\n    p.start2 += paddingLength\n    p.utf8Start1 += paddingLength\n    p.utf8Start2 += paddingLength\n  }\n\n  // Add some padding on start of first diff.\n  let patch = patches[0]\n  let diffs = patch.diffs\n  if (diffs.length === 0 || diffs[0][0] !== DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.unshift([DIFF_EQUAL, nullPadding])\n    patch.start1 -= paddingLength // Should be 0.\n    patch.start2 -= paddingLength // Should be 0.\n    patch.utf8Start1 -= paddingLength // Should be 0.\n    patch.utf8Start2 -= paddingLength // Should be 0.\n    patch.length1 += paddingLength\n    patch.length2 += paddingLength\n    patch.utf8Length1 += paddingLength\n    patch.utf8Length2 += paddingLength\n  } else if (paddingLength > diffs[0][1].length) {\n    // Grow first equality.\n    const firstDiffLength = diffs[0][1].length\n    const extraLength = paddingLength - firstDiffLength\n    diffs[0][1] = nullPadding.substring(firstDiffLength) + diffs[0][1]\n    patch.start1 -= extraLength\n    patch.start2 -= extraLength\n    patch.utf8Start1 -= extraLength\n    patch.utf8Start2 -= extraLength\n    patch.length1 += extraLength\n    patch.length2 += extraLength\n    patch.utf8Length1 += extraLength\n    patch.utf8Length2 += extraLength\n  }\n\n  // Add some padding on end of last diff.\n  patch = patches[patches.length - 1]\n  diffs = patch.diffs\n  if (diffs.length === 0 || diffs[diffs.length - 1][0] !== DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.push([DIFF_EQUAL, nullPadding])\n    patch.length1 += paddingLength\n    patch.length2 += paddingLength\n    patch.utf8Length1 += paddingLength\n    patch.utf8Length2 += paddingLength\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    // Grow last equality.\n    const extraLength = paddingLength - diffs[diffs.length - 1][1].length\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength)\n    patch.length1 += extraLength\n    patch.length2 += extraLength\n    patch.utf8Length1 += extraLength\n    patch.utf8Length2 += extraLength\n  }\n\n  return nullPadding\n}\n","import {type Diff} from '../diff/diff.js'\n\n/**\n * Object representing one patch operation.\n *\n * @public\n */\nexport interface Patch {\n  diffs: Diff[]\n\n  start1: number\n  start2: number\n  utf8Start1: number\n  utf8Start2: number\n\n  length1: number\n  length2: number\n  utf8Length1: number\n  utf8Length2: number\n}\n\n/**\n * Clones a patch object.\n *\n * @param patch - The patch to clone\n * @returns Cloned object\n * @private\n */\nexport function clone(patch: Patch): Patch {\n  return {...patch, diffs: patch.diffs.map((diff) => ({...diff}))}\n}\n\n/**\n * Performs a deep copy of a patch array.\n *\n * @param patches - Patches to clone\n * @returns Cloned array\n * @internal\n */\nexport function deepCopy(patches: Patch[]): Patch[] {\n  return patches.map(clone)\n}\n\n/**\n * Create a new, empty, patch object.\n *\n * @param start1 - The index to start the \"from\" at\n * @param start2 - The index to start the \"to\" at\n * @returns New patch object\n * @internal\n */\nexport function createPatchObject(start1: number, start2: number): Patch {\n  return {\n    diffs: [],\n\n    start1,\n    start2,\n    utf8Start1: start1,\n    utf8Start2: start2,\n\n    length1: 0,\n    length2: 0,\n    utf8Length1: 0,\n    utf8Length2: 0,\n  }\n}\n","import {DIFF_DELETE, DIFF_EQUAL, DIFF_INSERT} from '../diff/diff.js'\nimport {diffText1, diffText2} from '../diff/diffText.js'\nimport {countUtf8Bytes} from '../utils/utf8Indices.js'\nimport {DEFAULT_MARGIN, MAX_BITS} from './constants.js'\nimport {createPatchObject, type Patch} from './createPatchObject.js'\n\n/**\n * Look through the patches and break up any which are longer than the maximum\n * limit of the match algorithm.\n * Intended to be called only from within patch_apply.\n *\n * @param patches - Array of Patch objects.\n * @internal\n */\nexport function splitMax(patches: Patch[], margin: number = DEFAULT_MARGIN): void {\n  const patchSize = MAX_BITS\n  for (let x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patchSize) {\n      continue\n    }\n    const bigpatch = patches[x]\n    // Remove the big old patch.\n    patches.splice(x--, 1)\n    let start1 = bigpatch.start1\n    let start2 = bigpatch.start2\n    let preContext = ''\n    while (bigpatch.diffs.length !== 0) {\n      // Create one of several smaller patches.\n      const patch = createPatchObject(start1 - preContext.length, start2 - preContext.length)\n      let empty = true\n\n      if (preContext !== '') {\n        const precontextByteCount = countUtf8Bytes(preContext)\n        patch.length1 = preContext.length\n        patch.utf8Length1 = precontextByteCount\n        patch.length2 = preContext.length\n        patch.utf8Length2 = precontextByteCount\n        patch.diffs.push([DIFF_EQUAL, preContext])\n      }\n      while (bigpatch.diffs.length !== 0 && patch.length1 < patchSize - margin) {\n        const diffType = bigpatch.diffs[0][0]\n        let diffText = bigpatch.diffs[0][1]\n        let diffTextByteCount = countUtf8Bytes(diffText)\n        if (diffType === DIFF_INSERT) {\n          // Insertions are harmless.\n          patch.length2 += diffText.length\n          patch.utf8Length2 += diffTextByteCount\n          start2 += diffText.length\n          const diff = bigpatch.diffs.shift()\n          if (diff) {\n            patch.diffs.push(diff)\n          }\n          empty = false\n        } else if (\n          diffType === DIFF_DELETE &&\n          patch.diffs.length === 1 &&\n          patch.diffs[0][0] === DIFF_EQUAL &&\n          diffText.length > 2 * patchSize\n        ) {\n          // This is a large deletion.  Let it pass in one chunk.\n          patch.length1 += diffText.length\n          patch.utf8Length1 += diffTextByteCount\n          start1 += diffText.length\n          empty = false\n          patch.diffs.push([diffType, diffText])\n          bigpatch.diffs.shift()\n        } else {\n          // Deletion or equality.  Only take as much as we can stomach.\n          diffText = diffText.substring(0, patchSize - patch.length1 - margin)\n          diffTextByteCount = countUtf8Bytes(diffText)\n          patch.length1 += diffText.length\n          patch.utf8Length1 += diffTextByteCount\n          start1 += diffText.length\n          if (diffType === DIFF_EQUAL) {\n            patch.length2 += diffText.length\n            patch.utf8Length2 += diffTextByteCount\n            start2 += diffText.length\n          } else {\n            empty = false\n          }\n          patch.diffs.push([diffType, diffText])\n          if (diffText === bigpatch.diffs[0][1]) {\n            bigpatch.diffs.shift()\n          } else {\n            bigpatch.diffs[0][1] = bigpatch.diffs[0][1].substring(diffText.length)\n          }\n        }\n      }\n      // Compute the head context for the next patch.\n      preContext = diffText2(patch.diffs)\n      preContext = preContext.substring(preContext.length - margin)\n      // Append the end context for this patch.\n      const postContext = diffText1(bigpatch.diffs).substring(0, margin)\n      const postContextByteCount = countUtf8Bytes(postContext)\n      if (postContext !== '') {\n        patch.length1 += postContext.length\n        patch.length2 += postContext.length\n        patch.utf8Length1 += postContextByteCount\n        patch.utf8Length2 += postContextByteCount\n        if (patch.diffs.length !== 0 && patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n          patch.diffs[patch.diffs.length - 1][1] += postContext\n        } else {\n          patch.diffs.push([DIFF_EQUAL, postContext])\n        }\n      }\n      if (!empty) {\n        patches.splice(++x, 0, patch)\n      }\n    }\n  }\n}\n","/* eslint-disable max-depth */\n/* eslint-disable max-statements */\nimport {cleanupSemanticLossless} from '../diff/cleanup.js'\nimport {diff, DIFF_DELETE, DIFF_EQUAL, DIFF_INSERT} from '../diff/diff.js'\nimport {diffText1, diffText2} from '../diff/diffText.js'\nimport {levenshtein} from '../diff/levenshtein.js'\nimport {xIndex} from '../diff/xIndex.js'\nimport {match} from '../match/match.js'\nimport {adjustIndiciesToUcs2} from '../utils/utf8Indices.js'\nimport {addPadding} from './addPadding.js'\nimport {DEFAULT_MARGIN, MAX_BITS} from './constants.js'\nimport {type Patch} from './createPatchObject.js'\nimport {splitMax} from './splitMax.js'\n\n/**\n * Options for applying a patch.\n *\n * @public\n */\nexport interface ApplyPatchOptions {\n  /**\n   * Chunk size for context length\n   */\n  margin: number\n\n  /**\n   * When deleting a large block of text (over ~64 characters),\n   * how close do the contents have to be to match the expected contents.\n   * (0.0 = perfection, 1.0 = very loose).\n   */\n  deleteThreshold: number\n\n  /**\n   * When converting indices between UTF-8 and UCS-2, certain scenarios can occur\n   * where we go beyond the target offset. This can happen in particular with\n   * surrogate pairs/high codepoints, when the base string we are applying the\n   * patch to does not fully match the one that was used to generate the patch.\n   * Defaults to `false`.\n   */\n  allowExceedingIndices: boolean\n}\n\n/**\n * Result of a patch application operation.\n * Index 0 contains the new text\n * Index 1 contains an array of booleans indicating which patches were applied\n *\n * @public\n */\nexport type PatchResult = [string, boolean[]]\n\n/**\n * Merge a set of patches onto the text. Returns patched text, as well as a\n * list of true/false values indicating which patches were applied.\n *\n * @param patches - Array of Patch objects.\n * @param text - Old text.\n * @param opts - Optional settings for the patch application.\n * @returns Two element Array, containing the new text and an array of boolean values.\n * @public\n */\nexport function apply(\n  patches: Patch[],\n  originalText: string,\n  opts: Partial<ApplyPatchOptions> = {},\n): PatchResult {\n  if (typeof patches === 'string') {\n    throw new Error('Patches must be an array - pass the patch to `parsePatch()` first')\n  }\n\n  let text = originalText\n  if (patches.length === 0) {\n    return [text, []]\n  }\n\n  // Note: adjustment also deep-copies patches so that no changes are made to the originals.\n  const parsed = adjustIndiciesToUcs2(patches, text, {\n    allowExceedingIndices: opts.allowExceedingIndices,\n  })\n\n  const margin = opts.margin || DEFAULT_MARGIN\n  const deleteThreshold = opts.deleteThreshold || 0.4\n\n  const nullPadding = addPadding(parsed, margin)\n  text = nullPadding + text + nullPadding\n\n  splitMax(parsed, margin)\n  // delta keeps track of the offset between the expected and actual location\n  // of the previous patch.  If there are patches expected at positions 10 and\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\n  // has an effective expected position of 22.\n  let delta = 0\n  const results: boolean[] = []\n  for (let x = 0; x < parsed.length; x++) {\n    const expectedLoc = parsed[x].start2 + delta\n    const text1 = diffText1(parsed[x].diffs)\n    let startLoc\n    let endLoc = -1\n    if (text1.length > MAX_BITS) {\n      // patch_splitMax will only provide an oversized pattern in the case of\n      // a monster delete.\n      startLoc = match(text, text1.substring(0, MAX_BITS), expectedLoc)\n      if (startLoc !== -1) {\n        endLoc = match(\n          text,\n          text1.substring(text1.length - MAX_BITS),\n          expectedLoc + text1.length - MAX_BITS,\n        )\n        if (endLoc === -1 || startLoc >= endLoc) {\n          // Can't find valid trailing context.  Drop this patch.\n          startLoc = -1\n        }\n      }\n    } else {\n      startLoc = match(text, text1, expectedLoc)\n    }\n    if (startLoc === -1) {\n      // No match found.  :(\n      results[x] = false\n      // Subtract the delta for this failed patch from subsequent patches.\n      delta -= parsed[x].length2 - parsed[x].length1\n    } else {\n      // Found a match.  :)\n      results[x] = true\n      delta = startLoc - expectedLoc\n      let text2\n      if (endLoc === -1) {\n        text2 = text.substring(startLoc, startLoc + text1.length)\n      } else {\n        text2 = text.substring(startLoc, endLoc + MAX_BITS)\n      }\n      if (text1 === text2) {\n        // Perfect match, just shove the replacement text in.\n        text =\n          text.substring(0, startLoc) +\n          diffText2(parsed[x].diffs) +\n          text.substring(startLoc + text1.length)\n      } else {\n        // Imperfect match. Run a diff to get a framework of equivalent indices.\n        let diffs = diff(text1, text2, {checkLines: false})\n        if (text1.length > MAX_BITS && levenshtein(diffs) / text1.length > deleteThreshold) {\n          // The end points match, but the content is unacceptably bad.\n          results[x] = false\n        } else {\n          diffs = cleanupSemanticLossless(diffs)\n          let index1 = 0\n          let index2 = 0\n          for (let y = 0; y < parsed[x].diffs.length; y++) {\n            const mod = parsed[x].diffs[y]\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = xIndex(diffs, index1)\n            }\n            if (mod[0] === DIFF_INSERT) {\n              // Insertion\n              text =\n                text.substring(0, startLoc + index2) + mod[1] + text.substring(startLoc + index2)\n            } else if (mod[0] === DIFF_DELETE) {\n              // Deletion\n              text =\n                text.substring(0, startLoc + index2) +\n                text.substring(startLoc + xIndex(diffs, index1 + mod[1].length))\n            }\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length\n            }\n          }\n        }\n      }\n    }\n  }\n  // Strip the padding off.\n  text = text.substring(nullPadding.length, text.length - nullPadding.length)\n  return [text, results]\n}\n","import {cleanupEfficiency, cleanupSemantic} from '../diff/cleanup.js'\nimport {type Diff, diff, DIFF_DELETE, DIFF_EQUAL, DIFF_INSERT} from '../diff/diff.js'\nimport {diffText1} from '../diff/diffText.js'\nimport {isLowSurrogate} from '../utils/surrogatePairs.js'\nimport {countUtf8Bytes} from '../utils/utf8Indices.js'\nimport {MAX_BITS} from './constants.js'\nimport {createPatchObject, type Patch} from './createPatchObject.js'\n\n/**\n * Options for patch generation.\n *\n * @public\n */\nexport interface MakePatchOptions {\n  // Chunk size for context length.\n  margin: number\n}\n\nconst DEFAULT_OPTS: MakePatchOptions = {\n  margin: 4,\n}\n\nfunction getDefaultOpts(opts: Partial<MakePatchOptions> = {}): MakePatchOptions {\n  return {\n    ...DEFAULT_OPTS,\n    ...opts,\n  }\n}\n\n/**\n * Compute a list of patches to turn based on passed diffs.\n *\n * @param diffs - Array of diff tuples.\n * @param options - Options for the patch generation.\n * @returns Array of Patch objects.\n * @public\n */\nexport function make(diffs: Diff[], options?: Partial<MakePatchOptions>): Patch[]\n\n/**\n * Compute a list of patches to turn textA into textB.\n *\n * @param textA - Original text.\n * @param textB - New text.\n * @param options - Options for the patch generation.\n * @returns Array of Patch objects.\n * @public\n */\nexport function make(textA: string, textB: string, options?: Partial<MakePatchOptions>): Patch[]\n\n/**\n * Compute a list of patches to turn textA into textB using provided diff tuples.\n *\n * @param textA - Original text.\n * @param diffs - Diff tuples to use as base.\n * @param options - Options for the patch generation.\n * @returns Array of Patch objects.\n * @public\n */\nexport function make(textA: string, diffs: Diff[], options?: Partial<MakePatchOptions>): Patch[]\n\nexport function make(\n  a: Diff[] | string,\n  b?: Partial<MakePatchOptions> | string | Diff[],\n  options?: Partial<MakePatchOptions>,\n): Patch[] {\n  if (typeof a === 'string' && typeof b === 'string') {\n    // Method 1: textA, textB\n    // Compute diffs from textA and textB.\n    let diffs = diff(a, b, {checkLines: true})\n    if (diffs.length > 2) {\n      diffs = cleanupSemantic(diffs)\n      diffs = cleanupEfficiency(diffs)\n    }\n    return _make(a, diffs, getDefaultOpts(options))\n  }\n\n  if (a && Array.isArray(a) && typeof b === 'undefined') {\n    // Method 2: diffs\n    // Compute textA from diffs.\n    return _make(diffText1(a), a, getDefaultOpts(options))\n  }\n\n  if (typeof a === 'string' && b && Array.isArray(b)) {\n    // Method 3: textA, diffs\n    return _make(a, b, getDefaultOpts(options))\n  }\n\n  throw new Error('Unknown call format to make()')\n}\n\nfunction _make(textA: string, diffs: Diff[], options: MakePatchOptions): Patch[] {\n  if (diffs.length === 0) {\n    return [] // Get rid of the null case.\n  }\n  const patches: Patch[] = []\n\n  let patch = createPatchObject(0, 0)\n  let patchDiffLength = 0 // Keeping our own length var is faster in JS.\n  let charCount1 = 0 // Number of characters into the textA string.\n  let charCount2 = 0 // Number of characters into the textB string.\n  let utf8Count1 = 0 // Number of utf-8 bytes into the textA string.\n  let utf8Count2 = 0 // Number of utf-8 bytes into the textB string.\n\n  // Start with textA (prepatchText) and apply the diffs until we arrive at\n  // textB (postpatchText).  We recreate the patches one by one to determine\n  // context info.\n  let prepatchText = textA\n  let postpatchText = textA\n\n  for (let x = 0; x < diffs.length; x++) {\n    const currentDiff = diffs[x]\n    const [diffType, diffText] = currentDiff\n    const diffTextLength = diffText.length\n    const diffByteLength = countUtf8Bytes(diffText)\n\n    if (!patchDiffLength && diffType !== DIFF_EQUAL) {\n      // A new patch starts here.\n      patch.start1 = charCount1\n      patch.start2 = charCount2\n      patch.utf8Start1 = utf8Count1\n      patch.utf8Start2 = utf8Count2\n    }\n\n    switch (diffType) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = currentDiff\n        patch.length2 += diffTextLength\n        patch.utf8Length2 += diffByteLength\n        postpatchText =\n          postpatchText.substring(0, charCount2) + diffText + postpatchText.substring(charCount2)\n        break\n      case DIFF_DELETE:\n        patch.length1 += diffTextLength\n        patch.utf8Length1 += diffByteLength\n        patch.diffs[patchDiffLength++] = currentDiff\n        postpatchText =\n          postpatchText.substring(0, charCount2) +\n          postpatchText.substring(charCount2 + diffTextLength)\n        break\n      case DIFF_EQUAL:\n        if (diffTextLength <= 2 * options.margin && patchDiffLength && diffs.length !== x + 1) {\n          // Small equality inside a patch.\n          patch.diffs[patchDiffLength++] = currentDiff\n          patch.length1 += diffTextLength\n          patch.length2 += diffTextLength\n          patch.utf8Length1 += diffByteLength\n          patch.utf8Length2 += diffByteLength\n        } else if (diffTextLength >= 2 * options.margin) {\n          // Time for a new patch.\n          if (patchDiffLength) {\n            addContext(patch, prepatchText, options)\n            patches.push(patch)\n            patch = createPatchObject(-1, -1)\n            patchDiffLength = 0\n            // Unlike Unidiff, our patch lists have a rolling context.\n            // http://code.google.com/p/google-diff-match-patch/wiki/Unidiff\n            // Update prepatch text & pos to reflect the application of the\n            // just completed patch.\n            prepatchText = postpatchText\n            charCount1 = charCount2\n            utf8Count1 = utf8Count2\n          }\n        }\n        break\n      default:\n        throw new Error('Unknown diff type')\n    }\n\n    // Update the current character count.\n    if (diffType !== DIFF_INSERT) {\n      charCount1 += diffTextLength\n      utf8Count1 += diffByteLength\n    }\n    if (diffType !== DIFF_DELETE) {\n      charCount2 += diffTextLength\n      utf8Count2 += diffByteLength\n    }\n  }\n\n  // Pick up the leftover patch if not empty.\n  if (patchDiffLength) {\n    addContext(patch, prepatchText, options)\n    patches.push(patch)\n  }\n\n  return patches\n}\n\n/**\n * Increase the context until it is unique,\n * but don't let the pattern expand beyond MAX_BITS.\n *\n * @param patch - The patch to grow.\n * @param text - Source text.\n * @param opts\n * @internal\n */\nexport function addContext(patch: Patch, text: string, opts: MakePatchOptions): void {\n  if (text.length === 0) {\n    return\n  }\n  let pattern = text.substring(patch.start2, patch.start2 + patch.length1)\n  let padding = 0\n\n  // Look for the first and last matches of pattern in text.  If two different\n  // matches are found, increase the pattern length.\n  while (\n    text.indexOf(pattern) !== text.lastIndexOf(pattern) &&\n    pattern.length < MAX_BITS - opts.margin - opts.margin\n  ) {\n    padding += opts.margin\n    pattern = text.substring(patch.start2 - padding, patch.start2 + patch.length1 + padding)\n  }\n  // Add one chunk for good luck.\n  padding += opts.margin\n\n  // Add the prefix.\n\n  // Avoid splitting inside a surrogate.\n  let prefixStart = patch.start2 - padding\n  if (prefixStart >= 1 && isLowSurrogate(text[prefixStart])) {\n    prefixStart--\n  }\n\n  const prefix = text.substring(prefixStart, patch.start2)\n  if (prefix) {\n    patch.diffs.unshift([DIFF_EQUAL, prefix])\n  }\n\n  const prefixLength = prefix.length\n  const prefixUtf8Length = countUtf8Bytes(prefix)\n\n  // Add the suffix.\n\n  // Avoid splitting inside a surrogate.\n  let suffixEnd = patch.start2 + patch.length1 + padding\n  if (suffixEnd < text.length && isLowSurrogate(text[suffixEnd])) {\n    suffixEnd++\n  }\n\n  const suffix = text.substring(patch.start2 + patch.length1, suffixEnd)\n  if (suffix) {\n    patch.diffs.push([DIFF_EQUAL, suffix])\n  }\n\n  const suffixLength = suffix.length\n  const suffixUtf8Length = countUtf8Bytes(suffix)\n\n  // Roll back the start points.\n  patch.start1 -= prefixLength\n  patch.start2 -= prefixLength\n  patch.utf8Start1 -= prefixUtf8Length\n  patch.utf8Start2 -= prefixUtf8Length\n\n  // Extend the lengths.\n  patch.length1 += prefixLength + suffixLength\n  patch.length2 += prefixLength + suffixLength\n  patch.utf8Length1 += prefixUtf8Length + suffixUtf8Length\n  patch.utf8Length2 += prefixUtf8Length + suffixUtf8Length\n}\n","import {DIFF_DELETE, DIFF_EQUAL, DIFF_INSERT} from '../diff/diff.js'\nimport {countUtf8Bytes} from '../utils/utf8Indices.js'\nimport {createPatchObject, type Patch} from './createPatchObject.js'\n\nconst patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/\n\n/**\n * Parse a textual representation of patches and return a list of Patch objects.\n *\n * @param textline - Text representation of patches.\n * @returns Array of Patch objects.\n * @public\n */\nexport function parse(textline: string): Patch[] {\n  if (!textline) {\n    return []\n  }\n\n  const patches: Patch[] = []\n  const lines = textline.split('\\n')\n\n  let textPointer = 0\n  while (textPointer < lines.length) {\n    const m = lines[textPointer].match(patchHeader)\n    if (!m) {\n      throw new Error(`Invalid patch string: ${lines[textPointer]}`)\n    }\n\n    const patch = createPatchObject(toInt(m[1]), toInt(m[3]))\n    patches.push(patch)\n    if (m[2] === '') {\n      patch.start1--\n      patch.utf8Start1--\n      patch.length1 = 1\n      patch.utf8Length1 = 1\n    } else if (m[2] === '0') {\n      patch.length1 = 0\n      patch.utf8Length1 = 0\n    } else {\n      patch.start1--\n      patch.utf8Start1--\n      // The patch itself will contain the UTF-8 length\n      patch.utf8Length1 = toInt(m[2])\n      // We start with UCS-2 length set to the same, but we adjust for it later\n      patch.length1 = patch.utf8Length1\n    }\n\n    if (m[4] === '') {\n      patch.start2--\n      patch.utf8Start2--\n      patch.length2 = 1\n      patch.utf8Length2 = 1\n    } else if (m[4] === '0') {\n      patch.length2 = 0\n      patch.utf8Length2 = 0\n    } else {\n      patch.start2--\n      patch.utf8Start2--\n      // The patch itself will contain the UTF-8 length\n      patch.utf8Length2 = toInt(m[4])\n      // We start with UCS-2 length set to the same, but we adjust for it later\n      patch.length2 = patch.utf8Length2\n    }\n    textPointer++\n\n    while (textPointer < lines.length) {\n      const currentLine = lines[textPointer]\n      const sign = currentLine.charAt(0)\n\n      if (sign === '@') {\n        // Start of next patch\n        break\n      }\n\n      if (sign === '') {\n        // Blank line? Ignore.\n        textPointer++\n        continue\n      }\n\n      let line: string\n      try {\n        line = decodeURI(currentLine.slice(1))\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      } catch (ex) {\n        // Malformed URI sequence.\n        throw new Error(`Illegal escape in parse: ${currentLine}`)\n      }\n\n      // The number of bytes in a line does not equate to the number of \"characters\"\n      // returned by `string.length` - we have to subtract the diff here in order to\n      // make slicing/calculations work correctly\n      const utf8Diff = countUtf8Bytes(line) - line.length\n      if (sign === '-') {\n        // Deletion.\n        patch.diffs.push([DIFF_DELETE, line])\n        patch.length1 -= utf8Diff\n      } else if (sign === '+') {\n        // Insertion.\n        patch.diffs.push([DIFF_INSERT, line])\n        patch.length2 -= utf8Diff\n      } else if (sign === ' ') {\n        // Minor equality.\n        patch.diffs.push([DIFF_EQUAL, line])\n        patch.length1 -= utf8Diff\n        patch.length2 -= utf8Diff\n      } else {\n        // WTF?\n        throw new Error(`Invalid patch mode \"${sign}\" in: ${line}`)\n      }\n      textPointer++\n    }\n  }\n  return patches\n}\n\nfunction toInt(num: string): number {\n  return parseInt(num, 10)\n}\n","import {DIFF_DELETE, DIFF_EQUAL, DIFF_INSERT} from '../diff/diff.js'\nimport {type Patch} from './createPatchObject.js'\n\n/**\n * Create a textual representation of a patch list.\n *\n * @param patches - Patches to stringify\n * @returns Text representation of patches\n * @public\n */\nexport function stringify(patches: Patch[]): string {\n  return patches.map(stringifyPatch).join('')\n}\n\n/**\n * Create a textual representation of a patch.\n *\n * @param patch - Patch to stringify\n * @returns Text representation of patch\n * @public\n */\nexport function stringifyPatch(patch: Patch): string {\n  const {utf8Length1, utf8Length2, utf8Start1, utf8Start2, diffs} = patch\n\n  let coords1: string\n  if (utf8Length1 === 0) {\n    coords1 = `${utf8Start1},0`\n  } else if (utf8Length1 === 1) {\n    coords1 = `${utf8Start1 + 1}`\n  } else {\n    coords1 = `${utf8Start1 + 1},${utf8Length1}`\n  }\n\n  let coords2: string\n  if (utf8Length2 === 0) {\n    coords2 = `${utf8Start2},0`\n  } else if (utf8Length2 === 1) {\n    coords2 = `${utf8Start2 + 1}`\n  } else {\n    coords2 = `${utf8Start2 + 1},${utf8Length2}`\n  }\n\n  const text = [`@@ -${coords1} +${coords2} @@\\n`]\n  let op\n\n  // Escape the body of the patch with %xx notation.\n  for (let x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        op = '+'\n        break\n      case DIFF_DELETE:\n        op = '-'\n        break\n      case DIFF_EQUAL:\n        op = ' '\n        break\n      default:\n        throw new Error('Unknown patch operation.')\n    }\n    text[x + 1] = `${op + encodeURI(diffs[x][1])}\\n`\n  }\n\n  return text.join('').replace(/%20/g, ' ')\n}\n"],"names":["diff","__spreadValues","text","char","MAX_BITS"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"debugId":null}},
    {"offset": {"line": 6482, "column": 0}, "map": {"version":3,"file":"index.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/document/debug.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/patch/ImmutableAccessor.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/util.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/jsonpath/arrayToJSONMatchPath.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/jsonpath/descend.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/jsonpath/tokenize.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/jsonpath/parse.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/jsonpath/toPath.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/jsonpath/Expression.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/jsonpath/Descender.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/jsonpath/Matcher.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/jsonpath/PlainProbe.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/jsonpath/extractAccessors.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/jsonpath/extract.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/jsonpath/extractWithPath.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/patch/DiffMatchPatch.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/patch/IncPatch.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/patch/util.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/patch/InsertPatch.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/patch/SetIfMissingPatch.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/patch/SetPatch.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/patch/UnsetPatch.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/patch/parse.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/patch/Patcher.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/document/luid.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/document/Mutation.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/document/Document.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/document/SquashingBuffer.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/mutator/src/document/BufferedDocument.ts"],"sourcesContent":["import debugIt from 'debug'\n\nexport const debug = debugIt('mutator-document')\n","import {type Probe} from '../jsonpath/Probe'\n\n/**\n * An immutable probe/writer for plain JS objects that will never mutate\n * the provided _value in place. Each setter returns a new (wrapped) version\n * of the value.\n */\nexport class ImmutableAccessor implements Probe {\n  _value: unknown\n  path: (string | number)[]\n\n  constructor(value: unknown, path?: (string | number)[]) {\n    this._value = value\n    this.path = path || []\n  }\n\n  containerType(): 'array' | 'object' | 'primitive' {\n    if (Array.isArray(this._value)) {\n      return 'array'\n    } else if (this._value !== null && typeof this._value === 'object') {\n      return 'object'\n    }\n    return 'primitive'\n  }\n\n  // Common reader, supported by all containers\n  get(): unknown {\n    return this._value\n  }\n\n  // Array reader\n  length(): number {\n    if (!Array.isArray(this._value)) {\n      throw new Error(\"Won't return length of non-indexable _value\")\n    }\n\n    return this._value.length\n  }\n\n  getIndex(i: number): ImmutableAccessor | false | null {\n    if (!Array.isArray(this._value)) {\n      return false\n    }\n\n    if (i >= this.length()) {\n      return null\n    }\n\n    return new ImmutableAccessor(this._value[i], this.path.concat(i))\n  }\n\n  // Object reader\n  hasAttribute(key: string): boolean {\n    return isRecord(this._value) ? this._value.hasOwnProperty(key) : false\n  }\n\n  attributeKeys(): string[] {\n    return isRecord(this._value) ? Object.keys(this._value) : []\n  }\n\n  getAttribute(key: string): ImmutableAccessor | null {\n    if (!isRecord(this._value)) {\n      throw new Error('getAttribute only applies to plain objects')\n    }\n\n    if (!this.hasAttribute(key)) {\n      return null\n    }\n\n    return new ImmutableAccessor(this._value[key], this.path.concat(key))\n  }\n\n  // Common writer, supported by all containers\n  set(value: unknown): ImmutableAccessor {\n    return value === this._value ? this : new ImmutableAccessor(value, this.path)\n  }\n\n  // array writer interface\n  setIndex(i: number, value: unknown): ImmutableAccessor {\n    if (!Array.isArray(this._value)) {\n      throw new Error('setIndex only applies to arrays')\n    }\n\n    if (Object.is(value, this._value[i])) {\n      return this\n    }\n\n    const nextValue = this._value.slice()\n    nextValue[i] = value\n    return new ImmutableAccessor(nextValue, this.path)\n  }\n\n  setIndexAccessor(i: number, accessor: ImmutableAccessor): ImmutableAccessor {\n    return this.setIndex(i, accessor.get())\n  }\n\n  unsetIndices(indices: number[]): ImmutableAccessor {\n    if (!Array.isArray(this._value)) {\n      throw new Error('unsetIndices only applies to arrays')\n    }\n\n    const length = this._value.length\n    const nextValue = []\n    // Copy every _value _not_ in the indices array over to the newValue\n    for (let i = 0; i < length; i++) {\n      if (indices.indexOf(i) === -1) {\n        nextValue.push(this._value[i])\n      }\n    }\n    return new ImmutableAccessor(nextValue, this.path)\n  }\n\n  insertItemsAt(pos: number, items: unknown[]): ImmutableAccessor {\n    if (!Array.isArray(this._value)) {\n      throw new Error('insertItemsAt only applies to arrays')\n    }\n\n    let nextValue\n    if (this._value.length === 0 && pos === 0) {\n      nextValue = items\n    } else {\n      nextValue = this._value.slice(0, pos).concat(items).concat(this._value.slice(pos))\n    }\n\n    return new ImmutableAccessor(nextValue, this.path)\n  }\n\n  // Object writer interface\n  setAttribute(key: string, value: unknown): ImmutableAccessor {\n    if (!isRecord(this._value)) {\n      throw new Error('Unable to set attribute of non-object container')\n    }\n\n    if (Object.is(value, this._value[key])) {\n      return this\n    }\n\n    const nextValue = Object.assign({}, this._value, {[key]: value})\n    return new ImmutableAccessor(nextValue, this.path)\n  }\n\n  setAttributeAccessor(key: string, accessor: ImmutableAccessor): ImmutableAccessor {\n    return this.setAttribute(key, accessor.get())\n  }\n\n  unsetAttribute(key: string): ImmutableAccessor {\n    if (!isRecord(this._value)) {\n      throw new Error('Unable to unset attribute of non-object container')\n    }\n\n    const nextValue = Object.assign({}, this._value)\n    delete nextValue[key]\n    return new ImmutableAccessor(nextValue, this.path)\n  }\n}\n\nfunction isRecord(value: unknown): value is {[key: string]: unknown} {\n  return value !== null && typeof value === 'object'\n}\n","export function isRecord(value: unknown): value is {[key: string]: unknown} {\n  return value !== null && typeof value === 'object'\n}\n","import {type Path, type PathSegment} from '@sanity/types'\n\nimport {isRecord} from '../util'\n\nconst IS_DOTTABLE = /^[a-z_$]+/\n\n/**\n * Converts a path in array form to a JSONPath string\n *\n * @param pathArray - Array of path segments\n * @returns String representation of the path\n * @internal\n */\nexport function arrayToJSONMatchPath(pathArray: Path): string {\n  let path = ''\n  pathArray.forEach((segment, index) => {\n    path += stringifySegment(segment, index === 0)\n  })\n  return path\n}\n\n// Converts an array of simple values (strings, numbers only) to a jsonmatch path string.\nfunction stringifySegment(\n  segment: PathSegment | Record<string, unknown>,\n  hasLeading: boolean,\n): string {\n  if (typeof segment === 'number') {\n    return `[${segment}]`\n  }\n\n  if (isRecord(segment)) {\n    const seg = segment as Record<string, unknown>\n    return Object.keys(segment)\n      .map((key) => (isPrimitiveValue(seg[key]) ? `[${key}==\"${seg[key]}\"]` : ''))\n      .join('')\n  }\n\n  if (typeof segment === 'string' && IS_DOTTABLE.test(segment)) {\n    return hasLeading ? segment : `.${segment}`\n  }\n\n  return `['${segment}']`\n}\n\nfunction isPrimitiveValue(val: unknown): val is string | number | boolean {\n  switch (typeof val) {\n    case 'number':\n    case 'string':\n    case 'boolean':\n      return true\n    default:\n      return false\n  }\n}\n","import {type Expr, type PathExpr} from './types'\n\n/**\n * Splits an expression into a set of heads, tails. A head is the next leaf node to\n * check for matches, and a tail is everything that follows it. Matching is done by\n * matching heads, then proceedint to the matching value, splitting the tail into\n * heads and tails and checking the heads against the new value, and so on.\n */\nexport function descend(tail: Expr): [Expr | null, PathExpr | null][] {\n  const [head, newTail] = splitIfPath(tail)\n  if (!head) {\n    throw new Error('Head cannot be null')\n  }\n\n  return spreadIfUnionHead(head, newTail)\n}\n\n// Split path in [head, tail]\nfunction splitIfPath(tail: Expr): [Expr | null, PathExpr | null] {\n  if (tail.type !== 'path') {\n    return [tail, null]\n  }\n\n  const nodes = tail.nodes\n  if (nodes.length === 0) {\n    return [null, null]\n  }\n\n  if (nodes.length === 1) {\n    return [nodes[0], null]\n  }\n\n  return [nodes[0], {type: 'path', nodes: nodes.slice(1)}]\n}\n\nfunction concatPaths(path1: PathExpr | null, path2: PathExpr | null): PathExpr | null {\n  if (!path1 && !path2) {\n    return null\n  }\n\n  const nodes1 = path1 ? path1.nodes : []\n  const nodes2 = path2 ? path2.nodes : []\n  return {\n    type: 'path',\n    nodes: nodes1.concat(nodes2),\n  }\n}\n\n// Spreads a union head into several heads/tails\nfunction spreadIfUnionHead(head: Expr, tail: PathExpr | null): [Expr | null, PathExpr | null][] {\n  if (head.type !== 'union') {\n    return [[head, tail]]\n  }\n\n  return head.nodes.map((node) => {\n    if (node.type === 'path') {\n      const [subHead, subTail] = splitIfPath(node)\n      return [subHead, concatPaths(subTail, tail)]\n    }\n\n    return [node, tail]\n  })\n}\n","import {\n  type IdentifierToken,\n  type NumberToken,\n  type QuotedToken,\n  type SymbolClass,\n  type SymbolToken,\n  type Token,\n} from './types'\n\n// TODO: Support '*'\n\nconst digitChar = /[0-9]/\nconst attributeCharMatcher = /^[a-zA-Z0-9_]$/\nconst attributeFirstCharMatcher = /^[a-zA-Z_]$/\n\nconst symbols: Record<SymbolClass, string[]> = {\n  // NOTE: These are compared against in order of definition,\n  // thus '==' must come before '=', '>=' before '>', etc.\n  operator: ['..', '.', ',', ':', '?'],\n  comparator: ['>=', '<=', '<', '>', '==', '!='],\n  keyword: ['$', '@'],\n  boolean: ['true', 'false'],\n  paren: ['[', ']'],\n}\n\nconst symbolClasses = Object.keys(symbols) as SymbolClass[]\n\ntype TokenizerFn = () => Token | null\n\n/**\n * Tokenizes a jsonpath2 expression\n */\nclass Tokenizer {\n  source: string\n  i: number\n  length: number\n  tokenizers: TokenizerFn[]\n\n  constructor(path: string) {\n    this.source = path\n    this.length = path.length\n    this.i = 0\n    this.tokenizers = [\n      this.tokenizeSymbol,\n      this.tokenizeIdentifier,\n      this.tokenizeNumber,\n      this.tokenizeQuoted,\n    ].map((fn) => fn.bind(this))\n  }\n\n  tokenize(): Token[] {\n    const result: Token[] = []\n    while (!this.EOF()) {\n      this.chompWhitespace()\n      let token: Token | null = null\n      // @todo refactor into a simpler `.find()`?\n      const found = this.tokenizers.some((tokenizer) => {\n        token = tokenizer()\n        return Boolean(token)\n      })\n      if (!found || !token) {\n        throw new Error(`Invalid tokens in jsonpath '${this.source}' @ ${this.i}`)\n      }\n      result.push(token)\n    }\n    return result\n  }\n\n  takeWhile(fn: (character: string) => string | null): string | null {\n    const start = this.i\n    let result = ''\n    while (!this.EOF()) {\n      const nextChar = fn(this.source[this.i])\n      if (nextChar === null) {\n        break\n      }\n      result += nextChar\n      this.i++\n    }\n    if (this.i === start) {\n      return null\n    }\n    return result\n  }\n\n  EOF(): boolean {\n    return this.i >= this.length\n  }\n\n  peek(): string | null {\n    if (this.EOF()) {\n      return null\n    }\n    return this.source[this.i]\n  }\n\n  consume(str: string) {\n    if (this.i + str.length > this.length) {\n      throw new Error(`Expected ${str} at end of jsonpath`)\n    }\n    if (str === this.source.slice(this.i, this.i + str.length)) {\n      this.i += str.length\n    } else {\n      throw new Error(`Expected \"${str}\", but source contained \"${this.source.slice()}`)\n    }\n  }\n\n  // Tries to match the upcoming bit of string with the provided string. If it matches, returns\n  // the string, then advances the read pointer to the next bit. If not, returns null and nothing\n  // happens.\n  tryConsume(str: string) {\n    if (this.i + str.length > this.length) {\n      return null\n    }\n    if (str === this.source.slice(this.i, this.i + str.length)) {\n      // When checking symbols that consist of valid attribute characters, we\n      // need to make sure we don't inadvertently treat an attribute as a\n      // symbol. For example, an attribute 'trueCustomerField' should not be\n      // scanned as the boolean symbol \"true\".\n      if (str[0].match(attributeCharMatcher)) {\n        // check that char following the symbol match is not also an attribute char\n        if (this.length > this.i + str.length) {\n          const nextChar = this.source[this.i + str.length]\n          if (nextChar && nextChar.match(attributeCharMatcher)) {\n            return null\n          }\n        }\n      }\n      this.i += str.length\n      return str\n    }\n    return null\n  }\n\n  chompWhitespace(): void {\n    this.takeWhile((char): string | null => {\n      return char === ' ' ? '' : null\n    })\n  }\n\n  tokenizeQuoted(): QuotedToken | null {\n    const quote = this.peek()\n    if (quote === \"'\" || quote === '\"') {\n      this.consume(quote)\n      let escape = false\n      const inner = this.takeWhile((char) => {\n        if (escape) {\n          escape = false\n          return char\n        }\n        if (char === '\\\\') {\n          escape = true\n          return ''\n        }\n        if (char != quote) {\n          return char\n        }\n        return null\n      })\n      this.consume(quote)\n      return {\n        type: 'quoted',\n        value: inner,\n        quote: quote === '\"' ? 'double' : 'single',\n      }\n    }\n    return null\n  }\n\n  tokenizeIdentifier(): IdentifierToken | null {\n    let first = true\n    const identifier = this.takeWhile((char) => {\n      if (first) {\n        first = false\n        return char.match(attributeFirstCharMatcher) ? char : null\n      }\n      return char.match(attributeCharMatcher) ? char : null\n    })\n    if (identifier !== null) {\n      return {\n        type: 'identifier',\n        name: identifier,\n      }\n    }\n    return null\n  }\n\n  tokenizeNumber(): NumberToken | null {\n    const start = this.i\n    let dotSeen = false\n    let digitSeen = false\n    let negative = false\n    if (this.peek() === '-') {\n      negative = true\n      this.consume('-')\n    }\n    const number = this.takeWhile((char) => {\n      if (char === '.' && !dotSeen && digitSeen) {\n        dotSeen = true\n        return char\n      }\n      digitSeen = true\n      return char.match(digitChar) ? char : null\n    })\n    if (number !== null) {\n      return {\n        type: 'number',\n        value: negative ? -number : +number,\n        raw: negative ? `-${number}` : number,\n      }\n    }\n    // No number, rewind\n    this.i = start\n    return null\n  }\n\n  tokenizeSymbol(): SymbolToken | null {\n    for (const symbolClass of symbolClasses) {\n      const patterns = symbols[symbolClass]\n      const symbol = patterns.find((pattern) => this.tryConsume(pattern))\n      if (symbol) {\n        return {\n          type: symbolClass,\n          symbol,\n        }\n      }\n    }\n\n    return null\n  }\n}\n\nexport function tokenize(jsonpath: string): Token[] {\n  return new Tokenizer(jsonpath).tokenize()\n}\n","// Converts a string into an abstract syntax tree representation\n\nimport {tokenize} from './tokenize'\nimport {\n  type AliasExpr,\n  type AttributeExpr,\n  type BooleanExpr,\n  type ConstraintExpr,\n  type IndexExpr,\n  type NumberExpr,\n  type PathExpr,\n  type RangeExpr,\n  type RecursiveExpr,\n  type StringExpr,\n  type Token,\n  type UnionExpr,\n} from './types'\n\n// TODO: Support '*'\n\nclass Parser {\n  tokens: Token[]\n  length: number\n  i: number\n\n  constructor(path: string) {\n    this.tokens = tokenize(path)\n    this.length = this.tokens.length\n    this.i = 0\n  }\n\n  parse() {\n    return this.parsePath()\n  }\n\n  EOF() {\n    return this.i >= this.length\n  }\n\n  // Look at upcoming token\n  peek() {\n    if (this.EOF()) {\n      return null\n    }\n    return this.tokens[this.i]\n  }\n\n  consume() {\n    const result = this.peek()\n    this.i += 1\n    return result\n  }\n\n  // Return next token if it matches the pattern\n  probe(pattern: Record<string, unknown>): Token | null {\n    const token = this.peek()\n    if (!token) {\n      return null\n    }\n\n    const record = token as unknown as Record<string, unknown>\n    const match = Object.keys(pattern).every((key) => {\n      return key in token && pattern[key] === record[key]\n    })\n\n    return match ? token : null\n  }\n\n  // Return and consume next token if it matches the pattern\n  match(pattern: Partial<Token>): Token | null {\n    return this.probe(pattern) ? this.consume() : null\n  }\n\n  parseAttribute(): AttributeExpr | null {\n    const token = this.match({type: 'identifier'})\n    if (token && token.type === 'identifier') {\n      return {\n        type: 'attribute',\n        name: token.name,\n      }\n    }\n    const quoted = this.match({type: 'quoted', quote: 'single'})\n    if (quoted && quoted.type === 'quoted') {\n      return {\n        type: 'attribute',\n        name: quoted.value || '',\n      }\n    }\n    return null\n  }\n\n  parseAlias(): AliasExpr | null {\n    if (this.match({type: 'keyword', symbol: '@'}) || this.match({type: 'keyword', symbol: '$'})) {\n      return {\n        type: 'alias',\n        target: 'self',\n      }\n    }\n    return null\n  }\n\n  parseNumber(): NumberExpr | null {\n    const token = this.match({type: 'number'})\n    if (token && token.type === 'number') {\n      return {\n        type: 'number',\n        value: token.value,\n      }\n    }\n    return null\n  }\n\n  parseNumberValue(): number | null {\n    const expr = this.parseNumber()\n    if (expr) {\n      return expr.value\n    }\n    return null\n  }\n\n  parseSliceSelector(): RangeExpr | IndexExpr | null {\n    const start = this.i\n    const rangeStart = this.parseNumberValue()\n\n    const colon1 = this.match({type: 'operator', symbol: ':'})\n    if (!colon1) {\n      if (rangeStart === null) {\n        // Rewind, this was actually nothing\n        this.i = start\n        return null\n      }\n\n      // Unwrap, this was just a single index not followed by colon\n      return {type: 'index', value: rangeStart}\n    }\n\n    const result: RangeExpr = {\n      type: 'range',\n      start: rangeStart,\n      end: this.parseNumberValue(),\n    }\n\n    const colon2 = this.match({type: 'operator', symbol: ':'})\n    if (colon2) {\n      result.step = this.parseNumberValue()\n    }\n\n    if (result.start === null && result.end === null) {\n      // rewind, this wasnt' a slice selector\n      this.i = start\n      return null\n    }\n\n    return result\n  }\n\n  parseValueReference(): AttributeExpr | RangeExpr | IndexExpr | null {\n    return this.parseAttribute() || this.parseSliceSelector()\n  }\n\n  parseLiteralValue(): StringExpr | BooleanExpr | NumberExpr | null {\n    const literalString = this.match({type: 'quoted', quote: 'double'})\n    if (literalString && literalString.type === 'quoted') {\n      return {\n        type: 'string',\n        value: literalString.value || '',\n      }\n    }\n    const literalBoolean = this.match({type: 'boolean'})\n    if (literalBoolean && literalBoolean.type === 'boolean') {\n      return {\n        type: 'boolean',\n        value: literalBoolean.symbol === 'true',\n      }\n    }\n    return this.parseNumber()\n  }\n\n  // TODO: Reorder constraints so that literal value is always on rhs, and variable is always\n  // on lhs.\n  parseFilterExpression(): ConstraintExpr | null {\n    const start = this.i\n    const expr = this.parseAttribute() || this.parseAlias()\n    if (!expr) {\n      return null\n    }\n\n    if (this.match({type: 'operator', symbol: '?'})) {\n      return {\n        type: 'constraint',\n        operator: '?',\n        lhs: expr,\n      }\n    }\n\n    const binOp = this.match({type: 'comparator'})\n    if (!binOp || binOp.type !== 'comparator') {\n      // No expression, rewind!\n      this.i = start\n      return null\n    }\n\n    const lhs = expr\n    const rhs = this.parseLiteralValue()\n    if (!rhs) {\n      throw new Error(`Operator ${binOp.symbol} needs a literal value at the right hand side`)\n    }\n\n    return {\n      type: 'constraint',\n      operator: binOp.symbol,\n      lhs: lhs,\n      rhs: rhs,\n    }\n  }\n\n  parseExpression(): ConstraintExpr | AttributeExpr | RangeExpr | IndexExpr | null {\n    return this.parseFilterExpression() || this.parseValueReference()\n  }\n\n  parseUnion(): UnionExpr | null {\n    if (!this.match({type: 'paren', symbol: '['})) {\n      return null\n    }\n\n    const terms = []\n    let expr = this.parseFilterExpression() || this.parsePath() || this.parseValueReference()\n    while (expr) {\n      terms.push(expr)\n      // End of union?\n      if (this.match({type: 'paren', symbol: ']'})) {\n        break\n      }\n\n      if (!this.match({type: 'operator', symbol: ','})) {\n        throw new Error('Expected ]')\n      }\n\n      expr = this.parseFilterExpression() || this.parsePath() || this.parseValueReference()\n      if (!expr) {\n        throw new Error(\"Expected expression following ','\")\n      }\n    }\n\n    return {\n      type: 'union',\n      nodes: terms,\n    }\n  }\n\n  parseRecursive(): RecursiveExpr | null {\n    if (!this.match({type: 'operator', symbol: '..'})) {\n      return null\n    }\n\n    const subpath = this.parsePath()\n    if (!subpath) {\n      throw new Error(\"Expected path following '..' operator\")\n    }\n\n    return {\n      type: 'recursive',\n      term: subpath,\n    }\n  }\n\n  parsePath(): PathExpr | AttributeExpr | UnionExpr | RecursiveExpr | null {\n    const nodes: (AttributeExpr | UnionExpr | RecursiveExpr)[] = []\n    const expr = this.parseAttribute() || this.parseUnion() || this.parseRecursive()\n    if (!expr) {\n      return null\n    }\n\n    nodes.push(expr)\n    while (!this.EOF()) {\n      if (this.match({type: 'operator', symbol: '.'})) {\n        const attr = this.parseAttribute()\n        if (!attr) {\n          throw new Error(\"Expected attribute name following '.\")\n        }\n        nodes.push(attr)\n        continue\n      } else if (this.probe({type: 'paren', symbol: '['})) {\n        const union = this.parseUnion()\n        if (!union) {\n          throw new Error(\"Expected union following '['\")\n        }\n        nodes.push(union)\n      } else {\n        const recursive = this.parseRecursive()\n        if (recursive) {\n          nodes.push(recursive)\n        }\n        break\n      }\n    }\n\n    if (nodes.length === 1) {\n      return nodes[0]\n    }\n\n    return {\n      type: 'path',\n      nodes: nodes,\n    }\n  }\n}\n\nexport function parseJsonPath(path: string): PathExpr | AttributeExpr | UnionExpr | RecursiveExpr {\n  const parsed = new Parser(path).parse()\n  if (!parsed) {\n    throw new Error(`Failed to parse JSON path \"${path}\"`)\n  }\n  return parsed\n}\n","import {type Expr} from './types'\n\n/**\n * Converts a parsed expression back into jsonpath2, roughly -\n * mostly for use with tests.\n *\n * @param expr - Expression to convert to path\n * @returns a string representation of the path\n * @internal\n */\nexport function toPath(expr: Expr): string {\n  return toPathInner(expr, false)\n}\n\nfunction toPathInner(expr: Expr, inUnion: boolean): string {\n  switch (expr.type) {\n    case 'attribute':\n      return expr.name\n    case 'alias':\n      return expr.target === 'self' ? '@' : '$'\n    case 'number':\n      return `${expr.value}`\n    case 'range': {\n      const result = []\n      if (!inUnion) {\n        result.push('[')\n      }\n      if (expr.start) {\n        result.push(`${expr.start}`)\n      }\n      result.push(':')\n      if (expr.end) {\n        result.push(`${expr.end}`)\n      }\n      if (expr.step) {\n        result.push(`:${expr.step}`)\n      }\n      if (!inUnion) {\n        result.push(']')\n      }\n      return result.join('')\n    }\n    case 'index':\n      if (inUnion) {\n        return `${expr.value}`\n      }\n\n      return `[${expr.value}]`\n    case 'constraint': {\n      const rhs = expr.rhs ? ` ${toPathInner(expr.rhs, false)}` : ''\n      const inner = `${toPathInner(expr.lhs, false)} ${expr.operator}${rhs}`\n\n      if (inUnion) {\n        return inner\n      }\n\n      return `[${inner}]`\n    }\n    case 'string':\n      return JSON.stringify(expr.value)\n    case 'path': {\n      const result = []\n      const nodes = expr.nodes.slice()\n      while (nodes.length > 0) {\n        const node = nodes.shift()\n        if (node) {\n          result.push(toPath(node))\n        }\n\n        const upcoming = nodes[0]\n        if (upcoming && toPathInner(upcoming, false)[0] !== '[') {\n          result.push('.')\n        }\n      }\n      return result.join('')\n    }\n    case 'union':\n      return `[${expr.nodes.map((e) => toPathInner(e, true)).join(',')}]`\n    default:\n      throw new Error(`Unknown node type ${expr.type}`)\n    case 'recursive':\n      return `..${toPathInner(expr.term, false)}`\n  }\n}\n","// A utility wrapper class to process parsed jsonpath expressions\n\nimport {descend} from './descend'\nimport {parseJsonPath} from './parse'\nimport {type Probe} from './Probe'\nimport {toPath} from './toPath'\nimport {type Expr, type HeadTail} from './types'\n\nexport interface Range {\n  start: number\n  end: number\n  step: number\n}\n\nexport class Expression {\n  expr: Expr\n\n  constructor(expr: Expr | Expression | null) {\n    if (!expr) {\n      throw new Error('Attempted to create Expression from null-value')\n    }\n\n    // This is a wrapped expr\n    if ('expr' in expr) {\n      this.expr = expr.expr\n    } else {\n      this.expr = expr\n    }\n\n    if (!('type' in this.expr)) {\n      throw new Error('Attempt to create Expression for expression with no type')\n    }\n  }\n\n  isPath(): boolean {\n    return this.expr.type === 'path'\n  }\n\n  isUnion(): boolean {\n    return this.expr.type === 'union'\n  }\n\n  isCollection(): boolean {\n    return this.isPath() || this.isUnion()\n  }\n\n  isConstraint(): boolean {\n    return this.expr.type === 'constraint'\n  }\n\n  isRecursive(): boolean {\n    return this.expr.type === 'recursive'\n  }\n\n  isExistenceConstraint(): boolean {\n    return this.expr.type === 'constraint' && this.expr.operator === '?'\n  }\n\n  isIndex(): boolean {\n    return this.expr.type === 'index'\n  }\n\n  isRange(): boolean {\n    return this.expr.type === 'range'\n  }\n\n  expandRange(probe?: Probe): Range {\n    const probeLength = () => {\n      if (!probe) {\n        throw new Error('expandRange() required a probe that was not passed')\n      }\n\n      return probe.length()\n    }\n\n    let start = 'start' in this.expr ? this.expr.start || 0 : 0\n    start = interpretNegativeIndex(start, probe)\n    let end = 'end' in this.expr ? this.expr.end || probeLength() : probeLength()\n    end = interpretNegativeIndex(end, probe)\n    const step = 'step' in this.expr ? this.expr.step || 1 : 1\n    return {start, end, step}\n  }\n\n  isAttributeReference(): boolean {\n    return this.expr.type === 'attribute'\n  }\n\n  // Is a range or index -> something referencing indexes\n  isIndexReference(): boolean {\n    return this.isIndex() || this.isRange()\n  }\n\n  name(): string {\n    return 'name' in this.expr ? this.expr.name : ''\n  }\n\n  isSelfReference(): boolean {\n    return this.expr.type === 'alias' && this.expr.target === 'self'\n  }\n\n  constraintTargetIsSelf(): boolean {\n    return (\n      this.expr.type === 'constraint' &&\n      this.expr.lhs.type === 'alias' &&\n      this.expr.lhs.target === 'self'\n    )\n  }\n\n  constraintTargetIsAttribute(): boolean {\n    return this.expr.type === 'constraint' && this.expr.lhs.type === 'attribute'\n  }\n\n  testConstraint(probe: Probe): boolean {\n    const expr = this.expr\n\n    if (expr.type === 'constraint' && expr.lhs.type === 'alias' && expr.lhs.target === 'self') {\n      if (probe.containerType() !== 'primitive') {\n        return false\n      }\n\n      if (expr.type === 'constraint' && expr.operator === '?') {\n        return true\n      }\n\n      const lhs = probe.get()\n      const rhs = expr.rhs && 'value' in expr.rhs ? expr.rhs.value : undefined\n      return testBinaryOperator(lhs, expr.operator, rhs)\n    }\n\n    if (expr.type !== 'constraint') {\n      return false\n    }\n\n    const lhs = expr.lhs\n    if (!lhs) {\n      throw new Error('No LHS of expression')\n    }\n\n    if (lhs.type !== 'attribute') {\n      throw new Error(`Constraint target ${lhs.type} not supported`)\n    }\n\n    if (probe.containerType() !== 'object') {\n      return false\n    }\n\n    const lhsValue = probe.getAttribute(lhs.name)\n    if (lhsValue === undefined || lhsValue === null || lhsValue.containerType() !== 'primitive') {\n      // LHS is void and empty, or it is a collection\n      return false\n    }\n\n    if (this.isExistenceConstraint()) {\n      // There is no rhs, and if we're here the key did exist\n      return true\n    }\n\n    const rhs = expr.rhs && 'value' in expr.rhs ? expr.rhs.value : undefined\n    return testBinaryOperator(lhsValue.get(), expr.operator, rhs)\n  }\n\n  pathNodes(): Expr[] {\n    return this.expr.type === 'path' ? this.expr.nodes : [this.expr]\n  }\n\n  prepend(node: Expression): Expression {\n    if (!node) {\n      return this\n    }\n\n    return new Expression({\n      type: 'path',\n      nodes: node.pathNodes().concat(this.pathNodes()),\n    })\n  }\n\n  concat(other: Expression | null): Expression {\n    return other ? other.prepend(this) : this\n  }\n\n  descend(): HeadTail[] {\n    return descend(this.expr).map((headTail) => {\n      const [head, tail] = headTail\n      return {\n        head: head ? new Expression(head) : null,\n        tail: tail ? new Expression(tail) : null,\n      }\n    })\n  }\n\n  unwrapRecursive(): Expression {\n    if (this.expr.type !== 'recursive') {\n      throw new Error(`Attempt to unwrap recursive on type ${this.expr.type}`)\n    }\n\n    return new Expression(this.expr.term)\n  }\n\n  toIndicies(probe?: Probe): number[] {\n    if (this.expr.type !== 'index' && this.expr.type !== 'range') {\n      throw new Error('Node cannot be converted to indexes')\n    }\n\n    if (this.expr.type === 'index') {\n      return [interpretNegativeIndex(this.expr.value, probe)]\n    }\n\n    const result: number[] = []\n    const range = this.expandRange(probe)\n    let {start, end} = range\n    if (range.step < 0) {\n      ;[start, end] = [end, start]\n    }\n\n    for (let i = start; i < end; i++) {\n      result.push(i)\n    }\n\n    return result\n  }\n\n  toFieldReferences(): number[] | string[] {\n    if (this.isIndexReference()) {\n      return this.toIndicies()\n    }\n    if (this.expr.type === 'attribute') {\n      return [this.expr.name]\n    }\n    throw new Error(`Can't convert ${this.expr.type} to field references`)\n  }\n\n  toString(): string {\n    return toPath(this.expr)\n  }\n\n  static fromPath(path: string): Expression {\n    const parsed = parseJsonPath(path)\n    if (!parsed) {\n      throw new Error(`Failed to parse path \"${path}\"`)\n    }\n\n    return new Expression(parsed)\n  }\n\n  static attributeReference(name: string): Expression {\n    return new Expression({\n      type: 'attribute',\n      name: name,\n    })\n  }\n\n  static indexReference(i: number): Expression {\n    return new Expression({\n      type: 'index',\n      value: i,\n    })\n  }\n}\n\n// Tests an operator on two given primitive values\nfunction testBinaryOperator(lhsValue: any, operator: string, rhsValue: any) {\n  switch (operator) {\n    case '>':\n      return lhsValue > rhsValue\n    case '>=':\n      return lhsValue >= rhsValue\n    case '<':\n      return lhsValue < rhsValue\n    case '<=':\n      return lhsValue <= rhsValue\n    case '==':\n      return lhsValue === rhsValue\n    case '!=':\n      return lhsValue !== rhsValue\n    default:\n      throw new Error(`Unsupported binary operator ${operator}`)\n  }\n}\n\nfunction interpretNegativeIndex(index: number, probe?: Probe): number {\n  if (index >= 0) {\n    return index\n  }\n\n  if (!probe) {\n    throw new Error('interpretNegativeIndex() must have a probe when < 0')\n  }\n\n  return index + probe.length()\n}\n","import {flatten} from 'lodash'\n\nimport {Expression} from './Expression'\nimport {type Probe} from './Probe'\n\n/**\n * Descender models the state of one partial jsonpath evaluation. Head is the\n * next thing to match, tail is the upcoming things once the head is matched.\n */\nexport class Descender {\n  head: Expression | null\n  tail: Expression | null\n\n  constructor(head: Expression | null, tail: Expression | null) {\n    this.head = head\n    this.tail = tail\n  }\n\n  // Iterate this descender once processing any constraints that are\n  // resolvable on the current value. Returns an array of new descenders\n  // that are guaranteed to be without constraints in the head\n  iterate(probe: Probe): Descender[] {\n    let result: Descender[] = [this]\n    if (this.head && this.head.isConstraint()) {\n      let anyConstraints = true\n      // Keep rewriting constraints until there are none left\n      while (anyConstraints) {\n        result = flatten(\n          result.map((descender) => {\n            return descender.iterateConstraints(probe)\n          }),\n        )\n        anyConstraints = result.some((descender) => {\n          return descender.head && descender.head.isConstraint()\n        })\n      }\n    }\n    return result\n  }\n\n  isRecursive(): boolean {\n    return Boolean(this.head && this.head.isRecursive())\n  }\n\n  hasArrived(): boolean {\n    return this.head === null && this.tail === null\n  }\n\n  extractRecursives(): Descender[] {\n    if (this.head && this.head.isRecursive()) {\n      const term = this.head.unwrapRecursive()\n      return new Descender(null, term.concat(this.tail)).descend()\n    }\n    return []\n  }\n\n  iterateConstraints(probe: Probe): Descender[] {\n    const head = this.head\n    if (head === null || !head.isConstraint()) {\n      // Not a constraint, no rewrite\n      return [this]\n    }\n\n    const result: Descender[] = []\n\n    if (probe.containerType() === 'primitive' && head.constraintTargetIsSelf()) {\n      if (head.testConstraint(probe)) {\n        result.push(...this.descend())\n      }\n      return result\n    }\n\n    // The value is an array\n    if (probe.containerType() === 'array') {\n      const length = probe.length()\n      for (let i = 0; i < length; i++) {\n        // Push new descenders with constraint translated to literal indices\n        // where they match\n        const constraint = probe.getIndex(i)\n        if (constraint && head.testConstraint(constraint)) {\n          result.push(new Descender(new Expression({type: 'index', value: i}), this.tail))\n        }\n      }\n      return result\n    }\n\n    // The value is an object\n    if (probe.containerType() === 'object') {\n      if (head.constraintTargetIsSelf()) {\n        // There are no matches for target self ('@') on a plain object\n        return []\n      }\n\n      if (head.testConstraint(probe)) {\n        return this.descend()\n      }\n\n      return result\n    }\n\n    return result\n  }\n\n  descend(): Descender[] {\n    if (!this.tail) {\n      return [new Descender(null, null)]\n    }\n\n    return this.tail.descend().map((ht) => {\n      return new Descender(ht.head, ht.tail)\n    })\n  }\n\n  toString(): string {\n    const result = ['<']\n    if (this.head) {\n      result.push(this.head.toString())\n    }\n    result.push('|')\n    if (this.tail) {\n      result.push(this.tail.toString())\n    }\n    result.push('>')\n    return result.join('')\n  }\n}\n","import {Descender} from './Descender'\nimport {Expression} from './Expression'\nimport {parseJsonPath} from './parse'\nimport {type Probe} from './Probe'\n\ninterface Result<P = unknown> {\n  leads: {\n    target: Expression\n    matcher: Matcher\n  }[]\n\n  delivery?: {\n    targets: Expression[]\n    payload: P\n  }\n}\n\n/**\n * @internal\n */\nexport class Matcher {\n  active: Descender[]\n  recursives: Descender[]\n  payload: unknown\n\n  constructor(active: Descender[], parent?: Matcher) {\n    this.active = active || []\n    if (parent) {\n      this.recursives = parent.recursives\n      this.payload = parent.payload\n    } else {\n      this.recursives = []\n    }\n    this.extractRecursives()\n  }\n\n  setPayload(payload: unknown): this {\n    this.payload = payload\n    return this\n  }\n\n  // Moves any recursive descenders onto the recursive track, removing them from\n  // the active set\n  extractRecursives(): void {\n    this.active = this.active.filter((descender) => {\n      if (descender.isRecursive()) {\n        this.recursives.push(...descender.extractRecursives())\n        return false\n      }\n      return true\n    })\n  }\n\n  // Find recursives that are relevant now and should be considered part of the active set\n  activeRecursives(probe: Probe): Descender[] {\n    return this.recursives.filter((descender) => {\n      const head = descender.head\n      if (!head) {\n        return false\n      }\n\n      // Constraints are always relevant\n      if (head.isConstraint()) {\n        return true\n      }\n\n      // Index references are only relevant for indexable values\n      if (probe.containerType() === 'array' && head.isIndexReference()) {\n        return true\n      }\n\n      // Attribute references are relevant for plain objects\n      if (probe.containerType() === 'object') {\n        return head.isAttributeReference() && probe.hasAttribute(head.name())\n      }\n\n      return false\n    })\n  }\n\n  match(probe: Probe): Result {\n    return this.iterate(probe).extractMatches(probe)\n  }\n\n  iterate(probe: Probe): Matcher {\n    const newActiveSet: Descender[] = []\n    this.active.concat(this.activeRecursives(probe)).forEach((descender) => {\n      newActiveSet.push(...descender.iterate(probe))\n    })\n    return new Matcher(newActiveSet, this)\n  }\n\n  // Returns true if any of the descenders in the active or recursive set\n  // consider the current state a final destination\n  isDestination(): boolean {\n    return this.active.some((descender) => descender.hasArrived())\n  }\n\n  hasRecursives(): boolean {\n    return this.recursives.length > 0\n  }\n\n  // Returns any payload delivieries and leads that needs to be followed to complete\n  // the process.\n  extractMatches(probe: Probe): Result {\n    const leads: {target: Expression; matcher: Matcher}[] = []\n    const targets: Expression[] = []\n    this.active.forEach((descender) => {\n      if (descender.hasArrived()) {\n        // This was already arrived, so matches this value, not descenders\n        targets.push(\n          new Expression({\n            type: 'alias',\n            target: 'self',\n          }),\n        )\n        return\n      }\n\n      const descenderHead = descender.head\n      if (!descenderHead) {\n        return\n      }\n\n      if (probe.containerType() === 'array' && !descenderHead.isIndexReference()) {\n        // This descender does not match an indexable value\n        return\n      }\n\n      if (probe.containerType() === 'object' && !descenderHead.isAttributeReference()) {\n        // This descender never match a plain object\n        return\n      }\n\n      if (descender.tail) {\n        // Not arrived yet\n        const matcher = new Matcher(descender.descend(), this)\n        descenderHead.toFieldReferences().forEach(() => {\n          leads.push({\n            target: descenderHead,\n            matcher: matcher,\n          })\n        })\n      } else {\n        // arrived\n        targets.push(descenderHead)\n      }\n    })\n\n    // If there are recursive terms, we need to add a lead for every descendant ...\n    if (this.hasRecursives()) {\n      // The recustives matcher will have no active set, only inherit recursives from this\n      const recursivesMatcher = new Matcher([], this)\n      if (probe.containerType() === 'array') {\n        const length = probe.length()\n        for (let i = 0; i < length; i++) {\n          leads.push({\n            target: Expression.indexReference(i),\n            matcher: recursivesMatcher,\n          })\n        }\n      } else if (probe.containerType() === 'object') {\n        probe.attributeKeys().forEach((name) => {\n          leads.push({\n            target: Expression.attributeReference(name),\n            matcher: recursivesMatcher,\n          })\n        })\n      }\n    }\n\n    return targets.length > 0\n      ? {leads: leads, delivery: {targets, payload: this.payload}}\n      : {leads: leads}\n  }\n\n  static fromPath(jsonpath: string): Matcher {\n    const path = parseJsonPath(jsonpath)\n    if (!path) {\n      throw new Error(`Failed to parse path from \"${jsonpath}\"`)\n    }\n\n    const descender = new Descender(null, new Expression(path))\n    return new Matcher(descender.descend())\n  }\n}\n","import {isRecord} from '../util'\nimport {type Probe} from './Probe'\n\n// A default implementation of a probe for vanilla JS _values\nexport class PlainProbe implements Probe {\n  _value: unknown\n  path: (string | number)[]\n\n  constructor(value: unknown, path?: (string | number)[]) {\n    this._value = value\n    this.path = path || []\n  }\n\n  containerType(): 'array' | 'object' | 'primitive' {\n    if (Array.isArray(this._value)) {\n      return 'array'\n    } else if (this._value !== null && typeof this._value === 'object') {\n      return 'object'\n    }\n    return 'primitive'\n  }\n\n  length(): number {\n    if (!Array.isArray(this._value)) {\n      throw new Error(\"Won't return length of non-indexable _value\")\n    }\n\n    return this._value.length\n  }\n\n  getIndex(i: number): false | null | PlainProbe {\n    if (!Array.isArray(this._value)) {\n      return false\n    }\n\n    if (i >= this.length()) {\n      return null\n    }\n\n    return new PlainProbe(this._value[i], this.path.concat(i))\n  }\n\n  hasAttribute(key: string): boolean {\n    if (!isRecord(this._value)) {\n      return false\n    }\n\n    return this._value.hasOwnProperty(key)\n  }\n\n  attributeKeys(): string[] {\n    return isRecord(this._value) ? Object.keys(this._value) : []\n  }\n\n  getAttribute(key: string): null | PlainProbe {\n    if (!isRecord(this._value)) {\n      throw new Error('getAttribute only applies to plain objects')\n    }\n\n    if (!this.hasAttribute(key)) {\n      return null\n    }\n\n    return new PlainProbe(this._value[key], this.path.concat(key))\n  }\n\n  get(): unknown {\n    return this._value\n  }\n}\n","import {compact} from 'lodash'\n\nimport {type Expression} from './Expression'\nimport {Matcher} from './Matcher'\nimport {PlainProbe} from './PlainProbe'\nimport {type Probe} from './Probe'\n\nexport function extractAccessors(path: string, value: unknown): Probe[] {\n  const result: Probe[] = []\n  const matcher = Matcher.fromPath(path).setPayload(function appendResult(values: Probe[]) {\n    result.push(...values)\n  })\n  const accessor = new PlainProbe(value)\n  descend(matcher, accessor)\n  return result\n}\n\nfunction descend(matcher: Matcher, accessor: Probe) {\n  const {leads, delivery} = matcher.match(accessor)\n\n  leads.forEach((lead) => {\n    accessorsFromTarget(lead.target, accessor).forEach((childAccessor) => {\n      descend(lead.matcher, childAccessor)\n    })\n  })\n\n  if (delivery) {\n    delivery.targets.forEach((target) => {\n      if (typeof delivery.payload === 'function') {\n        delivery.payload(accessorsFromTarget(target, accessor))\n      }\n    })\n  }\n}\n\nfunction accessorsFromTarget(target: Expression, accessor: Probe) {\n  const result = []\n  if (target.isIndexReference()) {\n    target.toIndicies(accessor).forEach((i) => {\n      result.push(accessor.getIndex(i))\n    })\n  } else if (target.isAttributeReference()) {\n    result.push(accessor.getAttribute(target.name()))\n  } else if (target.isSelfReference()) {\n    result.push(accessor)\n  } else {\n    throw new Error(`Unable to derive accessor for target ${target.toString()}`)\n  }\n  return compact(result)\n}\n","import {extractAccessors} from './extractAccessors'\n\n/**\n * Extracts values matching the given JsonPath\n *\n * @param path - Path to extract\n * @param value - Value to extract from\n * @returns An array of values matching the given path\n * @public\n */\nexport function extract(path: string, value: unknown): unknown[] {\n  const accessors = extractAccessors(path, value)\n  return accessors.map((acc) => acc.get())\n}\n","import {extractAccessors} from './extractAccessors'\n\n/**\n * Extracts a value for the given JsonPath, and includes the specific path of where it was found\n *\n * @param path - Path to extract\n * @param value - Value to extract from\n * @returns An array of objects with `path` and `value` keys\n * @internal\n */\nexport function extractWithPath(\n  path: string,\n  value: unknown,\n): {path: (string | number)[]; value: unknown}[] {\n  const accessors = extractAccessors(path, value)\n  return accessors.map((acc) => ({path: acc.path, value: acc.get()}))\n}\n","import {applyPatches, parsePatch, type Patch} from '@sanity/diff-match-patch'\n\nimport {type Expression} from '../jsonpath'\nimport {type ImmutableAccessor} from './ImmutableAccessor'\n\nfunction applyPatch(patch: Patch[], oldValue: unknown) {\n  // Silently avoid patching if the value type is not string\n  if (typeof oldValue !== 'string') return oldValue\n  const [result] = applyPatches(patch, oldValue, {allowExceedingIndices: true})\n  return result\n}\n\nexport class DiffMatchPatch {\n  path: string\n  dmpPatch: Patch[]\n  id: string\n\n  constructor(id: string, path: string, dmpPatchSrc: string) {\n    this.id = id\n    this.path = path\n    this.dmpPatch = parsePatch(dmpPatchSrc)\n  }\n\n  apply(targets: Expression[], accessor: ImmutableAccessor): ImmutableAccessor {\n    let result = accessor\n\n    // The target must be a container type\n    if (result.containerType() === 'primitive') {\n      return result\n    }\n\n    for (const target of targets) {\n      if (target.isIndexReference()) {\n        for (const index of target.toIndicies(accessor)) {\n          // Skip patching unless the index actually currently exists\n          const item = result.getIndex(index)\n          if (!item) {\n            continue\n          }\n\n          const oldValue = item.get()\n          const nextValue = applyPatch(this.dmpPatch, oldValue)\n          result = result.setIndex(index, nextValue)\n        }\n\n        continue\n      }\n\n      if (target.isAttributeReference() && result.hasAttribute(target.name())) {\n        const attribute = result.getAttribute(target.name())\n        if (!attribute) {\n          continue\n        }\n\n        const oldValue = attribute.get()\n        const nextValue = applyPatch(this.dmpPatch, oldValue)\n        result = result.setAttribute(target.name(), nextValue)\n        continue\n      }\n\n      throw new Error(`Unable to apply diffMatchPatch to target ${target.toString()}`)\n    }\n\n    return result\n  }\n}\n","import {type Expression} from '../jsonpath'\nimport {type ImmutableAccessor} from './ImmutableAccessor'\n\nfunction performIncrement(previousValue: unknown, delta: number): number {\n  if (typeof previousValue !== 'number' || !Number.isFinite(previousValue)) {\n    return previousValue as number\n  }\n\n  return previousValue + delta\n}\n\nexport class IncPatch {\n  path: string\n  value: number\n  id: string\n\n  constructor(id: string, path: string, value: number) {\n    this.path = path\n    this.value = value\n    this.id = id\n  }\n\n  apply(targets: Expression[], accessor: ImmutableAccessor): ImmutableAccessor {\n    let result = accessor\n\n    // The target must be a container type\n    if (result.containerType() === 'primitive') {\n      return result\n    }\n\n    for (const target of targets) {\n      if (target.isIndexReference()) {\n        for (const index of target.toIndicies(accessor)) {\n          // Skip patching unless the index actually currently exists\n          const item = result.getIndex(index)\n          if (!item) {\n            continue\n          }\n\n          const previousValue = item.get()\n          result = result.setIndex(index, performIncrement(previousValue, this.value))\n        }\n\n        continue\n      }\n\n      if (target.isAttributeReference()) {\n        const attribute = result.getAttribute(target.name())\n        if (!attribute) {\n          continue\n        }\n\n        const previousValue = attribute.get()\n        result = result.setAttribute(target.name(), performIncrement(previousValue, this.value))\n        continue\n      }\n\n      throw new Error(`Unable to apply to target ${target.toString()}`)\n    }\n\n    return result\n  }\n}\n","import {type Expression} from '../jsonpath'\nimport {type ImmutableAccessor} from './ImmutableAccessor'\n\nexport function targetsToIndicies(targets: Expression[], accessor: ImmutableAccessor): number[] {\n  const result: number[] = []\n  targets.forEach((target) => {\n    if (target.isIndexReference()) {\n      result.push(...target.toIndicies(accessor))\n    }\n  })\n  return result.sort()\n}\n","import {max, min} from 'lodash'\n\nimport {type Expression} from '../jsonpath'\nimport {type ImmutableAccessor} from './ImmutableAccessor'\nimport {targetsToIndicies} from './util'\n\nexport class InsertPatch {\n  location: string\n  path: string\n  items: unknown[]\n  id: string\n\n  constructor(id: string, location: string, path: string, items: unknown[]) {\n    this.id = id\n    this.location = location\n    this.path = path\n    this.items = items\n  }\n\n  apply(targets: Expression[], accessor: ImmutableAccessor): ImmutableAccessor {\n    let result = accessor\n    if (accessor.containerType() !== 'array') {\n      throw new Error('Attempt to apply insert patch to non-array value')\n    }\n\n    switch (this.location) {\n      case 'before': {\n        const pos = minIndex(targets, accessor)\n        result = result.insertItemsAt(pos, this.items)\n        break\n      }\n      case 'after': {\n        const pos = maxIndex(targets, accessor)\n        result = result.insertItemsAt(pos + 1, this.items)\n        break\n      }\n      case 'replace': {\n        // TODO: Properly implement ranges in compliance with content lake\n        // This will only properly support single contiguous ranges\n        const indicies = targetsToIndicies(targets, accessor)\n        result = result.unsetIndices(indicies)\n        result = result.insertItemsAt(indicies[0], this.items)\n        break\n      }\n      default: {\n        throw new Error(`Unsupported location atm: ${this.location}`)\n      }\n    }\n    return result\n  }\n}\n\nfunction minIndex(targets: Expression[], accessor: ImmutableAccessor): number {\n  let result = min(targetsToIndicies(targets, accessor)) || 0\n\n  // Ranges may be zero-length and not turn up in indices\n  targets.forEach((target) => {\n    if (target.isRange()) {\n      const {start} = target.expandRange()\n      if (start < result) {\n        result = start\n      }\n    }\n  })\n  return result\n}\n\nfunction maxIndex(targets: Expression[], accessor: ImmutableAccessor): number {\n  let result = max(targetsToIndicies(targets, accessor)) || 0\n\n  // Ranges may be zero-length and not turn up in indices\n  targets.forEach((target) => {\n    if (target.isRange()) {\n      const {end} = target.expandRange()\n      if (end > result) {\n        result = end\n      }\n    }\n  })\n  return result\n}\n","import {type Expression} from '../jsonpath'\nimport {type ImmutableAccessor} from './ImmutableAccessor'\n\nexport class SetIfMissingPatch {\n  id: string\n  path: string\n  value: unknown\n\n  constructor(id: string, path: string, value: unknown) {\n    this.id = id\n    this.path = path\n    this.value = value\n  }\n\n  apply(targets: Expression[], accessor: ImmutableAccessor): ImmutableAccessor {\n    let result = accessor\n    targets.forEach((target) => {\n      if (target.isIndexReference()) {\n        // setIfMissing do not apply to arrays, since Content Lake will reject nulls in arrays\n      } else if (target.isAttributeReference()) {\n        // setting a subproperty on a primitive value overwrites it, eg\n        // `{setIfMissing: {'address.street': 'California St'}}` on `{address: 'Fiction St'}` will\n        // result in `{address: {street: 'California St'}}`\n        if (result.containerType() === 'primitive') {\n          result = result.set({[target.name()]: this.value})\n        } else if (!result.hasAttribute(target.name())) {\n          result = accessor.setAttribute(target.name(), this.value)\n        }\n      } else {\n        throw new Error(`Unable to apply to target ${target.toString()}`)\n      }\n    })\n    return result\n  }\n}\n","import {type Expression} from '../jsonpath'\nimport {type ImmutableAccessor} from './ImmutableAccessor'\n\nexport class SetPatch {\n  id: string\n  path: string\n  value: unknown\n\n  constructor(id: string, path: string, value: unknown) {\n    this.id = id\n    this.path = path\n    this.value = value\n  }\n\n  apply(targets: Expression[], accessor: ImmutableAccessor): ImmutableAccessor {\n    let result = accessor\n    targets.forEach((target) => {\n      if (target.isSelfReference()) {\n        result = result.set(this.value)\n      } else if (target.isIndexReference()) {\n        target.toIndicies(accessor).forEach((i) => {\n          result = result.setIndex(i, this.value)\n        })\n      } else if (target.isAttributeReference()) {\n        // setting a subproperty on a primitive value overwrites it, eg\n        // `{set: {'address.street': 'California St'}}` on `{address: 'Fiction St'}` will result in\n        // `{address: {street: 'California St'}}`\n        if (result.containerType() === 'primitive') {\n          result = result.set({[target.name()]: this.value})\n        } else {\n          result = result.setAttribute(target.name(), this.value)\n        }\n      } else {\n        throw new Error(`Unable to apply to target ${target.toString()}`)\n      }\n    })\n    return result\n  }\n}\n","import {type Expression} from '../jsonpath'\nimport {type ImmutableAccessor} from './ImmutableAccessor'\nimport {targetsToIndicies} from './util'\n\nexport class UnsetPatch {\n  id: string\n  path: string\n  value: unknown\n\n  constructor(id: string, path: string) {\n    this.id = id\n    this.path = path\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  apply(targets: Expression[], accessor: ImmutableAccessor): ImmutableAccessor {\n    let result = accessor\n    switch (accessor.containerType()) {\n      case 'array':\n        result = result.unsetIndices(targetsToIndicies(targets, accessor))\n        break\n      case 'object':\n        targets.forEach((target) => {\n          result = result.unsetAttribute(target.name())\n        })\n        break\n      default:\n        throw new Error(\n          'Target value is neither indexable or an object. This error should potentially just be silently ignored?',\n        )\n    }\n    return result\n  }\n}\n","import {DiffMatchPatch} from './DiffMatchPatch'\nimport {IncPatch} from './IncPatch'\nimport {InsertPatch} from './InsertPatch'\nimport {SetIfMissingPatch} from './SetIfMissingPatch'\nimport {SetPatch} from './SetPatch'\nimport {type PatchTypes, type SingleDocumentPatch} from './types'\nimport {UnsetPatch} from './UnsetPatch'\n\n// Parses a content lake patch into our own personal patch implementations\nexport function parsePatch(patch: SingleDocumentPatch | SingleDocumentPatch[]): PatchTypes[] {\n  const result: PatchTypes[] = []\n  if (Array.isArray(patch)) {\n    return patch.reduce((r, p) => r.concat(parsePatch(p)), result)\n  }\n\n  const {set, setIfMissing, unset, diffMatchPatch, inc, dec, insert} = patch\n  if (setIfMissing) {\n    Object.keys(setIfMissing).forEach((path) => {\n      result.push(new SetIfMissingPatch(patch.id, path, setIfMissing[path]))\n    })\n  }\n\n  if (set) {\n    Object.keys(set).forEach((path) => {\n      result.push(new SetPatch(patch.id, path, set[path]))\n    })\n  }\n\n  if (unset) {\n    unset.forEach((path) => {\n      result.push(new UnsetPatch(patch.id, path))\n    })\n  }\n\n  if (diffMatchPatch) {\n    Object.keys(diffMatchPatch).forEach((path) => {\n      result.push(new DiffMatchPatch(patch.id, path, diffMatchPatch[path]))\n    })\n  }\n\n  if (inc) {\n    Object.keys(inc).forEach((path) => {\n      result.push(new IncPatch(patch.id, path, inc[path]))\n    })\n  }\n\n  if (dec) {\n    Object.keys(dec).forEach((path) => {\n      result.push(new IncPatch(patch.id, path, -dec[path]))\n    })\n  }\n\n  if (insert) {\n    let location: string\n    let path: string\n    const spec = insert\n    if ('before' in spec) {\n      location = 'before'\n      path = spec.before\n    } else if ('after' in spec) {\n      location = 'after'\n      path = spec.after\n    } else if ('replace' in spec) {\n      location = 'replace'\n      path = spec.replace\n    } else {\n      throw new Error('Invalid insert patch')\n    }\n\n    result.push(new InsertPatch(patch.id, location, path, spec.items))\n  }\n\n  return result\n}\n","import {type Doc} from '../document/types'\nimport {Matcher} from '../jsonpath'\nimport {ImmutableAccessor} from './ImmutableAccessor'\nimport {parsePatch} from './parse'\nimport {SetIfMissingPatch} from './SetIfMissingPatch'\nimport {SetPatch} from './SetPatch'\nimport {type PatchTypes, type SingleDocumentPatch} from './types'\n\nexport interface Patch {\n  id: string\n  path: string\n}\n\nexport class Patcher {\n  patches: PatchTypes[]\n\n  constructor(patch: SingleDocumentPatch | SingleDocumentPatch[]) {\n    this.patches = parsePatch(patch)\n  }\n\n  apply(value: Doc | null): unknown {\n    // Apply just makes a root accessor around the provided\n    // value, then applies the patches. Due to the use of\n    // ImmutableAccessor it is guaranteed to return either the\n    // exact same object it was provided (in the case of no changes),\n    // or a completely new object. It will never mutate the object in place.\n    const accessor = new ImmutableAccessor(value)\n    return this.applyViaAccessor(accessor).get()\n  }\n\n  // If you want to use your own accessor implementation, you can use this method\n  // to invoke the patcher. Since all subsequent accessors for children of this accessor\n  // are obtained through the methods in the accessors, you retain full control of the\n  // implementation throguhgout the application. Have a look in ImmutableAccessor\n  // to see an example of how accessors are implemented.\n  applyViaAccessor(accessor: ImmutableAccessor): ImmutableAccessor {\n    let result = accessor\n    const idAccessor = accessor.getAttribute('_id')\n    if (!idAccessor) {\n      throw new Error('Cannot apply patch to document with no _id')\n    }\n\n    const id = idAccessor.get()\n    for (const patch of this.patches) {\n      if (patch.id !== id) {\n        // Ignore patches that are not targetted at this document\n        continue\n      }\n\n      const matcher = Matcher.fromPath(patch.path).setPayload(patch)\n      result = process(matcher, result)\n    }\n\n    return result\n  }\n}\n\n// Recursively (depth first) follows any leads generated by the matcher, expecting\n// a patch to be the payload. When matchers report a delivery, the\n// apply(targets, accessor) is called on the patch\nfunction process(matcher: Matcher, accessor: ImmutableAccessor) {\n  const isSetPatch =\n    matcher.payload instanceof SetPatch || matcher.payload instanceof SetIfMissingPatch\n\n  let result = accessor\n  // Every time we execute the matcher a new set of leads is generated. Each lead\n  // is a target (being an index, an attribute name or a range) in the form of an\n  // Expression instance. For each lead target there is also a matcher. Our job is to obtain\n  // accessor(s) for each target (there might be more than one, since the targets may\n  // be ranges) and run the provided matcher on those accessors.\n  const {leads, delivery} = matcher.match(accessor)\n  leads.forEach((lead) => {\n    if (lead.target.isIndexReference()) {\n      lead.target.toIndicies().forEach((i) => {\n        const item = result.getIndex(i)\n        if (!item) {\n          throw new Error('Index out of bounds')\n        }\n\n        result = result.setIndexAccessor(i, process(lead.matcher, item))\n      })\n    } else if (lead.target.isAttributeReference()) {\n      // `set`/`setIfMissing` on a primitive value overwrites it\n      if (isSetPatch && result.containerType() === 'primitive') {\n        result = result.set({})\n      }\n\n      let oldValueAccessor = result.getAttribute(lead.target.name())\n\n      // If the patch is a set/setIfMissing patch, we allow deeply setting properties,\n      // creating missing segments as we go.\n      if (!oldValueAccessor && isSetPatch) {\n        result = result.setAttribute(lead.target.name(), {})\n        oldValueAccessor = result.getAttribute(lead.target.name())\n      }\n\n      if (!oldValueAccessor) {\n        // Don't follow lead, no such attribute\n        return\n      }\n\n      const newValueAccessor = process(lead.matcher, oldValueAccessor)\n      if (oldValueAccessor !== newValueAccessor) {\n        result = result.setAttributeAccessor(lead.target.name(), newValueAccessor)\n      }\n    } else {\n      throw new Error(`Unable to handle target ${lead.target.toString()}`)\n    }\n  })\n\n  // Each time we run the matcher, we might also get a delivery. This means that a\n  // term in the jsonpath terminated here and the patch should be applied. The delivery\n  // arrives in the form of an array of targets and a payload (which in this application\n  // is the patch). Conveniently the patches accept an array of targets and an accessor\n  // to do its work, so here we just pass those to the patch and we're done.\n  if (delivery && isPatcher(delivery.payload)) {\n    const patch = delivery.payload\n    result = patch.apply(delivery.targets, result)\n  }\n\n  return result\n}\n\nfunction isPatcher(payload: unknown): payload is PatchTypes {\n  return Boolean(\n    payload &&\n      typeof payload === 'object' &&\n      payload !== null &&\n      'apply' in payload &&\n      typeof (payload as PatchTypes).apply === 'function',\n  )\n}\n","import {uuid} from '@sanity/uuid'\n\n/**\n * Locally unique id's. We use this to generate transaction ids, and they don't have to be\n * cryptographically unique, as the worst that can happen is that they get rejected because\n * of a collision, and then we should just retry with a new id.\n */\nexport const luid: typeof uuid = uuid\n","import {Patcher} from '../patch'\nimport {debug} from './debug'\nimport {luid} from './luid'\nimport {type Doc, type Mut} from './types'\n\n/**\n * Parameters attached to the mutation\n *\n * @internal\n */\nexport interface MutationParams {\n  transactionId?: string\n  transition?: string\n  identity?: string\n  previousRev?: string\n  resultRev?: string\n  mutations: Mut[]\n  timestamp?: string\n  effects?: {apply: unknown; revert: unknown}\n}\n\n/**\n * A mutation describing a number of operations on a single document.\n * This should be considered an immutable structure. Mutations are compiled\n * on first application, and any changes in properties will not effectively\n * change its behavior after that.\n *\n * @internal\n */\nexport class Mutation {\n  params: MutationParams\n\n  compiled?: (doc: Doc | null) => Doc | null\n\n  _appliesToMissingDocument: boolean | undefined\n\n  constructor(options: MutationParams) {\n    this.params = options\n  }\n\n  get transactionId(): string | undefined {\n    return this.params.transactionId\n  }\n\n  get transition(): string | undefined {\n    return this.params.transition\n  }\n\n  get identity(): string | undefined {\n    return this.params.identity\n  }\n\n  get previousRev(): string | undefined {\n    return this.params.previousRev\n  }\n\n  get resultRev(): string | undefined {\n    return this.params.resultRev\n  }\n\n  get mutations(): Mut[] {\n    return this.params.mutations\n  }\n\n  get timestamp(): Date | undefined {\n    if (typeof this.params.timestamp === 'string') {\n      return new Date(this.params.timestamp)\n    }\n\n    return undefined\n  }\n\n  get effects():\n    | {\n        apply: unknown\n        revert: unknown\n      }\n    | undefined {\n    return this.params.effects\n  }\n\n  assignRandomTransactionId(): void {\n    this.params.transactionId = luid()\n    this.params.resultRev = this.params.transactionId\n  }\n\n  appliesToMissingDocument(): boolean {\n    if (typeof this._appliesToMissingDocument !== 'undefined') {\n      return this._appliesToMissingDocument\n    }\n\n    // Only mutations starting with a create operation apply to documents that do not exist ...\n    const firstMut = this.mutations[0]\n    if (firstMut) {\n      this._appliesToMissingDocument = Boolean(\n        firstMut.create || firstMut.createIfNotExists || firstMut.createOrReplace,\n      )\n    } else {\n      this._appliesToMissingDocument = true\n    }\n\n    return this._appliesToMissingDocument\n  }\n\n  // Compiles all mutations into a handy function\n  compile(): void {\n    const operations: ((doc: Doc | null) => Doc | null)[] = []\n\n    // creation requires a _createdAt\n    const getGuaranteedCreatedAt = (doc: Doc): string =>\n      doc?._createdAt || this.params.timestamp || new Date().toISOString()\n\n    this.mutations.forEach((mutation) => {\n      if (mutation.create) {\n        // TODO: Fail entire patch if document did exist\n        const create = (mutation.create || {}) as Doc\n        operations.push((doc): Doc => {\n          if (doc) {\n            return doc\n          }\n\n          return Object.assign(create, {\n            _createdAt: getGuaranteedCreatedAt(create),\n          })\n        })\n        return\n      }\n\n      if (mutation.createIfNotExists) {\n        const createIfNotExists = mutation.createIfNotExists || {}\n        operations.push((doc) =>\n          doc === null\n            ? Object.assign(createIfNotExists, {\n                _createdAt: getGuaranteedCreatedAt(createIfNotExists),\n              })\n            : doc,\n        )\n        return\n      }\n\n      if (mutation.createOrReplace) {\n        const createOrReplace = mutation.createOrReplace || {}\n        operations.push(() =>\n          Object.assign(createOrReplace, {\n            _createdAt: getGuaranteedCreatedAt(createOrReplace),\n          }),\n        )\n        return\n      }\n\n      if (mutation.delete) {\n        operations.push(() => null)\n        return\n      }\n\n      if (mutation.patch) {\n        if ('query' in mutation.patch) {\n          // @todo Warn/throw? Investigate if this can ever happen\n          return\n        }\n\n        const patch = new Patcher(mutation.patch)\n        operations.push((doc) => patch.apply(doc) as Doc | null)\n        return\n      }\n\n      throw new Error(`Unsupported mutation ${JSON.stringify(mutation, null, 2)}`)\n    })\n\n    // Assign `_updatedAt` to the timestamp of the mutation if set\n    if (typeof this.params.timestamp === 'string') {\n      operations.push((doc) => {\n        return doc ? Object.assign(doc, {_updatedAt: this.params.timestamp}) : null\n      })\n    }\n\n    const prevRev = this.previousRev\n    const rev = this.resultRev || this.transactionId\n    this.compiled = (doc: Doc | null) => {\n      if (prevRev && doc && prevRev !== doc._rev) {\n        throw new Error(\n          `Previous revision for this mutation was ${prevRev}, but the document revision is ${doc._rev}`,\n        )\n      }\n\n      let result: Doc | null = doc\n      for (const operation of operations) {\n        result = operation(result)\n      }\n\n      // Should update _rev?\n      if (result && rev) {\n        // Ensure that result is a unique object, even if the operation was a no-op\n        if (result === doc) {\n          result = Object.assign({}, doc)\n        }\n        result._rev = rev\n      }\n\n      return result\n    }\n  }\n\n  apply(document: Doc | null): Doc | null {\n    debug('Applying mutation %O to document %O', this.mutations, document)\n    if (!this.compiled) {\n      this.compile()\n    }\n\n    const result = this.compiled!(document)\n    debug('  => %O', result)\n    return result\n  }\n\n  static applyAll(document: Doc | null, mutations: Mutation[]): Doc | null {\n    return mutations.reduce((doc, mutation) => mutation.apply(doc), document)\n  }\n\n  // Given a number of yet-to-be-committed mutation objects, collects them into one big mutation\n  // any metadata like transactionId is ignored and must be submitted by the client. It is assumed\n  // that all mutations are on the same document.\n  // TOOO: Optimize mutations, eliminating mutations that overwrite themselves!\n  static squash(document: Doc | null, mutations: Mutation[]): Mutation {\n    const squashed = mutations.reduce(\n      (result, mutation) => result.concat(...mutation.mutations),\n      [] as Mut[],\n    )\n    return new Mutation({mutations: squashed})\n  }\n}\n","// TODO: When we have timestamps on mutation notifications, we can reject incoming mutations that are older\n// than the document we are seeing.\n\nimport {isEqual} from 'lodash'\n\nimport {debug} from './debug'\nimport {Mutation} from './Mutation'\nimport {type Doc} from './types'\n\n/**\n * @internal\n */\nexport interface SubmissionResponder {\n  success: () => void\n  failure: () => void\n}\n\n/**\n * Models a document as it is changed by our own local patches and remote patches coming in from\n * the server. Consolidates incoming patches with our own submitted patches and maintains two\n * versions of the document. EDGE is the optimistic document that the user sees that will always\n * immediately reflect whatever she is doing to it, and HEAD which is the confirmed version of the\n * document consistent with the mutations we have received from the server. As long as nothing out of\n * the ordinary happens, we can track all changes by hooking into the onMutation callback, but we\n * must also respect onRebase events that fire when we have to backtrack because one of our optimistically\n * applied patches were rejected, or some bastard was able to slip a mutation in between ours own.\n *\n * @internal\n */\nexport class Document {\n  /**\n   * Incoming patches from the server waiting to be applied to HEAD\n   */\n  incoming: Mutation[] = []\n\n  /**\n   * Patches we know has been subitted to the server, but has not been seen yet in the return channel\n   * so we can't be sure about the ordering yet (someone else might have slipped something between them)\n   */\n  submitted: Mutation[] = []\n\n  /**\n   * Pending mutations\n   */\n  pending: Mutation[] = []\n\n  /**\n   * Our model of the document according to the incoming patches from the server\n   */\n  HEAD: Doc | null\n\n  /**\n   * Our optimistic model of what the document will probably look like as soon as all our patches\n   * have been processed. Updated every time we stage a new mutation, but also might revert back\n   * to previous states if our mutations fail, or could change if unexpected mutations arrive\n   * between our own. The `onRebase` callback will be called when EDGE changes in this manner.\n   */\n  EDGE: Doc | null\n\n  /**\n   * Called with the EDGE document when that document changes for a reason other than us staging\n   * a new patch or receiving a mutation from the server while our EDGE is in sync with HEAD:\n   * I.e. when EDGE changes because the order of mutations has changed in relation to our\n   * optimistic predictions.\n   */\n  onRebase?: (edge: Doc | null, incomingMutations: Mutation[], pendingMutations: Mutation[]) => void\n\n  /**\n   * Called when we receive a patch in the normal order of things, but the mutation is not ours\n   */\n  onMutation?: (msg: {mutation: Mutation; document: Doc | null; remote: boolean}) => void\n\n  /**\n   * Called when consistency state changes with the boolean value of the current consistency state\n   */\n  onConsistencyChanged?: (isConsistent: boolean) => void\n\n  /**\n   * Called whenever a new incoming mutation comes in. These are always ordered correctly.\n   */\n  onRemoteMutation?: (mut: Mutation) => void\n\n  /**\n   * We are consistent when there are no unresolved mutations of our own, and no un-applicable\n   * incoming mutations. When this has been going on for too long, and there has been a while\n   * since we staged a new mutation, it is time to reset your state.\n   */\n  inconsistentAt: Date | null = null\n\n  /**\n   * The last time we staged a patch of our own. If we have been inconsistent for a while, but it\n   * hasn't been long since we staged a new mutation, the reason is probably just because the user\n   * is typing or something.\n   *\n   * Should be used as a guard against resetting state for inconsistency reasons.\n   */\n  lastStagedAt: Date | null = null\n\n  constructor(doc: Doc | null) {\n    this.reset(doc)\n    this.HEAD = doc\n    this.EDGE = doc\n  }\n\n  // Reset the state of the Document, used to recover from unsavory states by reloading the document\n  reset(doc: Doc | null): void {\n    this.incoming = []\n    this.submitted = []\n    this.pending = []\n    this.inconsistentAt = null\n    this.HEAD = doc\n    this.EDGE = doc\n    this.considerIncoming()\n    this.updateConsistencyFlag()\n  }\n\n  // Call when a mutation arrives from Sanity\n  arrive(mutation: Mutation): void {\n    this.incoming.push(mutation)\n    this.considerIncoming()\n    this.updateConsistencyFlag()\n  }\n\n  // Call to signal that we are submitting a mutation. Returns a callback object with a\n  // success and failure handler that must be called according to the outcome of our\n  // submission.\n  stage(mutation: Mutation, silent?: boolean): SubmissionResponder {\n    if (!mutation.transactionId) {\n      throw new Error('Mutations _must_ have transactionId when submitted')\n    }\n    this.lastStagedAt = new Date()\n\n    debug('Staging mutation %s (pushed to pending)', mutation.transactionId)\n    this.pending.push(mutation)\n    this.EDGE = mutation.apply(this.EDGE)\n\n    if (this.onMutation && !silent) {\n      this.onMutation({\n        mutation,\n        document: this.EDGE,\n        remote: false,\n      })\n    }\n\n    const txnId = mutation.transactionId\n\n    this.updateConsistencyFlag()\n\n    return {\n      success: () => {\n        this.pendingSuccessfullySubmitted(txnId)\n        this.updateConsistencyFlag()\n      },\n      failure: () => {\n        this.pendingFailed(txnId)\n        this.updateConsistencyFlag()\n      },\n    }\n  }\n\n  // Call to check if everything is nice and quiet and there are no unresolved mutations.\n  // Means this model thinks both HEAD and EDGE is up to date with what the server sees.\n  isConsistent(): boolean {\n    return !this.inconsistentAt\n  }\n\n  // Private\n\n  // Attempts to apply any resolvable incoming patches to HEAD. Will keep patching as long as there\n  // are applicable patches to be applied\n  considerIncoming(): void {\n    let mustRebase = false\n    let nextMut: Mutation | undefined\n    const rebaseMutations: Mutation[] = []\n\n    // Filter mutations that are older than the document\n    if (this.HEAD && this.HEAD._updatedAt) {\n      const updatedAt = new Date(this.HEAD._updatedAt)\n      if (this.incoming.find((mut) => mut.timestamp && mut.timestamp < updatedAt)) {\n        this.incoming = this.incoming.filter((mut) => mut.timestamp && mut.timestamp < updatedAt)\n      }\n    }\n\n    // Keep applying mutations as long as any apply\n    let protect = 0\n    do {\n      // Find next mutation that can be applied to HEAD (if any)\n      if (this.HEAD) {\n        const HEAD = this.HEAD\n        nextMut = HEAD._rev ? this.incoming.find((mut) => mut.previousRev === HEAD._rev) : undefined\n      } else {\n        // When HEAD is null, that means the document is currently deleted. Only mutations that start with a create\n        // operation will be considered.\n        nextMut = this.incoming.find((mut) => mut.appliesToMissingDocument())\n      }\n\n      if (nextMut) {\n        const applied = this.applyIncoming(nextMut)\n        mustRebase = mustRebase || applied\n        if (mustRebase) {\n          rebaseMutations.push(nextMut)\n        }\n\n        if (protect++ > 10) {\n          throw new Error(\n            `Mutator stuck flushing incoming mutations. Probably stuck here: ${JSON.stringify(\n              nextMut,\n            )}`,\n          )\n        }\n      }\n    } while (nextMut)\n\n    if (this.incoming.length > 0 && debug.enabled) {\n      debug(\n        'Unable to apply mutations %s',\n        this.incoming.map((mut) => mut.transactionId).join(', '),\n      )\n    }\n\n    if (mustRebase) {\n      this.rebase(rebaseMutations)\n    }\n  }\n\n  // check current consistency state, update flag and invoke callback if needed\n  updateConsistencyFlag(): void {\n    const wasConsistent = this.isConsistent()\n    const isConsistent =\n      this.pending.length === 0 && this.submitted.length === 0 && this.incoming.length === 0\n    // Update the consistency state, taking care not to update the timestamp if we were inconsistent and still are\n    if (isConsistent) {\n      this.inconsistentAt = null\n    } else if (!this.inconsistentAt) {\n      this.inconsistentAt = new Date()\n    }\n    // Handle onConsistencyChanged callback\n    if (wasConsistent != isConsistent && this.onConsistencyChanged) {\n      if (isConsistent) {\n        debug('Buffered document is inconsistent')\n      } else {\n        debug('Buffered document is consistent')\n      }\n      this.onConsistencyChanged(isConsistent)\n    }\n  }\n\n  // apply an incoming patch that has been prequalified as the next in line for this document\n  applyIncoming(mut: Mutation | undefined): boolean {\n    if (!mut) {\n      return false\n    }\n\n    if (!mut.transactionId) {\n      throw new Error('Received incoming mutation without a transaction ID')\n    }\n\n    debug(\n      'Applying mutation %s -> %s to rev %s',\n      mut.previousRev,\n      mut.resultRev,\n      this.HEAD && this.HEAD._rev,\n    )\n\n    this.HEAD = mut.apply(this.HEAD)\n\n    if (this.onRemoteMutation) {\n      this.onRemoteMutation(mut)\n    }\n\n    // Eliminate from incoming set\n    this.incoming = this.incoming.filter((m) => m.transactionId !== mut.transactionId)\n\n    if (this.hasUnresolvedMutations()) {\n      const needRebase = this.consumeUnresolved(mut.transactionId)\n      if (debug.enabled) {\n        debug(\n          `Incoming mutation ${mut.transactionId} appeared while there were pending or submitted local mutations`,\n        )\n        debug(`Submitted txnIds: ${this.submitted.map((m) => m.transactionId).join(', ')}`)\n        debug(`Pending txnIds: ${this.pending.map((m) => m.transactionId).join(', ')}`)\n        debug(`needRebase === %s`, needRebase)\n      }\n      return needRebase\n    }\n    debug(\n      `Remote mutation %s arrived w/o any pending or submitted local mutations`,\n      mut.transactionId,\n    )\n    this.EDGE = this.HEAD\n    if (this.onMutation) {\n      this.onMutation({\n        mutation: mut,\n        document: this.EDGE,\n        remote: true,\n      })\n    }\n    return false\n  }\n\n  /**\n   * Returns true if there are unresolved mutations between HEAD and EDGE, meaning we have\n   * mutations that are still waiting to be either submitted, or to be confirmed by the server.\n   *\n   * @returns true if there are unresolved mutations between HEAD and EDGE, false otherwise\n   */\n  hasUnresolvedMutations(): boolean {\n    return this.submitted.length > 0 || this.pending.length > 0\n  }\n\n  /**\n   * When an incoming mutation is applied to HEAD, this is called to remove the mutation from\n   * the unresolved state. If the newly applied patch is the next upcoming unresolved mutation,\n   * no rebase is needed, but we might have the wrong idea about the ordering of mutations, so in\n   * that case we are given the flag `needRebase` to tell us that this mutation arrived out of\n   * order in terms of our optimistic version, so a rebase is needed.\n   *\n   * @param txnId - Transaction ID of the remote mutation\n   * @returns true if rebase is needed, false otherwise\n   */\n  consumeUnresolved(txnId: string): boolean {\n    // If we have nothing queued up, we are in sync and can apply patch with no\n    // rebasing\n    if (this.submitted.length === 0 && this.pending.length === 0) {\n      return false\n    }\n\n    // If we can consume the directly upcoming mutation, we won't have to rebase\n    if (this.submitted.length !== 0) {\n      if (this.submitted[0].transactionId === txnId) {\n        debug(\n          `Remote mutation %s matches upcoming submitted mutation, consumed from 'submitted' buffer`,\n          txnId,\n        )\n        this.submitted.shift()\n        return false\n      }\n    } else if (this.pending.length > 0 && this.pending[0].transactionId === txnId) {\n      // There are no submitted, but some are pending so let's check the upcoming pending\n      debug(\n        `Remote mutation %s matches upcoming pending mutation, consumed from 'pending' buffer`,\n        txnId,\n      )\n      this.pending.shift()\n      return false\n    }\n\n    debug(\n      'The mutation was not the upcoming mutation, scrubbing. Pending: %d, Submitted: %d',\n      this.pending.length,\n      this.submitted.length,\n    )\n\n    // The mutation was not the upcoming mutation, so we'll have to check everything to\n    // see if we have an out of order situation\n    this.submitted = this.submitted.filter((mut) => mut.transactionId !== txnId)\n    this.pending = this.pending.filter((mut) => mut.transactionId !== txnId)\n    debug(`After scrubbing: Pending: %d, Submitted: %d`, this.pending.length, this.submitted.length)\n\n    // Whether we had it or not we have either a reordering, or an unexpected mutation\n    // so must rebase\n    return true\n  }\n\n  pendingSuccessfullySubmitted(pendingTxnId: string): void {\n    if (this.pending.length === 0) {\n      // If there are no pending, it has probably arrived allready\n      return\n    }\n\n    const first = this.pending[0]\n    if (first.transactionId === pendingTxnId) {\n      // Nice, the pending transaction arrived in order\n      this.pending.shift()\n      this.submitted.push(first)\n      return\n    }\n\n    // Oh, no. Submitted out of order.\n    let justSubmitted: Mutation | undefined\n    const stillPending: Mutation[] = []\n    this.pending.forEach((mutation) => {\n      if (mutation.transactionId === pendingTxnId) {\n        justSubmitted = mutation\n        return\n      }\n\n      stillPending.push(mutation)\n    })\n\n    // Not found? Hopefully it has already arrived. Might have been forgotten by now\n    if (justSubmitted) {\n      this.submitted.push(justSubmitted)\n    }\n\n    this.pending = stillPending\n\n    // Must rebase since mutation order has changed\n    this.rebase([])\n  }\n\n  pendingFailed(pendingTxnId: string): void {\n    this.pending = this.pending.filter((mutation) => mutation.transactionId !== pendingTxnId)\n\n    // Rebase to revert document to what it looked like before the failed mutation\n    this.rebase([])\n  }\n\n  rebase(incomingMutations: Mutation[]): void {\n    const oldEdge = this.EDGE\n    this.EDGE = Mutation.applyAll(this.HEAD, this.submitted.concat(this.pending))\n\n    // Copy over rev, since we don't care if it changed, we only care about the content\n    if (oldEdge !== null && this.EDGE !== null) {\n      oldEdge._rev = this.EDGE._rev\n    }\n\n    const changed = !isEqual(this.EDGE, oldEdge)\n    if (changed && this.onRebase) {\n      this.onRebase(this.EDGE, incomingMutations, this.pending)\n    }\n  }\n}\n","import {makePatches, stringifyPatches} from '@sanity/diff-match-patch'\n\nimport {arrayToJSONMatchPath} from '../jsonpath/arrayToJSONMatchPath'\nimport {extractWithPath} from '../jsonpath/extractWithPath'\nimport {debug} from './debug'\nimport {Mutation} from './Mutation'\nimport {type Doc, type Mut} from './types'\n\n/**\n * Implements a buffer for mutations that incrementally optimises the mutations by\n * eliminating set-operations that overwrite earlier set-operations, and rewrite\n * set-operations that change strings into other strings into diffMatchPatch operations.\n *\n * @internal\n */\nexport class SquashingBuffer {\n  /**\n   * The document forming the basis of this squash\n   */\n  BASIS: Doc | null\n\n  /**\n   * The document after the out-Mutation has been applied, but before the staged\n   * operations are committed.\n   */\n  PRESTAGE: Doc | null\n\n  /**\n   * setOperations contain the latest set operation by path. If the set-operations are\n   * updating strings to new strings, they are rewritten as diffMatchPatch operations,\n   * any new set operations on the same paths overwrites any older set operations.\n   * Only set-operations assigning plain values to plain values gets optimized like this.\n   */\n  setOperations: Record<string, Mut | undefined>\n\n  /**\n   * `documentPresent` is true whenever we know that the document must be present due\n   * to preceeding mutations. `false` implies that it may or may not already exist.\n   */\n  documentPresent: boolean\n\n  /**\n   * The operations in the out-Mutation are not able to be optimized any further\n   */\n  out: Mut[] = []\n\n  /**\n   * Staged mutation operations\n   */\n  staged: Mut[]\n\n  constructor(doc: Doc | null) {\n    if (doc) {\n      debug('Reset mutation buffer to rev %s', doc._rev)\n    } else {\n      debug('Reset mutation buffer state to document being deleted')\n    }\n\n    this.staged = []\n    this.setOperations = {}\n    this.documentPresent = false\n\n    this.BASIS = doc\n    this.PRESTAGE = doc\n  }\n\n  add(mut: Mutation): void {\n    mut.mutations.forEach((op) => this.addOperation(op))\n  }\n\n  hasChanges(): boolean {\n    return this.out.length > 0 || Object.keys(this.setOperations).length > 0\n  }\n\n  /**\n   * Extracts the mutations in this buffer.\n   * After this is done, the buffer lifecycle is over and the client should\n   * create an new one with the new, updated BASIS.\n   *\n   * @param txnId - Transaction ID\n   * @returns A `Mutation` instance if we had outgoing mutations pending, null otherwise\n   */\n  purge(txnId?: string): Mutation | null {\n    this.stashStagedOperations()\n    let result = null\n    if (this.out.length > 0) {\n      debug('Purged mutation buffer')\n      result = new Mutation({\n        mutations: this.out,\n        resultRev: txnId,\n        transactionId: txnId,\n      })\n    }\n    this.out = []\n    this.documentPresent = false\n    return result\n  }\n\n  addOperation(op: Mut): void {\n    // Is this a set patch, and only a set patch, and does it apply to the document at hand?\n    if (\n      op.patch &&\n      op.patch.set &&\n      'id' in op.patch &&\n      op.patch.id === this.PRESTAGE?._id &&\n      Object.keys(op.patch).length === 2 // `id` + `set`\n    ) {\n      const setPatch = op.patch.set\n      const unoptimizable: Record<string, unknown> = {}\n      // Apply all optimisable keys in the patch\n      for (const path of Object.keys(setPatch)) {\n        if (setPatch.hasOwnProperty(path)) {\n          if (!this.optimiseSetOperation(path, setPatch[path])) {\n            // If not optimisable, add to unoptimizable set\n            unoptimizable[path] = setPatch[path]\n          }\n        }\n      }\n\n      // If any weren't optimisable, add them to an unoptimised set-operation, then\n      // stash everything.\n      if (Object.keys(unoptimizable).length > 0) {\n        debug('Unoptimizable set-operation detected, purging optimization buffer')\n        this.staged.push({patch: {id: this.PRESTAGE._id, set: unoptimizable}})\n        this.stashStagedOperations()\n      }\n\n      return\n    }\n\n    // Is this a createIfNotExists for our document?\n    if (op.createIfNotExists && this.PRESTAGE && op.createIfNotExists._id === this.PRESTAGE._id) {\n      if (!this.documentPresent) {\n        // If we don't know that it's present we'll have to stage and stash.\n        this.staged.push(op)\n        this.documentPresent = true\n        this.stashStagedOperations()\n      }\n\n      // Otherwise we can fully ignore it.\n      return\n    }\n\n    debug('Unoptimizable mutation detected, purging optimization buffer')\n    // console.log(\"Unoptimizable operation, stashing\", JSON.stringify(op))\n    // Un-optimisable operations causes everything to be stashed\n    this.staged.push(op)\n    this.stashStagedOperations()\n  }\n\n  /**\n   * Attempt to perform one single set operation in an optimised manner, return value\n   * reflects whether or not the operation could be performed.\n\n   * @param path - The JSONPath to the set operation in question\n   * @param nextValue - The value to be set\n   * @returns True of optimized, false otherwise\n   */\n  optimiseSetOperation(path: string, nextValue: unknown): boolean {\n    // console.log('optimiseSetOperation', path, nextValue)\n    // If target value is not a plain value, unable to optimise\n    if (typeof nextValue === 'object') {\n      // console.log(\"Not optimisable because next value is object\")\n      return false\n    }\n\n    // Check the source values, if there is more than one value being assigned,\n    // we won't optimise\n    const matches = extractWithPath(path, this.PRESTAGE)\n    // If we are not overwriting exactly one key, this cannot be optimised, so we bail\n    if (matches.length !== 1) {\n      // console.log('Not optimisable because match count is != 1', JSON.stringify(matches))\n      return false\n    }\n\n    // Okay, we are assigning exactly one value to exactly one existing slot, so we might optimise\n    const match = matches[0]\n    // If the value of the match is an array or object, we cannot safely optimise this since the meaning\n    // of pre-existing operations might change (in theory, at least), so we bail\n    if (typeof match.value === 'object') {\n      // console.log(\"Not optimisable because old value is object\")\n      return false\n    }\n\n    if (!this.PRESTAGE) {\n      // Shouldn't happen, but makes typescript happy\n      return false\n    }\n\n    // If the new and old value are the equal, we optimise this operation by discarding it\n    // Now, let's build the operation\n    let op: Mut | null = null\n    if (match.value === nextValue) {\n      // If new and old values are equal, we optimise this by deleting the operation\n      // console.log(\"Omitting operation\")\n      op = null\n    } else if (typeof match.value === 'string' && typeof nextValue === 'string') {\n      // console.log(\"Rewriting to dmp\")\n      // We are updating a string to another string, so we are making a diffMatchPatch\n      try {\n        const patch = stringifyPatches(makePatches(match.value, nextValue))\n        op = {patch: {id: this.PRESTAGE._id, diffMatchPatch: {[path]: patch}}}\n      } catch {\n        // patch_make failed due to unicode issue https://github.com/google/diff-match-patch/issues/59\n        return false\n      }\n    } else {\n      // console.log(\"Not able to rewrite to dmp, making normal set\")\n      // We are changing the type of the value, so must make a normal set-operation\n      op = {patch: {id: this.PRESTAGE._id, set: {[path]: nextValue}}}\n    }\n\n    // Let's make a plain, concrete path from the array-path. We use this to keep only the latest set\n    // operation touching this path in the buffer.\n    const canonicalPath = arrayToJSONMatchPath(match.path)\n\n    // Store this operation, overwriting any previous operations touching this same path\n    if (op) {\n      this.setOperations[canonicalPath] = op\n    } else {\n      delete this.setOperations[canonicalPath]\n    }\n\n    // Signal that we succeeded in optimizing this patch\n    return true\n  }\n\n  stashStagedOperations(): void {\n    // Short circuit if there are no staged operations\n    const nextOps: Mut[] = []\n\n    // Extract the existing outgoing operations if any\n    Object.keys(this.setOperations).forEach((key) => {\n      const op = this.setOperations[key]\n      if (op) {\n        nextOps.push(op)\n      }\n    })\n\n    nextOps.push(...this.staged)\n    if (nextOps.length > 0) {\n      this.PRESTAGE = new Mutation({mutations: nextOps}).apply(this.PRESTAGE) as Doc\n      this.staged = []\n      this.setOperations = {}\n    }\n\n    this.out.push(...nextOps)\n  }\n\n  /**\n   * Rebases given the new base-document\n   *\n   * @param newBasis - New base document to rebase on\n   * @returns New \"edge\" document with buffered changes integrated\n   */\n  rebase(newBasis: Doc | null): Doc | null {\n    this.stashStagedOperations()\n\n    if (newBasis === null) {\n      // If document was just deleted, we must throw out local changes\n      this.out = []\n      this.BASIS = newBasis\n      this.PRESTAGE = newBasis\n      this.documentPresent = false\n    } else {\n      this.BASIS = newBasis\n\n      // @todo was this supposed to be `this.out.length > 0`?\n      // surely this is always `true`?\n      if (this.out) {\n        this.PRESTAGE = new Mutation({mutations: this.out}).apply(this.BASIS) as Doc\n      } else {\n        this.PRESTAGE = this.BASIS\n      }\n    }\n\n    return this.PRESTAGE\n  }\n}\n","import {isEqual} from 'lodash'\n\nimport {debug} from './debug'\nimport {Document} from './Document'\nimport {Mutation} from './Mutation'\nimport {SquashingBuffer} from './SquashingBuffer'\nimport {type Doc, type Mut} from './types'\n\nconst ONE_MINUTE = 1000 * 60\n\n/**\n * @internal\n */\nexport interface CommitHandlerMessage {\n  mutation: Mutation\n  success: () => void\n  failure: () => void\n  cancel: (error: Error) => void\n}\n\n/**\n * A wrapper for Document that allows the client to gather mutations on the\n * client side and commit them when it wants to.\n */\nclass Commit {\n  mutations: Mutation[]\n  tries: number\n  resolve: () => void\n  reject: (error: Error) => void\n\n  constructor(\n    mutations: Mutation[],\n    {resolve, reject}: {resolve: () => void; reject: (error: Error) => void},\n  ) {\n    this.mutations = mutations\n    this.tries = 0\n    this.resolve = resolve\n    this.reject = reject\n  }\n\n  apply(doc: Doc | null): Doc | null {\n    return Mutation.applyAll(doc, this.mutations)\n  }\n\n  squash(doc: Doc | null) {\n    const result = Mutation.squash(doc, this.mutations)\n    result.assignRandomTransactionId()\n    return result\n  }\n}\n\nconst mutReducerFn = (acc: Mut[], mut: Mutation): Mut[] => acc.concat(mut.mutations)\n\n/**\n * @internal\n */\nexport class BufferedDocument {\n  private mutations: Mutation[]\n\n  /**\n   * The Document we are wrapping\n   */\n  document: Document\n\n  /**\n   * The Document with local changes applied\n   */\n  LOCAL: Doc | null\n\n  /**\n   * Commits that are waiting to be delivered to the server\n   */\n  private commits: Commit[]\n\n  /**\n   * Local mutations that are not scheduled to be committed yet\n   */\n  buffer: SquashingBuffer\n\n  /**\n   * Assignable event handler for when the buffered document applies a mutation\n   */\n  onMutation?: (message: {mutation: Mutation; document: Doc | null; remote: boolean}) => void\n\n  /**\n   * Assignable event handler for when a remote mutation happened\n   */\n  onRemoteMutation?: Document['onRemoteMutation']\n\n  /**\n   * Assignable event handler for when the buffered document rebased\n   */\n  onRebase?: (localDoc: Doc | null, remoteMutations: Mut[], localMutations: Mut[]) => void\n\n  /**\n   * Assignable event handler for when the document is deleted\n   */\n  onDelete?: (doc: Doc | null) => void\n\n  /**\n   * Assignable event handler for when the state of consistency changed\n   */\n  onConsistencyChanged?: (isConsistent: boolean) => void\n\n  /**\n   * Assignable event handler for when the buffered document should commit changes\n   */\n  commitHandler?: (msg: CommitHandlerMessage) => void\n\n  /**\n   * Whether or not we are currently commiting\n   */\n  committerRunning = false\n\n  constructor(doc: Doc | null) {\n    this.buffer = new SquashingBuffer(doc)\n    this.document = new Document(doc)\n    this.document.onMutation = (msg) => this.handleDocMutation(msg)\n    this.document.onRemoteMutation = (mut) => this.onRemoteMutation && this.onRemoteMutation(mut)\n    this.document.onRebase = (edge, remoteMutations, localMutations) =>\n      this.handleDocRebase(edge, remoteMutations, localMutations)\n    this.document.onConsistencyChanged = (msg) => this.handleDocConsistencyChanged(msg)\n    this.LOCAL = doc\n    this.mutations = []\n    this.commits = []\n  }\n\n  // Used to reset the state of the local document model. If the model has been inconsistent\n  // for too long, it has probably missed a notification, and should reload the document from the server\n  reset(doc: Doc | null): void {\n    if (doc) {\n      debug('Document state reset to revision %s', doc._rev)\n    } else {\n      debug('Document state reset to being deleted')\n    }\n    this.document.reset(doc)\n    this.rebase([], [])\n    this.handleDocConsistencyChanged(this.document.isConsistent())\n  }\n\n  // Add a change to the buffer\n  add(mutation: Mutation): void {\n    if (this.onConsistencyChanged) {\n      this.onConsistencyChanged(false)\n    }\n    debug('Staged local mutation')\n    this.buffer.add(mutation)\n    const oldLocal = this.LOCAL\n    this.LOCAL = mutation.apply(this.LOCAL)\n    if (this.onMutation && oldLocal !== this.LOCAL) {\n      debug('onMutation fired')\n      this.onMutation({\n        mutation,\n        document: this.LOCAL,\n        remote: false,\n      })\n      if (this.LOCAL === null && this.onDelete) {\n        this.onDelete(this.LOCAL)\n      }\n    }\n  }\n\n  // Call when a mutation arrives from Sanity\n  arrive(mutation: Mutation): void {\n    debug('Remote mutation arrived %s -> %s', mutation.previousRev, mutation.resultRev)\n    if (mutation.previousRev === mutation.resultRev) {\n      throw new Error(\n        `Mutation ${mutation.transactionId} has previousRev === resultRev (${mutation.previousRev})`,\n      )\n    }\n    return this.document.arrive(mutation)\n  }\n\n  // Submit all mutations in the buffer to be committed\n  commit(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      // Anything to commit?\n      if (!this.buffer.hasChanges()) {\n        resolve()\n        return\n      }\n      debug('Committing local changes')\n      // Collect current staged mutations into a commit and ...\n      const pendingMutations = this.buffer.purge()\n      this.commits.push(new Commit(pendingMutations ? [pendingMutations] : [], {resolve, reject}))\n      // ... clear the table for the next commit.\n      this.buffer = new SquashingBuffer(this.LOCAL)\n      this.performCommits()\n    })\n  }\n\n  // Starts the committer that will try to committ all staged commits to the database\n  // by calling the commitHandler. Will keep running until all commits are successfully\n  // committed.\n  performCommits(): void {\n    if (!this.commitHandler) {\n      throw new Error('No commitHandler configured for this BufferedDocument')\n    }\n    if (this.committerRunning) {\n      // We can have only one committer at any given time\n      return\n    }\n    this._cycleCommitter()\n  }\n\n  // TODO: Error handling, right now retries after every error\n  _cycleCommitter(): void {\n    const commit = this.commits.shift()\n    if (!commit) {\n      this.committerRunning = false\n      return\n    }\n\n    this.committerRunning = true\n    const squashed = commit.squash(this.LOCAL)\n    const docResponder = this.document.stage(squashed, true)\n\n    const responder = {\n      success: () => {\n        debug('Commit succeeded')\n        docResponder.success()\n        commit.resolve()\n        // Keep running the committer until no more commits\n        this._cycleCommitter()\n      },\n\n      failure: () => {\n        debug('Commit failed')\n        // Re stage commit\n        commit.tries += 1\n        if (this.LOCAL !== null) {\n          // Only schedule this commit for a retry of the document still exist to avoid looping\n          // indefinitely when the document was deleted from under our noses\n          this.commits.unshift(commit)\n        }\n        docResponder.failure()\n\n        // Todo: Need better error handling (i.e. propagate to user and provide means of retrying)\n        if (commit.tries < 200) {\n          setTimeout(() => this._cycleCommitter(), Math.min(commit.tries * 1000, ONE_MINUTE))\n        }\n      },\n\n      cancel: (error: Error) => {\n        this.commits.forEach((comm) => comm.reject(error))\n\n        // Throw away waiting commits\n        this.commits = []\n\n        // Reset back to last known state from content lake and cause a rebase that will\n        // reset the view in the form\n        this.reset(this.document.HEAD)\n\n        // Clear the buffer of recent mutations\n        this.buffer = new SquashingBuffer(this.LOCAL)\n\n        // Stop the committer loop\n        this.committerRunning = false\n      },\n    }\n\n    debug('Posting commit')\n    if (this.commitHandler) {\n      this.commitHandler({\n        mutation: squashed,\n        success: responder.success,\n        failure: responder.failure,\n        cancel: responder.cancel,\n      })\n    }\n  }\n\n  handleDocRebase(edge: Doc | null, remoteMutations: Mutation[], localMutations: Mutation[]): void {\n    this.rebase(remoteMutations, localMutations)\n  }\n\n  handleDocumentDeleted(): void {\n    debug('Document deleted')\n    // If the document was just deleted, fire the onDelete event with the absolutely latest\n    // version of the document before someone deleted it so that the client may revive the\n    // document in the last state the user saw it, should they so desire.\n    if (this.LOCAL !== null && this.onDelete) {\n      this.onDelete(this.LOCAL)\n    }\n\n    this.commits = []\n    this.mutations = []\n  }\n\n  handleDocMutation(msg: {mutation: Mutation; document: Doc | null; remote: boolean}): void {\n    // If we have no local changes, we can just pass this on to the client\n    if (this.commits.length === 0 && !this.buffer.hasChanges()) {\n      debug('Document mutated from remote with no local changes')\n      this.LOCAL = this.document.EDGE\n      this.buffer = new SquashingBuffer(this.LOCAL)\n      if (this.onMutation) {\n        this.onMutation(msg)\n      }\n      return\n    }\n\n    debug('Document mutated from remote with local changes')\n\n    // If there are local edits, and the document was deleted, we need to purge those local edits now\n    if (this.document.EDGE === null) {\n      this.handleDocumentDeleted()\n    }\n\n    // We had local changes, so need to signal rebase\n    this.rebase([msg.mutation], [])\n  }\n\n  rebase(remoteMutations: Mutation[], localMutations: Mutation[]): void {\n    debug('Rebasing document')\n    if (this.document.EDGE === null) {\n      this.handleDocumentDeleted()\n    }\n\n    const oldLocal = this.LOCAL\n    this.LOCAL = this.commits.reduce((doc, commit) => commit.apply(doc), this.document.EDGE)\n    this.LOCAL = this.buffer.rebase(this.LOCAL)\n\n    // Copy over rev, since we don't care if it changed, we only care about the content\n    if (oldLocal !== null && this.LOCAL !== null) {\n      oldLocal._rev = this.LOCAL._rev\n    }\n\n    const changed = !isEqual(this.LOCAL, oldLocal)\n    if (changed && this.onRebase) {\n      this.onRebase(\n        this.LOCAL,\n        remoteMutations.reduce(mutReducerFn, []),\n        localMutations.reduce(mutReducerFn, []),\n      )\n    }\n  }\n\n  handleDocConsistencyChanged(isConsistent: boolean): void {\n    if (!this.onConsistencyChanged) {\n      return\n    }\n\n    const hasLocalChanges = this.commits.length > 0 || this.buffer.hasChanges()\n\n    if (isConsistent && !hasLocalChanges) {\n      this.onConsistencyChanged(true)\n    }\n\n    if (!isConsistent) {\n      this.onConsistencyChanged(false)\n    }\n  }\n}\n"],"names":["isRecord","descend","lhs","rhs","parsePatch"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"debugId":null}},
    {"offset": {"line": 8295, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/bifur-client/dist/esm/createClient.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { distinctUntilChanged, filter, finalize, map, mapTo, mergeMap, share, shareReplay, switchMap, take, } from 'rxjs/operators';\nimport { combineLatest, defer, EMPTY, fromEvent, merge, of, partition, } from 'rxjs';\nimport { customAlphabet } from 'nanoid';\n// at 1000 IDs per second ~4 million years needed in order to have a 1% probability of at least one collision.\n// => https://zelark.github.io/nano-id-cc/\nvar defaultGetNextRequestId = customAlphabet('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-', 20);\nvar HEARTBEAT = '♥';\nfunction formatRequest(method, params, id) {\n    return JSON.stringify({\n        jsonrpc: '2.0',\n        method: method,\n        params: addApiVersion(params, 'v1'),\n        id: id,\n    });\n}\nfunction tryParse(input) {\n    try {\n        return [null, JSON.parse(input)];\n    }\n    catch (error) {\n        return error instanceof Error ? [error] : [new Error(\"\".concat(error))];\n    }\n}\nfunction addApiVersion(params, v) {\n    return __assign(__assign({}, params), { apiVersion: v });\n}\nexport var createClient = function (connection$, options) {\n    if (options === void 0) { options = {}; }\n    var token$ = options.token$, _a = options.getNextRequestId, getNextRequestId = _a === void 0 ? defaultGetNextRequestId : _a;\n    var _b = partition(connection$.pipe(switchMap(function (connection) { return fromEvent(connection, 'message'); })), function (event) { return event.data === HEARTBEAT; }), heartbeats$ = _b[0], responses$ = _b[1];\n    var parsedResponses$ = responses$.pipe(mergeMap(function (response) {\n        var _a = tryParse(response.data), err = _a[0], msg = _a[1];\n        if (err) {\n            console.warn('Unable to parse message: %s', err.message);\n            return EMPTY;\n        }\n        if (!msg || !msg.jsonrpc) {\n            console.warn('Received empty or non-jsonrpc message: %s', msg);\n            return EMPTY;\n        }\n        return of(msg);\n    }), share());\n    var authedConnection$ = token$\n        ? combineLatest([token$, connection$]).pipe(distinctUntilChanged(function (_a, _b) {\n            var oldToken = _a[0], oldSocket = _a[1];\n            var newToken = _b[0], newSocket = _b[1];\n            return oldToken === newToken && oldSocket === newSocket;\n        }), switchMap(function (_a) {\n            var token = _a[0], ws = _a[1];\n            return token\n                ? call(ws, 'authorization', {\n                    authorization: \"Bearer \".concat(token),\n                }).pipe(take(1), mapTo(ws))\n                : of(ws);\n        }), shareReplay({ refCount: true, bufferSize: 1 }))\n        : connection$;\n    function call(ws, method, params) {\n        if (params === void 0) { params = {}; }\n        var requestId = getNextRequestId();\n        return merge(parsedResponses$.pipe(filter(function (rpcResult) { return rpcResult.id === requestId; }), map(function (rpcResult) { return rpcResult.result; })), defer(function () {\n            ws.send(formatRequest(method, params, requestId));\n            return EMPTY;\n        }));\n    }\n    // Will call the rpc method and return an observable that emits the first reply and then ends\n    function requestMethod(method, params) {\n        return authedConnection$.pipe(take(1), mergeMap(function (ws) { return call(ws, method, params).pipe(take(1)); }));\n    }\n    // Will call the rpc method with the '_subscribe' suffix and return an observable of all received messages and\n    // keeps the subscription open forever/until unsubscribe\n    function requestSubscribe(method, params) {\n        return authedConnection$.pipe(take(1), mergeMap(function (ws) {\n            return call(ws, \"\".concat(method, \"_subscribe\"), params).pipe(take(1), mergeMap(function (subscriptionId) {\n                return parsedResponses$.pipe(filter(function (message) {\n                    return message.method === \"\".concat(method, \"_subscription\") &&\n                        message.params.subscription === subscriptionId;\n                }), map(function (message) { return message.params.result; }), finalize(function () {\n                    if (ws.readyState !== ws.CLOSED &&\n                        ws.readyState !== ws.CLOSING) {\n                        ws.send(formatRequest(\"\".concat(method, \"_unsubscribe\"), { subscriptionId: subscriptionId }, getNextRequestId()));\n                    }\n                }));\n            }));\n        }));\n    }\n    return {\n        // heartbeat$ is a stream of date objects representing when the \"last message was received\"\n        // it will keep the connection open until it is unsubscribed and can therefore be used to keep connection alive\n        // between requests\n        heartbeats: merge(authedConnection$, heartbeats$, responses$).pipe(map(function () { return new Date(); })),\n        listen: function (method, params) {\n            return requestSubscribe(method, params);\n        },\n        request: function (method, params) {\n            return requestMethod(method, params);\n        },\n    };\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8458, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/bifur-client/dist/esm/createConnect.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Observable } from 'rxjs';\nvar WebSocketError = /** @class */ (function (_super) {\n    __extends(WebSocketError, _super);\n    function WebSocketError(message, type, code, reason) {\n        var _this = _super.call(this, message) || this;\n        _this.type = type;\n        _this.code = code;\n        _this.reason = reason;\n        return _this;\n    }\n    return WebSocketError;\n}(Error));\nexport { WebSocketError };\nexport function createConnect(getWebsocketInstance) {\n    return function (url) {\n        return new Observable(function (subscriber) {\n            var ws = getWebsocketInstance(url);\n            var didUnsubscribe = false;\n            var onOpen = function () {\n                subscriber.next(ws);\n            };\n            var onError = function () {\n                subscriber.error(new WebSocketError('WebSocket connection error', 'CONNECTION_ERROR'));\n            };\n            var onClose = function (ev) {\n                if (!didUnsubscribe) {\n                    subscriber.error(new WebSocketError('WebSocket connection error', 'CONNECTION_CLOSED', ev.code, ev.reason));\n                }\n                else {\n                    subscriber.complete();\n                }\n            };\n            ws.onopen = onOpen;\n            ws.onclose = onClose;\n            ws.onerror = onError;\n            return function () {\n                didUnsubscribe = true;\n                ws.close(1000, 'WebSockets connection closed by client');\n            };\n        });\n    };\n}\n"],"names":[],"mappings":";;;;AAeA;AAfA,IAAI,YAAY,AAAC,IAAI,IAAI,IAAI,CAAC,SAAS,IAAK,AAAC;IACzC,IAAI,gBAAgB,SAAU,CAAC,EAAE,CAAC;QAC9B,gBAAgB,OAAO,cAAc,IAChC,CAAA;YAAE,WAAW,EAAE;QAAC,CAAA,aAAa,SAAS,SAAU,CAAC,EAAE,CAAC;YAAI,EAAE,SAAS,GAAG;QAAG,KAC1E,SAAU,CAAC,EAAE,CAAC;YAAI,IAAK,IAAI,KAAK,EAAG,IAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;QAAE;QACpG,OAAO,cAAc,GAAG;IAC5B;IACA,OAAO,SAAU,CAAC,EAAE,CAAC;QACjB,IAAI,OAAO,MAAM,cAAc,MAAM,MACjC,MAAM,IAAI,UAAU,yBAAyB,OAAO,KAAK;QAC7D,cAAc,GAAG;QACjB,SAAS;YAAO,IAAI,CAAC,WAAW,GAAG;QAAG;QACtC,EAAE,SAAS,GAAG,MAAM,OAAO,OAAO,MAAM,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG,EAAE,SAAS,EAAE,IAAI,IAAI;IACvF;AACJ;;AAEA,IAAI,iBAAgC,SAAU,MAAM;IAChD,UAAU,gBAAgB;IAC1B,SAAS,eAAe,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM;QAC/C,IAAI,QAAQ,OAAO,IAAI,CAAC,IAAI,EAAE,YAAY,IAAI;QAC9C,MAAM,IAAI,GAAG;QACb,MAAM,IAAI,GAAG;QACb,MAAM,MAAM,GAAG;QACf,OAAO;IACX;IACA,OAAO;AACX,EAAE;;AAEK,SAAS,cAAc,oBAAoB;IAC9C,OAAO,SAAU,GAAG;QAChB,OAAO,IAAI,iKAAA,CAAA,aAAU,CAAC,SAAU,UAAU;YACtC,IAAI,KAAK,qBAAqB;YAC9B,IAAI,iBAAiB;YACrB,IAAI,SAAS;gBACT,WAAW,IAAI,CAAC;YACpB;YACA,IAAI,UAAU;gBACV,WAAW,KAAK,CAAC,IAAI,eAAe,8BAA8B;YACtE;YACA,IAAI,UAAU,SAAU,EAAE;gBACtB,IAAI,CAAC,gBAAgB;oBACjB,WAAW,KAAK,CAAC,IAAI,eAAe,8BAA8B,qBAAqB,GAAG,IAAI,EAAE,GAAG,MAAM;gBAC7G,OACK;oBACD,WAAW,QAAQ;gBACvB;YACJ;YACA,GAAG,MAAM,GAAG;YACZ,GAAG,OAAO,GAAG;YACb,GAAG,OAAO,GAAG;YACb,OAAO;gBACH,iBAAiB;gBACjB,GAAG,KAAK,CAAC,MAAM;YACnB;QACJ;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8530, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/bifur-client/dist/esm/operators.js"],"sourcesContent":["import { timer, race } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n// Operator that will time out using <withObservable> if <due> time passes before receiving the first value\nexport var timeoutFirstWith = function (due, withObservable) {\n    return function (input$) {\n        return race(input$, timer(due).pipe(mergeMap(function () { return withObservable; })));\n    };\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,IAAI,mBAAmB,SAAU,GAAG,EAAE,cAAc;IACvD,OAAO,SAAU,MAAM;QACnB,OAAO,CAAA,GAAA,yKAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,CAAA,GAAA,0KAAA,CAAA,QAAK,AAAD,EAAE,KAAK,IAAI,CAAC,CAAA,GAAA,4KAAA,CAAA,WAAQ,AAAD,EAAE;YAAc,OAAO;QAAgB;IACtF;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8551, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/bifur-client/dist/esm/index.js"],"sourcesContent":["import { createClient } from './createClient';\nimport { createConnect } from './createConnect';\nimport { timeoutFirstWith } from './operators';\nimport { shareReplay, takeUntil } from 'rxjs/operators';\nimport { throwError, fromEvent, of } from 'rxjs';\nvar id = function (arg) { return arg; };\nexport { ERROR_CODES } from './errorCodes';\nexport { createClient };\nexport function fromUrl(url, options) {\n    if (options === void 0) { options = {}; }\n    var timeout = options.timeout, token$ = options.token$;\n    var connect = createConnect(function (url, protocols) {\n        return new window.WebSocket(url, protocols);\n    });\n    return createClient(connect(url).pipe(timeout\n        ? timeoutFirstWith(timeout, throwError(function () {\n            return new Error(\"Timeout after \".concat(timeout, \" while establishing WebSockets connection\"));\n        }))\n        : id, shareReplay({ refCount: true }), takeUntil(fromEvent(window, 'beforeunload'))), { token$: token$ });\n}\nexport function fromSanityClient(client) {\n    var _a = client.config(), dataset = _a.dataset, token = _a.token;\n    return fromUrl(client.getUrl(\"/socket/\".concat(dataset)).replace(/^http/, 'ws'), token ? { token$: of(token) } : {});\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;;;;;;AACA,IAAI,KAAK,SAAU,GAAG;IAAI,OAAO;AAAK;;;AAG/B,SAAS,QAAQ,GAAG,EAAE,OAAO;IAChC,IAAI,YAAY,KAAK,GAAG;QAAE,UAAU,CAAC;IAAG;IACxC,IAAI,UAAU,QAAQ,OAAO,EAAE,SAAS,QAAQ,MAAM;IACtD,IAAI,UAAU,CAAA,GAAA,8KAAA,CAAA,gBAAa,AAAD,EAAE,SAAU,GAAG,EAAE,SAAS;QAChD,OAAO,IAAI,OAAO,SAAS,CAAC,KAAK;IACrC;IACA,OAAO,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ,KAAK,IAAI,CAAC,UAChC,CAAA,GAAA,0KAAA,CAAA,mBAAgB,AAAD,EAAE,SAAS,CAAA,GAAA,+KAAA,CAAA,aAAU,AAAD,EAAE;QACnC,OAAO,IAAI,MAAM,iBAAiB,MAAM,CAAC,SAAS;IACtD,MACE,IAAI,CAAA,GAAA,+KAAA,CAAA,cAAW,AAAD,EAAE;QAAE,UAAU;IAAK,IAAI,CAAA,GAAA,6KAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,8KAAA,CAAA,YAAS,AAAD,EAAE,QAAQ,mBAAmB;QAAE,QAAQ;IAAO;AAC/G;AACO,SAAS,iBAAiB,MAAM;IACnC,IAAI,KAAK,OAAO,MAAM,IAAI,UAAU,GAAG,OAAO,EAAE,QAAQ,GAAG,KAAK;IAChE,OAAO,QAAQ,OAAO,MAAM,CAAC,WAAW,MAAM,CAAC,UAAU,OAAO,CAAC,SAAS,OAAO,QAAQ;QAAE,QAAQ,CAAA,GAAA,uKAAA,CAAA,KAAE,AAAD,EAAE;IAAO,IAAI,CAAC;AACtH","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8601, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/logos/src/groqLogo.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/logos/src/groqMonogram.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/logos/src/sanityLogo.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/logos/src/sanityMonogram.tsx"],"sourcesContent":["import {hues} from '@sanity/color'\nimport {forwardRef} from 'react'\n\n/**\n * @public\n */\nexport const GroqLogo = forwardRef(function GroqLogo(\n  props: React.SVGProps<SVGSVGElement>,\n  ref: React.Ref<SVGSVGElement>,\n) {\n  return (\n    <svg\n      data-sanity-icon=\"groq-logo\"\n      height=\"1em\"\n      viewBox=\"0 0 304 64\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n      ref={ref}\n    >\n      <path d=\"M32 0L0 32H32V0Z\" fill={hues.magenta[400].hex} />\n      <path d=\"M32 32H0L32 64V32Z\" fill={hues.green[300].hex} />\n      <path d=\"M64 32H32V64L64 32Z\" fill={hues.purple[300].hex} />\n      <path d=\"M112 0L80 32H112V0Z\" fill={hues.green[300].hex} />\n      <path d=\"M112 0H80V32L112 0Z\" fill={hues.purple[300].hex} />\n      <path d=\"M112 32H80L112 64V32Z\" fill={hues.yellow[200].hex} />\n      <path d=\"M144 64L112 32V64H144Z\" fill={hues.blue[300].hex} />\n      <path d=\"M80 32V64H112L80 32Z\" fill={hues.orange[400].hex} />\n      <path d=\"M112 0V32H144L112 0Z\" fill={hues.magenta[400].hex} />\n      <path d=\"M192 0L160 32H192V0Z\" fill={hues.yellow[200].hex} />\n      <path d=\"M192 32H160L192 64V32Z\" fill={hues.orange[400].hex} />\n      <path d=\"M224 32H192V64L224 32Z\" fill={hues.green[300].hex} />\n      <path d=\"M192 0V32H224L192 0Z\" fill={hues.blue[300].hex} />\n      <path d=\"M272 0L240 32H272V0Z\" fill={hues.purple[300].hex} />\n      <path d=\"M304 32L272 64H304V32Z\" fill={hues.magenta[400].hex} />\n      <path d=\"M272 32H240L272 64V32Z\" fill={hues.blue[300].hex} />\n      <path d=\"M304 32H272V64L304 32Z\" fill={hues.yellow[200].hex} />\n      <path d=\"M272 0V32H304L272 0Z\" fill={hues.green[300].hex} />\n    </svg>\n  )\n})\nGroqLogo.displayName = 'ForwardRef(GroqLogo)'\n","import {hues} from '@sanity/color'\nimport {forwardRef} from 'react'\n\n/**\n * @public\n */\nexport const GroqMonogram = forwardRef(function GroqMonogram(\n  props: React.SVGProps<SVGSVGElement>,\n  ref: React.Ref<SVGSVGElement>,\n) {\n  return (\n    <svg\n      data-sanity-icon=\"groq-monogram\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 128 128\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n      ref={ref}\n    >\n      <rect width=\"128\" height=\"128\" rx=\"8\" fill={hues.green[950].hex} />\n      <rect y=\"32\" width=\"64\" height=\"64\" fill={hues.green[800].hex} />\n      <path d=\"M64 32L32 64H64V32Z\" fill={hues.magenta[400].hex} />\n      <path d=\"M64 64H32L64 96V64Z\" fill={hues.green[300].hex} />\n      <path d=\"M96 64H64V96L96 64Z\" fill={hues.purple[300].hex} />\n    </svg>\n  )\n})\nGroqMonogram.displayName = 'ForwardRef(GroqMonogram)'\n","import {hues, white} from '@sanity/color'\nimport {forwardRef} from 'react'\n\n/**\n * @public\n */\nexport interface SanityLogoProps {\n  dark?: boolean\n}\n\nconst schemes = {\n  light: [hues.red[200].hex, hues.red[300].hex, hues.red[500].hex],\n  dark: [hues.gray[500].hex, hues.gray[300].hex, white.hex],\n}\n\n/**\n * @public\n */\nexport const SanityLogo = forwardRef(function SanityLogo(\n  props: SanityLogoProps & React.SVGProps<SVGSVGElement>,\n  ref: React.Ref<SVGSVGElement>,\n) {\n  const {dark, ...svgProps} = props\n  const scheme = schemes[dark ? 'dark' : 'light']\n\n  return (\n    <svg\n      data-sanity-icon=\"sanity-logo\"\n      height=\"1em\"\n      viewBox=\"0 0 352 100\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...svgProps}\n      ref={ref}\n    >\n      <path d=\"M311.14 57.234V80.0016H298.499V57.234\" fill={scheme[1]} />\n      <path d=\"M298.499 57.2341L319.889 20.0017H333.316L311.14 57.2341H298.499Z\" fill={scheme[2]} />\n      <path\n        d=\"M298.499 57.2341L276.515 20.0017H290.345L305.239 45.5161L298.499 57.2341Z\"\n        fill={scheme[1]}\n      />\n      <path d=\"M253.839 40.9625V80.0017H241.007V47.6275L253.839 40.9625Z\" fill={scheme[1]} />\n      <path\n        d=\"M241.007 47.5944L273.538 30.9469L268.042 21.6519L241.007 34.8633V47.5944Z\"\n        fill={scheme[0]}\n      />\n      <path\n        d=\"M241.007 30.9469H221.404V20.0017H267.064L273.538 30.9469H253.839H241.007Z\"\n        fill={scheme[2]}\n      />\n      <path d=\"M214.047 20.0017H201.311V80.0121H214.047V20.0017Z\" fill={scheme[2]} />\n      <path d=\"M149.39 37.8712V80.0017H137.153V20.0017L149.39 37.8712Z\" fill={scheme[1]} />\n      <path\n        d=\"M151.282 20.0017L178.231 60.9939V80.0017L137.153 20.0017H151.282Z\"\n        fill={scheme[2]}\n      />\n      <path d=\"M178.231 57.9129V20.0017H190.467V80.0017H178.231V57.9129Z\" fill={scheme[1]} />\n      <path\n        d=\"M82.1168 80.9834L112.102 65.3053L108.405 55.7303L88.6644 64.9362L82.1168 80.9834Z\"\n        fill={scheme[0]}\n      />\n      <path\n        d=\"M100.657 35.5422L82.1167 80.9834L72.5807 72.7745L94.6719 20.0017L100.657 35.5422Z\"\n        fill={scheme[1]}\n      />\n      <path d=\"M94.672 20.0017H107.312L130.69 80.0017H117.752L94.672 20.0017Z\" fill={scheme[2]} />\n      <path\n        d=\"M25.1347 26.926C25.1347 35.2811 30.3864 40.2524 40.9004 42.8738L52.0417 45.4117C61.9923 47.6571 68.0519 53.2341 68.0519 62.3203C68.1293 66.2787 66.8194 70.1429 64.3417 73.2654C64.3417 64.2002 59.5684 59.302 48.0551 56.3568L37.1158 53.913C28.3559 51.9495 21.5946 47.3647 21.5946 37.4952C21.5485 33.6839 22.7939 29.9658 25.1347 26.926\"\n        fill={scheme[2]}\n      />\n      <path\n        d=\"M57.4954 60.0957C62.2475 63.0827 64.3311 67.2602 64.3311 73.255C60.3977 78.2054 53.4875 80.9834 45.3655 80.9834C31.6941 80.9834 22.1262 74.3725 20 62.8842H33.1292C34.8196 68.1584 39.2952 70.6022 45.2698 70.6022C52.5626 70.6022 57.4104 66.7798 57.506 60.0748\"\n        fill={scheme[1]}\n      />\n      <path\n        d=\"M31.9598 39.3124C29.7898 38.0455 28.0095 36.225 26.8079 34.0442C25.6062 31.8634 25.028 29.4036 25.1347 26.926C28.93 22.0174 35.5318 19.02 43.5794 19.02C57.506 19.02 65.5643 26.2472 67.5523 36.4195H54.9227C53.53 32.409 50.0431 29.2863 43.6858 29.2863C36.8926 29.2863 32.2575 33.1715 31.9917 39.3124\"\n        fill={scheme[1]}\n      />\n    </svg>\n  )\n})\nSanityLogo.displayName = 'ForwardRef(SanityLogo)'\n","import {hues, white} from '@sanity/color'\nimport {forwardRef} from 'react'\n\n/**\n * @public\n */\nexport interface SanityMonogramColor {\n  bg1: string\n  bg2: string\n  fg: string\n}\n\n/**\n * @public\n */\nexport interface SanityMonogramProps {\n  color?: SanityMonogramColor\n}\n\nconst SANITY_MONOGRAM_COLOR: SanityMonogramColor = {\n  bg1: hues.red[500].hex,\n  bg2: hues.red[200].hex,\n  fg: white.hex,\n}\n\n/**\n * @public\n */\nexport const SanityMonogram = forwardRef(function SanityMonogram(\n  props: SanityMonogramProps & Omit<React.SVGProps<SVGSVGElement>, 'color'>,\n  ref: React.Ref<SVGSVGElement>,\n) {\n  const {color = SANITY_MONOGRAM_COLOR, ...restProps} = props\n\n  return (\n    <svg\n      data-sanity-icon=\"sanity-monogram\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 128 128\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...restProps}\n      ref={ref}\n    >\n      <rect width=\"128\" height=\"128\" rx=\"8\" fill={color.bg1} />\n      <path\n        d=\"M39.423 33.163C39.423 44.1615 46.3363 50.7056 60.1768 54.1564L74.843 57.4972C87.9418 60.453 95.9186 67.7945 95.9186 79.7554C96.0205 84.9662 94.2961 90.0531 91.0345 94.1635C91.0345 82.2301 84.751 75.7822 69.595 71.9052L55.1948 68.6882C43.6633 66.1035 34.7629 60.0681 34.7629 47.0761C34.7022 42.0589 36.3416 37.1644 39.423 33.163\"\n        fill={color.fg}\n      />\n      <path\n        d=\"M82.0221 76.827C88.2776 80.759 91.0206 86.2582 91.0206 94.1497C85.8426 100.666 76.7462 104.323 66.0545 104.323C48.0576 104.323 35.4626 95.6207 32.6637 80.4977H49.9468C52.172 87.4406 58.0636 90.6576 65.9285 90.6576C75.5287 90.6576 81.9102 85.6258 82.0361 76.7995\"\n        fill={color.bg2}\n      />\n      <path\n        d=\"M48.4075 49.4682C45.551 47.8004 43.2074 45.404 41.6256 42.5332C40.0437 39.6624 39.2826 36.4244 39.4231 33.1629C44.4191 26.7013 53.1096 22.7556 63.7034 22.7556C82.0362 22.7556 92.6439 32.2693 95.2609 45.66H78.6355C76.8022 40.3807 72.2121 36.27 63.8434 36.27C54.9009 36.27 48.7993 41.3843 48.4495 49.4682\"\n        fill={color.bg2}\n      />\n    </svg>\n  )\n})\nSanityMonogram.displayName = 'ForwardRef(SanityMonogram)'\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3],"debugId":null}},
    {"offset": {"line": 8874, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/insert-menu/src/getSchemaTypeIcon.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/insert-menu/src/InsertMenu.tsx"],"sourcesContent":["import {type ReferenceSchemaType, type SchemaType} from '@sanity/types'\nimport {type ComponentType} from 'react'\n\n/** @internal */\nexport function getSchemaTypeIcon(schemaType: SchemaType): ComponentType | undefined {\n  // Use reference icon if reference is to one schemaType only\n  const referenceIcon =\n    isReferenceSchemaType(schemaType) && (schemaType.to ?? []).length === 1\n      ? schemaType.to[0].icon\n      : undefined\n\n  return schemaType.icon ?? schemaType.type?.icon ?? referenceIcon\n}\n\nfunction isReferenceSchemaType(type: unknown): type is ReferenceSchemaType {\n  return isRecord(type) && (type['name'] === 'reference' || isReferenceSchemaType(type['type']))\n}\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return !!value && (typeof value == 'object' || typeof value == 'function')\n}\n","import {SearchIcon, ThLargeIcon, UlistIcon} from '@sanity/icons'\nimport {type SchemaType} from '@sanity/types'\nimport {\n  Box,\n  Button,\n  Flex,\n  Grid,\n  Menu,\n  MenuItem,\n  Stack,\n  Tab,\n  TabList,\n  Text,\n  TextInput,\n  Tooltip,\n  type MenuItemProps,\n} from '@sanity/ui/_visual-editing'\nimport {startCase} from 'lodash'\nimport {useReducer, useState, type ChangeEvent, type CSSProperties} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {getSchemaTypeIcon} from './getSchemaTypeIcon'\nimport type {InsertMenuOptions} from './InsertMenuOptions'\n\ntype InsertMenuGroup = NonNullable<InsertMenuOptions['groups']>[number] & {selected: boolean}\ntype InsertMenuViews = NonNullable<InsertMenuOptions['views']>\ntype InsertMenuView = InsertMenuViews[number]\n\ntype InsertMenuEvent =\n  | {type: 'toggle view'; name: InsertMenuView['name']}\n  | {type: 'change query'; query: string}\n  | {type: 'select group'; name: string | undefined}\n\ntype InsertMenuState = {\n  query: string\n  groups: Array<InsertMenuGroup>\n  views: Array<InsertMenuViews[number] & {selected: boolean}>\n}\n\nfunction fullInsertMenuReducer(state: InsertMenuState, event: InsertMenuEvent): InsertMenuState {\n  return {\n    query: event.type === 'change query' ? event.query : state.query,\n    groups:\n      event.type === 'select group'\n        ? state.groups.map((group) => ({...group, selected: event.name === group.name}))\n        : state.groups,\n    views:\n      event.type === 'toggle view'\n        ? state.views.map((view) => ({...view, selected: event.name === view.name}))\n        : state.views,\n  }\n}\n\nconst ALL_ITEMS_GROUP_NAME = 'all-items'\n\nconst gridStyle: CSSProperties = {\n  gridTemplateColumns: 'repeat(auto-fill, minmax(118px, 1fr))',\n}\n\n/** @alpha */\nexport type InsertMenuProps = InsertMenuOptions & {\n  schemaTypes: Array<SchemaType>\n  onSelect: (schemaType: SchemaType) => void\n  labels: {\n    'insert-menu.filter.all-items': string\n    'insert-menu.search.no-results': string\n    'insert-menu.search.placeholder': string\n    'insert-menu.toggle-grid-view.tooltip': string\n    'insert-menu.toggle-list-view.tooltip': string\n  }\n}\n\n/** @alpha */\nexport function InsertMenu(props: InsertMenuProps): React.JSX.Element {\n  const showIcons = props.showIcons === undefined ? true : props.showIcons\n  const showFilter =\n    props.filter === undefined || props.filter === 'auto'\n      ? props.schemaTypes.length > 5\n      : props.filter\n  const [state, send] = useReducer(fullInsertMenuReducer, {\n    query: '',\n    groups: props.groups\n      ? [\n          {\n            name: ALL_ITEMS_GROUP_NAME,\n            title: props.labels['insert-menu.filter.all-items'],\n            selected: true,\n          },\n          ...props.groups.map((group) => ({...group, selected: false})),\n        ]\n      : [],\n    views: (props.views ?? [{name: 'list'}]).map((view, index) => ({\n      ...view,\n      selected: index === 0,\n    })),\n  })\n  const filteredSchemaTypes = filterSchemaTypes(props.schemaTypes, state.query, state.groups)\n  const selectedView = state.views.find((view) => view.selected)\n  const showingFilterOrViews = showFilter || state.views.length > 1\n  const showingTabs = state.groups && state.groups.length > 0\n  const showingAnyOptions = showingFilterOrViews || showingTabs\n\n  return (\n    <Menu padding={0}>\n      <Flex direction=\"column\" height=\"fill\">\n        <Box\n          {...(showingAnyOptions\n            ? {\n                style: {borderBottom: '1px solid var(--card-border-color)'},\n                paddingBottom: 1,\n              }\n            : {})}\n        >\n          {/* filter and views button */}\n          {showingFilterOrViews ? (\n            <Flex flex=\"none\" align=\"center\" paddingTop={1} paddingX={1} gap={1}>\n              {showFilter ? (\n                <Box flex={1}>\n                  <TextInput\n                    autoFocus\n                    border={false}\n                    fontSize={1}\n                    icon={SearchIcon}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      send({type: 'change query', query: event.target.value})\n                    }}\n                    placeholder={props.labels['insert-menu.search.placeholder']}\n                    value={state.query}\n                  />\n                </Box>\n              ) : null}\n              {state.views.length > 1 ? (\n                <Box flex=\"none\">\n                  <ViewToggle\n                    views={state.views}\n                    onToggle={(name) => {\n                      send({type: 'toggle view', name})\n                    }}\n                    labels={props.labels}\n                  />\n                </Box>\n              ) : null}\n            </Flex>\n          ) : null}\n\n          {/* tabs */}\n          {showingTabs ? (\n            <Box paddingTop={1} paddingX={1}>\n              <TabList space={1}>\n                {state.groups.map((group) => (\n                  <Tab\n                    id={`${group.name}-tab`}\n                    aria-controls={`${group.name}-panel`}\n                    key={group.name}\n                    label={group.title ?? startCase(group.name)}\n                    selected={group.selected}\n                    onClick={() => {\n                      send({type: 'select group', name: group.name})\n                    }}\n                  />\n                ))}\n              </TabList>\n            </Box>\n          ) : null}\n        </Box>\n\n        {/* results */}\n        <Box padding={1}>\n          {filteredSchemaTypes.length === 0 ? (\n            <Box padding={2}>\n              <Text muted size={1}>\n                {props.labels['insert-menu.search.no-results']}\n              </Text>\n            </Box>\n          ) : !selectedView ? null : selectedView.name === 'grid' ? (\n            <Grid autoRows=\"auto\" flex={1} gap={1} style={gridStyle}>\n              {filteredSchemaTypes.map((schemaType) => (\n                <GridMenuItem\n                  key={schemaType.name}\n                  icon={showIcons ? getSchemaTypeIcon(schemaType) : undefined}\n                  onClick={() => {\n                    props.onSelect(schemaType)\n                  }}\n                  previewImageUrl={selectedView.previewImageUrl?.(schemaType.name)}\n                  schemaType={schemaType}\n                />\n              ))}\n            </Grid>\n          ) : (\n            <Stack flex={1} space={1}>\n              {filteredSchemaTypes.map((schemaType) => (\n                <MenuItem\n                  key={schemaType.name}\n                  icon={showIcons ? getSchemaTypeIcon(schemaType) : undefined}\n                  onClick={() => {\n                    props.onSelect(schemaType)\n                  }}\n                  text={schemaType.title ?? startCase(schemaType.name)}\n                />\n              ))}\n            </Stack>\n          )}\n        </Box>\n      </Flex>\n    </Menu>\n  )\n}\n\nconst viewToggleIcon: Record<InsertMenuView['name'], React.ElementType> = {\n  grid: ThLargeIcon,\n  list: UlistIcon,\n}\n\nconst viewToggleTooltip: Record<InsertMenuView['name'], keyof ViewToggleProps['labels']> = {\n  grid: 'insert-menu.toggle-grid-view.tooltip',\n  list: 'insert-menu.toggle-list-view.tooltip',\n}\n\ntype ViewToggleProps = {\n  views: InsertMenuState['views']\n  onToggle: (viewName: InsertMenuView['name']) => void\n  labels: Pick<\n    InsertMenuProps['labels'],\n    'insert-menu.toggle-grid-view.tooltip' | 'insert-menu.toggle-list-view.tooltip'\n  >\n}\n\nfunction ViewToggle(props: ViewToggleProps) {\n  const viewIndex = props.views.findIndex((view) => view.selected)\n  const nextView = props.views[viewIndex + 1] ?? props.views[0]\n\n  return (\n    <Tooltip\n      content={<Text size={1}>{props.labels[viewToggleTooltip[nextView.name]]}</Text>}\n      placement=\"top\"\n      portal\n    >\n      <Button\n        mode=\"bleed\"\n        icon={viewToggleIcon[nextView.name]}\n        onClick={() => {\n          props.onToggle(nextView.name)\n        }}\n      />\n    </Tooltip>\n  )\n}\n\ntype GridMenuItemProps = {\n  onClick: () => void\n  schemaType: SchemaType\n  icon: MenuItemProps['icon']\n  previewImageUrl: ReturnType<\n    NonNullable<\n      Extract<NonNullable<InsertMenuOptions['views']>[number], {name: 'grid'}>['previewImageUrl']\n    >\n  >\n}\n\nfunction GridMenuItem(props: GridMenuItemProps) {\n  const [failedToLoad, setFailedToLoad] = useState(false)\n  const Icon = props.icon\n\n  return (\n    <MenuItem padding={0} radius={2} onClick={props.onClick} style={{overflow: 'hidden'}}>\n      <Flex direction=\"column\" gap={1} padding={1}>\n        <Box\n          flex=\"none\"\n          style={{\n            backgroundColor: 'var(--card-muted-bg-color)',\n            paddingBottom: '66.6%',\n            position: 'relative',\n          }}\n        >\n          {isValidElementType(Icon) ? (\n            <Flex\n              align=\"center\"\n              justify=\"center\"\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n              }}\n            >\n              <Text size={1}>\n                <Icon />\n              </Text>\n            </Flex>\n          ) : null}\n          {!props.previewImageUrl || failedToLoad ? null : (\n            <img\n              src={props.previewImageUrl}\n              style={{\n                objectFit: 'contain',\n                width: '100%',\n                height: '100%',\n                position: 'absolute',\n                inset: 0,\n              }}\n              onError={() => {\n                setFailedToLoad(true)\n              }}\n            />\n          )}\n\n          <div\n            style={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              boxShadow: 'inset 0 0 0 0.5px var(--card-fg-color)',\n              opacity: 0.1,\n            }}\n          />\n        </Box>\n        <Box flex={1} padding={2}>\n          <Text size={1} weight=\"medium\">\n            {props.schemaType.title ?? props.schemaType.name}\n          </Text>\n        </Box>\n      </Flex>\n    </MenuItem>\n  )\n}\n\nfunction filterSchemaTypes(\n  schemaTypes: Array<SchemaType>,\n  query: string,\n  groups: Array<InsertMenuGroup>,\n) {\n  return schemaTypes.filter(\n    (schemaType) => passesGroupFilter(schemaType, groups) && passesQueryFilter(schemaType, query),\n  )\n}\n\nfunction passesQueryFilter(schemaType: SchemaType, query: string) {\n  const sanitizedQuery = query.trim().toLowerCase()\n\n  return schemaType.title\n    ? schemaType.title?.toLowerCase().includes(sanitizedQuery)\n    : schemaType.name.includes(sanitizedQuery)\n}\n\nfunction passesGroupFilter(schemaType: SchemaType, groups: Array<InsertMenuGroup>) {\n  const selectedGroup = groups.find((group) => group.selected)\n\n  return selectedGroup\n    ? selectedGroup.name === ALL_ITEMS_GROUP_NAME\n      ? true\n      : selectedGroup.of?.includes(schemaType.name)\n    : true\n}\n"],"names":["getSchemaTypeIcon","schemaType","referenceIcon","isReferenceSchemaType","to","length","icon","undefined","type","isRecord","value","fullInsertMenuReducer","state","event","query","groups","map","group","selected","name","views","view","ALL_ITEMS_GROUP_NAME","gridStyle","gridTemplateColumns","InsertMenu","props","$","_c","showIcons","showFilter","filter","schemaTypes","t0","labels","title","_temp","t1","t2","_temp2","t3","send","useReducer","T0","T1","T2","t4","t5","t6","t7","t8","t9","filteredSchemaTypes","filterSchemaTypes","selectedView","find","_temp3","showingFilterOrViews","showingTabs","showingAnyOptions","Menu","Flex","t10","style","borderBottom","paddingBottom","t11","SearchIcon","target","t12","group_0","startCase","Box","onSelect","previewImageUrl","schemaType_0","view_0","index","viewToggleIcon","grid","ThLargeIcon","list","UlistIcon","viewToggleTooltip","ViewToggle","viewIndex","findIndex","_temp4","nextView","onToggle","GridMenuItem","failedToLoad","setFailedToLoad","useState","Icon","Symbol","for","overflow","backgroundColor","position","isValidElementType","top","left","width","height","objectFit","inset","boxShadow","opacity","onClick","passesGroupFilter","passesQueryFilter","sanitizedQuery","trim","toLowerCase","includes","selectedGroup","of"],"mappings":";;;;;;;;;;;;;;;;;AAIO,SAASA,kBAAkBC,UAAAA,EAAmD;IAEnF,MAAMC,gBACJC,sBAAsBF,UAAU,KAAA,CAAMA,WAAWG,EAAAA,IAAM,CAAA,CAAA,EAAIC,MAAAA,KAAW,IAClEJ,WAAWG,EAAAA,CAAG,CAAC,CAAA,CAAEE,IAAAA,GACjBC,KAAAA;IAEN,OAAON,WAAWK,IAAAA,IAAQL,WAAWO,IAAAA,EAAMF,QAAQJ;AACrD;AAEA,SAASC,sBAAsBK,IAAAA,EAA4C;IAClEC,OAAAA,SAASD,IAAI,KAAA,CAAMA,KAAK,IAAA,KAAY,eAAeL,sBAAsBK,KAAK,IAAO,CAAA;AAC9F;AAEA,SAASC,SAASC,KAAAA,EAAkD;IAClE,OAAO,CAAC,CAACA,SAAAA,CAAU,OAAOA,SAAS,YAAY,OAAOA,SAAS,UAAA;AACjE;ACkBA,SAASC,sBAAsBC,KAAAA,EAAwBC,KAAAA,EAAyC;IACvF,OAAA;QACLC,OAAOD,MAAML,IAAAA,KAAS,iBAAiBK,MAAMC,KAAAA,GAAQF,MAAME,KAAAA;QAC3DC,QACEF,MAAML,IAAAA,KAAS,iBACXI,MAAMG,MAAAA,CAAOC,GAAAA,CAAKC,CAAW,QAAA,CAAA;gBAAC,GAAGA,KAAAA;gBAAOC,UAAUL,MAAMM,IAAAA,KAASF,MAAME,IAAAA;YAAAA,CAAAA,CAAM,IAC7EP,MAAMG,MAAAA;QACZK,OACEP,MAAML,IAAAA,KAAS,gBACXI,MAAMQ,KAAAA,CAAMJ,GAAAA,CAAKK,CAAU,OAAA,CAAA;gBAAC,GAAGA,IAAAA;gBAAMH,UAAUL,MAAMM,IAAAA,KAASE,KAAKF,IAAAA;YAAAA,CAAAA,CAAM,IACzEP,MAAMQ,KAAAA;IACd;AACF;AAEA,MAAME,uBAAuB,aAEvBC,YAA2B;IAC/BC,qBAAqB;AACvB;AAgBO,SAAAC,WAAAC,KAAAA,EAAA;IAAAC,MAAAA,6KAAAC,EAAA,EAAA,GACLC,YAAkBH,MAAKG,SAAAA,KAAAtB,KAAAA,IAAwB,CAAA,IAAUmB,MAAKG,SAAAA,EAC9DC,aACEJ,MAAKK,MAAAA,KAAAxB,KAAAA,KAAyBmB,MAAKK,MAAAA,KAAY,SAC3CL,MAAKM,WAAAA,CAAA3B,MAAAA,GAAuB,IAC5BqB,MAAKK,MAAAA;IAAOE,IAAAA;IAAAN,CAAAA,CAAAD,CAAAA,CAAAA,KAAAA,MAAAX,MAAAA,IAAAY,CAAAA,CAAA,CAAA,CAAA,KAAAD,MAAAQ,MAAAA,GAAAA,CAGRD,KAAAP,MAAKX,MAAAA,GAAA;QAAA;YAAAI,MAAAG;YAAAa,OAIET,MAAKQ,MAAAA,CAAQ,8BAA8B,CAAA;YAAAhB,UAAA,CAAA;QAAA,GAGjDQ;WAAAA,MAAKX,MAAAA,CAAAC,GAAAA,CAAAoB,KAAoD,CAAC;KAAA,GAE7D,CAAA,CAAA,EAAAT,CAAAA,CAAA,CAAA,CAAA,GAAAD,MAAAX,MAAAA,EAAAY,CAAAA,CAAA,CAAA,CAAA,GAAAD,MAAAQ,MAAAA,EAAAP,CAAAA,CAAAA,EAAAA,GAAAM,EAAAA,IAAAA,KAAAN,CAAAA,CAAA,CAAA,CAAA;IAAAU,IAAAA;IAAAV,CAAAA,CAAA,CAAA,CAAA,KAAAD,MAAAN,KAAAA,GAAAA,CACEiB,KAAAX,MAAKN,KAAAA,IAAA;QAAA;YAAAD,MAAkB;QAAQ,CAAA;KAAA,EAAAQ,CAAAA,CAAA,CAAA,CAAA,GAAAD,MAAAN,KAAAA,EAAAO,CAAAA,CAAAA,EAAAA,GAAAU,EAAAA,IAAAA,KAAAV,CAAAA,CAAA,CAAA,CAAA;IAAAW,IAAAA;IAAAX,CAAAA,CAAAA,EAAAA,KAAAU,KAAAA,CAAhCC,KAACD,GAA+BrB,GAAAA,CAAAuB,MAGrC,GAACZ,CAAAA,CAAAA,EAAAA,GAAAU,IAAAV,CAAAA,CAAAA,EAAAA,GAAAW,EAAAA,IAAAA,KAAAX,CAAAA,CAAA,CAAA,CAAA;IAAAa,IAAAA;IAAAb,CAAAA,CAAAM,CAAAA,CAAAA,KAAAA,MAAAN,CAAAA,CAAAA,EAAAA,KAAAW,KAAAA,CAfmDE,KAAA;QAAA1B,OAC/C;QAAEC,QACDkB;QASFb,OACCkB;IAIRX,GAAAA,CAAAA,CAAAA,EAAAA,GAAAM,IAAAN,CAAAA,CAAAA,EAAAA,GAAAW,IAAAX,CAAAA,CAAAA,EAAAA,GAAAa,EAAAA,IAAAA,KAAAb,CAAAA,CAAA,CAAA,CAAA;IAhBD,MAAAf,CAAAA,OAAA6B,IAAA,CAAA,qKAAsBC,aAAAA,EAAA/B,uBAAkC6B,EAgBvD;IAAC,IAAAG,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC;IAAAxB,IAAAA,CAAAA,CAAA,EAAA,CAAA,KAAAD,SAAAC,CAAAA,CAAA,EAAA,CAAA,KAAAG,cAAAH,CAAAA,CAAA,EAAA,CAAA,KAAAE,aAAAF,CAAAA,CAAA,EAAA,CAAA,KAAAf,MAAAG,MAAAA,IAAAY,CAAAA,CAAA,EAAA,CAAA,KAAAf,MAAAE,KAAAA,IAAAa,CAAAA,CAAA,EAAA,CAAA,KAAAf,MAAAQ,KAAAA,EAAA;QACF,MAAAgC,sBAA4BC,kBAAkB3B,MAAKM,WAAAA,EAAcpB,MAAKE,KAAAA,EAAQF,MAAKG,MAAO,GAC1FuC,eAAqB1C,MAAKQ,KAAAA,CAAAmC,IAAAA,CAAAC,MAAmC,GAC7DC,uBAA6B3B,cAAclB,MAAKQ,KAAAA,CAAAf,MAAAA,GAAiB,GACjEqD,cAAoB9C,MAAKG,MAAAA,IAAWH,MAAKG,MAAAA,CAAAV,MAAAA,GAAkB,GAC3DsD,oBAA0BF,wBAAwBC;QAG/Cb,uLAAAe,OAAAA,EAAcT,KAAA,GACZP,uLAAAiB,OAAAA,EAAeb,KAAQ,UAAQC,KAAM;QAAAa,IAAAA;QAAAnC,CAAAA,CAAAA,GAAAA,KAAAgC,oBAAAA,CAE7BG,OAAAH,oBAAiB;YAAAI,OAAA;gBAAAC,cAEM;YAAoC;YAAAC,eAAA;QAG1D,IAAA,CAAA,GAAAtC,CAAAA,CAAAA,GAAAA,GAAAgC,mBAAAhC,CAAAA,CAAAA,GAAAA,GAAAmC,IAAAA,IAAAA,OAAAnC,CAAAA,CAAA,EAAA,CAAA;QAAAuC,IAAAA;QAAAvC,CAAAA,CAAAD,EAAAA,CAAAA,KAAAA,MAAAQ,MAAAA,IAAAP,CAAAA,CAAA,EAAA,CAAA,KAAAG,cAAAH,CAAAA,CAAA,EAAA,CAAA,KAAA8B,wBAAA9B,CAAAA,CAAAf,EAAAA,CAAAA,KAAAA,MAAAE,KAAAA,IAAAa,CAAAA,CAAA,EAAA,CAAA,KAAAf,MAAAQ,KAAAA,GAAAA,CAGL8C,OAAAT,uBAAAA,aAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,OAAAA,oLACE,OAAA,EAAU;YAAA,MAAA;YAAa,OAAA;YAAqB,YAAC;YAAY,UAAC;YAAO,KAAC;YAChE3B,UAAAA;gBAAAA,aACE,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,oLAAA,MAAA,EAAA;oBAAU,MAAC;oBACV,UAAA,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,oLAAC,YAAA,EACC;wBAAA,WAAA,CAAA;wBACQ,QAAI,CAAA;wBACF,UAAA;wBACJqC,4JAAAA,aAAAA;wBACI,UAAAtD,CAAA,UAAA;4BACJ,KAAA;gCAAAL,MAAQ;gCAAcM,OAASD,MAAKuD,MAAAA,CAAA1D,KAAAA;4BAAAA,CAAc;wBAAC;wBAE5C,aAAAgB,MAAKQ,MAAAA,CAAQ,gCAAgC,CAAA;wBACnD,OAAAtB,MAAKE,KAAAA;oBAEhB,CAAA;gBAAA,CAAA,IACK;gBACNF,MAAKQ,KAAAA,CAAAf,MAAAA,GAAA,IAAA,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,oLACH,MAAA,EAAS;oBAAA,MAAA;oBACR,UAAA,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAC,YACQ;wBAAA,OAAAO,MAAKQ,KAAAA;wBACF,UAAAD,CAAA,SAAA;4BACJ,KAAA;gCAAAX,MAAQ;gCAAaW;4BAAAA,CAAO;wBAE1B;wBAAA,QAAAO,MAAKQ,MAAAA;oBAEjB,CAAA;gBAAA,CAAA,IAAM;aAAA;QAAA,CAEV,IACM,MAAAP,CAAAA,CAAA,EAAA,CAAA,GAAAD,MAAAQ,MAAAA,EAAAP,CAAAA,CAAAA,GAAAA,GAAAG,YAAAH,CAAAA,CAAAA,GAAAA,GAAA8B,sBAAA9B,CAAAA,CAAA,EAAA,CAAA,GAAAf,MAAAE,KAAAA,EAAAa,CAAAA,CAAA,EAAA,CAAA,GAAAf,MAAAQ,KAAAA,EAAAO,CAAAA,CAAAA,GAAAA,GAAAuC,IAAAA,IAAAA,OAAAvC,CAAAA,CAAA,EAAA,CAAA;QAAA0C,IAAAA;QAAA1C,CAAAA,CAAAA,GAAAA,KAAA+B,eAAA/B,CAAAA,CAAAf,EAAAA,CAAAA,KAAAA,MAAAG,MAAAA,GAAAA,CAGPsD,OAAAX,cAAAA,aAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAAA,oLACE,MAAA,EAAgB;YAAA,YAAC;YAAY,UAAA;YAC5B,UAAA,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAC,4LAAA,EAAe;gBAAA,OAAC;gBACd9C,UAAAA,MAAKG,MAAAA,CAAAC,GAAAA,CAAAsD,CAAAA,UACH,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,oLAAA,MAAA,EAAA;wBACK,IAAA,GAAGrD,QAAKE,IAAA,CAAA,IAAA,CAAA;wBACG,iBAAGF,GAAAA,QAAKE,IAAA,CAAA,MAAA,CAAA;wBAEhB,OAAAF,QAAKkB,KAAAA,+IAAUoC,UAAAA,EAAUtD,QAAKE,IAAK;wBAChC,UAAAF,QAAKC,QAAAA;wBACN,SAAA,MAAA;4BACH,KAAA;gCAAAV,MAAQ;gCAAcW,MAAQF,QAAKE,IAAAA;4BAAAA,CAAM;wBAAA;oBAAA,GAJ1CF,QAAKE,IAAAA,CAOb;YACH,CAAA;QAAA,CACF,IACM,MAAAQ,CAAAA,CAAAA,GAAAA,GAAA+B,aAAA/B,CAAAA,CAAA,EAAA,CAAA,GAAAf,MAAAG,MAAAA,EAAAY,CAAAA,CAAAA,GAAAA,GAAA0C,IAAAA,IAAAA,OAAA1C,CAAAA,CAAA,EAAA,CAAA,EAAAA,CAAAA,CAAAmC,EAAAA,CAAAA,KAAAA,QAAAnC,CAAAA,CAAAA,GAAAA,KAAAuC,QAAAvC,CAAAA,CAAA,EAAA,CAAA,KAAA0C,OAAAA,CA1DVnB,KAAC,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,OAAA,oLAAA,MAAA,EAAA;YACMY,GAAAA,IAAAA;YAQJI,UAAAA;gBAAAA;gBAgCAG;aAAAA;QAkBH,CAAA,GAAM1C,CAAAA,CAAAA,GAAAA,GAAAmC,MAAAnC,CAAAA,CAAAA,GAAAA,GAAAuC,MAAAvC,CAAAA,CAAAA,GAAAA,GAAA0C,MAAA1C,CAAAA,CAAAA,GAAAA,GAAAuB,EAAAA,IAAAA,KAAAvB,CAAAA,CAAA,EAAA,CAAA,EAGLgB,sLAAA6B,OAAAA,EAAa1B,KAAA,GACXC,KAAAK,oBAAmB/C,MAAAA,KAAAA,IAClB,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,oLAAC,MAAA,EAAa;YAAA,SAAA;YACZ,UAAC,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,oLAAA,OAAA,EAAA;gBAAK,OAAI,CAAA;gBAAQ,MAAA;gBACfqB,UAAKQ,MAAAA,MAAAA,CAAQ,+BAA+B,CAAA;YAC/C,CAAA;QAAA,CACF,IACGoB,eAAsBA,aAAYnC,IAAAA,KAAU,SAC9C,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,oLAAA,OAAA,EAAA;YAAc,UAAA;YAAa,MAAC;YAAO,KAAC;YAASI,OAAAA;YAC3C6B,UAAAA,oBAAmBpC,GAAAA,CAAAf,CAClB,aAAA,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAC,cAEO;oBAAA,MAAA4B,YAAY7B,kBAAkBC,UAAU,IAACM,KAAAA;oBACtC,SAAA,MAAA;wBACPmB,MAAK+C,QAAAA,CAAUxE,UAAU;oBAAA;oBAEV,iBAAAqD,aAAYoB,eAAAA,GAAmBzE,WAAUkB,IAAA;oBAC9ClB;gBAAAA,GANPA,WAAUkB,IAMO,CAEzB;QACH,CAAA,IAEC,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,oLAAA,QAAA,EAAA;YAAY,MAAA;YAAU,OAAC;YACrBiC,UAAmBpC,oBAAAA,GAAAA,CAAA2D,CAAAA,eACjB,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,oLAAA,WAAA,EAAA;oBAEO,MAAA9C,YAAY7B,kBAAkBC,YAAU,IAACM,KAAAA;oBACtC,SAAA,MAAA;wBACPmB,MAAK+C,QAAAA,CAAUxE,YAAU;oBAAA;oBAErB,MAAAA,aAAUkC,KAAAA,+IAAUoC,UAAAA,EAAUtE,aAAUkB,IAAK;gBAL9ClB,GAAAA,aAAUkB,IAAAA,CAOlB;QAAA,CACH,IA1ByBmC,MA2B1B3B,CAAAA,CAAAA,GAAAA,GAAAD,OAAAC,CAAAA,CAAAA,GAAAA,GAAAG,YAAAH,CAAAA,CAAAA,GAAAA,GAAAE,WAAAF,CAAAA,CAAA,EAAA,CAAA,GAAAf,MAAAG,MAAAA,EAAAY,CAAAA,CAAA,EAAA,CAAA,GAAAf,MAAAE,KAAAA,EAAAa,CAAAA,CAAA,EAAA,CAAA,GAAAf,MAAAQ,KAAAA,EAAAO,CAAAA,CAAAA,GAAAA,GAAAgB,IAAAhB,CAAAA,CAAAA,GAAAA,GAAAiB,IAAAjB,CAAAA,CAAAA,GAAAA,GAAAkB,IAAAlB,CAAAA,CAAAA,GAAAA,GAAAmB,IAAAnB,CAAAA,CAAAA,GAAAA,GAAAoB,IAAApB,CAAAA,CAAAA,GAAAA,GAAAqB,IAAArB,CAAAA,CAAAA,GAAAA,GAAAsB,IAAAtB,CAAAA,CAAAA,GAAAA,GAAAuB,IAAAvB,CAAAA,CAAAA,GAAAA,GAAAwB;IAAA,OAAAR,KAAAhB,CAAAA,CAAA,EAAA,CAAA,EAAAiB,KAAAjB,CAAAA,CAAA,EAAA,CAAA,EAAAkB,KAAAlB,CAAAA,CAAA,EAAA,CAAA,EAAAmB,KAAAnB,CAAAA,CAAA,EAAA,CAAA,EAAAoB,KAAApB,CAAAA,CAAA,EAAA,CAAA,EAAAqB,KAAArB,CAAAA,CAAA,EAAA,CAAA,EAAAsB,KAAAtB,CAAAA,CAAA,EAAA,CAAA,EAAAuB,KAAAvB,CAAAA,CAAA,EAAA,CAAA,EAAAwB,KAAAxB,CAAAA,CAAA,EAAA,CAAA;IAAAmC,IAAAA;IAAAnC,CAAAA,CAAAgB,EAAAA,CAAAA,KAAAA,MAAAhB,CAAAA,CAAAA,GAAAA,KAAAmB,MAAAnB,CAAAA,CAAA,EAAA,CAAA,KAAAoB,KAAAA,CAlCHe,MAAC,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,IAAA;QAAa,SAAAhB;QACXC,UAAAA;IAkCH,CAAA,GAAMpB,CAAAA,CAAAA,GAAAA,GAAAgB,IAAAhB,CAAAA,CAAAA,GAAAA,GAAAmB,IAAAnB,CAAAA,CAAAA,GAAAA,GAAAoB,IAAApB,CAAAA,CAAAA,GAAAA,GAAAmC,GAAAA,IAAAA,MAAAnC,CAAAA,CAAA,EAAA,CAAA;IAAAuC,IAAAA;IAAAvC,CAAAA,CAAAiB,EAAAA,CAAAA,KAAAA,MAAAjB,CAAAA,CAAA,EAAA,CAAA,KAAAmC,OAAAnC,CAAAA,CAAAqB,EAAAA,CAAAA,KAAAA,MAAArB,CAAAA,CAAA,EAAA,CAAA,KAAAsB,MAAAtB,CAAAA,CAAAA,GAAAA,KAAAuB,KAAAA,CAlGRgB,MAAA,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,OAAA,EAAC,IAAe;QAAA,WAAAlB;QAAgB,QAAAC;QAC9BC,UAAAA;YAAAA;YA8DAY;SAoCF;IAAA,CAAA,GAAOnC,CAAAA,CAAAA,GAAAA,GAAAiB,IAAAjB,CAAAA,CAAAA,GAAAA,GAAAmC,KAAAnC,CAAAA,CAAAA,GAAAA,GAAAqB,IAAArB,CAAAA,CAAAA,GAAAA,GAAAsB,IAAAtB,CAAAA,CAAAA,GAAAA,GAAAuB,IAAAvB,CAAAA,CAAAA,GAAAA,GAAAuC,GAAAA,IAAAA,MAAAvC,CAAAA,CAAA,EAAA,CAAA;IAAA0C,IAAAA;IAAA,OAAA1C,CAAAA,CAAAkB,EAAAA,CAAAA,KAAAA,MAAAlB,CAAAA,CAAAA,GAAAA,KAAAuC,OAAAvC,CAAAA,CAAA,EAAA,CAAA,KAAAwB,KAAAA,CApGTkB,MAAAA,aAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAAA,EAAC,IAAc;QAAA,SAAAlB;QACbe,UAoGF;IAAA,CAAA,GAAOvC,CAAAA,CAAAA,GAAAA,GAAAkB,IAAAlB,CAAAA,CAAAA,GAAAA,GAAAuC,KAAAvC,CAAAA,CAAAA,GAAAA,GAAAwB,IAAAxB,CAAAA,CAAAA,GAAAA,GAAA0C,GAAAA,IAAAA,MAAA1C,CAAAA,CAAA,EAAA,CAAA,EArGP0C;AAqGO;AAnIJ,SAAAb,OAAAoB,MAAAA,EAAA;IAAA,OAwB2CvD,OAAIH,QAAAA;AAAA;AAxB/C,SAAAqB,OAAAlB,IAAAA,EAAAwD,KAAAA,EAAA;IAAA,OAAA;QAAA,GAmBExD,IAAAA;QAAIH,UACG2D,UAAK;IAAM;AAAA;AApBpB,SAAAzC,MAAAnB,KAAAA,EAAA;IAAA,OAAA;QAAA,GAeuCA,KAAAA;QAAKC,UAAA,CAAA;IAAA;AAAA;AAwHnD,MAAM4D,iBAAoE;IACxEC,4JAAMC,cAAAA;IACNC,4JAAMC,YAAAA;AACR,GAEMC,oBAAqF;IACzFJ,MAAM;IACNE,MAAM;AACR;AAWA,SAAAG,WAAA1D,KAAAA,EAAA;IAAAC,MAAAA,wKAAAC,KAAAA,EAAA,EAAA,GACEyD,YAAkB3D,MAAKN,KAAAA,CAAAkE,SAAAA,CAAAC,MAAwC,GAC/DC,WAAiB9D,MAAKN,KAAAA,CAAOiE,YAAS,CAAI,CAAA,IAAK3D,MAAKN,KAAAA,CAAS,CAAA,CAAA,EAIhCa,KAAAP,MAAKQ,MAAAA,CAAAiD,iBAAAA,CAA0BK,SAAQrE,IAAA,CAAA,CAAA;IAAOkB,IAAAA;IAAAV,CAAAA,CAAAA,EAAAA,KAAAM,KAAAA,CAA9DI,KAAC,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,oLAAA,OAAA,EAAA;QAAW,MAAA;QAAIJ,UAAAA;IAAAA,CAA+C,GAAON,CAAAA,CAAAA,EAAAA,GAAAM,IAAAN,CAAAA,CAAAA,EAAAA,GAAAU,EAAAA,IAAAA,KAAAV,CAAAA,CAAA,CAAA,CAAA;IAMvEW,MAAAA,KAAAwC,cAAAA,CAAeU,SAAQrE,IAAA,CAAA;IAAMqB,IAAAA;IAAAb,CAAAA,CAAAA,EAAAA,KAAA6D,SAAArE,IAAAA,IAAAQ,CAAAA,CAAAA,EAAAA,KAAAD,QAAAA,CAC1Bc,KAAAA,MAAA;QACFiD,MAAAA,QAAAA,CAAUD,SAAQrE,IAAK;IAAA,GAC7BQ,CAAAA,CAAA,CAAA,CAAA,GAAA6D,SAAArE,IAAAA,EAAAQ,CAAAA,CAAAA,EAAAA,GAAAD,OAAAC,CAAAA,CAAAA,EAAAA,GAAAa,EAAAA,IAAAA,KAAAb,CAAAA,CAAA,CAAA,CAAA;IAAAmB,IAAAA;IAAAnB,CAAAA,CAAAW,CAAAA,CAAAA,KAAAA,MAAAX,CAAAA,CAAAA,EAAAA,KAAAa,KAAAA,CALHM,KAAC,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,2LAAA,EAAA;QACM,MAAA;QACC,MAAAR;QACG,SAAAE;IAGT,CAAA,GAAAb,CAAAA,CAAAA,EAAAA,GAAAW,IAAAX,CAAAA,CAAAA,EAAAA,GAAAa,IAAAb,CAAAA,CAAAA,EAAAA,GAAAmB,EAAAA,IAAAA,KAAAnB,CAAAA,CAAA,CAAA,CAAA;IAAAoB,IAAAA;IAAA,OAAApB,CAAAA,CAAAU,CAAAA,CAAAA,KAAAA,MAAAV,CAAAA,CAAAA,EAAAA,KAAAmB,KAAAA,CAXJC,KAAAA,aAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAAA,oLAAC,UAAA,EACU;QAAA,SAAAV;QACC,WAAA;QACV,QAAA,CAAA;QAEAS,UAOF;IAAA,CAAA,GAAUnB,CAAAA,CAAAA,EAAAA,GAAAU,IAAAV,CAAAA,CAAAA,EAAAA,GAAAmB,IAAAnB,CAAAA,CAAAA,GAAAA,GAAAoB,EAAAA,IAAAA,KAAApB,CAAAA,CAAA,EAAA,CAAA,EAZVoB;AAYU;AAjBd,SAAAwC,OAAAlE,IAAAA,EAAA;IAAA,OACoDA,KAAIH,QAAAA;AAAA;AA+BxD,SAAAwE,aAAAhE,KAAAA,EAAA;IAAA,MAAAC,QAAAC,qKAAAA,EAAA,EAAA,GACE,CAAA+D,cAAAC,eAAA,CAAA,qKAAwCC,WAAAA,EAAAA,CAAAA,CAAc,GACtDC,OAAapE,MAAKpB,IAAAA;IAAK2B,IAAAA;IAAAN,CAAAA,CAAA,CAAA,CAAA,KAAAoE,OAAAC,GAAAA,CAAA,2BAAA,IAAA,CAG2C/D,KAAA;QAAAgE,UAAW;IAAA,GAAStE,CAAAA,CAAAA,EAAAA,GAAAM,EAAAA,IAAAA,KAAAN,CAAAA,CAAA,CAAA,CAAA;IAAAU,IAAAA;IAAAV,CAAAA,CAAA,CAAA,CAAA,KAAAoE,OAAAC,GAAAA,CAAA,2BAAA,IAAA,CAIvE3D,KAAA;QAAA6D,iBACY;QAA4BjC,eAC9B;QAAOkC,UACZ;IAAA,GACXxE,CAAAA,CAAAA,EAAAA,GAAAU,EAAAA,IAAAA,KAAAV,CAAAA,CAAA,CAAA,CAAA;IAAAW,IAAAA;IAAAX,CAAAA,CAAAA,EAAAA,KAAAmE,OAAAA,CAEAxD,iJAAA8D,qBAAAA,EAAmBN,IAAI,IACtB,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,oLAAC,OAAA,EACO;QAAA,OAAA;QACE,SAAA;QACD,OAAA;YAAAK,UACK;YAAUE,KAAA;YAAAC,MAAA;YAAAC,OAGb;YAAMC,QACL;QAAM;QAGhB,UAAA,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,oLAAC,OAAA,EAAW;YAAA,MAAC;YACX,UAAC,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,MAAA,CAAA;QAAA,CACH;IACF,CAAA,IACM,MAAA7E,CAAAA,CAAAA,EAAAA,GAAAmE,MAAAnE,CAAAA,CAAAA,EAAAA,GAAAW,EAAAA,IAAAA,KAAAX,CAAAA,CAAA,CAAA,CAAA;IAAAa,IAAAA;IAAAb,CAAAA,CAAAA,EAAAA,KAAAgE,gBAAAhE,CAAAA,CAAAD,CAAAA,CAAAA,KAAAA,MAAAgD,eAAAA,GAAAA,CACPlC,KAAAA,CAACd,MAAKgD,eAAAA,IAAoBiB,eAAAA,OACzB,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAYE,OAAA;QAXK,KAAAjE,MAAKgD,eAAAA;QACH,OAAA;YAAA+B,WACM;YAASF,OACb;YAAMC,QACL;YAAML,UACJ;YAAUO,OAAA;QAAA;QAGb,SAAA,MAAA;YACPd,gBAAAA,CAAAA,CAAoB;QAAA;IAGzB,CAAA,GAAAjE,CAAAA,CAAAA,EAAAA,GAAAgE,cAAAhE,CAAAA,CAAA,CAAA,CAAA,GAAAD,MAAAgD,eAAAA,EAAA/C,CAAAA,CAAAA,EAAAA,GAAAa,EAAAA,IAAAA,KAAAb,CAAAA,CAAA,CAAA,CAAA;IAAAmB,IAAAA;IAAAnB,CAAAA,CAAA,CAAA,CAAA,KAAAoE,OAAAC,GAAAA,CAAA,2BAAA,IAAA,CAEDlD,KAAA,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,OAAA;QACS,OAAA;YAAAqD,UACK;YAAUE,KAAA;YAAAC,MAAA;YAAAC,OAGb;YAAMC,QACL;YAAMG,WACH;YAAwCC,SAAA;QAAA;IAGrD,CAAA,GAAAjF,CAAAA,CAAAA,EAAAA,GAAAmB,EAAAA,IAAAA,KAAAnB,CAAAA,CAAA,CAAA,CAAA;IAAAoB,IAAAA;IAAApB,CAAAA,CAAAW,CAAAA,CAAAA,KAAAA,MAAAX,CAAAA,CAAAA,EAAAA,KAAAa,KAAAA,CAnDJO,KAAC,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,OAAA,oLAAA,MAAA,EAAA;QACM,MAAA;QACE,OAAAV;QAMNC,UAAAA;YAAAA;YAiBAE;YAgBDM;SAAAA;IAWF,CAAA,GAAMnB,CAAAA,CAAAA,EAAAA,GAAAW,IAAAX,CAAAA,CAAAA,EAAAA,GAAAa,IAAAb,CAAAA,CAAAA,GAAAA,GAAAoB,EAAAA,IAAAA,KAAApB,CAAAA,CAAA,EAAA,CAAA;IAGD,MAAAqB,KAAAtB,MAAKzB,UAAAA,CAAAkC,KAAAA,IAAqBT,MAAKzB,UAAAA,CAAAkB,IAAAA;IAAgB8B,IAAAA;IAAAtB,CAAAA,CAAAA,GAAAA,KAAAqB,KAAAA,CAFpDC,KAAC,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,mLAAA,OAAA,EAAU;QAAA,MAAA;QAAY,SAAA;QACrB,UAAA,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,oLAAC,OAAA,EAAA;YAAW,MAAA;YAAU,QAAA;YACnBD,UACH;QAAA,CAAA;IACF,CAAA,GAAMrB,CAAAA,CAAAA,GAAAA,GAAAqB,IAAArB,CAAAA,CAAAA,GAAAA,GAAAsB,EAAAA,IAAAA,KAAAtB,CAAAA,CAAA,EAAA,CAAA;IAAAuB,IAAAA;IAAAvB,CAAAA,CAAAoB,EAAAA,CAAAA,KAAAA,MAAApB,CAAAA,CAAAA,GAAAA,KAAAsB,KAAAA,CA1DRC,KAAA,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,OAAA,oLAAC,OAAA,EAAA;QAAe,WAAA;QAAc,KAAC;QAAW,SAAA;QACxCH,UAAAA;YAAAA;YAqDAE;SAAAA;IAKF,CAAA,GAAOtB,CAAAA,CAAAA,GAAAA,GAAAoB,IAAApB,CAAAA,CAAAA,GAAAA,GAAAsB,IAAAtB,CAAAA,CAAAA,GAAAA,GAAAuB,EAAAA,IAAAA,KAAAvB,CAAAA,CAAA,EAAA,CAAA;IAAAwB,IAAAA;IAAA,OAAAxB,CAAAA,CAAAA,GAAAA,KAAAD,MAAAmF,OAAAA,IAAAlF,CAAAA,CAAAA,GAAAA,KAAAuB,KAAAA,CA5DTC,KAAAA,aAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAAA,oLAAC,WAAA,EAAkB;QAAA,SAAA;QAAW,QAAA;QAAY,SAAAzB,MAAKmF,OAAAA;QAAiB,OAAA5E;QAC9DiB,UAAAA;IAAAA,CA4DF,GAAWvB,CAAAA,CAAA,EAAA,CAAA,GAAAD,MAAAmF,OAAAA,EAAAlF,CAAAA,CAAAA,GAAAA,GAAAuB,IAAAvB,CAAAA,CAAAA,GAAAA,GAAAwB,EAAAA,IAAAA,KAAAxB,CAAAA,CAAA,EAAA,CAAA,EA7DXwB;AA6DW;AAIf,SAASE,kBACPrB,WAAAA,EACAlB,KAAAA,EACAC,MAAAA,EACA;IACOiB,OAAAA,YAAYD,MAAAA,CAChB9B,CAAAA,aAAe6G,kBAAkB7G,YAAYc,MAAM,KAAKgG,kBAAkB9G,YAAYa,KAAK,CAC9F;AACF;AAEA,SAASiG,kBAAkB9G,UAAAA,EAAwBa,KAAAA,EAAe;IAChE,MAAMkG,iBAAiBlG,MAAMmG,IAAAA,CAAK,EAAEC,WAAAA,CAAY;IAEhD,OAAOjH,WAAWkC,KAAAA,GACdlC,WAAWkC,KAAAA,EAAO+E,YAAY,EAAEC,SAASH,cAAc,IACvD/G,WAAWkB,IAAAA,CAAKgG,QAAAA,CAASH,cAAc;AAC7C;AAEA,SAASF,kBAAkB7G,UAAAA,EAAwBc,MAAAA,EAAgC;IACjF,MAAMqG,gBAAgBrG,OAAOwC,IAAAA,CAAMtC,CAAAA,QAAUA,MAAMC,QAAQ;IAEpDkG,OAAAA,gBACHA,cAAcjG,IAAAA,KAASG,uBACrB,CAAA,IACA8F,cAAcC,EAAAA,EAAIF,SAASlH,WAAWkB,IAAI,IAC5C,CAAA;AACN","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 9235, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-patch/src/paths.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-patch/src/diffError.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-patch/src/validate.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff-patch/src/diffPatch.ts"],"sourcesContent":["import type {KeyedSanityObject} from './diffPatch.js'\n\nconst IS_DOTTABLE_RE = /^[A-Za-z_][A-Za-z0-9_]*$/\n\n/**\n * A segment of a path\n *\n * @public\n */\nexport type PathSegment =\n  | string // Property\n  | number // Array index\n  | {_key: string} // Array `_key` lookup\n  | [number | '', number | ''] // From/to array index\n\n/**\n * An array of path segments representing a path in a document\n *\n * @public\n */\nexport type Path = PathSegment[]\n\n/**\n * Converts an array path to a string path\n *\n * @param path - The array path to convert\n * @returns A stringified path\n * @internal\n */\nexport function pathToString(path: Path): string {\n  return path.reduce((target: string, segment: PathSegment, i: number) => {\n    if (Array.isArray(segment)) {\n      return `${target}[${segment.join(':')}]`\n    }\n\n    if (isKeyedObject(segment)) {\n      return `${target}[_key==\"${segment._key}\"]`\n    }\n\n    if (typeof segment === 'number') {\n      return `${target}[${segment}]`\n    }\n\n    if (typeof segment === 'string' && !IS_DOTTABLE_RE.test(segment)) {\n      return `${target}['${segment}']`\n    }\n\n    if (typeof segment === 'string') {\n      const separator = i === 0 ? '' : '.'\n      return `${target}${separator}${segment}`\n    }\n\n    throw new Error(`Unsupported path segment \"${segment}\"`)\n  }, '')\n}\n\nfunction isKeyedObject(obj: any): obj is KeyedSanityObject {\n  return typeof obj === 'object' && typeof obj._key === 'string'\n}\n","import {type Path, pathToString} from './paths.js'\n\n/**\n * Represents an error that occurred during a diff process.\n * Contains `path`, `value` and `serializedPath` properties,\n * which is helpful for debugging and showing friendly messages.\n *\n * @public\n */\nexport class DiffError extends Error {\n  public path: Path\n  public value: unknown\n  public serializedPath: string\n\n  constructor(message: string, path: Path, value?: unknown) {\n    const serializedPath = pathToString(path)\n    super(`${message} (at '${serializedPath}')`)\n\n    this.path = path\n    this.serializedPath = serializedPath\n    this.value = value\n  }\n}\n","import {DiffError} from './diffError.js'\nimport type {Path} from './paths.js'\n\nconst idPattern = /^[a-z0-9][a-z0-9_.-]+$/i\nconst propPattern = /^[a-zA-Z_][a-zA-Z0-9_-]*$/\nconst propStartPattern = /^[a-z_]/i\n\n/**\n * Validate the given document/subtree for Sanity compatibility\n *\n * @param item - The document or subtree to validate\n * @param path - The path to the current item, for error reporting\n * @returns True if valid, throws otherwise\n * @internal\n */\nexport function validateDocument(item: unknown, path: Path = []): boolean {\n  if (Array.isArray(item)) {\n    return item.every((child, i) => {\n      if (Array.isArray(child)) {\n        throw new DiffError('Multi-dimensional arrays not supported', path.concat(i))\n      }\n\n      return validateDocument(child, path.concat(i))\n    })\n  }\n\n  if (typeof item === 'object' && item !== null) {\n    const obj = item as {[key: string]: any}\n    return Object.keys(obj).every(\n      (key) =>\n        validateProperty(key, obj[key], path) && validateDocument(obj[key], path.concat(key)),\n    )\n  }\n\n  return true\n}\n\n/**\n * Validate a property for Sanity compatibility\n *\n * @param property - The property to valide\n * @param value - The value of the property\n * @param path - The path of the property, for error reporting\n * @returns The property name, if valid\n * @internal\n */\nexport function validateProperty(property: string, value: unknown, path: Path): string {\n  if (!propStartPattern.test(property)) {\n    throw new DiffError('Keys must start with a letter (a-z)', path.concat(property), value)\n  }\n\n  if (!propPattern.test(property)) {\n    throw new DiffError(\n      'Keys can only contain letters, numbers and underscores',\n      path.concat(property),\n      value,\n    )\n  }\n\n  if (property === '_key' || property === '_ref' || property === '_type') {\n    if (typeof value !== 'string') {\n      throw new DiffError('Keys must be strings', path.concat(property), value)\n    }\n\n    if (!idPattern.test(value)) {\n      throw new DiffError('Invalid key - use less exotic characters', path.concat(property), value)\n    }\n  }\n\n  return property\n}\n","import {cleanupEfficiency, makeDiff, makePatches, stringifyPatches} from '@sanity/diff-match-patch'\nimport {DiffError} from './diffError.js'\nimport {type Path, pathToString} from './paths.js'\nimport {validateProperty} from './validate.js'\nimport {\n  type Patch,\n  type SetPatch,\n  type UnsetPatch,\n  type InsertAfterPatch,\n  type DiffMatchPatch,\n  type SanityInsertPatch,\n  type SanityPatch,\n  type SanitySetPatch,\n  type SanityUnsetPatch,\n  type SanityDiffMatchPatch,\n  type SanityPatchMutation,\n} from './patches.js'\n\nconst ignoredKeys = ['_id', '_type', '_createdAt', '_updatedAt', '_rev']\n\ntype PrimitiveValue = string | number | boolean | null | undefined\n\n/**\n * An object (record) that has a `_key` property\n *\n * @internal\n */\nexport interface KeyedSanityObject {\n  [key: string]: unknown\n  _key: string\n}\n\n/**\n * An object (record) that _may_ have a `_key` property\n *\n * @internal\n */\nexport type SanityObject = KeyedSanityObject | Partial<KeyedSanityObject>\n\n/**\n * Represents a partial Sanity document (eg a \"stub\").\n *\n * @public\n */\nexport interface DocumentStub {\n  _id?: string\n  _type?: string\n  _rev?: string\n  _createdAt?: string\n  _updatedAt?: string\n  [key: string]: unknown\n}\n\n/**\n * Options for the diff-match-patch algorithm.\n *\n * @public\n */\nexport interface DiffMatchPatchOptions {\n  /**\n   * Whether or not to use diff-match-patch at all\n   *\n   * @defaultValue `true`\n   */\n  enabled: boolean\n\n  /**\n   * Threshold at which to start using diff-match-patch instead of a regular `set` patch.\n   *\n   * @defaultValue `30`\n   */\n  lengthThresholdAbsolute: number\n\n  /**\n   * Only use generated diff-match-patch if the patch length is less than or equal to\n   * (targetString * relative). Example: A 100 character target with a relative factor\n   * of 1.2 will allow a 120 character diff-match-patch. If larger than this number,\n   * it will fall back to a regular `set` patch.\n   *\n   * @defaultValue `1.2`\n   */\n  lengthThresholdRelative: number\n}\n\n/**\n * Options for the patch generator\n *\n * @public\n */\nexport interface PatchOptions {\n  /**\n   * Document ID to apply the patch to.\n   *\n   * @defaultValue `undefined` - tries to extract `_id` from passed document\n   */\n  id?: string\n\n  /**\n   * Base path to apply the patch to - useful if diffing sub-branches of a document.\n   *\n   * @defaultValue `[]` - eg root of the document\n   */\n  basePath?: Path\n\n  /**\n   * Only apply the patch if the document revision matches this value.\n   * If the property is the boolean value `true`, it will attempt to extract\n   * the revision from the document `_rev` property.\n   *\n   * @defaultValue `undefined` (do not apply revision check)\n   */\n  ifRevisionID?: string | true\n\n  /**\n   * Whether or not to hide warnings during the diff process.\n   *\n   * @defaultValue `false`\n   */\n  hideWarnings?: boolean\n\n  /**\n   * Options for the diff-match-patch algorithm.\n   */\n  diffMatchPatch?: Partial<DiffMatchPatchOptions>\n}\n\n/**\n * Options for diff generation, where all DMP properties are required\n *\n * @public\n */\nexport type DiffOptions = PatchOptions & {diffMatchPatch: Required<DiffMatchPatchOptions>}\n\nconst defaultOptions = {\n  hideWarnings: false,\n  diffMatchPatch: {\n    enabled: true,\n\n    // Only use diff-match-patch if target string is longer than this threshold\n    lengthThresholdAbsolute: 30,\n\n    // Only use generated diff-match-patch if the patch length is less than or equal to\n    // (targetString * relative). Example: A 100 character target with a relative factor\n    // of 1.2 will allow a 120 character diff-match-patch. If larger than this number,\n    // it will fall back to a regular `set` patch.\n    lengthThresholdRelative: 1.2,\n  },\n} satisfies DiffOptions\n\n/**\n * Merges the default options with the passed in options.\n *\n * @param options - Options to merge with the defaults\n * @returns Merged options\n */\nfunction mergeOptions(options: PatchOptions): DiffOptions {\n  return {\n    ...defaultOptions,\n    ...options,\n    diffMatchPatch: {...defaultOptions.diffMatchPatch, ...(options.diffMatchPatch || {})},\n  }\n}\n\n/**\n * Generates an array of mutations for Sanity, based on the differences between\n * the two passed documents/trees.\n *\n * @param itemA - The first document/tree to compare\n * @param itemB - The second document/tree to compare\n * @param opts - Options for the diff generation\n * @returns Array of mutations\n * @public\n */\nexport function diffPatch(\n  itemA: DocumentStub,\n  itemB: DocumentStub,\n  opts?: PatchOptions,\n): SanityPatchMutation[] {\n  const options = mergeOptions(opts || {})\n  const id = options.id || (itemA._id === itemB._id && itemA._id)\n  const revisionLocked = options.ifRevisionID\n  const ifRevisionID = typeof revisionLocked === 'boolean' ? itemA._rev : revisionLocked\n  const basePath = options.basePath || []\n  if (!id) {\n    throw new Error(\n      '_id on itemA and itemB not present or differs, specify document id the mutations should be applied to',\n    )\n  }\n\n  if (revisionLocked === true && !ifRevisionID) {\n    throw new Error(\n      '`ifRevisionID` is set to `true`, but no `_rev` was passed in item A. Either explicitly set `ifRevisionID` to a revision, or pass `_rev` as part of item A.',\n    )\n  }\n\n  if (basePath.length === 0 && itemA._type !== itemB._type) {\n    throw new Error(`_type is immutable and cannot be changed (${itemA._type} => ${itemB._type})`)\n  }\n\n  const operations = diffItem(itemA, itemB, options, basePath, [])\n  return serializePatches(operations, {id, ifRevisionID: revisionLocked ? ifRevisionID : undefined})\n}\n\n/**\n * Diffs two items and returns an array of patches.\n * Note that this is different from `diffPatch`, which generates _mutations_.\n *\n * @param itemA - The first item to compare\n * @param itemB - The second item to compare\n * @param opts - Options for the diff generation\n * @param path - Path to the current item\n * @param patches - Array of patches to append the results to. Note that this is MUTATED.\n * @returns Array of patches\n * @public\n */\nexport function diffItem(\n  itemA: unknown,\n  itemB: unknown,\n  opts: DiffOptions = defaultOptions,\n  path: Path = [],\n  patches: Patch[] = [],\n): Patch[] {\n  if (itemA === itemB) {\n    return patches\n  }\n\n  const aType = Array.isArray(itemA) ? 'array' : typeof itemA\n  const bType = Array.isArray(itemB) ? 'array' : typeof itemB\n\n  const aIsUndefined = aType === 'undefined'\n  const bIsUndefined = bType === 'undefined'\n\n  if (aIsUndefined && !bIsUndefined) {\n    patches.push({op: 'set', path, value: itemB})\n    return patches\n  }\n\n  if (!aIsUndefined && bIsUndefined) {\n    patches.push({op: 'unset', path})\n    return patches\n  }\n\n  const options = mergeOptions(opts)\n  const dataType = aIsUndefined ? bType : aType\n  const isContainer = dataType === 'object' || dataType === 'array'\n  if (!isContainer) {\n    return diffPrimitive(itemA as PrimitiveValue, itemB as PrimitiveValue, options, path, patches)\n  }\n\n  if (aType !== bType) {\n    // Array => Object / Object => Array\n    patches.push({op: 'set', path, value: itemB})\n    return patches\n  }\n\n  return dataType === 'array'\n    ? diffArray(itemA as unknown[], itemB as unknown[], options, path, patches)\n    : diffObject(itemA as object, itemB as object, options, path, patches)\n}\n\nfunction diffObject(\n  itemA: SanityObject,\n  itemB: SanityObject,\n  options: DiffOptions,\n  path: Path,\n  patches: Patch[],\n) {\n  const atRoot = path.length === 0\n  const aKeys = Object.keys(itemA)\n    .filter(atRoot ? isNotIgnoredKey : yes)\n    .map((key) => validateProperty(key, itemA[key], path))\n\n  const aKeysLength = aKeys.length\n  const bKeys = Object.keys(itemB)\n    .filter(atRoot ? isNotIgnoredKey : yes)\n    .map((key) => validateProperty(key, itemB[key], path))\n\n  const bKeysLength = bKeys.length\n\n  // Check for deleted items\n  for (let i = 0; i < aKeysLength; i++) {\n    const key = aKeys[i]\n    if (!(key in itemB)) {\n      patches.push({op: 'unset', path: path.concat(key)})\n    }\n  }\n\n  // Check for changed items\n  for (let i = 0; i < bKeysLength; i++) {\n    const key = bKeys[i]\n    diffItem(itemA[key], itemB[key], options, path.concat([key]), patches)\n  }\n\n  return patches\n}\n\nfunction diffArray(\n  itemA: unknown[],\n  itemB: unknown[],\n  options: DiffOptions,\n  path: Path,\n  patches: Patch[],\n) {\n  // Check for new items\n  if (itemB.length > itemA.length) {\n    patches.push({\n      op: 'insert',\n      after: path.concat([-1]),\n      items: itemB.slice(itemA.length).map((item, i) => nullifyUndefined(item, path, i, options)),\n    })\n  }\n\n  // Check for deleted items\n  if (itemB.length < itemA.length) {\n    const isSingle = itemA.length - itemB.length === 1\n    const unsetItems = itemA.slice(itemB.length)\n\n    // If we're revision locked, we can safely unset ranges (eg 5:<end-of-array>).\n    // Also, if we don't have unique array keys, we can't use any better approach\n    // than array indexes. If we _do_ have unique array keys, we'll want to unset\n    // by key, as this is safer in a realtime, collaborative setting\n    if (isRevisionLocked(options) || !isUniquelyKeyed(unsetItems)) {\n      patches.push({\n        op: 'unset',\n        path: path.concat([isSingle ? itemB.length : [itemB.length, '']]),\n      })\n    } else {\n      patches.push(\n        ...unsetItems.map(\n          (item): UnsetPatch => ({op: 'unset', path: path.concat({_key: item._key})}),\n        ),\n      )\n    }\n  }\n\n  // Check for illegal array contents\n  for (let i = 0; i < itemB.length; i++) {\n    if (Array.isArray(itemB[i])) {\n      throw new DiffError('Multi-dimensional arrays not supported', path.concat(i), itemB[i])\n    }\n  }\n\n  const overlapping = Math.min(itemA.length, itemB.length)\n  const segmentA = itemA.slice(0, overlapping)\n  const segmentB = itemB.slice(0, overlapping)\n\n  return isUniquelyKeyed(segmentA) && isUniquelyKeyed(segmentB)\n    ? diffArrayByKey(segmentA, segmentB, options, path, patches)\n    : diffArrayByIndex(segmentA, segmentB, options, path, patches)\n}\n\nfunction diffArrayByIndex(\n  itemA: unknown[],\n  itemB: unknown[],\n  options: DiffOptions,\n  path: Path,\n  patches: Patch[],\n) {\n  for (let i = 0; i < itemA.length; i++) {\n    diffItem(\n      itemA[i],\n      nullifyUndefined(itemB[i], path, i, options),\n      options,\n      path.concat(i),\n      patches,\n    )\n  }\n\n  return patches\n}\n\nfunction diffArrayByKey(\n  itemA: KeyedSanityObject[],\n  itemB: KeyedSanityObject[],\n  options: DiffOptions,\n  path: Path,\n  patches: Patch[],\n) {\n  const keyedA = indexByKey(itemA)\n  const keyedB = indexByKey(itemB)\n\n  // There's a bunch of hard/semi-hard problems related to using keys\n  // Unless we have the exact same order, just use indexes for now\n  if (!arrayIsEqual(keyedA.keys, keyedB.keys)) {\n    return diffArrayByIndex(itemA, itemB, options, path, patches)\n  }\n\n  for (let i = 0; i < keyedB.keys.length; i++) {\n    const key = keyedB.keys[i]\n    const valueA = keyedA.index[key]\n    const valueB = nullifyUndefined(keyedB.index[key], path, i, options)\n    diffItem(valueA, valueB, options, path.concat({_key: key}), patches)\n  }\n\n  return patches\n}\n\nfunction getDiffMatchPatch(\n  itemA: PrimitiveValue,\n  itemB: PrimitiveValue,\n  options: DiffOptions,\n  path: Path,\n): DiffMatchPatch | undefined {\n  const {enabled, lengthThresholdRelative, lengthThresholdAbsolute} = options.diffMatchPatch\n  const segment = path[path.length - 1]\n  if (\n    !enabled ||\n    // Don't use for anything but strings\n    typeof itemA !== 'string' ||\n    typeof itemB !== 'string' ||\n    // Don't use for `_key`, `_ref` etc\n    (typeof segment === 'string' && segment[0] === '_') ||\n    // Don't use on short strings\n    itemB.length < lengthThresholdAbsolute\n  ) {\n    return undefined\n  }\n\n  let strPatch = ''\n  try {\n    const patch = makeDiff(itemA, itemB)\n    const diff = cleanupEfficiency(patch)\n    strPatch = stringifyPatches(makePatches(diff))\n  } catch (err) {\n    // Fall back to using regular set patch\n    return undefined\n  }\n\n  // Don't use patch if it's longer than allowed relative threshold.\n  // Allow a 120 character patch for a 100 character string,\n  // but don't allow a 800 character patch for a 500 character value.\n  return strPatch.length > itemB.length * lengthThresholdRelative\n    ? undefined\n    : {op: 'diffMatchPatch', path, value: strPatch}\n}\n\nfunction diffPrimitive(\n  itemA: PrimitiveValue,\n  itemB: PrimitiveValue,\n  options: DiffOptions,\n  path: Path,\n  patches: Patch[],\n): Patch[] {\n  const dmp = getDiffMatchPatch(itemA, itemB, options, path)\n\n  patches.push(\n    dmp || {\n      op: 'set',\n      path,\n      value: itemB,\n    },\n  )\n\n  return patches\n}\n\nfunction isNotIgnoredKey(key: string) {\n  return ignoredKeys.indexOf(key) === -1\n}\n\nfunction serializePatches(\n  patches: Patch[],\n  options: {id: string; ifRevisionID?: string},\n): SanityPatchMutation[] {\n  if (patches.length === 0) {\n    return []\n  }\n\n  const {id, ifRevisionID} = options\n  const set = patches.filter((patch): patch is SetPatch => patch.op === 'set')\n  const unset = patches.filter((patch): patch is UnsetPatch => patch.op === 'unset')\n  const insert = patches.filter((patch): patch is InsertAfterPatch => patch.op === 'insert')\n  const dmp = patches.filter((patch): patch is DiffMatchPatch => patch.op === 'diffMatchPatch')\n\n  const withSet =\n    set.length > 0 &&\n    set.reduce(\n      (patch: SanitySetPatch, item: SetPatch) => {\n        const path = pathToString(item.path)\n        patch.set[path] = item.value\n        return patch\n      },\n      {id, set: {}},\n    )\n\n  const withUnset =\n    unset.length > 0 &&\n    unset.reduce(\n      (patch: SanityUnsetPatch, item: UnsetPatch) => {\n        const path = pathToString(item.path)\n        patch.unset.push(path)\n        return patch\n      },\n      {id, unset: []},\n    )\n\n  const withInsert = insert.reduce((acc: SanityInsertPatch[], item: InsertAfterPatch) => {\n    const after = pathToString(item.after)\n    return acc.concat({id, insert: {after, items: item.items}})\n  }, [])\n\n  const withDmp =\n    dmp.length > 0 &&\n    dmp.reduce(\n      (patch: SanityDiffMatchPatch, item: DiffMatchPatch) => {\n        const path = pathToString(item.path)\n        patch.diffMatchPatch[path] = item.value\n        return patch\n      },\n      {id, diffMatchPatch: {}},\n    )\n\n  const patchSet: SanityPatch[] = [withUnset, withSet, withDmp, ...withInsert].filter(\n    (item): item is SanityPatch => item !== false,\n  )\n\n  return patchSet.map((patch, i) => ({\n    patch: ifRevisionID && i === 0 ? {...patch, ifRevisionID} : patch,\n  }))\n}\n\nfunction isUniquelyKeyed(arr: unknown[]): arr is KeyedSanityObject[] {\n  const keys = []\n\n  for (let i = 0; i < arr.length; i++) {\n    const key = getKey(arr[i])\n    if (!key || keys.indexOf(key) !== -1) {\n      return false\n    }\n\n    keys.push(key)\n  }\n\n  return true\n}\n\nfunction getKey(obj: unknown) {\n  return typeof obj === 'object' && obj !== null && (obj as KeyedSanityObject)._key\n}\n\nfunction indexByKey(arr: KeyedSanityObject[]) {\n  return arr.reduce(\n    (acc, item) => {\n      acc.keys.push(item._key)\n      acc.index[item._key] = item\n      return acc\n    },\n    {keys: [] as string[], index: {} as {[key: string]: KeyedSanityObject}},\n  )\n}\n\nfunction arrayIsEqual(itemA: unknown[], itemB: unknown[]) {\n  return itemA.length === itemB.length && itemA.every((item, i) => itemB[i] === item)\n}\n\nfunction nullifyUndefined(item: unknown, path: Path, index: number, options: PatchOptions) {\n  if (typeof item !== 'undefined') {\n    return item\n  }\n\n  if (!options.hideWarnings) {\n    const serializedPath = pathToString(path.concat(index))\n    console.warn(`undefined value in array converted to null (at '${serializedPath}')`)\n  }\n\n  return null\n}\n\nfunction isRevisionLocked(options: PatchOptions): boolean {\n  return Boolean(options.ifRevisionID)\n}\n\nfunction yes(_: unknown) {\n  return true\n}\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3],"debugId":null}},
    {"offset": {"line": 9509, "column": 0}, "map": {"version":3,"file":"index.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff/src/helpers.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff/src/calculate/lcs.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff/src/calculate/diffArray.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff/src/calculate/diffObject.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff/src/calculate/diffSimple.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff/src/calculate/diffString.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff/src/calculate/diffTypeChange.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff/src/calculate/diffInput.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff/src/inputWrappers/array.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff/src/inputWrappers/basic.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff/src/inputWrappers/object.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff/src/inputWrappers/string.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/diff/src/inputWrappers/index.ts"],"sourcesContent":["export function replaceProperty<P, V extends P[K], K extends keyof P>(\n  parent: P,\n  prop: K,\n  value: V,\n): V {\n  delete parent[prop]\n  parent[prop] = value\n  return value\n}\n","/*\n * Longest common subsequence implementation, for diffing arrays\n * Reference: http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n */\n\ntype NumberArray = number[]\ntype LengthMatrix = NumberArray[]\ntype Subsequence<E> = {\n  sequence: E[]\n  prevIndices: number[]\n  nextIndices: number[]\n}\n\nexport function getLongestCommonSubsequence<E>(previous: E[], next: E[]): Subsequence<E> {\n  const matrix = getLengthMatrix(previous, next)\n  const result = backtrack(matrix, previous, next)\n  return result\n}\n\nfunction getLengthMatrix<E>(previous: E[], next: E[]): LengthMatrix {\n  const len1 = previous.length\n  const len2 = next.length\n  let x = 0\n  let y = 0\n\n  // initialize empty matrix of len1+1 x len2+1\n  const matrix: LengthMatrix = new Array(len1 + 1)\n  for (x = 0; x < len1 + 1; x++) {\n    matrix[x] = [len2 + 1]\n    for (y = 0; y < len2 + 1; y++) {\n      matrix[x][y] = 0\n    }\n  }\n\n  // save sequence lengths for each coordinate\n  for (x = 1; x < len1 + 1; x++) {\n    for (y = 1; y < len2 + 1; y++) {\n      if (previous[x - 1] === next[y - 1]) {\n        matrix[x][y] = matrix[x - 1][y - 1] + 1\n      } else {\n        matrix[x][y] = Math.max(matrix[x - 1][y], matrix[x][y - 1])\n      }\n    }\n  }\n\n  return matrix\n}\n\nfunction backtrack<E>(matrix: LengthMatrix, previous: E[], next: E[]): Subsequence<E> {\n  let prevIndex = previous.length\n  let nextIndex = next.length\n  const subsequence: Subsequence<E> = {\n    sequence: [],\n    prevIndices: [],\n    nextIndices: [],\n  }\n\n  while (prevIndex !== 0 && nextIndex !== 0) {\n    const areEqual = previous[prevIndex - 1] === next[nextIndex - 1]\n    if (areEqual) {\n      subsequence.sequence.unshift(previous[prevIndex - 1])\n      subsequence.prevIndices.unshift(prevIndex - 1)\n      subsequence.nextIndices.unshift(nextIndex - 1)\n      --prevIndex\n      --nextIndex\n    } else {\n      const valueAtMatrixAbove = matrix[prevIndex][nextIndex - 1]\n      const valueAtMatrixLeft = matrix[prevIndex - 1][nextIndex]\n      if (valueAtMatrixAbove > valueAtMatrixLeft) {\n        --nextIndex\n      } else {\n        --prevIndex\n      }\n    }\n  }\n  return subsequence\n}\n","import {replaceProperty} from '../helpers'\nimport {type ArrayDiff, type ArrayInput, type DiffOptions, type ItemDiff} from '../types'\nimport {addedInput, diffInput, removedInput} from './diffInput'\nimport {getLongestCommonSubsequence} from './lcs'\n\nexport function diffArray<A>(\n  fromInput: ArrayInput<A>,\n  toInput: ArrayInput<A>,\n  options: DiffOptions,\n): ArrayDiff<A> {\n  if (fromInput === toInput) {\n    const fromValue = fromInput.value\n    const toValue = toInput.value\n\n    return {\n      type: 'array',\n      action: 'unchanged',\n      isChanged: false,\n      fromValue,\n      toValue,\n      get items(): ItemDiff<A>[] {\n        const items = diffExactByPosition(fromInput, toInput, options)\n        if (!items) throw new Error('invariant broken: equivalent input, but diff detected')\n        return replaceProperty(this, 'items', items)\n      },\n    }\n  }\n\n  // The key-ed approach should handle most cases (_key'ed objects, primitives):\n  const keyedA = indexByKey(fromInput)\n  const keyedB = indexByKey(toInput)\n\n  if (keyedA && keyedB) {\n    return diffArrayByKey(fromInput, keyedA, toInput, keyedB, options)\n  }\n\n  // Check if they are 100% equivalent:\n  const items = diffExactByPosition(fromInput, toInput, options)\n  if (items) return buildArrayDiff(fromInput, toInput, items, false)\n\n  // Otherwise we create a diff where we model it as removing the from-items and adding the to-items.\n  return diffArrayByReinsert(fromInput, toInput, options)\n}\n\nfunction buildArrayDiff<A>(\n  fromInput: ArrayInput<A>,\n  toInput: ArrayInput<A>,\n  items: ItemDiff<A>[],\n  isChanged: boolean,\n): ArrayDiff<A> {\n  const fromValue = fromInput.value\n  const toValue = toInput.value\n\n  return isChanged\n    ? {\n        type: 'array',\n        action: 'changed',\n        isChanged: true,\n        fromValue,\n        toValue,\n        items,\n        annotation: toInput.annotation,\n      }\n    : {\n        type: 'array',\n        action: 'unchanged',\n        isChanged: false,\n        fromValue,\n        toValue,\n        items,\n      }\n}\n\n/**\n * Diffes the two arrays by position. Returns an `items` array if they are unchanged, or undefined\n * if there are any changes anywhere.\n */\nfunction diffExactByPosition<A>(\n  fromInput: ArrayInput<A>,\n  toInput: ArrayInput<A>,\n  options: DiffOptions,\n): ItemDiff<A>[] | undefined {\n  if (fromInput.length !== toInput.length) {\n    return undefined\n  }\n\n  const items: ItemDiff<A>[] = []\n\n  for (let idx = 0; idx < fromInput.length; idx++) {\n    const diff = diffInput(fromInput.at(idx), toInput.at(idx), options)\n    if (diff.isChanged) {\n      return undefined\n    }\n\n    items.push({\n      fromIndex: idx,\n      toIndex: idx,\n      hasMoved: false,\n      diff,\n      annotation: toInput.annotationAt(idx),\n    })\n  }\n\n  return items\n}\n\nfunction diffArrayByReinsert<A>(\n  fromInput: ArrayInput<A>,\n  toInput: ArrayInput<A>,\n  options: DiffOptions,\n): ArrayDiff<A> {\n  const items: ItemDiff<A>[] = []\n\n  for (let idx = 0; idx < toInput.length; idx++) {\n    const input = toInput.at(idx)\n\n    items.push({\n      fromIndex: undefined,\n      toIndex: idx,\n      hasMoved: false,\n      diff: addedInput(input, undefined, options),\n      annotation: input.annotation,\n    })\n  }\n\n  for (let idx = 0; idx < fromInput.length; idx++) {\n    const input = fromInput.at(idx)\n\n    items.push({\n      fromIndex: idx,\n      toIndex: undefined,\n      hasMoved: false,\n      diff: removedInput(input, undefined, options),\n      annotation: input.annotation,\n    })\n  }\n\n  return buildArrayDiff(fromInput, toInput, items, true)\n}\n\ntype Key = string | number | boolean\n\n/**\n * Diff an array when all the elements have _key in the same position.\n */\nfunction diffArrayByKey<A>(\n  fromArray: ArrayInput<A>,\n  fromKeyIndex: KeyIndex,\n  toArray: ArrayInput<A>,\n  toKeyIndex: KeyIndex,\n  options: DiffOptions,\n): ArrayDiff<A> {\n  const items: ItemDiff<A>[] = []\n  let isChanged = false\n\n  function diffCommon(key: Key, fromIndex: number, toIndex: number, hasMoved: boolean) {\n    deletePositionInIndex(fromKeyIndex.index, key, fromIndex)\n    deletePositionInIndex(toKeyIndex.index, key, toIndex)\n\n    const fromInput = fromArray.at(fromIndex)\n    const toInput = toArray.at(toIndex)\n\n    const diff = diffInput(fromInput, toInput)\n    items.push({\n      fromIndex,\n      toIndex,\n      hasMoved,\n      diff,\n      annotation: toArray.annotationAt(toIndex),\n    })\n\n    if (diff.isChanged || fromIndex !== toIndex) {\n      isChanged = true\n    }\n  }\n\n  const lcs = getLongestCommonSubsequence(fromKeyIndex.keys, toKeyIndex.keys)\n\n  for (let fromIndex = 0; fromIndex < fromKeyIndex.keys.length; fromIndex++) {\n    const key = fromKeyIndex.keys[fromIndex]\n\n    const subsequenceIdx = lcs.prevIndices.indexOf(fromIndex)\n    if (subsequenceIdx !== -1) {\n      // Part of the common subsequence => hasMoved:false\n      diffCommon(key, fromIndex, lcs.nextIndices[subsequenceIdx], false)\n      continue\n    }\n\n    // Not a part of the subsequence. Try to find another item which has the same key\n    // and also is not part of the common subsequence.\n    const toIndexes = toKeyIndex.index.get(key)\n    const toIndex = toIndexes && toIndexes.find((idx) => !lcs.nextIndices.includes(idx))\n    if (toIndex !== undefined) {\n      diffCommon(key, fromIndex, toIndex, true)\n      continue\n    }\n\n    const input = fromArray.at(fromIndex)\n\n    items.push({\n      fromIndex,\n      toIndex: undefined,\n      hasMoved: false,\n      diff: removedInput(input, undefined, options),\n      annotation: fromArray.annotationAt(fromIndex),\n    })\n\n    isChanged = true\n  }\n\n  // The remaining data in toKeyIndex are the new elements which has been added\n  for (const positions of toKeyIndex.index.values()) {\n    for (const toIndex of positions) {\n      const input = toArray.at(toIndex)\n      items.push({\n        fromIndex: undefined,\n        toIndex,\n        hasMoved: false,\n        diff: addedInput(input, undefined, options),\n        annotation: toArray.annotationAt(toIndex),\n      })\n    }\n\n    isChanged = true\n  }\n\n  items.sort(compareItemDiff)\n\n  return buildArrayDiff(fromArray, toArray, items, isChanged)\n}\n\nfunction compareItemDiff<A>(a: ItemDiff<A>, b: ItemDiff<A>): number {\n  if (a.toIndex !== undefined && b.toIndex !== undefined) {\n    return a.toIndex - b.toIndex\n  }\n\n  if (a.fromIndex !== undefined && b.fromIndex !== undefined) {\n    return a.fromIndex - b.fromIndex\n  }\n\n  if (a.fromIndex !== undefined && b.toIndex !== undefined) {\n    // A was removed and B was added. Prefer to sort removals last.\n    return -1\n  }\n\n  if (a.toIndex !== undefined && b.fromIndex !== undefined) {\n    // A was added and B was removed. Prefer to sort removals last.\n    return 1\n  }\n\n  throw new Error('invalid item diff comparison')\n}\n\nfunction deletePositionInIndex(index: Map<Key, number[]>, key: Key, pos: number) {\n  const positions = index.get(key)!\n  deleteArrayValue(positions, pos)\n  if (positions.length === 0) {\n    index.delete(key)\n  }\n}\n\nfunction deleteArrayValue<E>(arr: E[], value: E) {\n  const idx = arr.indexOf(value)\n  if (idx === -1) throw new Error('value not found')\n  arr.splice(idx, 1)\n}\n\ntype KeyIndex = {\n  keys: Key[]\n  index: Map<Key, number[]>\n}\n\n/**\n * Indexes the array by a key. This handles cases where the items are:\n *\n * - Objects with _key\n * - Strings\n * - Numbers\n */\nfunction indexByKey<A>(arr: ArrayInput<A>): KeyIndex | undefined {\n  const index = new Map<Key, number[]>()\n  const keys: Key[] = []\n  const length = arr.length\n\n  for (let i = 0; i < length; i++) {\n    const item = arr.at(i)\n\n    let key: Key | null = null\n\n    switch (item.type) {\n      case 'string':\n        key = `s${item.value}`\n        break\n      case 'number':\n        key = item.value\n        break\n      case 'boolean':\n        key = item.value\n        break\n      case 'null':\n        key = 'n'\n        break\n      case 'object':\n        {\n          const keyField = item.get('_key')\n          if (keyField && keyField.type === 'string') {\n            key = `k${keyField.value}`\n\n            // We do not handle duplicate _key\n            if (index.has(key)) return undefined\n          }\n        }\n        break\n      default:\n    }\n\n    // No key => abort\n    if (key === null) return undefined\n\n    keys.push(key)\n    let positions = index.get(key)\n    if (!positions) {\n      positions = []\n      index.set(key, positions)\n    }\n    positions.push(i)\n  }\n\n  // All is good.\n  return {keys, index}\n}\n\nexport function removedArray<A>(\n  input: ArrayInput<A>,\n  toValue: null | undefined,\n  options: DiffOptions,\n): ArrayDiff<A> & {action: 'removed'} {\n  return {\n    type: 'array',\n    action: 'removed',\n    isChanged: true,\n    fromValue: input.value,\n    toValue,\n    annotation: input.annotation,\n\n    get items(): ArrayDiff<A>['items'] {\n      const items: ArrayDiff<A>['items'] = []\n      for (let i = 0; i < input.length; i++) {\n        const item = input.at(i)\n        items.push({\n          fromIndex: i,\n          toIndex: undefined,\n          hasMoved: false,\n          diff: removedInput(item, undefined, options),\n          annotation: input.annotationAt(i),\n        })\n      }\n\n      return replaceProperty(this, 'items', items)\n    },\n  }\n}\n\nexport function addedArray<A>(\n  input: ArrayInput<A>,\n  fromValue: null | undefined,\n  options: DiffOptions,\n): ArrayDiff<A> & {action: 'added'} {\n  return {\n    type: 'array',\n    action: 'added',\n    isChanged: true,\n    fromValue,\n    toValue: input.value,\n    annotation: input.annotation,\n\n    get items(): ArrayDiff<A>['items'] {\n      const items: ArrayDiff<A>['items'] = []\n      for (let i = 0; i < input.length; i++) {\n        const item = input.at(i)\n        items.push({\n          fromIndex: undefined,\n          toIndex: i,\n          hasMoved: false,\n          diff: addedInput(item, undefined, options),\n          annotation: input.annotationAt(i),\n        })\n      }\n\n      return replaceProperty(this, 'items', items)\n    },\n  }\n}\n","import {replaceProperty} from '../helpers'\nimport {type DiffOptions, type ObjectDiff, type ObjectInput} from '../types'\nimport {addedInput, diffInput, removedInput} from './diffInput'\n\nconst ignoredFields = new Set(['_id', '_type', '_createdAt', '_updatedAt', '_rev', '_weak'])\n\nexport function diffObject<A>(\n  fromInput: ObjectInput<A>,\n  toInput: ObjectInput<A>,\n  options: DiffOptions,\n): ObjectDiff<A> {\n  const fields: ObjectDiff<A>['fields'] = {}\n  let isChanged = false\n\n  for (const key of fromInput.keys) {\n    if (ignoredFields.has(key)) continue\n\n    const fromField = fromInput.get(key)!\n\n    const toField = toInput.get(key)\n    if (toField) {\n      const fieldDiff = diffInput(fromField, toField, options)\n      fields[key] = fieldDiff\n      if (fieldDiff.isChanged) isChanged = true\n    } else {\n      fields[key] = removedInput(fromField, undefined, options)\n      isChanged = true\n    }\n  }\n\n  for (const key of toInput.keys) {\n    if (ignoredFields.has(key)) continue\n\n    // Already handled above\n    if (fromInput.get(key)) continue\n\n    const toField = toInput.get(key)!\n    fields[key] = addedInput(toField, undefined, options)\n    isChanged = true\n  }\n\n  const fromValue = fromInput.value\n  const toValue = toInput.value\n\n  if (!isChanged) {\n    return {\n      type: 'object',\n      action: 'unchanged',\n      isChanged: false,\n      fromValue,\n      toValue,\n      fields,\n    }\n  }\n\n  return {\n    type: 'object',\n    action: 'changed',\n    isChanged: true,\n    fromValue,\n    toValue,\n    fields,\n    annotation: toInput.annotation,\n  }\n}\n\nexport function removedObject<A>(\n  input: ObjectInput<A>,\n  toValue: null | undefined,\n  options: DiffOptions,\n): ObjectDiff<A> & {action: 'removed'} {\n  return {\n    type: 'object',\n    action: 'removed',\n    isChanged: true,\n    fromValue: input.value,\n    toValue,\n    annotation: input.annotation,\n\n    get fields(): ObjectDiff<A>['fields'] {\n      const fields: ObjectDiff<A>['fields'] = {}\n      for (const key of input.keys) {\n        const value = input.get(key)!\n        fields[key] = removedInput(value, undefined, options)\n      }\n      return replaceProperty(this, 'fields', fields)\n    },\n  }\n}\n\nexport function addedObject<A>(\n  input: ObjectInput<A>,\n  fromValue: null | undefined,\n  options: DiffOptions,\n): ObjectDiff<A> & {action: 'added'} {\n  return {\n    type: 'object',\n    action: 'added',\n    isChanged: true,\n    fromValue,\n    toValue: input.value,\n    annotation: input.annotation,\n\n    get fields(): ObjectDiff<A>['fields'] {\n      const fields: ObjectDiff<A>['fields'] = {}\n      for (const key of input.keys) {\n        const value = input.get(key)!\n        fields[key] = addedInput(value, undefined, options)\n      }\n      return replaceProperty(this, 'fields', fields)\n    },\n  }\n}\n","import {\n  type BooleanDiff,\n  type BooleanInput,\n  type DiffOptions,\n  type NumberDiff,\n  type NumberInput,\n} from '../types'\n\nexport function diffNumber<A>(\n  fromInput: NumberInput<A>,\n  toInput: NumberInput<A>,\n  options: DiffOptions,\n): NumberDiff<A> {\n  const fromValue = fromInput.value\n  const toValue = toInput.value\n  const type = fromInput.type\n\n  if (fromValue === toValue)\n    return {\n      type,\n      action: 'unchanged',\n      fromValue,\n      toValue,\n      isChanged: false,\n    }\n\n  return {\n    type: fromInput.type,\n    action: 'changed',\n    isChanged: true,\n    fromValue: fromValue,\n    toValue: toValue,\n    annotation: toInput.annotation,\n  }\n}\n\nexport function diffBoolean<A>(\n  fromInput: BooleanInput<A>,\n  toInput: BooleanInput<A>,\n  options: DiffOptions,\n): BooleanDiff<A> {\n  const fromValue = fromInput.value\n  const toValue = toInput.value\n  const type = fromInput.type\n\n  if (fromValue === toValue)\n    return {\n      type,\n      action: 'unchanged',\n      fromValue,\n      toValue,\n      isChanged: false,\n    }\n\n  return {\n    type: fromInput.type,\n    action: 'changed',\n    isChanged: true,\n    fromValue: fromValue,\n    toValue: toValue,\n    annotation: toInput.annotation,\n  }\n}\n","import {\n  cleanupSemantic,\n  DIFF_DELETE,\n  DIFF_EQUAL,\n  DIFF_INSERT,\n  makeDiff,\n} from '@sanity/diff-match-patch'\n\nimport {replaceProperty} from '../helpers'\nimport {type DiffOptions, type StringDiff, type StringDiffSegment, type StringInput} from '../types'\n\nexport function diffString<A>(\n  fromInput: StringInput<A>,\n  toInput: StringInput<A>,\n  options: DiffOptions,\n): StringDiff<A> {\n  const fromValue = fromInput.value\n  const toValue = toInput.value\n\n  if (fromValue === toValue) {\n    return {\n      type: 'string',\n      action: 'unchanged',\n      isChanged: false,\n      fromValue,\n      toValue,\n      segments: [{type: 'stringSegment', action: 'unchanged', text: fromValue}],\n    }\n  }\n\n  return {\n    type: 'string',\n    action: 'changed',\n    isChanged: true,\n    fromValue,\n    toValue,\n    annotation: toInput.annotation,\n\n    // Compute and memoize string segments only when accessed\n    get segments(): StringDiffSegment<A>[] {\n      const segments = buildSegments(fromInput, toInput)\n      return replaceProperty(this, 'segments', segments)\n    },\n  }\n}\n\nfunction buildSegments<A>(\n  fromInput: StringInput<A>,\n  toInput: StringInput<A>,\n): StringDiffSegment<A>[] {\n  const segments: StringDiffSegment<A>[] = []\n  const dmpDiffs = cleanupSemantic(makeDiff(fromInput.value, toInput.value))\n\n  let fromIdx = 0\n  let toIdx = 0\n\n  for (const [op, text] of dmpDiffs) {\n    switch (op) {\n      case DIFF_EQUAL:\n        segments.push({type: 'stringSegment', action: 'unchanged', text})\n        fromIdx += text.length\n        toIdx += text.length\n        break\n      case DIFF_DELETE:\n        for (const segment of fromInput.sliceAnnotation(fromIdx, fromIdx + text.length)) {\n          segments.push({\n            type: 'stringSegment',\n            action: 'removed',\n            text: segment.text,\n            annotation: segment.annotation,\n          })\n        }\n        fromIdx += text.length\n        break\n      case DIFF_INSERT:\n        for (const segment of toInput.sliceAnnotation(toIdx, toIdx + text.length)) {\n          segments.push({\n            type: 'stringSegment',\n            action: 'added',\n            text: segment.text,\n            annotation: segment.annotation,\n          })\n        }\n        toIdx += text.length\n        break\n      default:\n        throw new Error(`Unhandled diff-match-patch operation \"${op}\"`)\n    }\n  }\n\n  return segments\n}\n\nexport function removedString<A>(\n  input: StringInput<A>,\n  toValue: null | undefined,\n  options: DiffOptions,\n): StringDiff<A> & {action: 'removed'} {\n  return {\n    type: 'string',\n    action: 'removed',\n    isChanged: true,\n    fromValue: input.value,\n    toValue,\n    annotation: input.annotation,\n\n    get segments(): StringDiffSegment<A>[] {\n      const segments: StringDiffSegment<A>[] = input\n        .sliceAnnotation(0, input.value.length)\n        .map((segment) => ({type: 'stringSegment', action: 'removed', ...segment}))\n\n      return replaceProperty(this, 'segments', segments)\n    },\n  }\n}\n\nexport function addedString<A>(\n  input: StringInput<A>,\n  fromValue: null | undefined,\n  options: DiffOptions,\n): StringDiff<A> & {action: 'added'} {\n  return {\n    type: 'string',\n    action: 'added',\n    isChanged: true,\n    fromValue,\n    toValue: input.value,\n    annotation: input.annotation,\n\n    get segments(): StringDiffSegment<A>[] {\n      const segments: StringDiffSegment<A>[] = input\n        .sliceAnnotation(0, input.value.length)\n        .map((segment) => ({type: 'stringSegment', action: 'added', ...segment}))\n\n      return replaceProperty(this, 'segments', segments)\n    },\n  }\n}\n","import {type DiffOptions, type Input, type TypeChangeDiff} from '../types'\nimport {addedInput, removedInput} from './diffInput'\n\nexport function diffTypeChange<A>(\n  fromInput: Input<A>,\n  toInput: Input<A>,\n  options: DiffOptions,\n): TypeChangeDiff<A> {\n  return {\n    type: 'typeChange',\n    action: 'changed',\n    isChanged: true,\n\n    fromType: fromInput.type,\n    fromValue: fromInput.value,\n    fromDiff: removedInput(fromInput, undefined, options),\n\n    toType: toInput.type,\n    toValue: toInput.value,\n    toDiff: addedInput(toInput, undefined, options),\n\n    annotation: toInput.annotation,\n  }\n}\n","import {\n  type ArrayInput,\n  type BooleanInput,\n  type Diff,\n  type DiffOptions,\n  type Input,\n  type NumberInput,\n  type ObjectInput,\n  type StringInput,\n} from '../types'\nimport {addedArray, diffArray, removedArray} from './diffArray'\nimport {addedObject, diffObject, removedObject} from './diffObject'\nimport {diffBoolean, diffNumber} from './diffSimple'\nimport {addedString, diffString, removedString} from './diffString'\nimport {diffTypeChange} from './diffTypeChange'\n\n/**\n * Takes a `from` and `to` input and calulates a diff between the two\n *\n * @param fromInput - The source (`from`) input - use {@link wrap | the wrap() method} to generate an \"input\"\n * @param toInput - The destination (`to`) input - use {@link wrap | the wrap() method} to generate an \"input\"\n * @param options - Options for the diffing process - currently no options are defined\n * @returns A diff object representing the change\n * @public\n */\nexport function diffInput<A>(\n  fromInput: Input<A>,\n  toInput: Input<A>,\n  options: DiffOptions = {},\n): Diff<A> {\n  if (fromInput.type !== toInput.type) {\n    if (fromInput.type === 'null') {\n      return addedInput(toInput, null, options)\n    }\n\n    if (toInput.type === 'null') {\n      return removedInput(fromInput, null, options)\n    }\n\n    return diffTypeChange(fromInput, toInput, options)\n  }\n\n  return diffWithType(fromInput.type, fromInput, toInput, options)\n}\n\nfunction diffWithType<A>(\n  type: Input<A>['type'],\n  fromInput: Input<A>,\n  toInput: Input<A>,\n  options: DiffOptions,\n): Diff<A> {\n  switch (type) {\n    case 'null':\n      return {\n        type: 'null',\n        action: 'unchanged',\n        isChanged: false,\n        toValue: null,\n        fromValue: null,\n      }\n    case 'boolean':\n      return diffBoolean(fromInput as BooleanInput<A>, toInput as BooleanInput<A>, options)\n    case 'number':\n      return diffNumber(fromInput as NumberInput<A>, toInput as NumberInput<A>, options)\n    case 'string':\n      return diffString(fromInput as StringInput<A>, toInput as StringInput<A>, options)\n    case 'array':\n      return diffArray(fromInput as ArrayInput<A>, toInput as ArrayInput<A>, options)\n    case 'object':\n      return diffObject(fromInput as ObjectInput<A>, toInput as ObjectInput<A>, options)\n    default:\n      throw new Error(`Unhandled diff type \"${type}\"`)\n  }\n}\n\nexport function removedInput<A>(\n  input: Input<A>,\n  toValue: null | undefined,\n  options: DiffOptions,\n): Diff<A> & {action: 'removed'} {\n  switch (input.type) {\n    case 'null':\n      return {\n        type: 'null',\n        action: 'removed',\n        isChanged: true,\n        fromValue: null,\n        toValue,\n        annotation: input.annotation,\n      }\n    case 'boolean':\n      return {\n        type: 'boolean',\n        action: 'removed',\n        isChanged: true,\n        fromValue: input.value,\n        toValue,\n        annotation: input.annotation,\n      }\n    case 'number':\n      return {\n        type: 'number',\n        action: 'removed',\n        isChanged: true,\n        fromValue: input.value,\n        toValue,\n        annotation: input.annotation,\n      }\n    case 'string':\n      return removedString(input, toValue, options)\n    case 'array':\n      return removedArray(input, toValue, options)\n    case 'object':\n      return removedObject(input, toValue, options)\n    default:\n      throw new Error('Unhandled diff type')\n  }\n}\n\nexport function addedInput<A>(\n  input: Input<A>,\n  fromValue: null | undefined,\n  options: DiffOptions,\n): Diff<A> & {action: 'added'} {\n  switch (input.type) {\n    case 'null':\n      return {\n        type: 'null',\n        action: 'added',\n        isChanged: true,\n        fromValue,\n        toValue: null,\n        annotation: input.annotation,\n      }\n    case 'boolean':\n      return {\n        type: 'boolean',\n        action: 'added',\n        isChanged: true,\n        fromValue,\n        toValue: input.value,\n        annotation: input.annotation,\n      }\n    case 'number':\n      return {\n        type: 'number',\n        action: 'added',\n        isChanged: true,\n        fromValue,\n        toValue: input.value,\n        annotation: input.annotation,\n      }\n    case 'string':\n      return addedString(input, fromValue, options)\n    case 'array':\n      return addedArray(input, fromValue, options)\n    case 'object':\n      return addedObject(input, fromValue, options)\n    default:\n      throw new Error('Unhandled diff type')\n  }\n}\n","import {type ArrayInput, type Input} from '../types'\nimport {wrap} from './index'\n\nexport default class ArrayWrapper<A> implements ArrayInput<A> {\n  type = 'array' as const\n  length: number\n  value: unknown[]\n  annotation: A\n\n  private elements: Input<A>[] = []\n\n  constructor(value: unknown[], annotation: A) {\n    this.annotation = annotation\n    this.value = value\n    this.length = value.length\n  }\n\n  at(idx: number): Input<A> {\n    if (idx >= this.length) throw new Error('out of bounds')\n    const input = this.elements[idx]\n    if (input) {\n      return input\n    }\n\n    return (this.elements[idx] = wrap(this.value[idx], this.annotation))\n  }\n\n  annotationAt(): A {\n    return this.annotation\n  }\n}\n","type SimpleType = 'boolean' | 'number' | 'null'\n\nexport default class BasicWrapper<K extends SimpleType, V, A> {\n  type: K\n  value: V\n  annotation: A\n\n  constructor(type: K, value: V, annotation: A) {\n    this.type = type\n    this.value = value\n    this.annotation = annotation\n  }\n}\n","import {type Input, type ObjectInput} from '../types'\nimport {wrap} from './index'\n\nexport default class ObjectWrapper<A> implements ObjectInput<A> {\n  type = 'object' as const\n  value: Record<string, unknown>\n  keys: string[]\n  annotation: A\n\n  private fields: Record<string, Input<A>> = {}\n\n  constructor(value: Record<string, unknown>, annotation: A) {\n    this.value = value\n    this.annotation = annotation\n    this.keys = Object.keys(value)\n  }\n\n  get(key: string): Input<A> | undefined {\n    const input = this.fields[key]\n    if (input) {\n      return input\n    }\n\n    if (!this.value.hasOwnProperty(key)) {\n      return undefined\n    }\n\n    const raw = this.value[key]\n    return (this.fields[key] = wrap(raw, this.annotation))\n  }\n}\n","import {type StringInput} from '../types'\n\nexport default class StringWrapper<A> implements StringInput<A> {\n  type = 'string' as const\n  value: string\n  annotation: A\n\n  constructor(value: string, annotation: A) {\n    this.value = value\n    this.annotation = annotation\n  }\n\n  sliceAnnotation(start: number, end: number): {text: string; annotation: A}[] {\n    return [{text: this.value.slice(start, end), annotation: this.annotation}]\n  }\n}\n","import {type Input} from '../types'\nimport ArrayWrapper from './array'\nimport BasicWrapper from './basic'\nimport ObjectWrapper from './object'\nimport StringWrapper from './string'\n\n/**\n * Takes an input (any JSON-serializable value) and an annotation, and generates an input\n * object for it, to be used with {@link diffInput | the diffInput() method} and others.\n *\n * @param input - The value to wrap in an input object\n * @param annotation - Annotation attached to the input - will be bound to generated diffs\n * @returns A input object\n * @throws if `input` is not a JSON-serializable type\n * @public\n */\nexport function wrap<A>(input: unknown, annotation: A): Input<A> {\n  if (Array.isArray(input)) {\n    return new ArrayWrapper(input, annotation)\n  } else if (input === null) {\n    return new BasicWrapper('null', input, annotation)\n  }\n\n  const type = typeof input\n  switch (type) {\n    case 'number':\n      return new BasicWrapper(type, input as number, annotation)\n    case 'boolean':\n      return new BasicWrapper(type, input as boolean, annotation)\n    case 'object':\n      return new ObjectWrapper(input as Record<string, unknown>, annotation)\n    case 'string':\n      return new StringWrapper(input as string, annotation)\n    default:\n      throw new Error(`cannot wrap value of type: ${type}`)\n  }\n}\n"],"names":["items"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12],"debugId":null}},
    {"offset": {"line": 10188, "column": 0}, "map": {"version":3,"file":"index.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/vision/src/i18n/index.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/vision/src/visionTool.ts"],"sourcesContent":["import {defineLocaleResourceBundle} from 'sanity'\n\n/**\n * The locale namespace for the vision tool\n *\n * @internal\n */\nexport const visionLocaleNamespace = 'vision' as const\n\n/**\n * The default locale bundle for the vision tool, which is US English.\n *\n * @internal\n */\nexport const visionUsEnglishLocaleBundle = defineLocaleResourceBundle({\n  locale: 'en-US',\n  namespace: visionLocaleNamespace,\n  resources: () => import('./resources'),\n})\n","import {EyeOpenIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\nimport {route} from 'sanity/router'\n\nimport {visionUsEnglishLocaleBundle} from './i18n'\nimport {type VisionToolConfig} from './types'\n\nexport const visionTool = definePlugin<VisionToolConfig | void>((options) => {\n  const {name, title, icon, ...config} = options || {}\n  return {\n    name: '@sanity/vision',\n    tools: [\n      {\n        name: name || 'vision',\n        title: title || 'Vision',\n        icon: icon || EyeOpenIcon,\n        component: lazy(() => import('./SanityVision')),\n        options: config,\n        router: route.create('/*'),\n        __internalApplicationType: 'sanity/vision',\n      },\n    ],\n    i18n: {\n      bundles: [visionUsEnglishLocaleBundle],\n    },\n  }\n})\n"],"names":["visionLocaleNamespace","visionUsEnglishLocaleBundle","defineLocaleResourceBundle","locale","namespace","resources","visionTool","definePlugin","options","name","title","icon","config","tools","EyeOpenIcon","component","lazy","router","route","create","__internalApplicationType","i18n","bundles"],"mappings":";;;;;;;;;;;;AAOaA,MAAAA,wBAAwB,UAOxBC,6LAA8BC,6BAAAA,EAA2B;IACpEC,QAAQ;IACRC,WAAWJ;IACXK,WAAWA,MAAM,OAAO,iBAAa;AACvC,CAAC,GCVYC,aAAaC,8KAAAA,EAAuCC,CAAY,YAAA;IACrE,MAAA,EAACC,IAAAA,EAAMC,KAAAA,EAAOC,IAAAA,EAAM,GAAGC,QAAM,GAAIJ,WAAW,CAAC;IAC5C,OAAA;QACLC,MAAM;QACNI,OAAO;YACL;gBACEJ,MAAMA,QAAQ;gBACdC,OAAOA,SAAS;gBAChBC,MAAMA,8JAAQG,cAAAA;gBACdC,6KAAWC,OAAAA,EAAK,MAAM,OAAO,oBAAgB,CAAC;gBAC9CR,SAASI;gBACTK,oKAAQC,QAAAA,CAAMC,MAAAA,CAAO,IAAI;gBACzBC,2BAA2B;YAAA,CAC5B;SAAA;QAEHC,MAAM;YACJC,SAAS;gBAACrB,2BAA2B;aAAA;QAAA;IAEzC;AACF,CAAC","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 10234, "column": 0}, "map": {"version":3,"file":"constants.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/preview-url-secret/src/constants.ts"],"sourcesContent":["import type {\n  PreviewUrlSecretSchemaIdPrefix,\n  PreviewUrlSecretSchemaType,\n  PreviewUrlSecretSchemaTypeSingleton,\n  VercelProtectionBypassSchemaType,\n} from './types'\n\n/** @internal */\nexport const schemaType = 'sanity.previewUrlSecret' satisfies PreviewUrlSecretSchemaType\n\n/** @internal */\nexport const schemaIdPrefix = 'sanity-preview-url-secret' satisfies PreviewUrlSecretSchemaIdPrefix\n\n/** @internal */\nexport const schemaIdSingleton = `${schemaIdPrefix}.share-access` as const\n\n/** @internal */\nexport const schemaTypeSingleton =\n  'sanity.previewUrlShareAccess' satisfies PreviewUrlSecretSchemaTypeSingleton\n\n/** @internal */\nexport const apiVersion = '2025-02-19'\n\n/** @internal */\nexport const urlSearchParamPreviewSecret = 'sanity-preview-secret'\n\n/** @internal */\nexport const urlSearchParamPreviewPathname = 'sanity-preview-pathname'\n\n/** @internal */\nexport const urlSearchParamPreviewPerspective = 'sanity-preview-perspective'\n\n/** @internal */\nexport const urlSearchParamVercelProtectionBypass = 'x-vercel-protection-bypass'\n\n/** @internal */\nexport const urlSearchParamVercelSetBypassCookie = 'x-vercel-set-bypass-cookie'\n\n/** @internal */\nexport const isDev = process.env.NODE_ENV === 'development'\n\n/**\n * updated within the hour, if it's older it'll create a new secret or return null\n * @internal\n */\nexport const SECRET_TTL = 60 * 60\n\n/** @internal */\nexport const fetchSecretQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && secret == $secret && dateTime(_updatedAt) > dateTime(now()) - ${SECRET_TTL}][0]{\n    _id,\n    _updatedAt,\n    secret,\n    studioUrl,\n  }` as const\n\n/** @internal */\nexport const fetchSharedAccessQuery =\n  /* groq */ `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\"][0].secret` as const\n\n/** @internal */\nexport const fetchSharedAccessSecretQuery =\n  /* groq */ `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\" && secret == $secret][0]{\n  secret,\n  studioUrl,\n}` as const\n\n/** @internal */\nexport const deleteExpiredSecretsQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && dateTime(_updatedAt) <= dateTime(now()) - ${SECRET_TTL}]` as const\n\n/** @internal */\nexport const vercelProtectionBypassSchemaType =\n  'sanity.vercelProtectionBypass' satisfies VercelProtectionBypassSchemaType\n\n/** @internal */\nexport const vercelProtectionBypassSchemaId = `${schemaIdPrefix}.vercel-protection-bypass` as const\n\n/** @internal */\nexport const fetchVercelProtectionBypassSecret =\n  /* groq */ `*[_id == \"${vercelProtectionBypassSchemaId}\" && _type == \"${vercelProtectionBypassSchemaType}\"][0].secret` as const\n\n/**\n * Used for tagging `client.fetch` queries\n * @internal\n */\nexport const tag = 'sanity.preview-url-secret' as const\n\n/** @internal */\nexport const perspectiveCookieName = 'sanity-preview-perspective'\n\nexport type {VercelSetBypassCookieValue} from './types'\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuCqB,QAAQ,IAAI;AA/B1B,MAAM,aAAa,2BAGb,iBAAiB,6BAGjB,oBAAoB,GAAG,cAAc,CAAA,aAAA,CAAA,EAGrC,sBACX,gCAGW,aAAa,cAGb,8BAA8B,yBAG9B,gCAAgC,2BAGhC,mCAAmC,8BAGnC,uCAAuC,8BAGvC,sCAAsC,8BAGtC,4DAAiC,eAMjC,aAAa,KAAK,IAGlB,mBAAA,QAAA,GACA,CAAA,YAAA,EAAe,UAAU,CAAA,mEAAA,EAAsE,UAAU,CAAA;;;;;GAAA,CAAA,EAQzG,yBAAA,QAAA,GACA,CAAA,UAAA,EAAa,iBAAiB,CAAA,eAAA,EAAkB,mBAAmB,CAAA,YAAA,CAAA,EAGnE,+BAAA,QAAA,GACA,CAAA,UAAA,EAAa,iBAAiB,CAAA,eAAA,EAAkB,mBAAmB,CAAA;;;CAAA,CAAA,EAMnE,4BAAA,QAAA,GACA,CAAA,YAAA,EAAe,UAAU,CAAA,+CAAA,EAAkD,UAAU,CAAA,CAAA,CAAA,EAGrF,mCACX,iCAGW,iCAAiC,GAAG,cAAc,CAAA,yBAAA,CAAA,EAGlD,oCAAA,QAAA,GACA,CAAA,UAAA,EAAa,8BAA8B,CAAA,eAAA,EAAkB,gCAAgC,CAAA,YAAA,CAAA,EAM7F,MAAM,6BAGN,wBAAwB","ignoreList":[0],"debugId":null}}]
}