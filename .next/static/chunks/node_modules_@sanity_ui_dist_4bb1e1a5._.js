(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules_@sanity_ui_dist_4bb1e1a5._.js", {

"[project]/node_modules/@sanity/ui/dist/_chunks-es/getTheme_v2.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "defaultThemeConfig": (()=>defaultThemeConfig),
    "getTheme_v2": (()=>getTheme_v2),
    "themeColor_v0_v2": (()=>themeColor_v0_v2)
});
const defaultThemeConfig = {
    avatar: {
        sizes: [
            {
                distance: -4,
                size: 19
            },
            {
                distance: -4,
                size: 25
            },
            {
                distance: -8,
                size: 33
            },
            {
                distance: -12,
                size: 49
            }
        ],
        focusRing: {
            offset: 1,
            width: 1
        }
    },
    button: {
        textWeight: "medium",
        border: {
            width: 1
        },
        focusRing: {
            offset: -1,
            width: 1
        }
    },
    card: {
        border: {
            width: 1
        },
        focusRing: {
            offset: -1,
            width: 1
        },
        shadow: {
            outline: 0.5
        }
    },
    container: [
        320,
        640,
        960,
        1280,
        1600,
        1920
    ],
    media: [
        360,
        600,
        900,
        1200,
        1800,
        2400
    ],
    layer: {
        dialog: {
            zOffset: 600
        },
        popover: {
            zOffset: 400
        },
        tooltip: {
            zOffset: 200
        }
    },
    radius: [
        0,
        1,
        3,
        6,
        9,
        12,
        21
    ],
    shadow: [
        null,
        {
            umbra: [
                0,
                0,
                0,
                0
            ],
            penumbra: [
                0,
                0,
                0,
                0
            ],
            ambient: [
                0,
                0,
                0,
                0
            ]
        },
        {
            umbra: [
                0,
                3,
                5,
                -2
            ],
            penumbra: [
                0,
                6,
                10,
                0
            ],
            ambient: [
                0,
                1,
                18,
                1
            ]
        },
        {
            umbra: [
                0,
                7,
                8,
                -4
            ],
            penumbra: [
                0,
                12,
                17,
                2
            ],
            ambient: [
                0,
                5,
                22,
                4
            ]
        },
        {
            umbra: [
                0,
                9,
                11,
                -5
            ],
            penumbra: [
                0,
                18,
                28,
                2
            ],
            ambient: [
                0,
                7,
                34,
                6
            ]
        },
        {
            umbra: [
                0,
                11,
                15,
                -7
            ],
            penumbra: [
                0,
                24,
                38,
                3
            ],
            ambient: [
                0,
                9,
                46,
                8
            ]
        }
    ],
    space: [
        0,
        4,
        8,
        12,
        20,
        32,
        52,
        84,
        136,
        220
    ],
    input: {
        border: {
            width: 1
        },
        checkbox: {
            size: 17,
            focusRing: {
                offset: -1,
                width: 1
            }
        },
        radio: {
            size: 17,
            markSize: 9,
            focusRing: {
                offset: -1,
                width: 1
            }
        },
        switch: {
            width: 25,
            height: 17,
            padding: 5,
            transitionDurationMs: 150,
            transitionTimingFunction: "ease-out",
            focusRing: {
                offset: 1,
                width: 1
            }
        },
        select: {
            focusRing: {
                offset: -1,
                width: 1
            }
        },
        text: {
            focusRing: {
                offset: -1,
                width: 1
            }
        }
    },
    style: {
        button: {
            root: {
                transition: "background-color 100ms,border-color 100ms,color 100ms"
            }
        }
    }
}, cache$1 = /* @__PURE__ */ new WeakMap();
function themeColor_v0_v2(color_v0) {
    const cached_v2 = cache$1.get(color_v0);
    if (cached_v2) return cached_v2;
    const base = stateThemeColor_v0_v2(color_v0, color_v0.card.enabled), color_v2 = {
        _blend: color_v0._blend || (color_v0.dark ? "screen" : "multiply"),
        _dark: color_v0.dark,
        accent: base.accent,
        avatar: base.avatar,
        backdrop: color_v0.base.shadow.ambient,
        badge: base.badge,
        bg: color_v0.base.bg,
        border: color_v0.base.border,
        button: {
            default: stateTonesThemeColor_v0_v2(color_v0, color_v0.button.default),
            ghost: stateTonesThemeColor_v0_v2(color_v0, color_v0.button.ghost),
            bleed: stateTonesThemeColor_v0_v2(color_v0, color_v0.button.bleed)
        },
        code: base.code,
        fg: color_v0.base.fg,
        focusRing: color_v0.base.focusRing,
        icon: base.muted.fg,
        input: {
            default: inputStatesThemeColor_v0_v2(color_v0.input.default),
            invalid: inputStatesThemeColor_v0_v2(color_v0.input.invalid)
        },
        kbd: base.kbd,
        link: base.link,
        muted: {
            ...base.muted,
            bg: color_v0.selectable?.default.enabled.bg2 || color_v0.base.bg
        },
        selectable: stateTonesThemeColor_v0_v2(color_v0, color_v0.selectable || color_v0.muted),
        shadow: color_v0.base.shadow,
        skeleton: {
            from: color_v0.skeleton?.from || color_v0.base.border,
            to: color_v0.skeleton?.to || color_v0.base.border
        },
        syntax: color_v0.syntax
    };
    return cache$1.set(color_v0, color_v2), color_v2;
}
function stateTonesThemeColor_v0_v2(v0, t) {
    return {
        default: {
            enabled: stateThemeColor_v0_v2(v0, t.default.enabled),
            hovered: stateThemeColor_v0_v2(v0, t.default.hovered),
            pressed: stateThemeColor_v0_v2(v0, t.default.pressed),
            selected: stateThemeColor_v0_v2(v0, t.default.selected),
            disabled: stateThemeColor_v0_v2(v0, t.default.disabled)
        },
        neutral: {
            enabled: stateThemeColor_v0_v2(v0, t.default.enabled),
            hovered: stateThemeColor_v0_v2(v0, t.default.hovered),
            pressed: stateThemeColor_v0_v2(v0, t.default.pressed),
            selected: stateThemeColor_v0_v2(v0, t.default.selected),
            disabled: stateThemeColor_v0_v2(v0, t.default.disabled)
        },
        primary: {
            enabled: stateThemeColor_v0_v2(v0, t.primary.enabled),
            hovered: stateThemeColor_v0_v2(v0, t.primary.hovered),
            pressed: stateThemeColor_v0_v2(v0, t.primary.pressed),
            selected: stateThemeColor_v0_v2(v0, t.primary.selected),
            disabled: stateThemeColor_v0_v2(v0, t.primary.disabled)
        },
        suggest: {
            enabled: stateThemeColor_v0_v2(v0, t.primary.enabled),
            hovered: stateThemeColor_v0_v2(v0, t.primary.hovered),
            pressed: stateThemeColor_v0_v2(v0, t.primary.pressed),
            selected: stateThemeColor_v0_v2(v0, t.primary.selected),
            disabled: stateThemeColor_v0_v2(v0, t.primary.disabled)
        },
        positive: {
            enabled: stateThemeColor_v0_v2(v0, t.positive.enabled),
            hovered: stateThemeColor_v0_v2(v0, t.positive.hovered),
            pressed: stateThemeColor_v0_v2(v0, t.positive.pressed),
            selected: stateThemeColor_v0_v2(v0, t.positive.selected),
            disabled: stateThemeColor_v0_v2(v0, t.positive.disabled)
        },
        caution: {
            enabled: stateThemeColor_v0_v2(v0, t.caution.enabled),
            hovered: stateThemeColor_v0_v2(v0, t.caution.hovered),
            pressed: stateThemeColor_v0_v2(v0, t.caution.pressed),
            selected: stateThemeColor_v0_v2(v0, t.caution.selected),
            disabled: stateThemeColor_v0_v2(v0, t.caution.disabled)
        },
        critical: {
            enabled: stateThemeColor_v0_v2(v0, t.critical.enabled),
            hovered: stateThemeColor_v0_v2(v0, t.critical.hovered),
            pressed: stateThemeColor_v0_v2(v0, t.critical.pressed),
            selected: stateThemeColor_v0_v2(v0, t.critical.selected),
            disabled: stateThemeColor_v0_v2(v0, t.critical.disabled)
        }
    };
}
function stateThemeColor_v0_v2(v0, state) {
    return {
        ...state,
        avatar: {
            gray: {
                bg: v0.spot.gray,
                fg: v0.base.bg
            },
            blue: {
                bg: v0.spot.blue,
                fg: v0.base.bg
            },
            purple: {
                bg: v0.spot.purple,
                fg: v0.base.bg
            },
            magenta: {
                bg: v0.spot.magenta,
                fg: v0.base.bg
            },
            red: {
                bg: v0.spot.red,
                fg: v0.base.bg
            },
            orange: {
                bg: v0.spot.orange,
                fg: v0.base.bg
            },
            yellow: {
                bg: v0.spot.yellow,
                fg: v0.base.bg
            },
            green: {
                bg: v0.spot.green,
                fg: v0.base.bg
            },
            cyan: {
                bg: v0.spot.cyan,
                fg: v0.base.bg
            }
        },
        badge: {
            default: {
                bg: v0.muted.default.enabled.bg,
                fg: v0.muted.default.enabled.fg,
                dot: v0.muted.default.enabled.muted.fg,
                icon: v0.muted.default.enabled.muted.fg
            },
            neutral: {
                bg: v0.muted.transparent.enabled.bg,
                fg: v0.muted.transparent.enabled.fg,
                dot: v0.muted.transparent.enabled.muted.fg,
                icon: v0.muted.transparent.enabled.muted.fg
            },
            primary: {
                bg: v0.muted.primary.enabled.bg,
                fg: v0.muted.primary.enabled.fg,
                dot: v0.muted.primary.enabled.muted.fg,
                icon: v0.muted.primary.enabled.muted.fg
            },
            suggest: {
                bg: v0.muted.primary.enabled.bg,
                fg: v0.muted.primary.enabled.fg,
                dot: v0.muted.primary.enabled.muted.fg,
                icon: v0.muted.primary.enabled.muted.fg
            },
            positive: {
                bg: v0.muted.positive.enabled.bg,
                fg: v0.muted.positive.enabled.fg,
                dot: v0.muted.positive.enabled.muted.fg,
                icon: v0.muted.positive.enabled.muted.fg
            },
            caution: {
                bg: v0.muted.caution.enabled.bg,
                fg: v0.muted.caution.enabled.fg,
                dot: v0.muted.caution.enabled.muted.fg,
                icon: v0.muted.caution.enabled.muted.fg
            },
            critical: {
                bg: v0.muted.critical.enabled.bg,
                fg: v0.muted.critical.enabled.fg,
                dot: v0.muted.critical.enabled.muted.fg,
                icon: v0.muted.critical.enabled.muted.fg
            }
        },
        kbd: {
            bg: v0.muted.default.enabled.bg,
            fg: v0.muted.default.enabled.fg,
            border: v0.muted.default.enabled.border
        },
        muted: {
            ...v0.muted.default.enabled.muted,
            bg: state.bg2 || state.bg
        },
        skeleton: {
            from: state.skeleton?.from || state.border,
            to: state.skeleton?.to || state.border
        }
    };
}
function inputStatesThemeColor_v0_v2(states) {
    return {
        enabled: inputStateThemeColor_v0_v2(states.enabled),
        disabled: inputStateThemeColor_v0_v2(states.disabled),
        readOnly: inputStateThemeColor_v0_v2(states.readOnly),
        hovered: inputStateThemeColor_v0_v2(states.hovered)
    };
}
function inputStateThemeColor_v0_v2(state) {
    return {
        bg: state.bg,
        border: state.border,
        fg: state.fg,
        muted: {
            bg: state.bg2
        },
        placeholder: state.placeholder
    };
}
const cache = /* @__PURE__ */ new WeakMap();
function getTheme_v2(theme) {
    if (theme.sanity.v2?._resolved) return theme.sanity.v2;
    const cached_v2 = cache.get(theme);
    if (cached_v2) return cached_v2;
    const v2 = {
        _version: 2,
        _resolved: !0,
        avatar: {
            ...defaultThemeConfig.avatar,
            ...theme.sanity.avatar
        },
        button: {
            ...defaultThemeConfig.button,
            ...theme.sanity.button
        },
        card: defaultThemeConfig.card,
        color: themeColor_v0_v2(theme.sanity.color),
        container: theme.sanity.container,
        font: theme.sanity.fonts,
        input: {
            ...defaultThemeConfig.input,
            ...theme.sanity.input,
            checkbox: {
                ...defaultThemeConfig.input.checkbox,
                ...theme.sanity.input.checkbox
            },
            radio: {
                ...defaultThemeConfig.input.radio,
                ...theme.sanity.input.radio
            },
            switch: {
                ...defaultThemeConfig.input.switch,
                ...theme.sanity.input.switch
            }
        },
        layer: theme.sanity.layer ?? defaultThemeConfig.layer,
        media: theme.sanity.media,
        radius: theme.sanity.radius,
        shadow: theme.sanity.shadows,
        space: theme.sanity.space,
        style: theme.sanity.styles
    };
    return cache.set(theme, v2), v2;
}
;
 //# sourceMappingURL=getTheme_v2.mjs.map
}}),
"[project]/node_modules/@sanity/ui/dist/theme.mjs [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "COLOR_CONFIG_AVATAR_COLORS": (()=>COLOR_CONFIG_AVATAR_COLORS),
    "COLOR_CONFIG_BLEND_KEYS": (()=>COLOR_CONFIG_BLEND_KEYS),
    "COLOR_CONFIG_CARD_KEYS": (()=>COLOR_CONFIG_CARD_KEYS),
    "COLOR_CONFIG_CARD_TONES": (()=>COLOR_CONFIG_CARD_TONES),
    "COLOR_CONFIG_INPUT_MODES": (()=>COLOR_CONFIG_INPUT_MODES),
    "COLOR_CONFIG_INPUT_STATES": (()=>COLOR_CONFIG_INPUT_STATES),
    "COLOR_CONFIG_STATES": (()=>COLOR_CONFIG_STATES),
    "COLOR_CONFIG_STATE_KEYS": (()=>COLOR_CONFIG_STATE_KEYS),
    "COLOR_CONFIG_STATE_TONES": (()=>COLOR_CONFIG_STATE_TONES),
    "THEME_COLOR_AVATAR_COLORS": (()=>THEME_COLOR_AVATAR_COLORS),
    "THEME_COLOR_BLEND_MODES": (()=>THEME_COLOR_BLEND_MODES),
    "THEME_COLOR_BUTTON_MODES": (()=>THEME_COLOR_BUTTON_MODES),
    "THEME_COLOR_CARD_TONES": (()=>THEME_COLOR_CARD_TONES),
    "THEME_COLOR_INPUT_MODES": (()=>THEME_COLOR_INPUT_MODES),
    "THEME_COLOR_INPUT_STATES": (()=>THEME_COLOR_INPUT_STATES),
    "THEME_COLOR_SCHEMES": (()=>THEME_COLOR_SCHEMES),
    "THEME_COLOR_STATES": (()=>THEME_COLOR_STATES),
    "THEME_COLOR_STATE_TONES": (()=>THEME_COLOR_STATE_TONES),
    "buildTheme": (()=>buildTheme),
    "createColorTheme": (()=>createColorTheme),
    "getContrastRatio": (()=>getContrastRatio),
    "getScopedTheme": (()=>getScopedTheme),
    "hexToRgb": (()=>hexToRgb),
    "hslToRgb": (()=>hslToRgb),
    "isColorBlendModeValue": (()=>isColorBlendModeValue),
    "isColorButtonMode": (()=>isColorButtonMode),
    "isColorConfigBaseKey": (()=>isColorConfigBaseKey),
    "isColorConfigBaseTone": (()=>isColorConfigBaseTone),
    "isColorConfigBlendKey": (()=>isColorConfigBlendKey),
    "isColorConfigStateKey": (()=>isColorConfigStateKey),
    "isColorConfigStateTone": (()=>isColorConfigStateTone),
    "isColorHueKey": (()=>isColorHueKey),
    "isColorOpacityValue": (()=>isColorOpacityValue),
    "isColorTintKey": (()=>isColorTintKey),
    "isColorTokenValue": (()=>isColorTokenValue),
    "isColorValue": (()=>isColorValue),
    "is_v0": (()=>is_v0),
    "is_v2": (()=>is_v2),
    "mix": (()=>mix),
    "multiply": (()=>multiply),
    "parseColor": (()=>parseColor),
    "parseTokenKey": (()=>parseTokenKey),
    "parseTokenValue": (()=>parseTokenValue),
    "rgbToHex": (()=>rgbToHex),
    "rgbToHsl": (()=>rgbToHsl),
    "rgba": (()=>rgba),
    "rgbaToRGBA": (()=>rgbaToRGBA),
    "screen": (()=>screen),
    "v0_v2": (()=>v0_v2),
    "v2_v0": (()=>v2_v0)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@sanity/ui/dist/_chunks-es/getTheme_v2.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$color$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@sanity/color/dist/index.js [app-client] (ecmascript)");
;
;
;
function createSelectableTones(opts, base, dark, solid, muted) {
    return {
        default: _createSelectableStates(opts, base, dark, solid, muted, "default"),
        primary: _createSelectableStates(opts, base, dark, solid, muted, "primary"),
        positive: _createSelectableStates(opts, base, dark, solid, muted, "positive"),
        caution: _createSelectableStates(opts, base, dark, solid, muted, "caution"),
        critical: _createSelectableStates(opts, base, dark, solid, muted, "critical")
    };
}
function _createSelectableStates(opts, base, dark, solid, muted, tone) {
    return {
        enabled: opts.selectable({
            base,
            dark,
            solid,
            muted,
            state: "enabled",
            tone
        }),
        hovered: opts.selectable({
            base,
            dark,
            solid,
            muted,
            state: "hovered",
            tone
        }),
        pressed: opts.selectable({
            base,
            dark,
            solid,
            muted,
            state: "pressed",
            tone
        }),
        selected: opts.selectable({
            base,
            dark,
            solid,
            muted,
            state: "selected",
            tone
        }),
        disabled: opts.selectable({
            base,
            dark,
            solid,
            muted,
            state: "disabled",
            tone
        })
    };
}
function createSolidTones(opts, base, dark, name) {
    return {
        default: {
            enabled: opts.solid({
                base,
                dark,
                tone: "default",
                name,
                state: "enabled"
            }),
            disabled: opts.solid({
                base,
                dark,
                tone: "default",
                name,
                state: "disabled"
            }),
            hovered: opts.solid({
                base,
                dark,
                tone: "default",
                name,
                state: "hovered"
            }),
            pressed: opts.solid({
                base,
                dark,
                tone: "default",
                name,
                state: "pressed"
            }),
            selected: opts.solid({
                base,
                dark,
                tone: "default",
                name,
                state: "selected"
            })
        },
        transparent: {
            enabled: opts.solid({
                base,
                dark,
                tone: "transparent",
                name,
                state: "enabled"
            }),
            disabled: opts.solid({
                base,
                dark,
                tone: "transparent",
                name,
                state: "disabled"
            }),
            hovered: opts.solid({
                base,
                dark,
                tone: "transparent",
                name,
                state: "hovered"
            }),
            pressed: opts.solid({
                base,
                dark,
                tone: "transparent",
                name,
                state: "pressed"
            }),
            selected: opts.solid({
                base,
                dark,
                tone: "transparent",
                name,
                state: "selected"
            })
        },
        primary: {
            enabled: opts.solid({
                base,
                dark,
                tone: "primary",
                name,
                state: "enabled"
            }),
            disabled: opts.solid({
                base,
                dark,
                tone: "primary",
                name,
                state: "disabled"
            }),
            hovered: opts.solid({
                base,
                dark,
                tone: "primary",
                name,
                state: "hovered"
            }),
            pressed: opts.solid({
                base,
                dark,
                tone: "primary",
                name,
                state: "pressed"
            }),
            selected: opts.solid({
                base,
                dark,
                tone: "primary",
                name,
                state: "selected"
            })
        },
        positive: {
            enabled: opts.solid({
                base,
                dark,
                tone: "positive",
                name,
                state: "enabled"
            }),
            disabled: opts.solid({
                base,
                dark,
                tone: "positive",
                name,
                state: "disabled"
            }),
            hovered: opts.solid({
                base,
                dark,
                tone: "positive",
                name,
                state: "hovered"
            }),
            pressed: opts.solid({
                base,
                dark,
                tone: "positive",
                name,
                state: "pressed"
            }),
            selected: opts.solid({
                base,
                dark,
                tone: "positive",
                name,
                state: "selected"
            })
        },
        caution: {
            enabled: opts.solid({
                base,
                dark,
                tone: "caution",
                name,
                state: "enabled"
            }),
            disabled: opts.solid({
                base,
                dark,
                tone: "caution",
                name,
                state: "disabled"
            }),
            hovered: opts.solid({
                base,
                dark,
                tone: "caution",
                name,
                state: "hovered"
            }),
            pressed: opts.solid({
                base,
                dark,
                tone: "caution",
                name,
                state: "pressed"
            }),
            selected: opts.solid({
                base,
                dark,
                tone: "caution",
                name,
                state: "selected"
            })
        },
        critical: {
            enabled: opts.solid({
                base,
                dark,
                tone: "critical",
                name,
                state: "enabled"
            }),
            disabled: opts.solid({
                base,
                dark,
                tone: "critical",
                name,
                state: "disabled"
            }),
            hovered: opts.solid({
                base,
                dark,
                tone: "critical",
                name,
                state: "hovered"
            }),
            pressed: opts.solid({
                base,
                dark,
                tone: "critical",
                name,
                state: "pressed"
            }),
            selected: opts.solid({
                base,
                dark,
                tone: "critical",
                name,
                state: "selected"
            })
        }
    };
}
function createButtonTones(opts, base, dark, solid, muted, mode) {
    return {
        default: opts.button({
            base,
            dark,
            solid: solid.default,
            muted: muted.default,
            mode
        }),
        primary: opts.button({
            base,
            dark,
            solid: solid.primary,
            muted: muted.primary,
            mode
        }),
        positive: opts.button({
            base,
            dark,
            solid: solid.positive,
            muted: muted.positive,
            mode
        }),
        caution: opts.button({
            base,
            dark,
            solid: solid.caution,
            muted: muted.caution,
            mode
        }),
        critical: opts.button({
            base,
            dark,
            solid: solid.critical,
            muted: muted.critical,
            mode
        })
    };
}
function createButtonModes(opts, base, dark, solid, muted) {
    return {
        default: createButtonTones(opts, base, dark, solid, muted, "default"),
        ghost: createButtonTones(opts, base, dark, solid, muted, "ghost"),
        bleed: createButtonTones(opts, base, dark, solid, muted, "bleed")
    };
}
function createCardStates(opts, base, dark, name, solid, muted) {
    return {
        enabled: opts.card({
            base,
            dark,
            name,
            state: "enabled",
            solid,
            muted
        }),
        disabled: opts.card({
            base,
            dark,
            name,
            state: "disabled",
            solid,
            muted
        }),
        hovered: opts.card({
            base,
            dark,
            name,
            state: "hovered",
            solid,
            muted
        }),
        pressed: opts.card({
            base,
            dark,
            name,
            state: "pressed",
            solid,
            muted
        }),
        selected: opts.card({
            base,
            dark,
            name,
            state: "selected",
            solid,
            muted
        })
    };
}
const black = "hsl(0, 0%, 0%)", white = "hsl(0, 0%, 100%)", colors = {
    default: {
        lightest: "hsl(0, 0%, 95%)",
        lighter: "hsl(0, 0%, 70%)",
        light: "hsl(0, 0%, 65%)",
        base: "hsl(0, 0%, 50%)",
        dark: "hsl(0, 0%, 35%)",
        darker: "hsl(0, 0%, 20%)",
        darkest: "hsl(0, 0%, 5%)"
    },
    transparent: {
        lightest: "hsl(240, 100%, 95%)",
        lighter: "hsl(240, 100%, 70%)",
        light: "hsl(240, 100%, 65%)",
        base: "hsl(240, 100%, 50%)",
        dark: "hsl(240, 100%, 35%)",
        darker: "hsl(240, 100%, 20%)",
        darkest: "hsl(240, 100%, 5%)"
    },
    primary: {
        lightest: "hsl(240, 100%, 95%)",
        lighter: "hsl(240, 100%, 70%)",
        light: "hsl(240, 100%, 65%)",
        base: "hsl(240, 100%, 50%)",
        dark: "hsl(240, 100%, 35%)",
        darker: "hsl(240, 100%, 20%)",
        darkest: "hsl(240, 100%, 5%)"
    },
    positive: {
        lightest: "hsl(120, 100%, 95%)",
        lighter: "hsl(120, 100%, 70%)",
        light: "hsl(120, 100%, 65%)",
        base: "hsl(120, 100%, 50%)",
        dark: "hsl(120, 100%, 35%)",
        darker: "hsl(120, 100%, 20%)",
        darkest: "hsl(120, 100%, 5%)"
    },
    caution: {
        lightest: "hsl(60, 100%, 95%)",
        lighter: "hsl(60, 100%, 70%)",
        light: "hsl(60, 100%, 65%)",
        base: "hsl(60, 100%, 50%)",
        dark: "hsl(60, 100%, 35%)",
        darker: "hsl(60, 100%, 20%)",
        darkest: "hsl(60, 100%, 5%)"
    },
    critical: {
        lightest: "hsl(0, 100%, 95%)",
        lighter: "hsl(0, 100%, 70%)",
        light: "hsl(0, 100%, 65%)",
        base: "hsl(0, 100%, 50%)",
        dark: "hsl(0, 100%, 35%)",
        darker: "hsl(0, 100%, 20%)",
        darkest: "hsl(0, 100%, 5%)"
    }
}, spots = {
    gray: "hsl(0, 0%, 50%)",
    red: "hsl(0, 100%, 50%)",
    orange: "hsl(30, 100%, 50%)",
    yellow: "hsl(60, 100%, 50%)",
    green: "hsl(120, 100%, 50%)",
    cyan: "hsl(180, 100%, 50%)",
    blue: "hsl(240, 100%, 50%)",
    purple: "hsl(270, 100%, 50%)",
    magenta: "hsl(300, 100%, 50%)"
}, tones = {
    transparent: {
        bg: [
            colors.transparent.darkest,
            colors.transparent.lightest
        ],
        fg: [
            colors.transparent.lightest,
            colors.transparent.darkest
        ],
        border: [
            colors.transparent.darker,
            colors.transparent.lighter
        ],
        focusRing: [
            colors.transparent.base,
            colors.transparent.base
        ]
    },
    primary: {
        bg: [
            colors.primary.darkest,
            colors.primary.lightest
        ],
        fg: [
            colors.primary.lightest,
            colors.primary.darkest
        ],
        border: [
            colors.primary.darker,
            colors.primary.lighter
        ],
        focusRing: [
            colors.primary.base,
            colors.primary.base
        ]
    },
    positive: {
        bg: [
            colors.positive.darkest,
            colors.positive.lightest
        ],
        fg: [
            colors.positive.lightest,
            colors.positive.darkest
        ],
        border: [
            colors.positive.darker,
            colors.positive.lighter
        ],
        focusRing: [
            colors.positive.base,
            colors.positive.base
        ]
    },
    caution: {
        bg: [
            colors.caution.darkest,
            colors.caution.lightest
        ],
        fg: [
            colors.caution.lightest,
            colors.caution.darkest
        ],
        border: [
            colors.caution.darker,
            colors.caution.lighter
        ],
        focusRing: [
            colors.caution.base,
            colors.caution.base
        ]
    },
    critical: {
        bg: [
            colors.critical.darkest,
            colors.critical.lightest
        ],
        fg: [
            colors.critical.lightest,
            colors.critical.darkest
        ],
        border: [
            colors.critical.darker,
            colors.critical.lighter
        ],
        focusRing: [
            colors.critical.base,
            colors.critical.base
        ]
    }
}, defaultOpts = {
    base: ({ dark, name })=>name === "default" ? {
            bg: dark ? black : white,
            fg: dark ? white : black,
            border: dark ? colors.default.darkest : colors.default.lightest,
            focusRing: colors.primary.base,
            shadow: {
                outline: black,
                umbra: black,
                penumbra: black,
                ambient: black
            },
            skeleton: {
                from: dark ? white : black,
                to: dark ? white : black
            }
        } : {
            bg: tones[name].bg[dark ? 0 : 1],
            fg: tones[name].fg[dark ? 0 : 1],
            border: tones[name].border[dark ? 0 : 1],
            focusRing: tones[name].focusRing[dark ? 0 : 1],
            shadow: {
                outline: black,
                umbra: black,
                penumbra: black,
                ambient: black
            },
            skeleton: {
                from: dark ? white : black,
                to: dark ? white : black
            }
        },
    solid: ({ base, dark, state, tone })=>{
        const color2 = colors[tone];
        return state === "hovered" ? {
            bg: dark ? color2.light : color2.dark,
            bg2: dark ? color2.light : color2.dark,
            border: dark ? color2.lighter : color2.darker,
            fg: dark ? color2.darkest : color2.lightest,
            icon: dark ? color2.darkest : color2.lightest,
            muted: {
                fg: black
            },
            accent: {
                fg: black
            },
            link: {
                fg: black
            },
            code: {
                bg: black,
                fg: black
            },
            skeleton: base.skeleton
        } : {
            bg: color2.base,
            bg2: color2.base,
            border: dark ? color2.light : color2.dark,
            fg: dark ? color2.darkest : color2.lightest,
            icon: dark ? color2.darkest : color2.lightest,
            muted: {
                fg: black
            },
            accent: {
                fg: black
            },
            link: {
                fg: black
            },
            code: {
                bg: black,
                fg: black
            },
            skeleton: base.skeleton
        };
    },
    muted: ({ base, dark, state, tone })=>{
        const color2 = colors[tone];
        return state === "hovered" ? {
            bg: dark ? color2.darker : color2.lighter,
            bg2: dark ? color2.darker : color2.lighter,
            border: dark ? color2.lighter : color2.darker,
            fg: dark ? color2.lightest : color2.darkest,
            icon: dark ? color2.lightest : color2.darkest,
            muted: {
                fg: black
            },
            accent: {
                fg: black
            },
            link: {
                fg: black
            },
            code: {
                bg: black,
                fg: black
            },
            skeleton: base.skeleton
        } : {
            bg: dark ? color2.darkest : color2.lightest,
            bg2: dark ? color2.darkest : color2.lightest,
            border: dark ? color2.darker : color2.lighter,
            fg: dark ? color2.lighter : color2.darker,
            icon: dark ? color2.lighter : color2.darker,
            muted: {
                fg: black
            },
            accent: {
                fg: black
            },
            link: {
                fg: black
            },
            code: {
                bg: black,
                fg: black
            },
            skeleton: base.skeleton
        };
    },
    button: ({ base, mode, muted, solid })=>mode === "bleed" ? {
            ...muted,
            enabled: {
                bg: "transparent",
                bg2: "transparent",
                fg: muted.enabled.fg,
                icon: muted.enabled.fg,
                border: "transparent",
                muted: {
                    fg: black
                },
                accent: {
                    fg: black
                },
                link: {
                    fg: black
                },
                code: {
                    bg: black,
                    fg: black
                },
                skeleton: base.skeleton
            },
            hovered: {
                bg: muted.enabled.bg,
                bg2: muted.enabled.bg,
                fg: muted.hovered.fg,
                icon: muted.hovered.fg,
                border: "transparent",
                muted: {
                    fg: black
                },
                accent: {
                    fg: black
                },
                link: {
                    fg: black
                },
                code: {
                    bg: black,
                    fg: black
                },
                skeleton: base.skeleton
            }
        } : mode === "ghost" ? {
            ...solid,
            enabled: muted.enabled
        } : solid,
    card: ({ base })=>({
            bg: black,
            bg2: black,
            fg: black,
            icon: black,
            border: black,
            muted: {
                fg: black
            },
            accent: {
                fg: black
            },
            link: {
                fg: black
            },
            code: {
                bg: black,
                fg: black
            },
            skeleton: base.skeleton
        }),
    input: ()=>({
            bg: black,
            bg2: black,
            fg: black,
            border: black,
            placeholder: black
        }),
    selectable: ({ muted, state, tone })=>muted[tone][state],
    spot: ({ key })=>spots[key],
    syntax: ()=>({
            atrule: black,
            attrName: black,
            attrValue: black,
            attribute: black,
            boolean: black,
            builtin: black,
            cdata: black,
            char: black,
            class: black,
            className: black,
            comment: black,
            constant: black,
            deleted: black,
            doctype: black,
            entity: black,
            function: black,
            hexcode: black,
            id: black,
            important: black,
            inserted: black,
            keyword: black,
            number: black,
            operator: black,
            prolog: black,
            property: black,
            pseudoClass: black,
            pseudoElement: black,
            punctuation: black,
            regex: black,
            selector: black,
            string: black,
            symbol: black,
            tag: black,
            unit: black,
            url: black,
            variable: black
        })
};
function createInputModes(opts, base, dark, solid, muted) {
    return {
        default: {
            enabled: opts.input({
                base,
                dark,
                mode: "default",
                state: "enabled",
                solid: solid.default,
                muted: muted.default
            }),
            disabled: opts.input({
                base,
                dark,
                mode: "default",
                state: "disabled",
                solid: solid.default,
                muted: muted.default
            }),
            hovered: opts.input({
                base,
                dark,
                mode: "default",
                state: "hovered",
                solid: solid.default,
                muted: muted.default
            }),
            readOnly: opts.input({
                base,
                dark,
                mode: "default",
                state: "readOnly",
                solid: solid.default,
                muted: muted.default
            })
        },
        invalid: {
            enabled: opts.input({
                base,
                dark,
                mode: "invalid",
                state: "enabled",
                solid: solid.default,
                muted: muted.default
            }),
            disabled: opts.input({
                base,
                dark,
                mode: "invalid",
                state: "disabled",
                solid: solid.default,
                muted: muted.default
            }),
            hovered: opts.input({
                base,
                dark,
                mode: "invalid",
                state: "hovered",
                solid: solid.default,
                muted: muted.default
            }),
            readOnly: opts.input({
                base,
                dark,
                mode: "invalid",
                state: "readOnly",
                solid: solid.default,
                muted: muted.default
            })
        }
    };
}
function createMutedTones(opts, base, dark, name) {
    return {
        default: {
            enabled: opts.muted({
                base,
                dark,
                tone: "default",
                name,
                state: "enabled"
            }),
            disabled: opts.muted({
                base,
                dark,
                tone: "default",
                name,
                state: "disabled"
            }),
            hovered: opts.muted({
                base,
                dark,
                tone: "default",
                name,
                state: "hovered"
            }),
            pressed: opts.muted({
                base,
                dark,
                tone: "default",
                name,
                state: "pressed"
            }),
            selected: opts.muted({
                base,
                dark,
                tone: "default",
                name,
                state: "selected"
            })
        },
        transparent: {
            enabled: opts.muted({
                base,
                dark,
                tone: "transparent",
                name,
                state: "enabled"
            }),
            disabled: opts.muted({
                base,
                dark,
                tone: "transparent",
                name,
                state: "disabled"
            }),
            hovered: opts.muted({
                base,
                dark,
                tone: "transparent",
                name,
                state: "hovered"
            }),
            pressed: opts.muted({
                base,
                dark,
                tone: "transparent",
                name,
                state: "pressed"
            }),
            selected: opts.muted({
                base,
                dark,
                tone: "transparent",
                name,
                state: "selected"
            })
        },
        primary: {
            enabled: opts.muted({
                base,
                dark,
                tone: "primary",
                name,
                state: "enabled"
            }),
            disabled: opts.muted({
                base,
                dark,
                tone: "primary",
                name,
                state: "disabled"
            }),
            hovered: opts.muted({
                base,
                dark,
                tone: "primary",
                name,
                state: "hovered"
            }),
            pressed: opts.muted({
                base,
                dark,
                tone: "primary",
                name,
                state: "pressed"
            }),
            selected: opts.muted({
                base,
                dark,
                tone: "primary",
                name,
                state: "selected"
            })
        },
        positive: {
            enabled: opts.muted({
                base,
                dark,
                tone: "positive",
                name,
                state: "enabled"
            }),
            disabled: opts.muted({
                base,
                dark,
                tone: "positive",
                name,
                state: "disabled"
            }),
            hovered: opts.muted({
                base,
                dark,
                tone: "positive",
                name,
                state: "hovered"
            }),
            pressed: opts.muted({
                base,
                dark,
                tone: "positive",
                name,
                state: "pressed"
            }),
            selected: opts.muted({
                base,
                dark,
                tone: "positive",
                name,
                state: "selected"
            })
        },
        caution: {
            enabled: opts.muted({
                base,
                dark,
                tone: "caution",
                name,
                state: "enabled"
            }),
            disabled: opts.muted({
                base,
                dark,
                tone: "caution",
                name,
                state: "disabled"
            }),
            hovered: opts.muted({
                base,
                dark,
                tone: "caution",
                name,
                state: "hovered"
            }),
            pressed: opts.muted({
                base,
                dark,
                tone: "caution",
                name,
                state: "pressed"
            }),
            selected: opts.muted({
                base,
                dark,
                tone: "caution",
                name,
                state: "selected"
            })
        },
        critical: {
            enabled: opts.muted({
                base,
                dark,
                tone: "critical",
                name,
                state: "enabled"
            }),
            disabled: opts.muted({
                base,
                dark,
                tone: "critical",
                name,
                state: "disabled"
            }),
            hovered: opts.muted({
                base,
                dark,
                tone: "critical",
                name,
                state: "hovered"
            }),
            pressed: opts.muted({
                base,
                dark,
                tone: "critical",
                name,
                state: "pressed"
            }),
            selected: opts.muted({
                base,
                dark,
                tone: "critical",
                name,
                state: "selected"
            })
        }
    };
}
function createSpot(opts, base, dark) {
    return {
        gray: opts.spot({
            base,
            dark,
            key: "gray"
        }),
        blue: opts.spot({
            base,
            dark,
            key: "blue"
        }),
        purple: opts.spot({
            base,
            dark,
            key: "purple"
        }),
        magenta: opts.spot({
            base,
            dark,
            key: "magenta"
        }),
        red: opts.spot({
            base,
            dark,
            key: "red"
        }),
        orange: opts.spot({
            base,
            dark,
            key: "orange"
        }),
        yellow: opts.spot({
            base,
            dark,
            key: "yellow"
        }),
        green: opts.spot({
            base,
            dark,
            key: "green"
        }),
        cyan: opts.spot({
            base,
            dark,
            key: "cyan"
        })
    };
}
function createColorTheme(partialOpts = {}) {
    const builders = {
        ...defaultOpts,
        ...partialOpts
    };
    return {
        light: _createColorScheme(builders, !1),
        dark: _createColorScheme(builders, !0)
    };
}
function _createColorScheme(opts, dark) {
    return {
        default: _createColor(opts, dark, "default"),
        transparent: _createColor(opts, dark, "transparent"),
        primary: _createColor(opts, dark, "primary"),
        positive: _createColor(opts, dark, "positive"),
        caution: _createColor(opts, dark, "caution"),
        critical: _createColor(opts, dark, "critical")
    };
}
function _createColor(opts, dark, name) {
    const base = opts.base({
        dark,
        name
    }), solid = createSolidTones(opts, base, dark, name), muted = createMutedTones(opts, base, dark, name);
    return {
        base,
        button: createButtonModes(opts, base, dark, solid, muted),
        card: createCardStates(opts, base, dark, name, solid, muted),
        dark,
        input: createInputModes(opts, base, dark, solid, muted),
        selectable: createSelectableTones(opts, base, dark, solid, muted),
        spot: createSpot(opts, base, dark),
        syntax: opts.syntax({
            base,
            dark
        }),
        solid,
        muted
    };
}
const defaultThemeFonts = {
    code: {
        family: "ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace",
        weights: {
            regular: 400,
            medium: 500,
            semibold: 600,
            bold: 700
        },
        sizes: [
            {
                ascenderHeight: 4,
                descenderHeight: 4,
                fontSize: 10,
                iconSize: 17,
                lineHeight: 15,
                letterSpacing: 0
            },
            {
                ascenderHeight: 5,
                descenderHeight: 5,
                fontSize: 13,
                iconSize: 21,
                lineHeight: 19,
                letterSpacing: 0
            },
            {
                ascenderHeight: 6,
                descenderHeight: 6,
                fontSize: 16,
                iconSize: 25,
                lineHeight: 23,
                letterSpacing: 0
            },
            {
                ascenderHeight: 7,
                descenderHeight: 7,
                fontSize: 19,
                iconSize: 29,
                lineHeight: 27,
                letterSpacing: 0
            },
            {
                ascenderHeight: 8,
                descenderHeight: 8,
                fontSize: 22,
                iconSize: 33,
                lineHeight: 31,
                letterSpacing: 0
            }
        ]
    },
    heading: {
        family: 'Inter, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", "Liberation Sans", Helvetica, Arial, system-ui, sans-serif',
        weights: {
            regular: 700,
            medium: 800,
            semibold: 900,
            bold: 900
        },
        sizes: [
            {
                ascenderHeight: 5,
                descenderHeight: 5,
                fontSize: 13,
                iconSize: 17,
                lineHeight: 19,
                letterSpacing: 0
            },
            {
                ascenderHeight: 6,
                descenderHeight: 6,
                fontSize: 16,
                iconSize: 25,
                lineHeight: 23,
                letterSpacing: 0
            },
            {
                ascenderHeight: 7,
                descenderHeight: 7,
                fontSize: 21,
                iconSize: 33,
                lineHeight: 29,
                letterSpacing: 0
            },
            {
                ascenderHeight: 8,
                descenderHeight: 8,
                fontSize: 27,
                iconSize: 41,
                lineHeight: 35,
                letterSpacing: 0
            },
            {
                ascenderHeight: 9.5,
                descenderHeight: 8.5,
                fontSize: 33,
                iconSize: 49,
                lineHeight: 41,
                letterSpacing: 0
            },
            {
                ascenderHeight: 10.5,
                descenderHeight: 9.5,
                fontSize: 38,
                iconSize: 53,
                lineHeight: 47,
                letterSpacing: 0
            }
        ]
    },
    label: {
        family: 'Inter, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", "Liberation Sans", system-ui, sans-serif',
        weights: {
            regular: 600,
            medium: 700,
            semibold: 800,
            bold: 900
        },
        sizes: [
            {
                ascenderHeight: 2,
                descenderHeight: 2,
                fontSize: 8.1,
                iconSize: 13,
                lineHeight: 10,
                letterSpacing: 0.5
            },
            {
                ascenderHeight: 2,
                descenderHeight: 2,
                fontSize: 9.5,
                iconSize: 15,
                lineHeight: 11,
                letterSpacing: 0.5
            },
            {
                ascenderHeight: 2,
                descenderHeight: 2,
                fontSize: 10.8,
                iconSize: 17,
                lineHeight: 12,
                letterSpacing: 0.5
            },
            {
                ascenderHeight: 2,
                descenderHeight: 2,
                fontSize: 12.25,
                iconSize: 19,
                lineHeight: 13,
                letterSpacing: 0.5
            },
            {
                ascenderHeight: 2,
                descenderHeight: 2,
                fontSize: 13.6,
                iconSize: 21,
                lineHeight: 14,
                letterSpacing: 0.5
            },
            {
                ascenderHeight: 2,
                descenderHeight: 2,
                fontSize: 15,
                iconSize: 23,
                lineHeight: 15,
                letterSpacing: 0.5
            }
        ]
    },
    text: {
        family: 'Inter, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", "Liberation Sans", Helvetica, Arial, system-ui, sans-serif',
        weights: {
            regular: 400,
            medium: 500,
            semibold: 600,
            bold: 700
        },
        sizes: [
            {
                ascenderHeight: 4,
                descenderHeight: 4,
                fontSize: 10,
                iconSize: 17,
                lineHeight: 15,
                letterSpacing: 0
            },
            {
                ascenderHeight: 5,
                descenderHeight: 5,
                fontSize: 13,
                iconSize: 21,
                lineHeight: 19,
                letterSpacing: 0
            },
            {
                ascenderHeight: 6,
                descenderHeight: 6,
                fontSize: 15,
                iconSize: 25,
                lineHeight: 23,
                letterSpacing: 0
            },
            {
                ascenderHeight: 7,
                descenderHeight: 7,
                fontSize: 18,
                iconSize: 29,
                lineHeight: 27,
                letterSpacing: 0
            },
            {
                ascenderHeight: 8,
                descenderHeight: 8,
                fontSize: 21,
                iconSize: 33,
                lineHeight: 31,
                letterSpacing: 0
            }
        ]
    }
};
function is_v0(themeProp) {
    return themeProp._version === 0;
}
function is_v2(themeProp) {
    return themeProp._version === 2;
}
const cache$2 = /* @__PURE__ */ new WeakMap();
function v0_v2(v0) {
    if (v0.v2) return v0.v2;
    const cached_v2 = cache$2.get(v0);
    if (cached_v2) return cached_v2;
    const { avatar, button, color: color2, container, fonts: font, input, layer, media, radius, shadows: shadow, space, styles: style } = v0, v2 = {
        _version: 2,
        avatar: {
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].avatar,
            ...avatar
        },
        button: {
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].button,
            ...button
        },
        card: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].card,
        color: {
            light: {
                transparent: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["themeColor_v0_v2"])(color2.light.transparent),
                default: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["themeColor_v0_v2"])(color2.light.default),
                neutral: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["themeColor_v0_v2"])(color2.light.transparent),
                primary: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["themeColor_v0_v2"])(color2.light.primary),
                suggest: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["themeColor_v0_v2"])(color2.light.primary),
                positive: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["themeColor_v0_v2"])(color2.light.positive),
                caution: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["themeColor_v0_v2"])(color2.light.caution),
                critical: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["themeColor_v0_v2"])(color2.light.critical)
            },
            dark: {
                transparent: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["themeColor_v0_v2"])(color2.dark.transparent),
                default: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["themeColor_v0_v2"])(color2.dark.default),
                neutral: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["themeColor_v0_v2"])(color2.dark.transparent),
                primary: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["themeColor_v0_v2"])(color2.dark.primary),
                suggest: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["themeColor_v0_v2"])(color2.dark.primary),
                positive: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["themeColor_v0_v2"])(color2.dark.positive),
                caution: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["themeColor_v0_v2"])(color2.dark.caution),
                critical: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["themeColor_v0_v2"])(color2.dark.critical)
            }
        },
        container,
        font,
        input: {
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].input,
            ...input,
            checkbox: {
                ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].input.checkbox,
                ...input.checkbox
            },
            radio: {
                ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].input.radio,
                ...input.radio
            },
            switch: {
                ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].input.switch,
                ...input.switch
            }
        },
        layer: layer ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].layer,
        media,
        radius,
        shadow,
        space,
        style
    };
    return cache$2.set(v0, v2), v2;
}
const cache$1 = /* @__PURE__ */ new WeakMap();
function v2_v0(v2) {
    const cachedTheme = cache$1.get(v2);
    if (cachedTheme) return cachedTheme;
    const { avatar, button, color: color2, container, font: fonts, input, media, radius, shadow: shadows, space, style: styles } = v2;
    return {
        _version: 0,
        avatar,
        button,
        container,
        color: {
            light: {
                transparent: themeColor_v2_v0(color2.light.transparent),
                default: themeColor_v2_v0(color2.light.default),
                primary: themeColor_v2_v0(color2.light.primary),
                positive: themeColor_v2_v0(color2.light.positive),
                caution: themeColor_v2_v0(color2.light.caution),
                critical: themeColor_v2_v0(color2.light.critical)
            },
            dark: {
                transparent: themeColor_v2_v0(color2.dark.transparent),
                default: themeColor_v2_v0(color2.dark.default),
                primary: themeColor_v2_v0(color2.dark.primary),
                positive: themeColor_v2_v0(color2.dark.positive),
                caution: themeColor_v2_v0(color2.dark.caution),
                critical: themeColor_v2_v0(color2.dark.critical)
            }
        },
        focusRing: input.text.focusRing,
        fonts,
        input,
        media,
        radius,
        shadows,
        space,
        styles,
        v2
    };
}
function themeColor_v2_v0(color_v2) {
    return {
        base: {
            bg: color_v2.bg,
            fg: color_v2.fg,
            border: color_v2.border,
            focusRing: color_v2.focusRing,
            shadow: color_v2.shadow
        },
        button: color_v2.button,
        card: color_v2.selectable.default,
        dark: color_v2._dark,
        input: {
            default: inputStatesThemeColor_v2_v0(color_v2.input.default),
            invalid: inputStatesThemeColor_v2_v0(color_v2.input.invalid)
        },
        muted: {
            ...color_v2.button.ghost,
            transparent: color_v2.button.ghost.default
        },
        solid: {
            ...color_v2.button.default,
            transparent: color_v2.button.default.default
        },
        selectable: color_v2.selectable,
        spot: {
            gray: color_v2.avatar.gray.bg,
            blue: color_v2.avatar.blue.bg,
            purple: color_v2.avatar.purple.bg,
            magenta: color_v2.avatar.magenta.bg,
            red: color_v2.avatar.red.bg,
            orange: color_v2.avatar.orange.bg,
            yellow: color_v2.avatar.yellow.bg,
            green: color_v2.avatar.green.bg,
            cyan: color_v2.avatar.cyan.bg
        },
        syntax: color_v2.syntax
    };
}
function inputStatesThemeColor_v2_v0(t) {
    return {
        enabled: inputStateThemeColor_v2_v0(t.enabled),
        disabled: inputStateThemeColor_v2_v0(t.disabled),
        readOnly: inputStateThemeColor_v2_v0(t.readOnly),
        hovered: inputStateThemeColor_v2_v0(t.hovered)
    };
}
function inputStateThemeColor_v2_v0(t) {
    return {
        bg: t.bg,
        bg2: t.muted.bg,
        border: t.border,
        fg: t.fg,
        placeholder: t.placeholder
    };
}
const THEME_COLOR_SCHEMES = [
    "light",
    "dark"
], THEME_COLOR_BLEND_MODES = [
    "multiply",
    "screen"
], THEME_COLOR_CARD_TONES = [
    "transparent",
    "default",
    "neutral",
    "primary",
    // deprecated
    "suggest",
    "positive",
    "caution",
    "critical"
], THEME_COLOR_STATE_TONES = [
    "default",
    "neutral",
    "primary",
    // deprecated
    "suggest",
    "positive",
    "caution",
    "critical"
], THEME_COLOR_STATES = [
    "enabled",
    "hovered",
    "pressed",
    "selected",
    "disabled"
], THEME_COLOR_BUTTON_MODES = [
    "default",
    "ghost",
    "bleed"
], THEME_COLOR_INPUT_MODES = [
    "default",
    "invalid"
], THEME_COLOR_INPUT_STATES = [
    "enabled",
    "hovered",
    "readOnly",
    "disabled"
], THEME_COLOR_AVATAR_COLORS = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$color$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["COLOR_HUES"];
function isColorBlendModeValue(str) {
    return THEME_COLOR_BLEND_MODES.includes(str);
}
function isColorHueKey(str) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$color$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["COLOR_HUES"].includes(str);
}
function isColorTintKey(str) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$color$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["COLOR_TINTS"].includes(str);
}
function isColorButtonMode(str) {
    return THEME_COLOR_BUTTON_MODES.includes(str);
}
const COLOR_CONFIG_STATE_KEYS = [
    "_hue",
    "bg",
    "fg",
    "border",
    "focusRing",
    "muted/fg",
    "accent/fg",
    "link/fg",
    "code/bg",
    "code/fg",
    "skeleton/from",
    "skeleton/to",
    "status/dot",
    "status/icon"
], COLOR_CONFIG_CARD_KEYS = [
    ...COLOR_CONFIG_STATE_KEYS,
    "_hue",
    "bg",
    "fg",
    "border",
    "focusRing",
    "shadow/outline",
    "shadow/umbra",
    "shadow/penumbra",
    "shadow/ambient"
], COLOR_CONFIG_BLEND_KEYS = [
    "_blend"
], COLOR_CONFIG_AVATAR_COLORS = [
    "*",
    ...THEME_COLOR_AVATAR_COLORS
], COLOR_CONFIG_CARD_TONES = [
    "*",
    ...THEME_COLOR_CARD_TONES
], COLOR_CONFIG_STATE_TONES = [
    "*",
    ...THEME_COLOR_STATE_TONES
], COLOR_CONFIG_STATES = [
    "*",
    ...THEME_COLOR_STATES
], COLOR_CONFIG_INPUT_MODES = [
    "*",
    ...THEME_COLOR_INPUT_MODES
], COLOR_CONFIG_INPUT_STATES = [
    "*",
    ...THEME_COLOR_INPUT_STATES
];
function parseTokenKey(str) {
    const segments = str.split("/"), segment0 = segments.shift() || "";
    if (isColorConfigBaseTone(segment0)) {
        const key = segments.join("/");
        if (isColorConfigBaseKey(key)) return {
            type: "base",
            tone: segment0,
            key
        };
        if (isColorConfigBlendKey(key)) return {
            type: "base",
            tone: segment0,
            key
        };
    }
    if (segment0 === "button") {
        const segment1 = segments.shift() || "";
        if (isColorConfigStateTone(segment1)) {
            const segment2 = segments.shift() || "";
            if (isColorButtonMode(segment2)) {
                const key = segments.join("/");
                if (isColorConfigStateKey(key)) return {
                    type: "button",
                    tone: segment1,
                    mode: segment2,
                    key
                };
                if (isColorConfigBlendKey(key)) return {
                    type: "button",
                    tone: segment1,
                    mode: segment2,
                    key
                };
            }
        }
    }
}
function isColorMixPercentValue(str) {
    return /^\d+%$/.test(str);
}
function parseTokenValue(str) {
    const segments = str.split("/");
    let nextSegment = segments.shift() || "";
    const [segment0, segment0mix] = nextSegment.split(" ");
    if (isColorTintKey(segment0)) {
        const tint = segment0, segment1 = segments.shift() || "";
        if (isColorMixPercentValue(segment0mix)) {
            const mix2 = Number(segment0mix.slice(0, -1)) / 100;
            return {
                type: "color",
                tint,
                mix: mix2
            };
        }
        if (isColorOpacityValue(segment1)) {
            const opacity = Number(segment1);
            return {
                type: "color",
                tint,
                opacity
            };
        }
        return {
            type: "color",
            tint
        };
    }
    if (isColorValue(segment0)) {
        const key = segment0, segment1 = segments.shift() || "";
        if (isColorMixPercentValue(segment0mix)) {
            const mix2 = Number(segment0mix.slice(0, -1)) / 100;
            return {
                type: "color",
                key,
                mix: mix2
            };
        }
        if (isColorOpacityValue(segment1)) {
            const opacity = Number(segment1);
            return {
                type: "color",
                key,
                opacity
            };
        }
        return {
            type: "color",
            key
        };
    }
    if (isColorHueKey(segment0)) {
        const hue = segment0;
        nextSegment = segments.shift() || "";
        const [segment1, segment1mix] = nextSegment.split(" ");
        if (isColorTintKey(segment1)) {
            const tint = segment1, segment2 = segments.shift() || "";
            if (isColorMixPercentValue(segment1mix)) {
                const mix2 = Number(segment1mix.slice(0, -1)) / 100;
                return {
                    type: "color",
                    hue,
                    tint,
                    mix: mix2
                };
            }
            if (isColorOpacityValue(segment2)) {
                const opacity = Number(segment2);
                return {
                    type: "color",
                    hue,
                    tint,
                    opacity
                };
            }
            return {
                type: "color",
                hue,
                tint
            };
        }
        return {
            type: "hue",
            value: hue
        };
    }
    if (isColorBlendModeValue(segment0)) return {
        type: "blendMode",
        value: segment0
    };
}
function isColorConfigBaseTone(str) {
    return COLOR_CONFIG_CARD_TONES.includes(str);
}
function isColorConfigBaseKey(str) {
    return COLOR_CONFIG_CARD_KEYS.includes(str);
}
function isColorConfigStateKey(str) {
    return COLOR_CONFIG_STATE_KEYS.includes(str);
}
function isColorConfigStateTone(str) {
    return COLOR_CONFIG_STATE_TONES.includes(str);
}
function isColorConfigBlendKey(str) {
    return COLOR_CONFIG_BLEND_KEYS.includes(str);
}
function isColorTokenValue(str) {
    return parseTokenValue(str)?.type === "color" || parseTokenValue(str)?.type === "hue";
}
function isColorValue(str) {
    return str === "black" || str === "white";
}
function isColorOpacityValue(str) {
    return str === "0" || /^0\.[0-9]+$/.test(str) || str === "1";
}
function compileColorTokenValue(node) {
    let key = "";
    return node.key === "black" || node.key === "white" ? key = node.key : key = `${node.hue}/${node.tint}`, node.mix !== void 0 ? `${key} ${node.mix * 100}%` : (node.opacity !== void 0 && (key += `/${node.opacity}`), key);
}
const DEFAULT_COLOR_TOKEN_VALUE = [
    "500",
    "500"
];
function resolveColorTokenValue(context, value = DEFAULT_COLOR_TOKEN_VALUE) {
    const { hue, scheme } = context, node = parseTokenValue(value[scheme === "light" ? 0 : 1]);
    if (!node || node.type !== "color") throw new Error(`Invalid color token: ${value[0]}`);
    return compileColorTokenValue({
        ...node,
        hue: node.hue || hue
    });
}
const defaultColorTokens = {
    base: {
        "*": {
            _blend: [
                "multiply",
                "screen"
            ],
            accent: {
                fg: [
                    "purple/600",
                    "purple/400"
                ]
            },
            avatar: {
                "*": {
                    _blend: [
                        "screen",
                        "multiply"
                    ],
                    bg: [
                        "500",
                        "400"
                    ],
                    fg: [
                        "white",
                        "black"
                    ]
                }
            },
            backdrop: [
                "gray/200/0.5",
                "black/0.5"
            ],
            badge: {
                "*": {
                    bg: [
                        "100",
                        "900"
                    ],
                    fg: [
                        "600",
                        "400"
                    ],
                    icon: [
                        "500",
                        "500"
                    ],
                    dot: [
                        "500",
                        "500"
                    ]
                },
                positive: {
                    bg: [
                        "200 50%",
                        "900"
                    ],
                    fg: [
                        "600",
                        "500"
                    ]
                },
                caution: {
                    bg: [
                        "200 50%",
                        "900"
                    ],
                    fg: [
                        "600",
                        "500"
                    ]
                }
            },
            bg: [
                "50",
                "950"
            ],
            border: [
                "200",
                "800"
            ],
            code: {
                bg: [
                    "50",
                    "950"
                ],
                fg: [
                    "600",
                    "400"
                ]
            },
            fg: [
                "800",
                "200"
            ],
            focusRing: [
                "blue/500",
                "blue/500"
            ],
            icon: [
                "600",
                "400"
            ],
            kbd: {
                bg: [
                    "white",
                    "black"
                ],
                fg: [
                    "600",
                    "400"
                ],
                border: [
                    "200",
                    "800"
                ]
            },
            link: {
                fg: [
                    "blue/600",
                    "blue/300"
                ]
            },
            muted: {
                bg: [
                    "50",
                    "950"
                ],
                fg: [
                    "700 75%",
                    "300 75%"
                ]
            },
            shadow: {
                outline: [
                    "500/0.3",
                    "500/0.4"
                ],
                umbra: [
                    "gray/500/0.1",
                    "black/0.2"
                ],
                penumbra: [
                    "gray/500/0.07",
                    "black/0.14"
                ],
                ambient: [
                    "gray/500/0.06",
                    "black/0.12"
                ]
            },
            skeleton: {
                from: [
                    "100",
                    "900"
                ],
                to: [
                    "100 50%",
                    "900 50%"
                ]
            }
        },
        transparent: {
            bg: [
                "50",
                "black"
            ]
        },
        default: {
            bg: [
                "white",
                "950"
            ],
            fg: [
                "800",
                "200"
            ],
            muted: {
                fg: [
                    "600",
                    "400"
                ]
            }
        },
        primary: {
            _hue: "blue"
        },
        suggest: {
            _hue: "purple"
        },
        positive: {
            _hue: "green",
            shadow: {
                outline: [
                    "500/0.4",
                    "500/0.4"
                ]
            }
        },
        caution: {
            _hue: "yellow",
            shadow: {
                outline: [
                    "600/0.3",
                    "500/0.4"
                ]
            }
        },
        critical: {
            _hue: "red"
        }
    },
    button: {
        default: {
            "*": {
                "*": {
                    _blend: [
                        "screen",
                        "multiply"
                    ],
                    accent: {
                        fg: [
                            "purple/300",
                            "purple/700"
                        ]
                    },
                    avatar: {
                        "*": {
                            _blend: [
                                "screen",
                                "multiply"
                            ],
                            bg: [
                                "500",
                                "400"
                            ],
                            fg: [
                                "white",
                                "black"
                            ]
                        }
                    },
                    badge: {
                        "*": {
                            bg: [
                                "900",
                                "100"
                            ],
                            fg: [
                                "400",
                                "600"
                            ],
                            dot: [
                                "500",
                                "500"
                            ],
                            icon: [
                                "500",
                                "500"
                            ]
                        }
                    },
                    bg: [
                        "500",
                        "400"
                    ],
                    border: [
                        "500/0",
                        "400/0"
                    ],
                    code: {
                        bg: [
                            "500 20%",
                            "400 20%"
                        ],
                        fg: [
                            "200",
                            "600"
                        ]
                    },
                    fg: [
                        "white",
                        "black"
                    ],
                    icon: [
                        "100 70%",
                        "900 70%"
                    ],
                    kbd: {
                        bg: [
                            "black",
                            "white"
                        ],
                        fg: [
                            "200",
                            "600"
                        ],
                        border: [
                            "800",
                            "200"
                        ]
                    },
                    link: {
                        fg: [
                            "blue/200",
                            "blue/600"
                        ]
                    },
                    muted: {
                        bg: [
                            "950",
                            "50"
                        ],
                        fg: [
                            "100 70%",
                            "900 70%"
                        ]
                    },
                    skeleton: {
                        from: [
                            "900",
                            "100"
                        ],
                        to: [
                            "900 50%",
                            "100 50%"
                        ]
                    }
                },
                hovered: {
                    bg: [
                        "600",
                        "300"
                    ],
                    border: [
                        "700/0",
                        "300/0"
                    ]
                },
                pressed: {
                    bg: [
                        "700",
                        "300"
                    ]
                },
                selected: {
                    bg: [
                        "700",
                        "300"
                    ]
                },
                disabled: {
                    _hue: "gray",
                    accent: {
                        fg: [
                            "100 70%",
                            "900 70%"
                        ]
                    },
                    avatar: {
                        "*": {
                            _blend: [
                                "screen",
                                "multiply"
                            ],
                            bg: [
                                "gray/500",
                                "gray/400"
                            ],
                            fg: [
                                "white",
                                "black"
                            ]
                        }
                    },
                    badge: {
                        "*": {
                            bg: [
                                "gray/700",
                                "gray/300"
                            ],
                            fg: [
                                "white",
                                "black"
                            ],
                            dot: [
                                "white",
                                "black"
                            ],
                            icon: [
                                "white",
                                "black"
                            ]
                        }
                    },
                    bg: [
                        "300",
                        "600"
                    ],
                    code: {
                        bg: [
                            "950",
                            "50"
                        ],
                        fg: [
                            "300",
                            "600"
                        ]
                    },
                    fg: [
                        "300",
                        "600"
                    ],
                    muted: {
                        bg: [
                            "950",
                            "50"
                        ],
                        fg: [
                            "300",
                            "600"
                        ]
                    },
                    kbd: {
                        bg: [
                            "black",
                            "white"
                        ],
                        fg: [
                            "white",
                            "black"
                        ],
                        border: [
                            "700",
                            "300"
                        ]
                    },
                    link: {
                        fg: [
                            "100 70%",
                            "900 70%"
                        ]
                    }
                }
            },
            default: {
                "*": {
                    avatar: {
                        "*": {
                            _blend: [
                                "screen",
                                "multiply"
                            ],
                            bg: [
                                "500",
                                "400"
                            ],
                            fg: [
                                "white",
                                "black"
                            ]
                        }
                    },
                    bg: [
                        "800",
                        "200"
                    ],
                    muted: {
                        bg: [
                            "950",
                            "50"
                        ],
                        fg: [
                            "400",
                            "600"
                        ]
                    }
                },
                hovered: {
                    bg: [
                        "900",
                        "100"
                    ]
                },
                pressed: {
                    bg: [
                        "black",
                        "white"
                    ]
                },
                selected: {
                    bg: [
                        "black",
                        "white"
                    ]
                }
            }
        },
        ghost: {
            "*": {
                "*": {
                    _blend: [
                        "multiply",
                        "screen"
                    ],
                    accent: {
                        fg: [
                            "purple/700 60%",
                            "purple/300 70%"
                        ]
                    },
                    avatar: {
                        "*": {
                            _blend: [
                                "screen",
                                "multiply"
                            ],
                            bg: [
                                "500",
                                "400"
                            ],
                            fg: [
                                "white",
                                "black"
                            ]
                        }
                    },
                    badge: {
                        "*": {
                            bg: [
                                "100",
                                "900"
                            ],
                            fg: [
                                "600",
                                "400"
                            ],
                            dot: [
                                "500",
                                "500"
                            ],
                            icon: [
                                "500",
                                "500"
                            ]
                        }
                    },
                    bg: [
                        "50",
                        "950"
                    ],
                    border: [
                        "100",
                        "900"
                    ],
                    code: {
                        bg: [
                            "500 10%",
                            "400 10%"
                        ],
                        fg: [
                            "700 60%",
                            "400 60%"
                        ]
                    },
                    fg: [
                        "600",
                        "400"
                    ],
                    icon: [
                        "700 60%",
                        "300 60%"
                    ],
                    kbd: {
                        bg: [
                            "white",
                            "black"
                        ],
                        fg: [
                            "600",
                            "400"
                        ],
                        border: [
                            "200",
                            "800"
                        ]
                    },
                    link: {
                        fg: [
                            "blue/700 60%",
                            "blue/300 60%"
                        ]
                    },
                    muted: {
                        bg: [
                            "100",
                            "950"
                        ],
                        fg: [
                            "700 60%",
                            "300 60%"
                        ]
                    },
                    skeleton: {
                        from: [
                            "100",
                            "900"
                        ],
                        to: [
                            "100 50%",
                            "900 50%"
                        ]
                    }
                },
                hovered: {
                    bg: [
                        "100",
                        "900"
                    ],
                    fg: [
                        "700",
                        "300"
                    ]
                },
                pressed: {
                    bg: [
                        "200",
                        "800"
                    ],
                    fg: [
                        "800",
                        "200"
                    ]
                },
                selected: {
                    bg: [
                        "200",
                        "800"
                    ],
                    fg: [
                        "800",
                        "200"
                    ]
                },
                disabled: {
                    _hue: "gray",
                    accent: {
                        fg: [
                            "200",
                            "800"
                        ]
                    },
                    avatar: {
                        "*": {
                            _blend: [
                                "screen",
                                "multiply"
                            ],
                            bg: [
                                "gray/100",
                                "gray/900"
                            ],
                            fg: [
                                "white",
                                "black"
                            ]
                        }
                    },
                    badge: {
                        "*": {
                            _hue: "gray",
                            bg: [
                                "50",
                                "950"
                            ],
                            fg: [
                                "gray/200",
                                "gray/800"
                            ],
                            dot: [
                                "gray/200",
                                "gray/800"
                            ],
                            icon: [
                                "gray/200",
                                "gray/800"
                            ]
                        }
                    },
                    border: [
                        "100",
                        "900"
                    ],
                    code: {
                        bg: [
                            "50",
                            "950"
                        ],
                        fg: [
                            "200",
                            "800"
                        ]
                    },
                    fg: [
                        "400",
                        "600"
                    ],
                    icon: [
                        "300",
                        "700"
                    ],
                    muted: {
                        fg: [
                            "300",
                            "700"
                        ]
                    },
                    kbd: {
                        bg: [
                            "white",
                            "black"
                        ],
                        fg: [
                            "200",
                            "800"
                        ],
                        border: [
                            "100",
                            "900"
                        ]
                    },
                    link: {
                        fg: [
                            "200",
                            "800"
                        ]
                    }
                }
            },
            positive: {
                "*": {
                    border: [
                        "600 20%",
                        "800"
                    ]
                }
            },
            caution: {
                "*": {
                    border: [
                        "600 20%",
                        "800"
                    ]
                }
            }
        },
        bleed: {
            "*": {
                "*": {
                    _blend: [
                        "multiply",
                        "screen"
                    ],
                    accent: {
                        fg: [
                            "purple/700 70%",
                            "purple/300 70%"
                        ]
                    },
                    avatar: {
                        "*": {
                            _blend: [
                                "screen",
                                "multiply"
                            ],
                            bg: [
                                "500",
                                "400"
                            ],
                            fg: [
                                "white",
                                "black"
                            ]
                        }
                    },
                    badge: {
                        "*": {
                            bg: [
                                "100",
                                "900"
                            ],
                            fg: [
                                "600",
                                "400"
                            ],
                            dot: [
                                "500",
                                "500"
                            ],
                            icon: [
                                "500",
                                "500"
                            ]
                        }
                    },
                    bg: [
                        "white",
                        "black"
                    ],
                    border: [
                        "white/0",
                        "black/0"
                    ],
                    code: {
                        bg: [
                            "50",
                            "950"
                        ],
                        fg: [
                            "700 75%",
                            "300 75%"
                        ]
                    },
                    fg: [
                        "700",
                        "300"
                    ],
                    icon: [
                        "700 75%",
                        "300 75%"
                    ],
                    kbd: {
                        bg: [
                            "white",
                            "black"
                        ],
                        fg: [
                            "700",
                            "300"
                        ],
                        border: [
                            "200",
                            "800"
                        ]
                    },
                    link: {
                        fg: [
                            "blue/700 70%",
                            "blue/300 70%"
                        ]
                    },
                    muted: {
                        bg: [
                            "100",
                            "950"
                        ],
                        fg: [
                            "700 75%",
                            "300 75%"
                        ]
                    },
                    skeleton: {
                        from: [
                            "100",
                            "900"
                        ],
                        to: [
                            "100 50%",
                            "900 50%"
                        ]
                    }
                },
                hovered: {
                    bg: [
                        "50",
                        "950"
                    ],
                    fg: [
                        "800",
                        "200"
                    ],
                    icon: [
                        "800 70%",
                        "300 70%"
                    ]
                },
                pressed: {
                    bg: [
                        "100",
                        "900"
                    ],
                    fg: [
                        "800",
                        "200"
                    ],
                    icon: [
                        "800 70%",
                        "200 70%"
                    ]
                },
                selected: {
                    bg: [
                        "100",
                        "900"
                    ],
                    fg: [
                        "800",
                        "200"
                    ],
                    icon: [
                        "800 60%",
                        "200 60%"
                    ]
                },
                disabled: {
                    _hue: "gray",
                    accent: {
                        fg: [
                            "200",
                            "800"
                        ]
                    },
                    avatar: {
                        "*": {
                            _blend: [
                                "screen",
                                "multiply"
                            ],
                            bg: [
                                "gray/100",
                                "gray/900"
                            ],
                            fg: [
                                "white",
                                "black"
                            ]
                        }
                    },
                    badge: {
                        "*": {
                            _hue: "gray",
                            bg: [
                                "50",
                                "950"
                            ],
                            fg: [
                                "gray/200",
                                "gray/800"
                            ],
                            dot: [
                                "gray/200",
                                "gray/800"
                            ],
                            icon: [
                                "gray/200",
                                "gray/800"
                            ]
                        }
                    },
                    code: {
                        bg: [
                            "50",
                            "950"
                        ],
                        fg: [
                            "200",
                            "800"
                        ]
                    },
                    fg: [
                        "400",
                        "600"
                    ],
                    icon: [
                        "300",
                        "700"
                    ],
                    muted: {
                        fg: [
                            "400",
                            "600"
                        ]
                    },
                    kbd: {
                        bg: [
                            "white",
                            "black"
                        ],
                        fg: [
                            "200",
                            "800"
                        ],
                        border: [
                            "100",
                            "900"
                        ]
                    },
                    link: {
                        fg: [
                            "200",
                            "800"
                        ]
                    }
                }
            }
        }
    },
    input: {
        "*": {
            "*": {
                _blend: [
                    "multiply",
                    "screen"
                ],
                bg: [
                    "white",
                    "black"
                ],
                border: [
                    "200",
                    "700"
                ],
                fg: [
                    "black",
                    "200"
                ],
                muted: {
                    bg: [
                        "50",
                        "950"
                    ]
                },
                placeholder: [
                    "400",
                    "600"
                ]
            },
            hovered: {
                border: [
                    "300",
                    "700"
                ]
            },
            readOnly: {
                bg: [
                    "50",
                    "950"
                ],
                border: [
                    "200",
                    "800"
                ],
                fg: [
                    "800",
                    "200"
                ]
            },
            disabled: {
                bg: [
                    "50",
                    "950"
                ],
                fg: [
                    "400",
                    "600"
                ],
                border: [
                    "100",
                    "900"
                ],
                placeholder: [
                    "200",
                    "800 50%"
                ]
            }
        },
        invalid: {
            "*": {
                _hue: "red",
                bg: [
                    "100",
                    "950"
                ]
            }
        }
    },
    selectable: {
        "*": {
            "*": {
                _blend: [
                    "multiply",
                    "screen"
                ],
                accent: {
                    fg: [
                        "purple/700 70%",
                        "purple/300 70%"
                    ]
                },
                avatar: {
                    "*": {
                        _blend: [
                            "screen",
                            "multiply"
                        ],
                        bg: [
                            "500",
                            "400"
                        ],
                        fg: [
                            "white",
                            "black"
                        ]
                    }
                },
                badge: {
                    "*": {
                        bg: [
                            "100",
                            "900"
                        ],
                        fg: [
                            "600",
                            "400"
                        ],
                        dot: [
                            "500",
                            "500"
                        ],
                        icon: [
                            "500",
                            "500"
                        ]
                    }
                },
                bg: [
                    "white",
                    "black"
                ],
                border: [
                    "200",
                    "800"
                ],
                code: {
                    bg: [
                        "50",
                        "950"
                    ],
                    fg: [
                        "600",
                        "400"
                    ]
                },
                fg: [
                    "700",
                    "300"
                ],
                icon: [
                    "700 75%",
                    "300 75%"
                ],
                kbd: {
                    bg: [
                        "white",
                        "black"
                    ],
                    fg: [
                        "600",
                        "400"
                    ],
                    border: [
                        "200",
                        "800"
                    ]
                },
                link: {
                    fg: [
                        "blue/700 70%",
                        "blue/300 70%"
                    ]
                },
                muted: {
                    bg: [
                        "50",
                        "950"
                    ],
                    fg: [
                        "700 75%",
                        "300 75%"
                    ]
                },
                skeleton: {
                    from: [
                        "100",
                        "900"
                    ],
                    to: [
                        "100 50%",
                        "900 50%"
                    ]
                }
            },
            hovered: {
                bg: [
                    "50",
                    "950"
                ]
            },
            pressed: {
                bg: [
                    "100",
                    "900"
                ]
            },
            selected: {
                _blend: [
                    "screen",
                    "multiply"
                ],
                accent: {
                    fg: [
                        "purple/300",
                        "purple/700"
                    ]
                },
                avatar: {
                    "*": {
                        _blend: [
                            "multiply",
                            "screen"
                        ],
                        bg: [
                            "white",
                            "black"
                        ],
                        fg: [
                            "black",
                            "white"
                        ]
                    }
                },
                badge: {
                    "*": {
                        bg: [
                            "900",
                            "100"
                        ],
                        fg: [
                            "400",
                            "600"
                        ],
                        dot: [
                            "500",
                            "500"
                        ],
                        icon: [
                            "500",
                            "500"
                        ]
                    }
                },
                bg: [
                    "500",
                    "400"
                ],
                border: [
                    "500 20%",
                    "400 20%"
                ],
                code: {
                    bg: [
                        "500 20%",
                        "400 20%"
                    ],
                    fg: [
                        "200",
                        "600"
                    ]
                },
                fg: [
                    "white",
                    "black"
                ],
                icon: [
                    "100 70%",
                    "900 70%"
                ],
                kbd: {
                    bg: [
                        "black",
                        "white"
                    ],
                    fg: [
                        "200",
                        "600"
                    ],
                    border: [
                        "800",
                        "200"
                    ]
                },
                link: {
                    fg: [
                        "blue/200",
                        "blue/600"
                    ]
                },
                muted: {
                    bg: [
                        "500 10%",
                        "400 10%"
                    ],
                    fg: [
                        "100 70%",
                        "900 70%"
                    ]
                },
                skeleton: {
                    from: [
                        "900",
                        "100"
                    ],
                    to: [
                        "900 50%",
                        "100 50%"
                    ]
                }
            },
            disabled: {
                _hue: "gray",
                accent: {
                    fg: [
                        "200",
                        "800"
                    ]
                },
                avatar: {
                    "*": {
                        _blend: [
                            "screen",
                            "multiply"
                        ],
                        bg: [
                            "gray/100",
                            "gray/900"
                        ],
                        fg: [
                            "white",
                            "black"
                        ]
                    }
                },
                badge: {
                    "*": {
                        _hue: "gray",
                        bg: [
                            "50",
                            "950"
                        ],
                        fg: [
                            "gray/200",
                            "gray/800"
                        ],
                        dot: [
                            "gray/200",
                            "gray/800"
                        ],
                        icon: [
                            "gray/200",
                            "gray/800"
                        ]
                    }
                },
                border: [
                    "100",
                    "900"
                ],
                code: {
                    bg: [
                        "50",
                        "950"
                    ],
                    fg: [
                        "200",
                        "800"
                    ]
                },
                fg: [
                    "200",
                    "800"
                ],
                icon: [
                    "200",
                    "800"
                ],
                kbd: {
                    bg: [
                        "white",
                        "black"
                    ],
                    fg: [
                        "200",
                        "800"
                    ],
                    border: [
                        "100",
                        "900"
                    ]
                },
                link: {
                    fg: [
                        "200",
                        "800"
                    ]
                },
                muted: {
                    bg: [
                        "50 50%",
                        "950 50%"
                    ],
                    fg: [
                        "200",
                        "800"
                    ]
                }
            }
        },
        default: {
            selected: {
                _hue: "blue"
            }
        },
        critical: {
            disabled: {
                bg: [
                    "50 50%",
                    "950 50%"
                ]
            }
        }
    },
    syntax: {
        atrule: [
            "purple/600",
            "purple/400"
        ],
        attrName: [
            "green/600",
            "green/400"
        ],
        attrValue: [
            "yellow/600",
            "yellow/400"
        ],
        attribute: [
            "yellow/600",
            "yellow/400"
        ],
        boolean: [
            "purple/600",
            "purple/400"
        ],
        builtin: [
            "purple/600",
            "purple/400"
        ],
        cdata: [
            "yellow/600",
            "yellow/400"
        ],
        char: [
            "yellow/600",
            "yellow/400"
        ],
        class: [
            "orange/600",
            "orange/400"
        ],
        className: [
            "cyan/600",
            "cyan/400"
        ],
        comment: [
            "gray/400",
            "gray/600"
        ],
        constant: [
            "purple/600",
            "purple/400"
        ],
        deleted: [
            "red/600",
            "red/400"
        ],
        entity: [
            "red/600",
            "red/400"
        ],
        function: [
            "green/600",
            "green/400"
        ],
        hexcode: [
            "blue/600",
            "blue/400"
        ],
        id: [
            "purple/600",
            "purple/400"
        ],
        important: [
            "purple/600",
            "purple/400"
        ],
        inserted: [
            "yellow/600",
            "yellow/400"
        ],
        keyword: [
            "magenta/600",
            "magenta/400"
        ],
        number: [
            "purple/600",
            "purple/400"
        ],
        operator: [
            "magenta/600",
            "magenta/400"
        ],
        property: [
            "blue/600",
            "blue/400"
        ],
        pseudoClass: [
            "yellow/600",
            "yellow/400"
        ],
        pseudoElement: [
            "yellow/600",
            "yellow/400"
        ],
        punctuation: [
            "gray/600",
            "gray/400"
        ],
        regex: [
            "blue/600",
            "blue/400"
        ],
        selector: [
            "red/600",
            "red/400"
        ],
        string: [
            "yellow/600",
            "yellow/400"
        ],
        symbol: [
            "purple/600",
            "purple/400"
        ],
        tag: [
            "red/600",
            "red/400"
        ],
        unit: [
            "orange/600",
            "orange/400"
        ],
        url: [
            "red/600",
            "red/400"
        ],
        variable: [
            "red/600",
            "red/400"
        ]
    }
};
function isRecord(value) {
    return !!(value && typeof value == "object" && !Array.isArray(value));
}
function merge(...records) {
    const _records = records.filter(Boolean);
    return _records.length === 0 ? {} : _records.reduce(_merge, {});
}
function _merge(acc, source) {
    for (const key of Object.keys(source)){
        const prevValue = acc[key], nextValue = source[key];
        isRecord(prevValue) && isRecord(nextValue) ? acc[key] = merge(prevValue, nextValue) : acc[key] = nextValue;
    }
    return acc;
}
function resolveColorTokens(inputTokens) {
    const tokens = merge(defaultColorTokens, inputTokens);
    return {
        base: resolveBaseColorTokens(tokens),
        button: resolveButtonColorTokens(tokens),
        input: resolveInputColorTokens(tokens),
        selectable: resolveSelectableColorTokens(tokens),
        syntax: tokens.syntax
    };
}
function resolveBaseColorTokens(sparseTokens) {
    const tokens = {};
    for (const tone of THEME_COLOR_CARD_TONES)tokens[tone] = resolveBaseColorTones(sparseTokens, tone);
    return tokens;
}
function resolveBaseColorTones(inputTokens, tone) {
    const spec = merge(inputTokens?.base?.["*"], inputTokens?.base?.[tone]), hue = spec._hue || inputTokens?.base?.[tone]?._hue || "gray";
    return {
        ...spec,
        _hue: hue,
        avatar: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$color$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["COLOR_HUES"].reduce((acc, hue2)=>({
                ...acc,
                [hue2]: merge({
                    _hue: hue2
                }, spec.avatar?.["*"], spec.avatar?.[hue2])
            }), {}),
        badge: THEME_COLOR_STATE_TONES.reduce((acc, tone2)=>({
                ...acc,
                [tone2]: {
                    _hue: inputTokens?.base?.[tone2]?._hue || hue,
                    ...spec.badge?.["*"],
                    ...spec.badge?.[tone2]
                }
            }), {})
    };
}
function resolveButtonColorTokens(inputTokens) {
    const tokens = {};
    for (const mode of THEME_COLOR_BUTTON_MODES)tokens[mode] = resolveButtonToneColorTokens(inputTokens, mode);
    return tokens;
}
function resolveButtonToneColorTokens(inputTokens, mode) {
    const tokens = {};
    for (const tone of THEME_COLOR_STATE_TONES)tokens[tone] = resolveButtonModeColorTokens(inputTokens, mode, tone);
    return tokens;
}
function resolveButtonModeColorTokens(inputTokens, mode, tone) {
    const tokens = {};
    for (const state of THEME_COLOR_STATES)tokens[state] = resolveButtonStateColorTokens(inputTokens, tone, mode, state);
    return tokens;
}
function resolveButtonStateColorTokens(inputTokens, tone, mode, state) {
    const spec = merge(inputTokens?.button?.[mode]?.["*"]?.["*"], inputTokens?.button?.[mode]?.[tone]?.["*"], inputTokens?.button?.[mode]?.["*"]?.[state], inputTokens?.button?.[mode]?.[tone]?.[state]), hue = spec._hue || inputTokens?.base?.[tone]?._hue;
    return {
        ...spec,
        _hue: hue,
        avatar: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$color$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["COLOR_HUES"].reduce((acc, hue2)=>({
                ...acc,
                [hue2]: merge({
                    _hue: hue2
                }, spec.avatar?.["*"], spec.avatar?.[hue2])
            }), {}),
        badge: THEME_COLOR_STATE_TONES.reduce((acc, tone2)=>({
                ...acc,
                [tone2]: {
                    _hue: inputTokens?.base?.[tone2]?._hue || hue,
                    ...spec.badge?.["*"],
                    ...spec.badge?.[tone2]
                }
            }), {})
    };
}
function resolveInputColorTokens(inputTokens) {
    const tokens = {};
    for (const mode of THEME_COLOR_INPUT_MODES)tokens[mode] = resolveInputModeColorTokens(inputTokens, mode);
    return tokens;
}
function resolveInputModeColorTokens(inputTokens, mode) {
    const states = {};
    for (const state of THEME_COLOR_INPUT_STATES)states[state] = resolveInputStateColorTokens(inputTokens, mode, state);
    return states;
}
function resolveInputStateColorTokens(inputTokens, mode, state) {
    const spec = merge(inputTokens?.input?.["*"]?.["*"], inputTokens?.input?.[mode]?.["*"], inputTokens?.input?.["*"]?.[state], inputTokens?.input?.[mode]?.[state]), hue = spec._hue || inputTokens?.input?.[mode]?._hue;
    return {
        ...spec,
        _hue: hue
    };
}
function resolveSelectableColorTokens(inputTokens) {
    const tokens = {};
    for (const tone of THEME_COLOR_STATE_TONES)tokens[tone] = resolveSelectableToneColorTokens(inputTokens, tone);
    return tokens;
}
function resolveSelectableToneColorTokens(inputTokens, tone) {
    const states = {
        _hue: inputTokens?.selectable?.[tone]?._hue || inputTokens?.base?.[tone]?._hue
    };
    for (const state of THEME_COLOR_STATES)states[state] = resolveSelectableStateColorTokens(inputTokens, tone, state);
    return states;
}
function resolveSelectableStateColorTokens(inputTokens, tone, state) {
    const spec = merge(inputTokens?.selectable?.["*"]?.["*"], inputTokens?.selectable?.[tone]?.["*"], inputTokens?.selectable?.["*"]?.[state], inputTokens?.selectable?.[tone]?.[state]), hue = spec._hue || inputTokens?.base?.[tone]?._hue;
    return {
        ...spec,
        _hue: hue,
        avatar: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$color$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["COLOR_HUES"].reduce((acc, hue2)=>({
                ...acc,
                [hue2]: merge({
                    _hue: hue2
                }, spec.avatar?.["*"], spec.avatar?.[hue2])
            }), {}),
        badge: THEME_COLOR_STATE_TONES.reduce((acc, tone2)=>({
                ...acc,
                [tone2]: {
                    _hue: inputTokens?.base?.[tone2]?._hue || hue,
                    ...spec.badge?.["*"],
                    ...spec.badge?.[tone2]
                }
            }), {})
    };
}
function buildColorTheme(config) {
    const resolvedConfig = {
        color: resolveColorTokens(config?.color)
    };
    return {
        light: buildColorScheme({
            scheme: "light"
        }, resolvedConfig),
        dark: buildColorScheme({
            scheme: "dark"
        }, resolvedConfig)
    };
}
function buildColorScheme(options, config) {
    const { scheme } = options, colorScheme = {};
    for (const tone of THEME_COLOR_CARD_TONES)colorScheme[tone] = buildCardColorTheme({
        scheme,
        tone
    }, config);
    return colorScheme;
}
function buildCardColorTheme(options, config) {
    const { scheme, tone } = options, tokens = config?.color?.base?.[tone], context = {
        hue: tokens?._hue || "gray",
        scheme
    };
    return {
        _blend: (tokens?._blend || [
            "multiply",
            "screen"
        ])[scheme === "light" ? 0 : 1],
        _dark: scheme === "dark",
        accent: {
            fg: resolveColorTokenValue(context, tokens?.accent?.fg)
        },
        avatar: buildAvatarColorTheme({
            scheme
        }, tokens),
        backdrop: resolveColorTokenValue(context, tokens?.backdrop),
        badge: buildBadgeColorTheme(tokens?.badge, {
            scheme
        }, config),
        bg: resolveColorTokenValue(context, tokens?.bg),
        border: resolveColorTokenValue(context, tokens?.border),
        button: buildButtonColorTheme({
            scheme,
            tone
        }, config),
        code: {
            bg: resolveColorTokenValue(context, tokens?.code?.bg),
            fg: resolveColorTokenValue(context, tokens?.code?.fg)
        },
        fg: resolveColorTokenValue(context, tokens?.fg),
        focusRing: resolveColorTokenValue(context, tokens?.focusRing),
        icon: resolveColorTokenValue(context, tokens?.icon),
        input: buildInputColorTheme({
            scheme,
            tone
        }, config),
        kbd: {
            bg: resolveColorTokenValue(context, tokens?.kbd?.bg),
            fg: resolveColorTokenValue(context, tokens?.kbd?.fg),
            border: resolveColorTokenValue(context, tokens?.kbd?.border)
        },
        link: {
            fg: resolveColorTokenValue(context, tokens?.link?.fg)
        },
        muted: {
            bg: resolveColorTokenValue(context, tokens?.muted?.bg),
            fg: resolveColorTokenValue(context, tokens?.muted?.fg)
        },
        selectable: buildSelectableColorTheme({
            scheme,
            tone
        }, config),
        shadow: buildShadowColorTheme({
            scheme,
            tone
        }, config),
        skeleton: {
            from: resolveColorTokenValue(context, tokens?.skeleton?.from),
            to: resolveColorTokenValue(context, tokens?.skeleton?.to)
        },
        syntax: buildSyntaxColorTheme({
            scheme
        }, config)
    };
}
function buildShadowColorTheme(options, config) {
    const { scheme, tone } = options, tokens = config?.color?.base?.[tone], context = {
        hue: tokens?._hue || "gray",
        scheme
    };
    return {
        outline: resolveColorTokenValue(context, tokens?.shadow?.outline),
        umbra: resolveColorTokenValue(context, tokens?.shadow?.umbra),
        penumbra: resolveColorTokenValue(context, tokens?.shadow?.penumbra),
        ambient: resolveColorTokenValue(context, tokens?.shadow?.ambient)
    };
}
function buildAvatarColorTheme(options, stateTokens) {
    const { scheme } = options;
    return {
        gray: _buildAvatarColorTheme({
            color: "gray",
            scheme
        }, stateTokens),
        blue: _buildAvatarColorTheme({
            color: "blue",
            scheme
        }, stateTokens),
        purple: _buildAvatarColorTheme({
            color: "purple",
            scheme
        }, stateTokens),
        magenta: _buildAvatarColorTheme({
            color: "magenta",
            scheme
        }, stateTokens),
        red: _buildAvatarColorTheme({
            color: "red",
            scheme
        }, stateTokens),
        orange: _buildAvatarColorTheme({
            color: "orange",
            scheme
        }, stateTokens),
        yellow: _buildAvatarColorTheme({
            color: "yellow",
            scheme
        }, stateTokens),
        green: _buildAvatarColorTheme({
            color: "green",
            scheme
        }, stateTokens),
        cyan: _buildAvatarColorTheme({
            color: "cyan",
            scheme
        }, stateTokens)
    };
}
function _buildAvatarColorTheme(options, stateTokens) {
    const { color: color2, scheme } = options, tokens = stateTokens?.avatar?.[color2], context = {
        hue: tokens?._hue || "gray",
        scheme
    };
    return {
        _blend: (tokens?._blend || [
            "screen",
            "multiply"
        ])[scheme === "light" ? 0 : 1],
        bg: resolveColorTokenValue(context, tokens?.bg),
        fg: resolveColorTokenValue(context, tokens?.fg)
    };
}
function buildBadgeColorTheme(tokens, options, config) {
    const { scheme } = options, colorBadge = {};
    for (const tone of THEME_COLOR_STATE_TONES)colorBadge[tone] = _buildBadgeColorTheme(tokens, {
        scheme,
        tone
    }, config);
    return colorBadge;
}
function _buildBadgeColorTheme(parentTokens, options, config) {
    const { scheme, tone } = options, tokens = parentTokens?.[tone], context = {
        hue: tokens?._hue || config?.color?.base?.[tone]?._hue || "gray",
        scheme
    };
    return {
        bg: resolveColorTokenValue(context, tokens?.bg),
        fg: resolveColorTokenValue(context, tokens?.fg),
        dot: resolveColorTokenValue(context, tokens?.dot),
        icon: resolveColorTokenValue(context, tokens?.icon)
    };
}
function buildButtonColorTheme(options, config) {
    const { scheme, tone: cardTone } = options, modes = {};
    for (const mode of THEME_COLOR_BUTTON_MODES)modes[mode] = buildButtonTonesColorTheme({
        cardTone,
        scheme,
        mode
    }, config);
    return modes;
}
function buildButtonTonesColorTheme(options, config) {
    const { cardTone, mode, scheme } = options, tones2 = {};
    for (const tone of THEME_COLOR_STATE_TONES)tones2[tone] = buildButtonStatesColorTheme({
        cardTone,
        mode,
        scheme,
        tone
    }, config);
    return tones2;
}
function buildButtonStatesColorTheme(options, config) {
    const { cardTone, mode, scheme, tone } = options, states = {};
    for (const state of THEME_COLOR_STATES)states[state] = buildButtonStateColorTheme({
        cardTone,
        mode,
        tone,
        scheme,
        state
    }, config);
    return states;
}
function buildButtonStateColorTheme(options, config) {
    const { cardTone, mode, tone, scheme, state } = options, cardTokens = config?.color?.base?.[cardTone], tokens = config?.color?.button?.[mode]?.[tone]?.[state], hue = tokens?._hue || cardTokens?._hue || "gray", blendMode = tokens?._blend || [
        "screen",
        "multiply"
    ], context = {
        hue,
        scheme
    };
    return {
        _blend: blendMode[scheme === "light" ? 0 : 1],
        accent: {
            fg: resolveColorTokenValue(context, tokens?.accent?.fg)
        },
        avatar: buildAvatarColorTheme({
            scheme
        }, tokens),
        badge: buildBadgeColorTheme(tokens?.badge, {
            scheme
        }, config),
        bg: resolveColorTokenValue(context, tokens?.bg),
        border: resolveColorTokenValue(context, tokens?.border),
        code: {
            bg: resolveColorTokenValue(context, tokens?.code?.bg),
            fg: resolveColorTokenValue(context, tokens?.code?.fg)
        },
        fg: resolveColorTokenValue(context, tokens?.fg),
        icon: resolveColorTokenValue(context, tokens?.icon),
        muted: {
            bg: resolveColorTokenValue(context, tokens?.muted?.bg),
            fg: resolveColorTokenValue(context, tokens?.muted?.fg)
        },
        kbd: {
            bg: resolveColorTokenValue(context, tokens?.kbd?.bg),
            fg: resolveColorTokenValue(context, tokens?.kbd?.fg),
            border: resolveColorTokenValue(context, tokens?.kbd?.border)
        },
        link: {
            fg: resolveColorTokenValue(context, tokens?.link?.fg)
        },
        skeleton: {
            from: resolveColorTokenValue(context, tokens?.skeleton?.from),
            to: resolveColorTokenValue(context, tokens?.skeleton?.to)
        }
    };
}
function buildInputColorTheme(options, config) {
    const { scheme, tone } = options;
    return {
        default: buildInputStatesColorTheme({
            mode: "default",
            scheme,
            tone
        }, config),
        invalid: buildInputStatesColorTheme({
            mode: "invalid",
            scheme,
            tone
        }, config)
    };
}
function buildInputStatesColorTheme(options, config) {
    const { mode, scheme, tone } = options;
    return {
        enabled: buildInputStateColorTheme({
            mode,
            scheme,
            state: "enabled",
            cardTone: tone
        }, config),
        hovered: buildInputStateColorTheme({
            mode,
            scheme,
            state: "hovered",
            cardTone: tone
        }, config),
        readOnly: buildInputStateColorTheme({
            mode,
            scheme,
            state: "readOnly",
            cardTone: tone
        }, config),
        disabled: buildInputStateColorTheme({
            mode,
            scheme,
            state: "disabled",
            cardTone: tone
        }, config)
    };
}
function buildInputStateColorTheme(options, config) {
    const { cardTone, mode, scheme, state } = options, cardTokens = config?.color?.base?.[cardTone], tokens = config?.color?.input?.[mode]?.[state], hue = tokens?._hue || cardTokens?._hue || "gray", blendMode = tokens?._blend || [
        "screen",
        "multiply"
    ], context = {
        hue,
        scheme
    };
    return {
        _blend: blendMode[scheme === "light" ? 0 : 1],
        bg: resolveColorTokenValue(context, tokens?.bg),
        border: resolveColorTokenValue(context, tokens?.border),
        fg: resolveColorTokenValue(context, tokens?.fg),
        muted: {
            bg: resolveColorTokenValue(context, tokens?.muted?.bg)
        },
        placeholder: resolveColorTokenValue(context, tokens?.placeholder)
    };
}
function buildSelectableColorTheme(options, config) {
    const { scheme, tone: cardTone } = options, tones2 = {};
    for (const tone of THEME_COLOR_STATE_TONES)tones2[tone] = buildSelectableStatesColorTheme({
        cardTone,
        scheme,
        tone
    }, config);
    return tones2;
}
function buildSelectableStatesColorTheme(options, config) {
    const { cardTone, scheme, tone } = options, states = {};
    for (const state of THEME_COLOR_STATES)states[state] = buildSelectableStateColorTheme({
        cardTone,
        tone,
        scheme,
        state
    }, config);
    return states;
}
function buildSelectableStateColorTheme(options, config) {
    const { cardTone, scheme, state, tone } = options, cardTokens = config?.color?.base?.[cardTone], tokens = config?.color?.selectable?.[tone]?.[state], hue = tokens?._hue || cardTokens?._hue || "gray", blendMode = tokens?._blend || [
        "screen",
        "multiply"
    ], context = {
        hue,
        scheme
    };
    return {
        _blend: blendMode[scheme === "light" ? 0 : 1],
        accent: {
            fg: resolveColorTokenValue(context, tokens?.accent?.fg)
        },
        avatar: buildAvatarColorTheme({
            scheme
        }, tokens),
        badge: buildBadgeColorTheme(tokens?.badge, {
            scheme
        }, config),
        bg: resolveColorTokenValue(context, tokens?.bg),
        border: resolveColorTokenValue(context, tokens?.border),
        code: {
            bg: resolveColorTokenValue(context, tokens?.code?.bg),
            fg: resolveColorTokenValue(context, tokens?.code?.fg)
        },
        fg: resolveColorTokenValue(context, tokens?.fg),
        icon: resolveColorTokenValue(context, tokens?.icon),
        muted: {
            bg: resolveColorTokenValue(context, tokens?.muted?.bg),
            fg: resolveColorTokenValue(context, tokens?.muted?.fg)
        },
        kbd: {
            bg: resolveColorTokenValue(context, tokens?.kbd?.bg),
            fg: resolveColorTokenValue(context, tokens?.kbd?.fg),
            border: resolveColorTokenValue(context, tokens?.kbd?.border)
        },
        link: {
            fg: resolveColorTokenValue(context, tokens?.link?.fg)
        },
        skeleton: {
            from: resolveColorTokenValue(context, tokens?.skeleton?.from),
            to: resolveColorTokenValue(context, tokens?.skeleton?.to)
        }
    };
}
function buildSyntaxColorTheme(options, config) {
    const { scheme } = options, tokens = config?.color?.syntax, context = {
        hue: "gray",
        scheme
    };
    return {
        atrule: resolveColorTokenValue(context, tokens?.atrule),
        attrName: resolveColorTokenValue(context, tokens?.attrName),
        attrValue: resolveColorTokenValue(context, tokens?.attrValue),
        attribute: resolveColorTokenValue(context, tokens?.attribute),
        boolean: resolveColorTokenValue(context, tokens?.boolean),
        builtin: resolveColorTokenValue(context, tokens?.builtin),
        cdata: resolveColorTokenValue(context, tokens?.cdata),
        char: resolveColorTokenValue(context, tokens?.char),
        class: resolveColorTokenValue(context, tokens?.class),
        className: resolveColorTokenValue(context, tokens?.className),
        comment: resolveColorTokenValue(context, tokens?.comment),
        constant: resolveColorTokenValue(context, tokens?.constant),
        deleted: resolveColorTokenValue(context, tokens?.deleted),
        doctype: resolveColorTokenValue(context, tokens?.doctype),
        entity: resolveColorTokenValue(context, tokens?.entity),
        function: resolveColorTokenValue(context, tokens?.function),
        hexcode: resolveColorTokenValue(context, tokens?.hexcode),
        id: resolveColorTokenValue(context, tokens?.id),
        important: resolveColorTokenValue(context, tokens?.important),
        inserted: resolveColorTokenValue(context, tokens?.inserted),
        keyword: resolveColorTokenValue(context, tokens?.keyword),
        number: resolveColorTokenValue(context, tokens?.number),
        operator: resolveColorTokenValue(context, tokens?.operator),
        prolog: resolveColorTokenValue(context, tokens?.prolog),
        property: resolveColorTokenValue(context, tokens?.property),
        pseudoClass: resolveColorTokenValue(context, tokens?.pseudoClass),
        pseudoElement: resolveColorTokenValue(context, tokens?.pseudoElement),
        punctuation: resolveColorTokenValue(context, tokens?.punctuation),
        regex: resolveColorTokenValue(context, tokens?.regex),
        selector: resolveColorTokenValue(context, tokens?.selector),
        string: resolveColorTokenValue(context, tokens?.string),
        symbol: resolveColorTokenValue(context, tokens?.symbol),
        tag: resolveColorTokenValue(context, tokens?.tag),
        unit: resolveColorTokenValue(context, tokens?.unit),
        url: resolveColorTokenValue(context, tokens?.url),
        variable: resolveColorTokenValue(context, tokens?.variable)
    };
}
const defaultColorPalette = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$color$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["color"];
function mixChannel(b, s, weight) {
    const delta = (s - b) * weight;
    return b + delta;
}
function mix(b, s, weight) {
    return {
        r: mixChannel(b.r, s.r, weight),
        g: mixChannel(b.g, s.g, weight),
        b: mixChannel(b.b, s.b, weight)
    };
}
function multiplyChannel(b, s) {
    return b * s;
}
function multiply(b, s) {
    return {
        r: multiplyChannel(b.r / 255, s.r / 255) * 255,
        g: multiplyChannel(b.g / 255, s.g / 255) * 255,
        b: multiplyChannel(b.b / 255, s.b / 255) * 255
    };
}
function screenChannel(b, s) {
    return b + s - b * s;
}
function screen(b, s) {
    return {
        r: screenChannel(b.r / 255, s.r / 255) * 255,
        g: screenChannel(b.g / 255, s.g / 255) * 255,
        b: screenChannel(b.b / 255, s.b / 255) * 255
    };
}
function lerp(x, y, a) {
    return x * (1 - a) + y * a;
}
function invlerp(x, y, a) {
    return clamp((a - x) / (y - x));
}
function clamp(a, min = 0, max = 1) {
    return Math.min(max, Math.max(min, a));
}
function range(x1, y1, x2, y2, a) {
    return lerp(x2, y2, invlerp(x1, y1, a));
}
function round(value) {
    return Math.round(value);
}
function hexToRgb(hex) {
    if (hex.length === 4) {
        const hexR = hex.slice(1, 2), hexG = hex.slice(2, 3), hexB = hex.slice(3, 4);
        return {
            r: parseInt(hexR + hexR, 16),
            g: parseInt(hexG + hexG, 16),
            b: parseInt(hexB + hexB, 16)
        };
    }
    return {
        r: parseInt(hex.slice(1, 3), 16),
        g: parseInt(hex.slice(3, 5), 16),
        b: parseInt(hex.slice(5, 7), 16)
    };
}
function rgbaToRGBA(rgba2) {
    const values = rgba2.replace(/rgba\(|\)/g, "").split(",");
    return {
        r: parseInt(values[0]),
        g: parseInt(values[1]),
        b: parseInt(values[2]),
        a: parseFloat(values[3])
    };
}
function rgbToHex(color2) {
    const r = round(clamp(Math.round(color2.r), 0, 255)), g = round(clamp(Math.round(color2.g), 0, 255)), b = round(clamp(Math.round(color2.b), 0, 255));
    return "a" in color2 ? `rgba(${r},${g},${b},${color2.a})` : "#" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);
}
function rgbToHsl({ r, g, b }) {
    r /= 255, g /= 255, b /= 255;
    const cmin = Math.min(r, g, b), cmax = Math.max(r, g, b), delta = cmax - cmin;
    let h = 0, s = 0, l = 0;
    return delta == 0 ? h = 0 : cmax == r ? h = (g - b) / delta % 6 : cmax == g ? h = (b - r) / delta + 2 : h = (r - g) / delta + 4, h = Math.round(h * 60), h < 0 && (h += 360), l = (cmax + cmin) / 2, s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1)), s = +(s * 100).toFixed(1), l = +(l * 100).toFixed(1), {
        h,
        s,
        l
    };
}
function hslToRgb(hsl) {
    const s = hsl.s / 100, l = hsl.l / 100, c = (1 - Math.abs(2 * l - 1)) * s, x = c * (1 - Math.abs(hsl.h / 60 % 2 - 1)), m = l - c / 2;
    let r = 0, g = 0, b = 0;
    return 0 <= hsl.h && hsl.h < 60 ? (r = c, g = x, b = 0) : 60 <= hsl.h && hsl.h < 120 ? (r = x, g = c, b = 0) : 120 <= hsl.h && hsl.h < 180 ? (r = 0, g = c, b = x) : 180 <= hsl.h && hsl.h < 240 ? (r = 0, g = x, b = c) : 240 <= hsl.h && hsl.h < 300 ? (r = x, g = 0, b = c) : 300 <= hsl.h && hsl.h < 360 && (r = c, g = 0, b = x), {
        r: Math.round((r + m) * 255),
        g: Math.round((g + m) * 255),
        b: Math.round((b + m) * 255)
    };
}
const HEX_CHARS = "0123456789ABCDEFabcdef", HSL_RE = /hsl\(\s*(\d+)\s*,\s*((\d+(?:\.\d+)?)%)\s*,\s*((\d+(?:\.\d+)?)%)\s*\)/i;
function isHexChars(str) {
    for (const c of str)if (HEX_CHARS.indexOf(c) === -1) return !1;
    return !0;
}
function isHex(str) {
    return str[0] !== "#" || !(str.length === 4 || str.length === 7) ? !1 : isHexChars(str.slice(1));
}
function parseHsl(str) {
    const res = HSL_RE.exec(str);
    if (!res) throw new Error(`parseHsl: string is not a HSL color: "${str}"`);
    return {
        h: parseInt(res[1]),
        s: parseFloat(res[3]),
        l: parseFloat(res[5])
    };
}
function parseColor(color2) {
    if (!color2) return {
        r: 0,
        g: 0,
        b: 0
    };
    if (typeof color2 != "string") throw new Error("parseColor: expected a string");
    if (isHex(color2)) return hexToRgb(color2);
    if (color2.startsWith("hsl(")) return hslToRgb(parseHsl(color2));
    if (color2.startsWith("rgba(")) return rgbaToRGBA(color2);
    throw new Error(`parseColor: unexpected color format: "${color2}"`);
}
function getContrastRatio(bg, fg) {
    const rgb1 = parseColor(bg), rgb2 = parseColor(fg), c1 = rgb_lrgb(rgb1), c2 = rgb_lrgb(rgb2), l1 = lrgb_luminance(c1), l2 = lrgb_luminance(c2);
    return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);
}
function rgb_lrgb({ r, g, b }) {
    return [
        rgb_lrgb1(r / 255),
        rgb_lrgb1(g / 255),
        rgb_lrgb1(b / 255)
    ];
}
function rgb_lrgb1(v) {
    return v <= 0.04045 ? v / 12.92 : ((v + 0.055) / 1.055) ** 2.4;
}
function lrgb_luminance([r, g, b]) {
    return 0.2126 * r + 0.7152 * g + 0.0722 * b;
}
function rgba(color2, a) {
    const rgb = parseColor(color2);
    return `rgba(${rgb.r},${rgb.g},${rgb.b},${a})`;
}
const RGB_RANGE = [
    0,
    255
];
function mixThemeColor(value, options) {
    const { blendMode } = options, color2 = parseColor(value), black2 = parseColor(options.black), white2 = parseColor(options.white), bg = options.bg ? parseColor(options.bg) : blendMode === "multiply" ? white2 : black2, paletteRange = {
        r: [
            black2.r,
            white2.r
        ],
        g: [
            black2.g,
            white2.g
        ],
        b: [
            black2.b,
            white2.b
        ]
    }, convertedBgColor = {
        r: clamp(range(...paletteRange.r, ...RGB_RANGE, bg.r), ...RGB_RANGE),
        g: clamp(range(...paletteRange.g, ...RGB_RANGE, bg.g), ...RGB_RANGE),
        b: clamp(range(...paletteRange.b, ...RGB_RANGE, bg.b), ...RGB_RANGE)
    }, convertedColor = {
        r: clamp(range(...paletteRange.r, ...RGB_RANGE, color2.r), ...RGB_RANGE),
        g: clamp(range(...paletteRange.g, ...RGB_RANGE, color2.g), ...RGB_RANGE),
        b: clamp(range(...paletteRange.b, ...RGB_RANGE, color2.b), ...RGB_RANGE)
    }, resultColor = blendMode === "multiply" ? multiply(convertedBgColor, convertedColor) : screen(convertedBgColor, convertedColor), v = {
        r: clamp(range(...RGB_RANGE, ...paletteRange.r, resultColor.r), ...paletteRange.r),
        g: clamp(range(...RGB_RANGE, ...paletteRange.g, resultColor.g), ...paletteRange.g),
        b: clamp(range(...RGB_RANGE, ...paletteRange.b, resultColor.b), ...paletteRange.b)
    };
    return rgbToHex(v);
}
function renderColorValue(str, options) {
    const { bg, blendMode, colorPalette } = options;
    if (bg === "white") throw new Error("Cannot blend with white background");
    const node = parseTokenValue(str);
    if (!node || node.type !== "color") throw new Error(`Invalid color token value: ${str}`);
    let hex = "";
    if (node.key === "black" && (hex = renderColorHex(colorPalette.black)), node.key === "white" && (hex = renderColorHex(colorPalette.white)), node.hue && node.tint && (hex = renderColorHex(colorPalette[node.hue][node.tint])), !hex) throw new Error(`Invalid color token value: ${str}`);
    const hexBeforeMix = hex, mixOptions = {
        blendMode,
        bg,
        black: renderColorHex(colorPalette.black),
        // opacity: node.opacity,
        white: renderColorHex(colorPalette.white)
    };
    try {
        if (hex = mixThemeColor(hex, mixOptions), bg && node.mix !== void 0) {
            const from = hexToRgb(bg), to = hexToRgb(hex);
            hex = rgbToHex(mix(from, to, node.mix));
        }
    } catch (err) {
        throw console.warn("could not blend", hex, mixOptions), err;
    }
    return hex === "#aN" && (console.warn(`invalid color token value: ${str}`), hex = hexBeforeMix), node.opacity !== void 0 && (hex = rgba(hex, node.opacity)), hex;
}
function renderColorHex(color2) {
    return typeof color2 == "string" ? color2 : color2.hex;
}
function renderThemeColorSchemes(value, config) {
    const colorPalette = config?.palette ?? defaultColorPalette;
    return {
        light: renderThemeColorScheme(colorPalette, value.light),
        dark: renderThemeColorScheme(colorPalette, value.dark)
    };
}
function renderThemeColorScheme(colorPalette, value) {
    const toneEntries = Object.entries(value), [, transparentTone] = toneEntries.find(([k])=>k === "transparent"), [, defaultTone] = toneEntries.find(([k])=>k === "default"), renderedTransparentTone = renderThemeColor(transparentTone, {
        colorPalette
    }), renderedDefaultTone = renderThemeColor(defaultTone, {
        colorPalette
    }), bg = renderedDefaultTone.bg;
    if (bg === "white") throw new Error("Cannot blend with white background");
    return Object.fromEntries([
        [
            "transparent",
            renderedTransparentTone
        ],
        [
            "default",
            renderedDefaultTone
        ],
        ...toneEntries.filter(([k])=>k !== "default" && k !== "transparent").map(([k, v])=>[
                k,
                renderThemeColor(v, {
                    bg,
                    colorPalette
                })
            ])
    ]);
}
function renderThemeColor(value, options) {
    const { colorPalette, bg } = options, blendMode = value._blend || "multiply", baseBg = renderColorValue(value.bg, {
        colorPalette,
        bg,
        blendMode
    }), colorOptions = {
        colorPalette,
        bg: baseBg,
        blendMode
    }, button = renderThemeColorButton(value.button, {
        baseBg,
        blendMode,
        colorPalette
    }), selectable = renderThemeColorSelectable(value.selectable, {
        colorPalette,
        baseBg,
        blendMode
    }), shadow = {
        outline: renderColorValue(value.shadow.outline, colorOptions),
        umbra: renderColorValue(value.shadow.umbra, {
            ...colorOptions,
            bg: void 0,
            colorPalette: {
                ...colorPalette,
                black: "#000000"
            }
        }),
        penumbra: renderColorValue(value.shadow.penumbra, {
            ...colorOptions,
            bg: void 0,
            colorPalette: {
                ...colorPalette,
                black: "#000000"
            }
        }),
        ambient: renderColorValue(value.shadow.ambient, {
            ...colorOptions,
            bg: void 0,
            colorPalette: {
                ...colorPalette,
                black: "#000000"
            }
        })
    };
    return {
        _blend: blendMode,
        _dark: value._dark,
        accent: {
            fg: renderColorValue(value.accent.fg, colorOptions)
        },
        avatar: renderThemeColorAvatar(value.avatar, {
            baseBg,
            colorPalette,
            blendMode
        }),
        backdrop: renderColorValue(value.backdrop, colorOptions),
        badge: renderThemeColorBadge(value.badge, {
            baseBg,
            colorPalette,
            blendMode
        }),
        bg: baseBg,
        border: renderColorValue(value.border, colorOptions),
        button,
        code: {
            bg: renderColorValue(value.code.bg, colorOptions),
            fg: renderColorValue(value.code.fg, colorOptions)
        },
        fg: renderColorValue(value.fg, colorOptions),
        focusRing: renderColorValue(value.focusRing, colorOptions),
        icon: renderColorValue(value.icon, colorOptions),
        input: renderThemeColorInput(value.input, {
            baseBg,
            colorPalette,
            blendMode
        }),
        kbd: renderThemeColorKBD(value.kbd, {
            baseBg,
            colorPalette,
            blendMode
        }),
        link: {
            fg: renderColorValue(value.link.fg, colorOptions)
        },
        muted: {
            bg: renderColorValue(value.muted.bg, colorOptions),
            fg: renderColorValue(value.muted.fg, colorOptions)
        },
        shadow,
        skeleton: {
            from: renderColorValue(value.skeleton.from, colorOptions),
            to: renderColorValue(value.skeleton.to, colorOptions)
        },
        syntax: renderSyntaxColorTheme(value.syntax, {
            baseBg,
            colorPalette,
            blendMode
        }),
        selectable
    };
}
function renderThemeColorKBD(value, options) {
    const { baseBg, blendMode, colorPalette } = options, rootOptions = {
        bg: baseBg,
        blendMode,
        colorPalette
    }, bg = renderColorValue(value.bg, rootOptions), colorOptions = {
        bg,
        blendMode,
        colorPalette
    };
    return {
        bg,
        fg: renderColorValue(value.fg, colorOptions),
        border: renderColorValue(value.border, colorOptions)
    };
}
function renderThemeColorAvatar(value, options) {
    const colorAvatar = {};
    for (const hue of __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$color$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["COLOR_HUES"])colorAvatar[hue] = renderThemeColorAvatarColor(value[hue], options);
    return colorAvatar;
}
function renderThemeColorAvatarColor(value, options) {
    const { baseBg, blendMode: rootBlendMode, colorPalette } = options, blendMode = value._blend || "multiply", rootOptions = {
        bg: baseBg,
        blendMode: rootBlendMode,
        colorPalette
    }, bg = renderColorValue(value.bg, rootOptions), colorOptions = {
        bg,
        blendMode,
        colorPalette
    };
    return {
        _blend: blendMode,
        bg,
        fg: renderColorValue(value.fg, colorOptions)
    };
}
function renderThemeColorBadge(value, options) {
    const colorBadge = {};
    for (const tone of THEME_COLOR_STATE_TONES)colorBadge[tone] = renderThemeColorBadgeColor(value[tone], options);
    return colorBadge;
}
function renderThemeColorBadgeColor(value, options) {
    const { baseBg, blendMode: rootBlendMode, colorPalette } = options, blendMode = rootBlendMode, rootOptions = {
        bg: baseBg,
        blendMode: rootBlendMode,
        colorPalette
    }, bg = renderColorValue(value.bg, rootOptions), colorOptions = {
        bg,
        blendMode,
        colorPalette
    };
    return {
        bg,
        dot: renderColorValue(value.dot, colorOptions),
        fg: renderColorValue(value.fg, colorOptions),
        icon: renderColorValue(value.icon, colorOptions)
    };
}
function renderThemeColorButton(value, options) {
    return {
        default: renderThemeColorButtonTones(value.default, options),
        ghost: renderThemeColorButtonTones(value.ghost, options),
        bleed: renderThemeColorButtonTones(value.bleed, options)
    };
}
function renderThemeColorButtonTones(value, options) {
    const colorButtonMode = {};
    for (const tone of THEME_COLOR_STATE_TONES)colorButtonMode[tone] = renderThemeColorButtonStates(value[tone], options);
    return colorButtonMode;
}
function renderThemeColorButtonStates(value, options) {
    return {
        enabled: renderThemeColorState(value.enabled, options),
        hovered: renderThemeColorState(value.hovered, options),
        pressed: renderThemeColorState(value.pressed, options),
        selected: renderThemeColorState(value.selected, options),
        disabled: renderThemeColorState(value.disabled, options)
    };
}
function renderThemeColorState(value, options) {
    const { baseBg, blendMode: rootBlendMode, colorPalette } = options, blendMode = value._blend || "multiply", rootOptions = {
        bg: baseBg,
        blendMode: rootBlendMode,
        colorPalette
    }, bg = renderColorValue(value.bg, rootOptions), colorOptions = {
        bg,
        blendMode,
        colorPalette
    };
    return {
        _blend: blendMode,
        accent: {
            fg: renderColorValue(value.accent.fg, colorOptions)
        },
        avatar: renderThemeColorAvatar(value.avatar, {
            baseBg: bg,
            colorPalette,
            blendMode
        }),
        badge: renderThemeColorBadge(value.badge, {
            baseBg: bg,
            colorPalette,
            blendMode
        }),
        bg,
        border: renderColorValue(value.border, colorOptions),
        code: {
            bg: renderColorValue(value.code.bg, colorOptions),
            fg: renderColorValue(value.code.fg, colorOptions)
        },
        fg: renderColorValue(value.fg, colorOptions),
        icon: renderColorValue(value.icon, colorOptions),
        link: {
            fg: renderColorValue(value.link.fg, colorOptions)
        },
        muted: {
            bg: renderColorValue(value.muted.bg, colorOptions),
            fg: renderColorValue(value.muted.fg, colorOptions)
        },
        kbd: {
            bg: renderColorValue(value.kbd.bg, colorOptions),
            fg: renderColorValue(value.kbd.fg, colorOptions),
            border: renderColorValue(value.kbd.border, colorOptions)
        },
        skeleton: {
            from: renderColorValue(value.skeleton?.from, colorOptions),
            to: renderColorValue(value.skeleton?.to, colorOptions)
        }
    };
}
function renderThemeColorInput(value, options) {
    return {
        default: renderInputStatesColorTheme(value.default, options),
        invalid: renderInputStatesColorTheme(value.invalid, options)
    };
}
function renderInputStatesColorTheme(value, options) {
    return {
        enabled: renderInputStateColorTheme(value.enabled, options),
        hovered: renderInputStateColorTheme(value.hovered, options),
        readOnly: renderInputStateColorTheme(value.readOnly, options),
        disabled: renderInputStateColorTheme(value.disabled, options)
    };
}
function renderInputStateColorTheme(value, options) {
    const { baseBg, blendMode: rootBlendMode, colorPalette } = options, blendMode = value._blend || "multiply", rootOptions = {
        colorPalette,
        bg: baseBg,
        blendMode: rootBlendMode
    }, bg = renderColorValue(value.bg, rootOptions), colorOptions = {
        colorPalette,
        bg,
        blendMode
    };
    return {
        _blend: blendMode,
        bg,
        border: renderColorValue(value.border, colorOptions),
        fg: renderColorValue(value.fg, colorOptions),
        muted: {
            bg: renderColorValue(value.muted.bg, colorOptions)
        },
        placeholder: renderColorValue(value.placeholder, colorOptions)
    };
}
function renderThemeColorSelectable(value, options) {
    const colorSelectable = {};
    for (const tone of THEME_COLOR_STATE_TONES)colorSelectable[tone] = renderThemeColorSelectableStates(value[tone], options);
    return colorSelectable;
}
function renderThemeColorSelectableStates(value, options) {
    return {
        enabled: renderThemeColorState(value.enabled, options),
        hovered: renderThemeColorState(value.hovered, options),
        pressed: renderThemeColorState(value.pressed, options),
        selected: renderThemeColorState(value.selected, options),
        disabled: renderThemeColorState(value.disabled, options)
    };
}
function renderSyntaxColorTheme(value, options) {
    const { colorPalette, baseBg, blendMode } = options, colorOptions = {
        colorPalette,
        bg: baseBg,
        blendMode
    };
    return {
        atrule: renderColorValue(value.atrule, colorOptions),
        attrName: renderColorValue(value.attrName, colorOptions),
        attrValue: renderColorValue(value.attrValue, colorOptions),
        attribute: renderColorValue(value.attribute, colorOptions),
        boolean: renderColorValue(value.boolean, colorOptions),
        builtin: renderColorValue(value.builtin, colorOptions),
        cdata: renderColorValue(value.cdata, colorOptions),
        char: renderColorValue(value.char, colorOptions),
        class: renderColorValue(value.class, colorOptions),
        className: renderColorValue(value.className, colorOptions),
        comment: renderColorValue(value.comment, colorOptions),
        constant: renderColorValue(value.constant, colorOptions),
        deleted: renderColorValue(value.deleted, colorOptions),
        doctype: renderColorValue(value.doctype, colorOptions),
        entity: renderColorValue(value.entity, colorOptions),
        function: renderColorValue(value.function, colorOptions),
        hexcode: renderColorValue(value.hexcode, colorOptions),
        id: renderColorValue(value.id, colorOptions),
        important: renderColorValue(value.important, colorOptions),
        inserted: renderColorValue(value.inserted, colorOptions),
        keyword: renderColorValue(value.keyword, colorOptions),
        number: renderColorValue(value.number, colorOptions),
        operator: renderColorValue(value.operator, colorOptions),
        prolog: renderColorValue(value.prolog, colorOptions),
        property: renderColorValue(value.property, colorOptions),
        pseudoClass: renderColorValue(value.pseudoClass, colorOptions),
        pseudoElement: renderColorValue(value.pseudoElement, colorOptions),
        punctuation: renderColorValue(value.punctuation, colorOptions),
        regex: renderColorValue(value.regex, colorOptions),
        selector: renderColorValue(value.selector, colorOptions),
        string: renderColorValue(value.string, colorOptions),
        symbol: renderColorValue(value.symbol, colorOptions),
        tag: renderColorValue(value.tag, colorOptions),
        unit: renderColorValue(value.unit, colorOptions),
        url: renderColorValue(value.url, colorOptions),
        variable: renderColorValue(value.variable, colorOptions)
    };
}
function buildTheme(config) {
    const colorTheme = buildColorTheme(config), v2 = {
        _version: 2,
        avatar: config?.avatar ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].avatar,
        button: config?.button ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].button,
        card: config?.card ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].card,
        // How colors are generated:
        // 1. Merge custom tokens with default tokens
        // 2. Generate tree of color keys (gray/500, black, white, etc.)
        // 3. Apply mixing and render to hex values
        // render(build(mergeWithDefaults()))
        color: renderThemeColorSchemes(colorTheme, config),
        container: config?.container ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].container,
        font: config?.font ?? defaultThemeFonts,
        input: config?.input ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].input,
        layer: config?.layer ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].layer,
        media: config?.media ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].media,
        radius: config?.radius ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].radius,
        shadow: config?.shadow ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].shadow,
        space: config?.space ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].space,
        style: config?.style ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].style
    };
    return v2_v0(v2);
}
function themeColor_v0_v2_9(color2) {
    if ("neutral" in color2.badge) return color2;
    const colors2 = color2;
    return {
        ...colors2,
        badge: {
            ...colors2.badge,
            neutral: colors2.badge.default,
            suggest: colors2.badge.primary
        },
        button: {
            bleed: {
                ...colors2.button.bleed,
                neutral: colors2.button.bleed.default,
                suggest: colors2.button.bleed.primary
            },
            default: {
                ...colors2.button.default,
                neutral: colors2.button.default.default,
                suggest: colors2.button.default.primary
            },
            ghost: {
                ...colors2.button.ghost,
                neutral: colors2.button.ghost.default,
                suggest: colors2.button.ghost.primary
            }
        },
        selectable: {
            ...colors2.selectable,
            neutral: colors2.selectable.default,
            suggest: colors2.selectable.primary
        }
    };
}
const cache = /* @__PURE__ */ new Map();
function getScopedTheme(themeProp, scheme, tone) {
    const cachedTheme = _getCachedTheme(themeProp, scheme, tone);
    if (cachedTheme) return cachedTheme;
    const v0 = is_v2(themeProp) ? v2_v0(themeProp) : themeProp, v2 = is_v2(themeProp) ? themeProp : v0_v2(themeProp), colorScheme_v0 = v0.color[scheme] || v0.color.light, color_v0 = colorScheme_v0[tone] || colorScheme_v0.default, layer_v0 = v0.layer || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].layer, colorScheme_v2 = v2.color[scheme] || v2.color.light, color_v2 = colorScheme_v2[tone] || colorScheme_v2.default, color_v2_9 = themeColor_v0_v2_9(color_v2), layer_v2 = v2.layer || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["defaultThemeConfig"].layer, theme = {
        sanity: {
            ...v0,
            color: color_v0,
            layer: layer_v0,
            v2: {
                ...v2,
                _resolved: !0,
                color: color_v2_9,
                layer: layer_v2
            }
        }
    };
    return _setCachedTheme(themeProp, scheme, tone, theme), theme;
}
function _getCachedTheme(rootTheme, scheme, tone) {
    const schemeCache = cache.get(scheme);
    if (!schemeCache) return;
    const toneCache = schemeCache.get(tone);
    if (toneCache) return toneCache.get(rootTheme);
}
function _setCachedTheme(rootTheme, scheme, tone, theme) {
    cache.has(scheme) || cache.set(scheme, /* @__PURE__ */ new Map());
    const schemeCache = cache.get(scheme);
    schemeCache.has(tone) || schemeCache.set(tone, /* @__PURE__ */ new WeakMap()), schemeCache.get(tone).set(rootTheme, theme);
}
;
 //# sourceMappingURL=theme.mjs.map
}}),
"[project]/node_modules/@sanity/ui/dist/_chunks-es/_visual-editing.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Arrow": (()=>Arrow),
    "Avatar": (()=>Avatar),
    "AvatarCounter": (()=>AvatarCounter),
    "AvatarStack": (()=>AvatarStack),
    "Badge": (()=>Badge),
    "BoundaryElementProvider": (()=>BoundaryElementProvider),
    "Box": (()=>Box),
    "Button": (()=>Button),
    "Card": (()=>Card),
    "Checkbox": (()=>Checkbox),
    "Code": (()=>Code),
    "ConditionalWrapper": (()=>ConditionalWrapper),
    "Container": (()=>Container),
    "EMPTY_ARRAY": (()=>EMPTY_ARRAY),
    "EMPTY_RECORD": (()=>EMPTY_RECORD),
    "ElementQuery": (()=>ElementQuery),
    "Flex": (()=>Flex),
    "Grid": (()=>Grid),
    "Heading": (()=>Heading),
    "Hotkeys": (()=>Hotkeys),
    "Inline": (()=>Inline),
    "KBD": (()=>KBD),
    "Label": (()=>Label),
    "Layer": (()=>Layer),
    "LayerProvider": (()=>LayerProvider),
    "Menu": (()=>Menu),
    "MenuDivider": (()=>MenuDivider),
    "MenuGroup": (()=>MenuGroup),
    "MenuItem": (()=>MenuItem),
    "Popover": (()=>Popover),
    "Portal": (()=>Portal),
    "PortalProvider": (()=>PortalProvider),
    "Radio": (()=>Radio),
    "Select": (()=>Select),
    "Spinner": (()=>Spinner),
    "SrOnly": (()=>SrOnly),
    "Stack": (()=>Stack),
    "Switch": (()=>Switch),
    "Tab": (()=>Tab),
    "TabList": (()=>TabList),
    "Text": (()=>Text),
    "TextArea": (()=>TextArea),
    "TextInput": (()=>TextInput),
    "ThemeColorProvider": (()=>ThemeColorProvider),
    "ThemeProvider": (()=>ThemeProvider),
    "Tooltip": (()=>Tooltip),
    "TooltipDelayGroupContext": (()=>TooltipDelayGroupContext),
    "TooltipDelayGroupProvider": (()=>TooltipDelayGroupProvider),
    "VirtualList": (()=>VirtualList),
    "_ResizeObserver": (()=>_ResizeObserver),
    "_cardColorStyle": (()=>_cardColorStyle),
    "_elementSizeObserver": (()=>_elementSizeObserver),
    "_fillCSSObject": (()=>_fillCSSObject),
    "_getArrayProp": (()=>_getArrayProp),
    "_getResponsiveSpace": (()=>_getResponsiveSpace),
    "_isEnterToClickElement": (()=>_isEnterToClickElement),
    "_isScrollable": (()=>_isScrollable),
    "_responsive": (()=>_responsive),
    "containsOrEqualsElement": (()=>containsOrEqualsElement),
    "createColorTheme": (()=>createColorTheme),
    "createGlobalScopedContext": (()=>createGlobalScopedContext),
    "hexToRgb": (()=>hexToRgb),
    "hslToRgb": (()=>hslToRgb),
    "isHTMLAnchorElement": (()=>isHTMLAnchorElement),
    "isHTMLButtonElement": (()=>isHTMLButtonElement),
    "isHTMLElement": (()=>isHTMLElement),
    "isHTMLInputElement": (()=>isHTMLInputElement),
    "isHTMLSelectElement": (()=>isHTMLSelectElement),
    "isHTMLTextAreaElement": (()=>isHTMLTextAreaElement),
    "isRecord": (()=>isRecord),
    "multiply": (()=>multiply),
    "parseColor": (()=>parseColor),
    "rem": (()=>rem),
    "responsiveCodeFontStyle": (()=>responsiveCodeFontStyle),
    "responsiveHeadingFont": (()=>responsiveHeadingFont),
    "responsiveLabelFont": (()=>responsiveLabelFont),
    "responsivePaddingStyle": (()=>responsivePaddingStyle),
    "responsiveRadiusStyle": (()=>responsiveRadiusStyle),
    "responsiveTextAlignStyle": (()=>responsiveTextAlignStyle),
    "responsiveTextFont": (()=>responsiveTextFont),
    "rgbToHex": (()=>rgbToHex),
    "rgbToHsl": (()=>rgbToHsl),
    "rgba": (()=>rgba),
    "screen": (()=>screen),
    "studioTheme": (()=>studioTheme),
    "useArrayProp": (()=>useArrayProp),
    "useBoundaryElement": (()=>useBoundaryElement),
    "useClickOutsideEvent": (()=>useClickOutsideEvent),
    "useCustomValidity": (()=>useCustomValidity),
    "useElementSize": (()=>useElementSize),
    "useGlobalKeyDown": (()=>useGlobalKeyDown),
    "useLayer": (()=>useLayer),
    "useMatchMedia": (()=>useMatchMedia),
    "useMediaIndex": (()=>useMediaIndex),
    "usePortal": (()=>usePortal),
    "usePrefersDark": (()=>usePrefersDark),
    "usePrefersReducedMotion": (()=>usePrefersReducedMotion),
    "useRootTheme": (()=>useRootTheme),
    "useTheme": (()=>useTheme),
    "useTheme_v2": (()=>useTheme_v2),
    "useTooltipDelayGroup": (()=>useTooltipDelayGroup)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/react-compiler-runtime/dist/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/styled-components/dist/styled-components.browser.esm.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$theme$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@sanity/ui/dist/theme.mjs [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@sanity/ui/dist/_chunks-es/getTheme_v2.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$is$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/react-is/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$icons$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@sanity/icons/dist/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$floating$2d$ui$2f$dom$2f$dist$2f$floating$2d$ui$2e$dom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$floating$2d$ui$2f$react$2d$dom$2f$dist$2f$floating$2d$ui$2e$react$2d$dom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$framer$2d$motion$2f$dist$2f$es$2f$render$2f$components$2f$motion$2f$proxy$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$framer$2d$motion$2f$dist$2f$es$2f$components$2f$AnimatePresence$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$juggle$2f$resize$2d$observer$2f$lib$2f$exports$2f$resize$2d$observer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@juggle/resize-observer/lib/exports/resize-observer.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$juggle$2f$resize$2d$observer$2f$lib$2f$ResizeObserver$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@juggle/resize-observer/lib/ResizeObserver.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2d$dom$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react-dom/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$use$2d$effect$2d$event$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/use-effect-event/dist/index.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
const createColorTheme = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$theme$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["createColorTheme"], hexToRgb = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$theme$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["hexToRgb"], hslToRgb = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$theme$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["hslToRgb"], multiply = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$theme$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["multiply"], parseColor = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$theme$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["parseColor"], rgbToHex = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$theme$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["rgbToHex"], rgbToHsl = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$theme$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["rgbToHsl"], rgba = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$theme$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["rgba"], screen = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$theme$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["screen"], studioTheme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$theme$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["buildTheme"])(), EMPTY_ARRAY = [], EMPTY_RECORD = {}, POPOVER_MOTION_PROPS = {
    card: {
        initial: {
            scale: 0.97,
            willChange: "transform"
        },
        hidden: {
            opacity: 0
        },
        visible: {
            opacity: 1,
            transition: {
                when: "beforeChildren",
                duration: 0.1
            }
        },
        scaleIn: {
            scale: 1
        },
        scaleOut: {
            scale: 0.97
        }
    },
    children: {
        hidden: {
            opacity: 0
        },
        visible: {
            opacity: 1
        }
    },
    transition: {
        type: "spring",
        visualDuration: 0.2,
        bounce: 0.25
    }
};
function _fillCSSObject(keys, value) {
    return keys.reduce((style, key2)=>(style[key2] = value, style), {});
}
function rem(pixelValue) {
    return pixelValue === 0 ? 0 : `${pixelValue / 16}rem`;
}
function _responsive(media, values, callback) {
    return (values?.map(callback) || []).map((statement, mediaIndex)=>mediaIndex === 0 ? statement : {
            [`@media screen and (min-width: ${media[mediaIndex - 1]}px)`]: statement
        });
}
function _getArrayProp(val, defaultVal) {
    return val === void 0 ? defaultVal || EMPTY_ARRAY : Array.isArray(val) ? val : [
        val
    ];
}
function _getResponsiveSpace(theme, props, spaceIndexes = EMPTY_ARRAY) {
    if (!Array.isArray(spaceIndexes)) throw new Error("the property must be array of numbers");
    if (spaceIndexes.length === 0) return null;
    const { media, space } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(theme);
    return _responsive(media, spaceIndexes, (spaceIndex)=>_fillCSSObject(props, rem(space[spaceIndex])));
}
function responsiveFont(fontKey, props) {
    const { $size, $weight } = props, { font, media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme), { family, sizes, weights } = font[fontKey], fontWeight = $weight && weights[$weight] || weights.regular, defaultSize = sizes[2], base = {
        position: "relative",
        fontFamily: family,
        fontWeight,
        padding: "1px 0",
        margin: 0,
        "&:before": {
            content: '""',
            display: "block",
            height: 0
        },
        "&:after": {
            content: '""',
            display: "block",
            height: 0
        },
        "& > code, & > span": {
            display: "block"
        },
        "&:not([hidden])": {
            display: "block"
        }
    };
    if (!$size) return responsiveFont.warned || (console.warn("No size specified for responsive font", {
        fontKey,
        $size,
        props,
        base
    }), responsiveFont.warned = !0), [
        base
    ];
    const resp = _responsive(media, $size, (sizeIndex)=>fontSize(sizes[sizeIndex] || defaultSize));
    return [
        base,
        ...resp
    ];
}
function fontSize(size2) {
    const { ascenderHeight, descenderHeight, fontSize: fontSize2, iconSize, letterSpacing, lineHeight } = size2, negHeight = ascenderHeight + descenderHeight, capHeight = lineHeight - negHeight, iconOffset = (capHeight - iconSize) / 2, customIconSize = Math.floor(fontSize2 * 1.125 / 2) * 2 + 1, customIconOffset = (capHeight - customIconSize) / 2;
    return {
        fontSize: rem(fontSize2),
        lineHeight: `calc(${lineHeight} / ${fontSize2})`,
        letterSpacing: rem(letterSpacing),
        transform: `translateY(${rem(descenderHeight)})`,
        "&:before": {
            marginTop: `calc(${rem(0 - negHeight)} - 1px)`
        },
        "&:after": {
            marginBottom: "-1px"
        },
        "& svg:not([data-sanity-icon])": {
            fontSize: `calc(${customIconSize} / 16 * 1rem)`,
            margin: rem(customIconOffset)
        },
        "& [data-sanity-icon]": {
            fontSize: `calc(${iconSize} / 16 * 1rem)`,
            margin: rem(iconOffset)
        }
    };
}
function responsiveCodeFontStyle(props) {
    return responsiveFont("code", props);
}
function responsiveHeadingFont(props) {
    return responsiveFont("heading", props);
}
function responsiveLabelFont(props) {
    return responsiveFont("label", props);
}
function responsiveTextAlignStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$align, (textAlign)=>({
            textAlign
        }));
}
function responsiveTextFont(props) {
    return responsiveFont("text", props);
}
function useArrayProp(val, defaultVal) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(3);
    let t0;
    $[0] !== defaultVal || $[1] !== val ? (t0 = ()=>[
            _getArrayProp(val, defaultVal),
            JSON.stringify(val ?? defaultVal)
        ], $[0] = defaultVal, $[1] = val, $[2] = t0) : t0 = $[2];
    const [t1, setCache] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(t0), [cachedVal, cachedHash] = t1, hash = JSON.stringify(val ?? defaultVal);
    return hash !== cachedHash && setCache([
        _getArrayProp(val, defaultVal),
        hash
    ]), cachedVal;
}
function useClickOutsideEvent(listener, t0, boundaryElement) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(9), elementsArg = t0 === void 0 ? _temp$9 : t0;
    let t1;
    $[0] !== boundaryElement || $[1] !== elementsArg || $[2] !== listener ? (t1 = (evt)=>{
        if (!listener) return;
        const target = evt.target;
        if (!(target instanceof Node)) return;
        const resolvedBoundaryElement = boundaryElement?.();
        if (resolvedBoundaryElement && !resolvedBoundaryElement.contains(target)) return;
        const elements = elementsArg().flat();
        for (const el of elements)if (el && (target === el || el.contains(target))) return;
        listener(evt);
    }, $[0] = boundaryElement, $[1] = elementsArg, $[2] = listener, $[3] = t1) : t1 = $[3];
    const onEvent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$use$2d$effect$2d$event$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffectEvent"])(t1), hasListener = !!listener;
    let t2;
    $[4] !== hasListener || $[5] !== onEvent ? (t2 = ()=>{
        if (!hasListener) return;
        const handleEvent = (evt_0)=>onEvent(evt_0);
        return document.addEventListener("mousedown", handleEvent), ()=>{
            document.removeEventListener("mousedown", handleEvent);
        };
    }, $[4] = hasListener, $[5] = onEvent, $[6] = t2) : t2 = $[6];
    let t3;
    $[7] !== hasListener ? (t3 = [
        hasListener
    ], $[7] = hasListener, $[8] = t3) : t3 = $[8], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t2, t3), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useDebugValue"])(listener ? "MouseDown On" : "MouseDown Off");
}
function _temp$9() {
    return EMPTY_ARRAY;
}
function useCustomValidity(ref, customValidity) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(6);
    let t0;
    $[0] !== customValidity || $[1] !== ref.current ? (t0 = ()=>{
        ref.current?.setCustomValidity(customValidity || "");
    }, $[0] = customValidity, $[1] = ref.current, $[2] = t0) : t0 = $[2];
    let t1;
    $[3] !== customValidity || $[4] !== ref ? (t1 = [
        customValidity,
        ref
    ], $[3] = customValidity, $[4] = ref, $[5] = t1) : t1 = $[5], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t0, t1);
}
const _ResizeObserver = typeof document < "u" && typeof window < "u" && window.ResizeObserver ? window.ResizeObserver : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$juggle$2f$resize$2d$observer$2f$lib$2f$ResizeObserver$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ResizeObserver"], _elementSizeObserver = _createElementSizeObserver();
function _createElementRectValueListener() {
    return {
        subscribe (element, subscriber) {
            const resizeObserver = new _ResizeObserver(([entry])=>{
                subscriber({
                    _contentRect: entry.contentRect,
                    border: {
                        width: entry.borderBoxSize[0].inlineSize,
                        height: entry.borderBoxSize[0].blockSize
                    },
                    content: {
                        width: entry.contentRect.width,
                        height: entry.contentRect.height
                    }
                });
            });
            return resizeObserver.observe(element), ()=>{
                resizeObserver.unobserve(element), resizeObserver.disconnect();
            };
        }
    };
}
function _createElementSizeObserver() {
    const disposeCache = /* @__PURE__ */ new WeakMap(), subscribersCache = /* @__PURE__ */ new WeakMap();
    return {
        subscribe (element, subscriber) {
            const subscribers = subscribersCache.get(element) || [];
            let dispose = disposeCache.get(element);
            return subscribersCache.has(element) || (subscribersCache.set(element, subscribers), dispose = _createElementRectValueListener().subscribe(element, (elementRect)=>{
                for (const sub of subscribers)sub(elementRect);
            })), subscribers.push(subscriber), ()=>{
                const idx = subscribers.indexOf(subscriber);
                idx > -1 && subscribers.splice(idx, 1), subscribers.length === 0 && dispose && dispose();
            };
        }
    };
}
function useElementSize(element) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(3), [size2, setSize] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null);
    let t0, t1;
    return $[0] !== element ? (t0 = ()=>{
        if (element) return _elementSizeObserver.subscribe(element, setSize);
    }, t1 = [
        element
    ], $[0] = element, $[1] = t0, $[2] = t1) : (t0 = $[1], t1 = $[2]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t0, t1), size2;
}
function useGlobalKeyDown(onKeyDown) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(5);
    let t0;
    $[0] !== onKeyDown ? (t0 = (event)=>onKeyDown(event), $[0] = onKeyDown, $[1] = t0) : t0 = $[1];
    const handleKeyDown = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$use$2d$effect$2d$event$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffectEvent"])(t0);
    let t1;
    $[2] !== handleKeyDown ? (t1 = ()=>{
        const handler = (event_0)=>handleKeyDown(event_0);
        return window.addEventListener("keydown", handler), ()=>window.removeEventListener("keydown", handler);
    }, $[2] = handleKeyDown, $[3] = t1) : t1 = $[3];
    let t2;
    $[4] === Symbol.for("react.memo_cache_sentinel") ? (t2 = [], $[4] = t2) : t2 = $[4], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t1, t2);
}
function useMatchMedia(mediaQueryString, getServerSnapshot2) {
    const { subscribe, getSnapshot } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "useMatchMedia.useMemo": ()=>{
            let MEDIA_QUERY_CACHE;
            const getMatchMedia = {
                "useMatchMedia.useMemo.getMatchMedia": ()=>(MEDIA_QUERY_CACHE || (MEDIA_QUERY_CACHE = window.matchMedia(mediaQueryString)), MEDIA_QUERY_CACHE)
            }["useMatchMedia.useMemo.getMatchMedia"];
            return {
                subscribe: ({
                    "useMatchMedia.useMemo": (onStoreChange)=>{
                        const matchMedia = getMatchMedia();
                        return matchMedia.addEventListener("change", onStoreChange), ({
                            "useMatchMedia.useMemo": ()=>matchMedia.removeEventListener("change", onStoreChange)
                        })["useMatchMedia.useMemo"];
                    }
                })["useMatchMedia.useMemo"],
                getSnapshot: ({
                    "useMatchMedia.useMemo": ()=>getMatchMedia().matches
                })["useMatchMedia.useMemo"]
            };
        }
    }["useMatchMedia.useMemo"], [
        mediaQueryString
    ]);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useDebugValue"])(mediaQueryString), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSyncExternalStore"])(subscribe, getSnapshot, getServerSnapshot2);
}
function getGlobalScope() {
    if (typeof globalThis < "u") return globalThis;
    if (typeof window < "u") return window;
    if (typeof self < "u") return self;
    if (typeof global < "u") return global;
    throw new Error("@sanity/ui: could not locate global scope");
}
const globalScope = getGlobalScope();
function createGlobalScopedContext(key2, defaultValue) {
    const symbol = Symbol.for(key2);
    return typeof document > "u" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createContext"])(defaultValue) : (globalScope[symbol] = globalScope[symbol] || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createContext"])(defaultValue), globalScope[symbol]);
}
const ThemeContext = createGlobalScopedContext("@sanity/ui/context/theme", null);
function ThemeProvider(props) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(15), parentTheme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useContext"])(ThemeContext), { children } = props, scheme = props.scheme ?? (parentTheme?.scheme || "light"), rootTheme = props.theme ?? (parentTheme?.theme || null), tone = props.tone ?? (parentTheme?.tone || "default");
    let t0;
    bb0: {
        if (!rootTheme) {
            t0 = null;
            break bb0;
        }
        let t12;
        $[0] !== rootTheme || $[1] !== scheme || $[2] !== tone ? (t12 = {
            version: 0,
            theme: rootTheme,
            scheme,
            tone
        }, $[0] = rootTheme, $[1] = scheme, $[2] = tone, $[3] = t12) : t12 = $[3], t0 = t12;
    }
    const themeContext = t0;
    let t1;
    bb1: {
        if (!rootTheme) {
            t1 = null;
            break bb1;
        }
        let t22;
        $[4] !== rootTheme || $[5] !== scheme || $[6] !== tone ? (t22 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$theme$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["getScopedTheme"])(rootTheme, scheme, tone), $[4] = rootTheme, $[5] = scheme, $[6] = tone, $[7] = t22) : t22 = $[7], t1 = t22;
    }
    const theme = t1;
    if (!theme) {
        let t22;
        return $[8] === Symbol.for("react.memo_cache_sentinel") ? (t22 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("pre", {
            children: 'ThemeProvider: no "theme" property provided'
        }), $[8] = t22) : t22 = $[8], t22;
    }
    let t2;
    $[9] !== children || $[10] !== theme ? (t2 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ThemeProvider"], {
        theme,
        children
    }), $[9] = children, $[10] = theme, $[11] = t2) : t2 = $[11];
    let t3;
    return $[12] !== t2 || $[13] !== themeContext ? (t3 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(ThemeContext.Provider, {
        value: themeContext,
        children: t2
    }), $[12] = t2, $[13] = themeContext, $[14] = t3) : t3 = $[14], t3;
}
ThemeProvider.displayName = "ThemeProvider";
function useRootTheme() {
    const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useContext"])(ThemeContext);
    if (!value) throw new Error("useRootTheme(): missing context value");
    return value;
}
function ThemeColorProvider(props) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(5), { children, scheme, tone } = props, root = useRootTheme(), t0 = scheme || root.scheme;
    let t1;
    return $[0] !== children || $[1] !== root.theme || $[2] !== t0 || $[3] !== tone ? (t1 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(ThemeProvider, {
        scheme: t0,
        theme: root.theme,
        tone,
        children
    }), $[0] = children, $[1] = root.theme, $[2] = t0, $[3] = tone, $[4] = t1) : t1 = $[4], t1;
}
ThemeColorProvider.displayName = "ThemeColorProvider";
function useTheme() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTheme"])();
}
function useTheme_v2() {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(2), t0 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTheme"])();
    let t1;
    return $[0] !== t0 ? (t1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(t0), $[0] = t0, $[1] = t1) : t1 = $[1], t1;
}
function _getMediaQuery(media, index) {
    return index === 0 ? `screen and (max-width: ${media[index] - 1}px)` : index === media.length ? `screen and (min-width: ${media[index - 1]}px)` : `screen and (min-width: ${media[index - 1]}px) and (max-width: ${media[index] - 1}px)`;
}
function _createMediaStore(media) {
    const mediaLen = media.length;
    let sizes;
    const getSizes = ()=>{
        if (!sizes) {
            sizes = [];
            for(let index = mediaLen; index > -1; index -= 1){
                const mediaQuery = _getMediaQuery(media, index);
                sizes.push({
                    index,
                    mq: window.matchMedia(mediaQuery)
                });
            }
        }
        return sizes;
    };
    return {
        getSnapshot: ()=>{
            for (const { index, mq } of getSizes())if (mq.matches) return index;
            return 0;
        },
        subscribe: (onStoreChange)=>{
            const disposeFns = [];
            for (const { mq } of getSizes()){
                const handleChange = ()=>{
                    mq.matches && onStoreChange();
                };
                mq.addEventListener("change", handleChange), disposeFns.push(()=>mq.removeEventListener("change", handleChange));
            }
            return ()=>{
                for (const disposeFn of disposeFns)disposeFn();
            };
        }
    };
}
function getServerSnapshot() {
    return 0;
}
function useMediaIndex() {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(2), { media } = useTheme_v2();
    let t0, t1;
    $[0] !== media ? (t1 = _createMediaStore(media), $[0] = media, $[1] = t1) : t1 = $[1], t0 = t1;
    const store = t0;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSyncExternalStore"])(store.subscribe, store.getSnapshot, getServerSnapshot);
}
function usePrefersDark(t0) {
    return useMatchMedia("(prefers-color-scheme: dark)", t0 === void 0 ? _temp$8 : t0);
}
function _temp$8() {
    return !1;
}
function usePrefersReducedMotion(t0) {
    return useMatchMedia("(prefers-reduced-motion: reduce)", t0 === void 0 ? _temp$7 : t0);
}
function _temp$7() {
    return !1;
}
function responsiveBorderStyle() {
    return [
        border,
        borderTop,
        borderRight,
        borderBottom,
        borderLeft
    ];
}
function border(props) {
    const { card, media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme), borderStyle = `${card.border?.width ?? 1}px solid var(--card-border-color)`;
    return _responsive(media, props.$border, (value)=>value ? {
            "&&": {
                border: borderStyle
            }
        } : {
            "&&": {
                border: 0
            }
        });
}
function borderTop(props) {
    const { card, media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme), borderStyle = `${card.border?.width ?? 1}px solid var(--card-border-color)`;
    return _responsive(media, props.$borderTop, (value)=>value ? {
            "&&": {
                borderTop: borderStyle
            }
        } : {
            "&&": {
                borderTop: 0
            }
        });
}
function borderRight(props) {
    const { card, media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme), borderStyle = `${card.border?.width ?? 1}px solid var(--card-border-color)`;
    return _responsive(media, props.$borderRight, (value)=>value ? {
            "&&": {
                borderRight: borderStyle
            }
        } : {
            "&&": {
                borderRight: 0
            }
        });
}
function borderBottom(props) {
    const { card, media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme), borderStyle = `${card.border?.width ?? 1}px solid var(--card-border-color)`;
    return _responsive(media, props.$borderBottom, (value)=>value ? {
            "&&": {
                borderBottom: borderStyle
            }
        } : {
            "&&": {
                borderBottom: 0
            }
        });
}
function borderLeft(props) {
    const { card, media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme), borderStyle = `${card.border?.width ?? 1}px solid var(--card-border-color)`;
    return _responsive(media, props.$borderLeft, (value)=>value ? {
            "&&": {
                borderLeft: borderStyle
            }
        } : {
            "&&": {
                borderLeft: 0
            }
        });
}
const BASE_STYLE$4 = {
    '&[data-as="ul"],&[data-as="ol"]': {
        listStyle: "none"
    }
}, BOX_SIZING = {
    content: "content-box",
    border: "border-box"
}, BOX_HEIGHT = {
    stretch: "stretch",
    fill: "100%"
};
function boxStyle() {
    return BASE_STYLE$4;
}
function responsiveBoxStyle() {
    return [
        responsiveBoxSizingStyle,
        responsiveBoxHeightStyle,
        responsiveBoxOverflowStyle,
        responsiveBoxDisplayStyle
    ];
}
function responsiveBoxDisplayStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$display, (display)=>({
            "&:not([hidden])": {
                display
            }
        }));
}
function responsiveBoxSizingStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$sizing, (sizing)=>({
            boxSizing: BOX_SIZING[sizing]
        }));
}
function responsiveBoxHeightStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$height, (height)=>({
            height: BOX_HEIGHT[height]
        }));
}
function responsiveBoxOverflowStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$overflow, (overflow)=>({
            overflow
        }));
}
const BASE_STYLE$3 = {
    "&&:not([hidden])": {
        display: "flex"
    }
};
function responsiveFlexStyle() {
    return [
        BASE_STYLE$3,
        responsiveFlexAlignStyle,
        responsiveFlexGapStyle,
        responsiveFlexWrapStyle,
        responsiveFlexJustifyStyle,
        responsiveFlexDirectionStyle
    ];
}
function responsiveFlexAlignStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$align, (align)=>({
            alignItems: align
        }));
}
function responsiveFlexGapStyle(props) {
    const { media, space } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$gap, (gap)=>({
            gap: gap ? rem(space[gap]) : void 0
        }));
}
function responsiveFlexWrapStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$wrap, (wrap)=>({
            flexWrap: wrap
        }));
}
function responsiveFlexJustifyStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$justify, (justify)=>({
            justifyContent: justify
        }));
}
function responsiveFlexDirectionStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$direction, (direction)=>({
            flexDirection: direction
        }));
}
const BASE_STYLE$2 = {
    minWidth: 0,
    minHeight: 0
};
function flexItemStyle() {
    return [
        BASE_STYLE$2,
        responsiveFlexItemStyle
    ];
}
function responsiveFlexItemStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return props.$flex ? _responsive(media, props.$flex, (flex)=>({
            flex
        })) : EMPTY_ARRAY;
}
function focusRingBorderStyle(border2) {
    return `inset 0 0 0 ${border2.width}px ${border2.color}`;
}
function focusRingStyle(opts) {
    const { base, border: border2, focusRing } = opts, focusRingOutsetWidth = focusRing.offset + focusRing.width, focusRingInsetWidth = 0 - focusRing.offset, bgColor = base ? base.bg : "var(--card-bg-color)";
    return [
        focusRingInsetWidth > 0 && `inset 0 0 0 ${focusRingInsetWidth}px var(--card-focus-ring-color)`,
        border2 && focusRingBorderStyle(border2),
        focusRingInsetWidth < 0 && `0 0 0 ${0 - focusRingInsetWidth}px ${bgColor}`,
        focusRingOutsetWidth > 0 && `0 0 0 ${focusRingOutsetWidth}px var(--card-focus-ring-color)`
    ].filter(Boolean).join(",");
}
const GRID_CSS = {
    "&&:not([hidden])": {
        display: "grid"
    },
    '&[data-as="ul"],&[data-as="ol"]': {
        listStyle: "none"
    }
}, GRID_AUTO_COLUMS = {
    auto: "auto",
    min: "min-content",
    max: "max-content",
    fr: "minmax(0, 1fr)"
}, GRID_AUTO_ROWS = {
    auto: "auto",
    min: "min-content",
    max: "max-content",
    fr: "minmax(0, 1fr)"
};
function responsiveGridStyle() {
    return [
        GRID_CSS,
        responsiveGridAutoFlowStyle,
        responsiveGridAutoRowsStyle,
        responsiveGridAutoColsStyle,
        responsiveGridColumnsStyle,
        responsiveGridRowsStyle,
        responsiveGridGapStyle,
        responsiveGridGapXStyle,
        responsiveGridGapYStyle
    ];
}
function responsiveGridAutoFlowStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$autoFlow, (autoFlow)=>({
            gridAutoFlow: autoFlow
        }));
}
function responsiveGridAutoRowsStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$autoRows, (autoRows)=>({
            gridAutoRows: autoRows && GRID_AUTO_ROWS[autoRows]
        }));
}
function responsiveGridAutoColsStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$autoCols, (autoCols)=>({
            gridAutoColumns: autoCols && GRID_AUTO_COLUMS[autoCols]
        }));
}
function responsiveGridColumnsStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$columns, (columns)=>({
            gridTemplateColumns: columns && `repeat(${columns},minmax(0,1fr));`
        }));
}
function responsiveGridRowsStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$rows, (rows)=>({
            gridTemplateRows: rows && `repeat(${rows},minmax(0,1fr));`
        }));
}
function responsiveGridGapStyle(props) {
    const { media, space } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$gap, (gap)=>({
            gridGap: gap ? rem(space[gap]) : void 0
        }));
}
function responsiveGridGapXStyle(props) {
    const { media, space } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$gapX, (gapX)=>({
            columnGap: gapX ? rem(space[gapX]) : void 0
        }));
}
function responsiveGridGapYStyle(props) {
    const { media, space } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$gapY, (gapY)=>({
            rowGap: gapY ? rem(space[gapY]) : void 0
        }));
}
function responsiveGridItemStyle() {
    return [
        responsiveGridItemRowStyle,
        responsiveGridItemRowStartStyle,
        responsiveGridItemRowEndStyle,
        responsiveGridItemColumnStyle,
        responsiveGridItemColumnStartStyle,
        responsiveGridItemColumnEndStyle
    ];
}
const GRID_ITEM_ROW = {
    auto: "auto",
    full: "1 / -1"
}, GRID_ITEM_COLUMN = {
    auto: "auto",
    full: "1 / -1"
};
function responsiveGridItemRowStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$row, (row)=>typeof row == "number" ? {
            gridRow: `span ${row} / span ${row}`
        } : {
            gridRow: GRID_ITEM_ROW[row]
        });
}
function responsiveGridItemRowStartStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$rowStart, (rowStart)=>({
            gridRowStart: rowStart
        }));
}
function responsiveGridItemRowEndStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$rowEnd, (rowEnd)=>({
            gridRowEnd: rowEnd
        }));
}
function responsiveGridItemColumnStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$column, (column)=>typeof column == "number" ? {
            gridColumn: `span ${column} / span ${column}`
        } : {
            gridColumn: GRID_ITEM_COLUMN[column]
        });
}
function responsiveGridItemColumnStartStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$columnStart, (columnStart)=>({
            gridColumnStart: columnStart
        }));
}
function responsiveGridItemColumnEndStyle(props) {
    const { media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$columnEnd, (columnEnd)=>({
            gridColumnEnd: columnEnd
        }));
}
function responsiveInputPaddingStyle(props) {
    const { $fontSize, $iconLeft, $iconRight, $padding, $space } = props, { font, media, space } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme), len = Math.max($padding.length, $space.length, $fontSize.length), _padding = [], _space = [], _fontSize = [];
    for(let i = 0; i < len; i += 1)_fontSize[i] = $fontSize[i] === void 0 ? _fontSize[i - 1] : $fontSize[i], _padding[i] = $padding[i] === void 0 ? _padding[i - 1] : $padding[i], _space[i] = $space[i] === void 0 ? _space[i - 1] : $space[i];
    return _responsive(media, _padding, (_, i)=>{
        const size2 = font.text.sizes[_fontSize[i]] || font.text.sizes[2], emSize = size2.lineHeight - size2.ascenderHeight - size2.descenderHeight, p = space[_padding[i]], s = space[_space[i]], styles = {
            paddingTop: rem(p - size2.ascenderHeight),
            paddingRight: rem(p),
            paddingBottom: rem(p - size2.descenderHeight),
            paddingLeft: rem(p)
        };
        return $iconRight && (styles.paddingRight = rem(p + emSize + s)), $iconLeft && (styles.paddingLeft = rem(p + emSize + s)), styles;
    });
}
function responsiveInputPaddingIconRightStyle(props) {
    return responsiveInputPaddingStyle({
        ...props,
        $iconRight: !0
    });
}
const ROOT_STYLE = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
  &:not([hidden]) {
    display: flex;
  }

  align-items: center;
`;
function textInputRootStyle() {
    return ROOT_STYLE;
}
function textInputBaseStyle(props) {
    const { $scheme, $tone, $weight } = props, { color, font } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    appearance: none;
    background: none;
    border: 0;
    border-radius: 0;
    outline: none;
    width: 100%;
    box-sizing: border-box;
    font-family: ${font.text.family};
    font-weight: ${$weight && font.text.weights[$weight] || font.text.weights.regular};
    margin: 0;
    position: relative;
    z-index: 1;
    display: block;

    /* NOTE: This is a hack to disable Chrome’s autofill styles */
    &:-webkit-autofill,
    &:-webkit-autofill:hover,
    &:-webkit-autofill:focus,
    &:-webkit-autofill:active {
      -webkit-text-fill-color: var(--input-fg-color) !important;
      transition: background-color 5000s;
      transition-delay: 86400s /* 24h */;
    }

    /* &:is(textarea) */
    &[data-as='textarea'] {
      resize: none;
    }

    color: var(--input-fg-color);

    &::placeholder {
      color: var(--input-placeholder-color);
    }

    &[data-scheme='${$scheme}'][data-tone='${$tone}'] {
      --input-fg-color: ${color.input.default.enabled.fg};
      --input-placeholder-color: ${color.input.default.enabled.placeholder};

      /* enabled */
      &:not(:invalid):not(:disabled):not(:read-only) {
        --input-fg-color: ${color.input.default.enabled.fg};
        --input-placeholder-color: ${color.input.default.enabled.placeholder};
      }

      /* disabled */
      &:not(:invalid):disabled {
        --input-fg-color: ${color.input.default.disabled.fg};
        --input-placeholder-color: ${color.input.default.disabled.placeholder};
      }

      /* invalid */
      &:invalid {
        --input-fg-color: ${color.input.invalid.enabled.fg};
        --input-placeholder-color: ${color.input.invalid.enabled.placeholder};
      }

      /* readOnly */
      &:read-only {
        --input-fg-color: ${color.input.default.readOnly.fg};
        --input-placeholder-color: ${color.input.default.readOnly.placeholder};
      }
    }
  `;
}
function textInputFontSizeStyle(props) {
    const { font, media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$fontSize, (sizeIndex)=>{
        const size2 = font.text.sizes[sizeIndex] || font.text.sizes[2];
        return {
            fontSize: rem(size2.fontSize),
            lineHeight: size2.lineHeight / size2.fontSize
        };
    });
}
function textInputRepresentationStyle(props) {
    const { $hasPrefix, $hasSuffix, $scheme, $tone, $unstableDisableFocusRing } = props, { color, input } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    --input-box-shadow: none;

    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: block;
    pointer-events: none;
    z-index: 0;

    background-color: var(--card-bg-color);
    box-shadow: var(--input-box-shadow);

    border-top-left-radius: ${$hasPrefix ? 0 : void 0};
    border-bottom-left-radius: ${$hasPrefix ? 0 : void 0};
    border-top-right-radius: ${$hasSuffix ? 0 : void 0};
    border-bottom-right-radius: ${$hasSuffix ? 0 : void 0};

    &[data-scheme='${$scheme}'][data-tone='${$tone}'] {
      --card-bg-color: ${color.input.default.enabled.bg};
      --card-fg-color: ${color.input.default.enabled.fg};

      /* enabled */
      *:not(:disabled) + &[data-border] {
        --input-box-shadow: ${focusRingBorderStyle({
        color: color.input.default.enabled.border,
        width: input.border.width
    })};
      }

      /* invalid */
      *:not(:disabled):invalid + & {
        --card-bg-color: ${color.input.invalid.enabled.bg};
        --card-fg-color: ${color.input.invalid.enabled.fg};

        &[data-border] {
          --input-box-shadow: ${focusRingBorderStyle({
        color: color.input.invalid.enabled.border,
        width: input.border.width
    })};
        }
      }

      /* focused */
      *:not(:disabled):focus + & {
        &[data-border] {
          --input-box-shadow: ${$unstableDisableFocusRing ? void 0 : focusRingStyle({
        border: {
            color: color.input.default.enabled.border,
            width: input.border.width
        },
        focusRing: input.text.focusRing
    })};
        }

        &:not([data-border]) {
          --input-box-shadow: ${$unstableDisableFocusRing ? void 0 : focusRingStyle({
        focusRing: input.text.focusRing
    })};
        }
      }

      /* disabled */
      *:not(:invalid):disabled + & {
        --card-bg-color: ${color.input.default.disabled.bg} !important;
        --card-fg-color: ${color.input.default.disabled.fg} !important;
        --card-icon-color: ${color.input.default.disabled.fg} !important;

        &[data-border] {
          --input-box-shadow: ${focusRingBorderStyle({
        color: color.input.default.disabled.border,
        width: input.border.width
    })};
        }
      }

      *:invalid:disabled + & {
        --card-bg-color: ${color.input.invalid.disabled.bg} !important;
        --card-fg-color: ${color.input.invalid.disabled.fg} !important;
        --card-icon-color: ${color.input.invalid.disabled.fg} !important;

        &[data-border] {
          --input-box-shadow: ${focusRingBorderStyle({
        color: color.input.invalid.disabled.border,
        width: input.border.width
    })};
        }
      }

      /* readOnly */
      *:not(:invalid):read-only + & {
        --card-bg-color: ${color.input.default.readOnly.bg} !important;
        --card-fg-color: ${color.input.default.readOnly.fg} !important;
      }

      *:invalid:read-only + & {
        --card-bg-color: ${color.input.invalid.readOnly.bg} !important;
        --card-fg-color: ${color.input.invalid.readOnly.fg} !important;
      }

      /* hovered */
      @media (hover: hover) {
        *:not(:disabled):not(:read-only):not(:invalid):hover + & {
          --card-bg-color: ${color.input.default.hovered.bg};
          --card-fg-color: ${color.input.default.hovered.fg};
        }

        *:invalid:not(:disabled):not(:read-only):hover + & {
          --card-bg-color: ${color.input.invalid.hovered.bg};
          --card-fg-color: ${color.input.invalid.hovered.fg};
        }

        *:not(:disabled):not(:read-only):not(:invalid):not(:focus):hover + &[data-border] {
          --input-box-shadow: ${focusRingBorderStyle({
        color: color.input.default.hovered.border,
        width: input.border.width
    })};
        }

        *:invalid:not(:disabled):not(:read-only):not(:focus):hover + &[data-border] {
          --input-box-shadow: ${focusRingBorderStyle({
        color: color.input.invalid.hovered.border,
        width: input.border.width
    })};
        }
      }
    }
  `;
}
function responsiveMarginStyle(props) {
    const { theme } = props;
    return [
        _getResponsiveSpace(theme, [
            "margin"
        ], props.$margin),
        _getResponsiveSpace(theme, [
            "marginLeft",
            "marginRight"
        ], props.$marginX),
        _getResponsiveSpace(theme, [
            "marginTop",
            "marginBottom"
        ], props.$marginY),
        _getResponsiveSpace(theme, [
            "marginTop"
        ], props.$marginTop),
        _getResponsiveSpace(theme, [
            "marginRight"
        ], props.$marginRight),
        _getResponsiveSpace(theme, [
            "marginBottom"
        ], props.$marginBottom),
        _getResponsiveSpace(theme, [
            "marginLeft"
        ], props.$marginLeft)
    ].filter(Boolean);
}
function responsivePaddingStyle(props) {
    const { theme } = props;
    return [
        _getResponsiveSpace(theme, [
            "padding"
        ], props.$padding),
        _getResponsiveSpace(theme, [
            "paddingLeft",
            "paddingRight"
        ], props.$paddingX),
        _getResponsiveSpace(theme, [
            "paddingTop",
            "paddingBottom"
        ], props.$paddingY),
        _getResponsiveSpace(theme, [
            "paddingTop"
        ], props.$paddingTop),
        _getResponsiveSpace(theme, [
            "paddingRight"
        ], props.$paddingRight),
        _getResponsiveSpace(theme, [
            "paddingBottom"
        ], props.$paddingBottom),
        _getResponsiveSpace(theme, [
            "paddingLeft"
        ], props.$paddingLeft)
    ].filter(Boolean);
}
function responsiveRadiusStyle(props) {
    const { media, radius } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$radius, (value)=>{
        let borderRadius = 0;
        return typeof value == "number" && (borderRadius = rem(radius[value])), value === "full" && (borderRadius = "9999px"), {
            borderRadius
        };
    });
}
function toBoxShadow(shadow, color) {
    return `${shadow.map(rem).join(" ")} ${color}`;
}
function shadowStyle(shadow, outlineWidth = 1) {
    if (!shadow) return EMPTY_RECORD;
    const outline = `0 0 0 ${rem(outlineWidth)} var(--card-shadow-outline-color)`, umbra = toBoxShadow(shadow.umbra, "var(--card-shadow-umbra-color)"), penumbra = toBoxShadow(shadow.penumbra, "var(--card-shadow-penumbra-color)"), ambient = toBoxShadow(shadow.ambient, "var(--card-shadow-ambient-color)");
    return {
        boxShadow: `${outline}, ${umbra}, ${penumbra}, ${ambient}`
    };
}
function responsiveShadowStyle(props) {
    const { card, media, shadow } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$shadow, (index)=>shadowStyle(shadow[index], card.shadow.outline));
}
const SpanWithTextOverflow = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].span.withConfig({
    displayName: "SpanWithTextOverflow",
    componentId: "sc-ol2i3b-0"
})`display:block;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;overflow:clip;`;
function labelBaseStyle(props) {
    const { $accent, $muted } = props, { font } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    text-transform: uppercase;

    ${$accent && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
      color: var(--card-accent-fg-color);
    `}

    ${$muted && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
      color: var(--card-muted-fg-color);
    `}

    & code {
      font-family: ${font.code.family};
      border-radius: 1px;
    }

    & a {
      text-decoration: none;
      border-radius: 1px;
    }

    & svg {
      /* Certain popular CSS libraries changes the defaults for SVG display */
      /* Make sure SVGs are rendered as inline elements */
      display: inline;
    }

    & [data-sanity-icon] {
      vertical-align: baseline;
    }
  `;
}
const StyledLabel = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "StyledLabel",
    componentId: "sc-1luap7z-0"
})(responsiveLabelFont, responsiveTextAlignStyle, labelBaseStyle), Label = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(22);
    let accent, align, childrenProp, restProps, t0, t1, textOverflow, weight;
    $[0] !== props ? ({ accent, align, children: childrenProp, muted: t0, size: t1, textOverflow, weight, ...restProps } = props, $[0] = props, $[1] = accent, $[2] = align, $[3] = childrenProp, $[4] = restProps, $[5] = t0, $[6] = t1, $[7] = textOverflow, $[8] = weight) : (accent = $[1], align = $[2], childrenProp = $[3], restProps = $[4], t0 = $[5], t1 = $[6], textOverflow = $[7], weight = $[8]);
    const muted = t0 === void 0 ? !1 : t0, size2 = t1 === void 0 ? 2 : t1;
    let children = childrenProp;
    if (textOverflow === "ellipsis") {
        let t22;
        $[9] !== children ? (t22 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(SpanWithTextOverflow, {
            children
        }), $[9] = children, $[10] = t22) : t22 = $[10], children = t22;
    } else {
        let t22;
        $[11] !== children ? (t22 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("span", {
            children
        }), $[11] = children, $[12] = t22) : t22 = $[12], children = t22;
    }
    const t2 = useArrayProp(align), t3 = useArrayProp(size2);
    let t4;
    return $[13] !== accent || $[14] !== children || $[15] !== muted || $[16] !== ref || $[17] !== restProps || $[18] !== t2 || $[19] !== t3 || $[20] !== weight ? (t4 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledLabel, {
        "data-ui": "Label",
        ...restProps,
        $accent: accent,
        $align: t2,
        $muted: muted,
        $size: t3,
        $weight: weight,
        ref,
        children
    }), $[13] = accent, $[14] = children, $[15] = muted, $[16] = ref, $[17] = restProps, $[18] = t2, $[19] = t3, $[20] = weight, $[21] = t4) : t4 = $[21], t4;
});
Label.displayName = "ForwardRef(Label)";
const avatarStyle = {
    root: avatarRootStyle,
    arrow: avatarArrowStyle,
    bgStroke: avatarBgStrokeStyle,
    stroke: avatarStrokeStyle,
    initials: avatarInitialsStyle,
    image: avatarImageStyle
};
function avatarArrowStyle() {
    return {
        position: "absolute",
        boxSizing: "border-box",
        zIndex: 0,
        opacity: 0,
        transition: "all 0.2s linear",
        transform: "rotate(-90deg) translate3d(0, 6px, 0)",
        left: 0,
        right: 0,
        top: 0,
        bottom: 0,
        "& > svg": {
            width: "11px",
            height: "7px",
            position: "absolute",
            top: "-5px",
            left: "50%",
            transform: "translateX(-6px)",
            "&:not([hidden])": {
                display: "block"
            }
        },
        "[data-arrow-position='inside'] > &": {
            transform: "rotate(-90deg) translate3d(0, 6px, 0)",
            opacity: 0
        },
        "[data-arrow-position='top'] > &": {
            opacity: 1,
            transform: "rotate(0deg)"
        },
        "[data-arrow-position='bottom'] > &": {
            opacity: 1,
            transform: "rotate(-180deg)"
        }
    };
}
function avatarRootStyle(props) {
    const { $color } = props, { avatar } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return {
        "--avatar-bg-color": `var(--card-avatar-${$color}-bg-color)`,
        "--avatar-fg-color": `var(--card-avatar-${$color}-fg-color)`,
        backgroundColor: "var(--avatar-bg-color)",
        position: "relative",
        boxSizing: "border-box",
        userSelect: "none",
        boxShadow: "0 0 0 1px var(--card-bg-color)",
        '&[data-status="inactive"]': {
            opacity: 0.5
        },
        "&>svg": {
            "&:not([hidden])": {
                display: "block"
            }
        },
        /* &:is(button) */ '&[data-as="button"]': {
            WebkitFontSmoothing: "inherit",
            appearance: "none",
            margin: 0,
            padding: 0,
            border: 0,
            font: "inherit",
            color: "inherit",
            outline: "none",
            "&:focus": {
                boxShadow: focusRingStyle({
                    focusRing: avatar.focusRing
                })
            },
            "&:focus:not(:focus-visible)": {
                boxShadow: "none"
            }
        }
    };
}
function responsiveAvatarSizeStyle(props) {
    const { avatar, media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$size, (size2)=>{
        const avatarSize = avatar.sizes[size2] || avatar.sizes[0];
        return {
            width: rem(avatarSize.size),
            height: rem(avatarSize.size),
            borderRadius: rem(avatarSize.size / 2),
            "&>svg": {
                width: rem(avatarSize.size),
                height: rem(avatarSize.size),
                borderRadius: rem(avatarSize.size / 2)
            }
        };
    });
}
function avatarImageStyle() {
    return {
        position: "relative"
    };
}
function avatarInitialsStyle() {
    return {
        width: "100%",
        height: "100%",
        color: "var(--avatar-fg-color)",
        alignItems: "center",
        justifyContent: "center",
        textTransform: "uppercase",
        textAlign: "center",
        borderRadius: "50%",
        "&:not([hidden])": {
            display: "flex"
        }
    };
}
function avatarBgStrokeStyle() {
    return {
        strokeWidth: "4px",
        stroke: "var(--card-bg-color)"
    };
}
function avatarStrokeStyle() {
    return {
        strokeWidth: "2px",
        stroke: "var(--avatar-bg-color)",
        '[data-status="editing"] &': {
            strokeDasharray: "2 4",
            strokeLinecap: "round"
        }
    };
}
const StyledAvatar = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "StyledAvatar",
    componentId: "sc-1rj7kl0-0"
})(responsiveAvatarSizeStyle, avatarStyle.root), Arrow$1 = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "Arrow",
    componentId: "sc-1rj7kl0-1"
})(avatarStyle.arrow), BgStroke = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].ellipse.withConfig({
    displayName: "BgStroke",
    componentId: "sc-1rj7kl0-2"
})(avatarStyle.bgStroke), Stroke = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].ellipse.withConfig({
    displayName: "Stroke",
    componentId: "sc-1rj7kl0-3"
})(avatarStyle.stroke), Initials = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "Initials",
    componentId: "sc-1rj7kl0-4"
})(avatarStyle.initials), InitialsLabel = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Label).withConfig({
    displayName: "InitialsLabel",
    componentId: "sc-1rj7kl0-5"
})({
    color: "inherit"
}), AvatarImage = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].svg.withConfig({
    displayName: "AvatarImage",
    componentId: "sc-1rj7kl0-6"
})(avatarStyle.image), Avatar = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(52);
    let __unstable_hideInnerStroke, animateArrowFrom, arrowPositionProp, asProp, initials, onImageLoadError, restProps, src, t0, t1, t2, title;
    $[0] !== props ? ({ __unstable_hideInnerStroke, as: asProp, color: t0, src, title, initials, onImageLoadError, arrowPosition: arrowPositionProp, animateArrowFrom, status: t1, size: t2, ...restProps } = props, $[0] = props, $[1] = __unstable_hideInnerStroke, $[2] = animateArrowFrom, $[3] = arrowPositionProp, $[4] = asProp, $[5] = initials, $[6] = onImageLoadError, $[7] = restProps, $[8] = src, $[9] = t0, $[10] = t1, $[11] = t2, $[12] = title) : (__unstable_hideInnerStroke = $[1], animateArrowFrom = $[2], arrowPositionProp = $[3], asProp = $[4], initials = $[5], onImageLoadError = $[6], restProps = $[7], src = $[8], t0 = $[9], t1 = $[10], t2 = $[11], title = $[12]);
    const color = t0 === void 0 ? "gray" : t0, status = t1 === void 0 ? "online" : t1, sizeProp = t2 === void 0 ? 1 : t2, { avatar } = useTheme_v2(), as = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$is$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].isValidElementType(asProp) ? asProp : "div", size2 = useArrayProp(sizeProp), _sizeRem = (avatar.sizes[size2[0]] || avatar.sizes[0]).size, _radius = _sizeRem / 2, elementId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useId"])(), [arrowPosition, setArrowPosition] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(animateArrowFrom || arrowPositionProp || "inside"), [imageFailed, setImageFailed] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(!1), imageId = `avatar-image-${elementId}`;
    let t3, t4;
    $[13] !== arrowPosition || $[14] !== arrowPositionProp ? (t3 = ()=>{
        if (arrowPosition === arrowPositionProp) return;
        const raf = requestAnimationFrame(()=>setArrowPosition(arrowPositionProp));
        return ()=>cancelAnimationFrame(raf);
    }, t4 = [
        arrowPosition,
        arrowPositionProp
    ], $[13] = arrowPosition, $[14] = arrowPositionProp, $[15] = t3, $[16] = t4) : (t3 = $[15], t4 = $[16]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t3, t4);
    let t5, t6;
    $[17] !== src ? (t5 = ()=>{
        src && setImageFailed(!1);
    }, t6 = [
        src
    ], $[17] = src, $[18] = t5, $[19] = t6) : (t5 = $[18], t6 = $[19]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t5, t6);
    let t7;
    $[20] !== onImageLoadError ? (t7 = ()=>{
        setImageFailed(!0), onImageLoadError && onImageLoadError(new Error("Avatar: the image failed to load"));
    }, $[20] = onImageLoadError, $[21] = t7) : t7 = $[21];
    const handleImageError = t7;
    let t8, t9;
    $[22] !== size2 ? (t9 = size2.map(_temp$6), $[22] = size2, $[23] = t9) : t9 = $[23], t8 = t9;
    const initialsSize = t8, t10 = typeof as == "string" ? as : void 0;
    let t11;
    $[24] !== color ? (t11 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Arrow$1, {
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("svg", {
            width: "11",
            height: "7",
            viewBox: "0 0 11 7",
            fill: "none",
            children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("path", {
                d: "M6.67948 1.50115L11 7L0 7L4.32052 1.50115C4.92109 0.736796 6.07891 0.736795 6.67948 1.50115Z",
                fill: color
            })
        })
    }), $[24] = color, $[25] = t11) : t11 = $[25];
    let t12;
    $[26] !== __unstable_hideInnerStroke || $[27] !== _radius || $[28] !== _sizeRem || $[29] !== handleImageError || $[30] !== imageFailed || $[31] !== imageId || $[32] !== src ? (t12 = !imageFailed && src && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(AvatarImage, {
        viewBox: `0 0 ${_sizeRem} ${_sizeRem}`,
        fill: "none",
        children: [
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("defs", {
                children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("pattern", {
                    id: imageId,
                    patternContentUnits: "objectBoundingBox",
                    width: "1",
                    height: "1",
                    children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("image", {
                        href: src,
                        width: "1",
                        height: "1",
                        onError: handleImageError
                    })
                })
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("circle", {
                cx: _radius,
                cy: _radius,
                r: _radius,
                fill: `url(#${imageId})`
            }),
            !__unstable_hideInnerStroke && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(BgStroke, {
                cx: _radius,
                cy: _radius,
                rx: _radius,
                ry: _radius,
                vectorEffect: "non-scaling-stroke"
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Stroke, {
                cx: _radius,
                cy: _radius,
                rx: _radius,
                ry: _radius,
                vectorEffect: "non-scaling-stroke"
            })
        ]
    }), $[26] = __unstable_hideInnerStroke, $[27] = _radius, $[28] = _sizeRem, $[29] = handleImageError, $[30] = imageFailed, $[31] = imageId, $[32] = src, $[33] = t12) : t12 = $[33];
    let t13;
    $[34] !== imageFailed || $[35] !== initials || $[36] !== initialsSize || $[37] !== src ? (t13 = (imageFailed || !src) && initials && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Initials, {
            children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(InitialsLabel, {
                forwardedAs: "span",
                size: initialsSize,
                weight: "medium",
                children: initials
            })
        })
    }), $[34] = imageFailed, $[35] = initials, $[36] = initialsSize, $[37] = src, $[38] = t13) : t13 = $[38];
    let t14;
    return $[39] !== arrowPosition || $[40] !== as || $[41] !== color || $[42] !== ref || $[43] !== restProps || $[44] !== size2 || $[45] !== status || $[46] !== t10 || $[47] !== t11 || $[48] !== t12 || $[49] !== t13 || $[50] !== title ? (t14 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(StyledAvatar, {
        as,
        "data-as": t10,
        "data-ui": "Avatar",
        ...restProps,
        $color: color,
        $size: size2,
        "aria-label": title,
        "data-arrow-position": arrowPosition,
        "data-status": status,
        ref,
        title,
        children: [
            t11,
            t12,
            t13
        ]
    }), $[39] = arrowPosition, $[40] = as, $[41] = color, $[42] = ref, $[43] = restProps, $[44] = size2, $[45] = status, $[46] = t10, $[47] = t11, $[48] = t12, $[49] = t13, $[50] = title, $[51] = t14) : t14 = $[51], t14;
});
Avatar.displayName = "ForwardRef(Avatar)";
function _temp$6(s) {
    return s === 1 ? 1 : s === 2 ? 3 : s === 3 ? 5 : 0;
}
function _responsiveAvatarCounterSizeStyle(props) {
    const { avatar, media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$size, (size2)=>{
        const avatarSize = avatar.sizes[size2];
        return avatarSize ? {
            borderRadius: rem(avatarSize.size / 2),
            minWidth: rem(avatarSize.size),
            height: rem(avatarSize.size)
        } : EMPTY_RECORD;
    });
}
function _avatarCounterBaseStyle(props) {
    const { space } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    user-select: none;
    color: inherit;
    color: var(--card-fg-color);
    background: var(--card-bg-color);
    box-shadow:
      0 0 0 1px var(--card-bg-color),
      inset 0 0 0 1px var(--card-hairline-hard-color);
    padding: 0 ${rem(space[2])};

    &:not([hidden]) {
      display: flex;
    }
  `;
}
const StyledAvatarCounter = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "StyledAvatarCounter",
    componentId: "sc-1ydx86y-0"
})(_responsiveAvatarCounterSizeStyle, _avatarCounterBaseStyle), AvatarCounter = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(9), { count, size: t0 } = props, size2 = useArrayProp(t0 === void 0 ? 1 : t0);
    let t1, t2;
    $[0] !== size2 ? (t2 = size2.map(_temp$5), $[0] = size2, $[1] = t2) : t2 = $[1], t1 = t2;
    const fontSize2 = t1;
    let t3;
    $[2] !== count || $[3] !== fontSize2 ? (t3 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Label, {
        as: "span",
        size: fontSize2,
        weight: "medium",
        children: count
    }), $[2] = count, $[3] = fontSize2, $[4] = t3) : t3 = $[4];
    let t4;
    return $[5] !== ref || $[6] !== size2 || $[7] !== t3 ? (t4 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledAvatarCounter, {
        $size: size2,
        "data-ui": "AvatarCounter",
        ref,
        children: t3
    }), $[5] = ref, $[6] = size2, $[7] = t3, $[8] = t4) : t4 = $[8], t4;
});
AvatarCounter.displayName = "ForwardRef(AvatarCounter)";
function _temp$5(s) {
    return s === 1 ? 1 : s === 2 ? 3 : s === 3 ? 5 : 0;
}
const BASE_STYLES = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
  white-space: nowrap;

  & > div {
    vertical-align: top;

    &:not([hidden]) {
      display: inline-block;
    }
  }
`;
function avatarStackStyle() {
    return BASE_STYLES;
}
function responsiveAvatarStackSizeStyle(props) {
    const { avatar, media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$size, (size2)=>{
        const avatarSize = avatar.sizes[size2];
        return avatarSize ? {
            "& > div + div": {
                marginLeft: rem(avatarSize.distance)
            }
        } : EMPTY_RECORD;
    });
}
const StyledAvatarStack = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "StyledAvatarStack",
    componentId: "sc-cysmbb-0"
})(responsiveAvatarStackSizeStyle, avatarStackStyle), AvatarStack = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(15);
    let childrenProp, restProps, t0, t1;
    $[0] !== props ? ({ children: childrenProp, maxLength: t0, size: t1, ...restProps } = props, $[0] = props, $[1] = childrenProp, $[2] = restProps, $[3] = t0, $[4] = t1) : (childrenProp = $[1], restProps = $[2], t0 = $[3], t1 = $[4]);
    const maxLengthProp = t0 === void 0 ? 4 : t0, sizeProp = t1 === void 0 ? 1 : t1, children = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Children"].toArray(childrenProp).filter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElement"]), maxLength = Math.max(maxLengthProp, 0), size2 = useArrayProp(sizeProp), len = children.length, visibleCount = maxLength - 1, extraCount = len - visibleCount, visibleChildren = extraCount > 1 ? children.slice(extraCount, len) : children, T0 = StyledAvatarStack, t2 = "AvatarStack", t3 = len === 0 && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(AvatarCounter, {
            count: len,
            size: size2
        })
    }), t4 = len !== 0 && extraCount > 1 && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(AvatarCounter, {
            count: extraCount,
            size: size2
        })
    });
    let t5;
    $[5] !== size2 ? (t5 = (child, childIndex)=>/* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
            children: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cloneElement"])(child, {
                size: size2
            })
        }, String(childIndex)), $[5] = size2, $[6] = t5) : t5 = $[6];
    const t6 = visibleChildren.map(t5);
    let t7;
    return $[7] !== T0 || $[8] !== ref || $[9] !== restProps || $[10] !== size2 || $[11] !== t3 || $[12] !== t4 || $[13] !== t6 ? (t7 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(T0, {
        "data-ui": t2,
        ...restProps,
        ref,
        $size: size2,
        children: [
            t3,
            t4,
            t6
        ]
    }), $[7] = T0, $[8] = ref, $[9] = restProps, $[10] = size2, $[11] = t3, $[12] = t4, $[13] = t6, $[14] = t7) : t7 = $[14], t7;
});
AvatarStack.displayName = "ForwardRef(AvatarStack)";
const StyledBox = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "StyledBox",
    componentId: "sc-1hhky9f-0"
})(boxStyle, flexItemStyle, responsiveBoxStyle, responsiveGridItemStyle, responsiveMarginStyle, responsivePaddingStyle), Box = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(59);
    let column, columnEnd, columnStart, flex, height, marginBottom, marginLeft, marginRight, marginTop, marginX, marginY, overflow, paddingBottom, paddingLeft, paddingRight, paddingTop, paddingX, paddingY, restProps, row, rowEnd, rowStart, sizing, t0, t1, t2, t3;
    $[0] !== props ? ({ as: t0, column, columnStart, columnEnd, display: t1, flex, height, margin: t2, marginX, marginY, marginTop, marginRight, marginBottom, marginLeft, overflow, padding: t3, paddingX, paddingY, paddingTop, paddingRight, paddingBottom, paddingLeft, row, rowStart, rowEnd, sizing, ...restProps } = props, $[0] = props, $[1] = column, $[2] = columnEnd, $[3] = columnStart, $[4] = flex, $[5] = height, $[6] = marginBottom, $[7] = marginLeft, $[8] = marginRight, $[9] = marginTop, $[10] = marginX, $[11] = marginY, $[12] = overflow, $[13] = paddingBottom, $[14] = paddingLeft, $[15] = paddingRight, $[16] = paddingTop, $[17] = paddingX, $[18] = paddingY, $[19] = restProps, $[20] = row, $[21] = rowEnd, $[22] = rowStart, $[23] = sizing, $[24] = t0, $[25] = t1, $[26] = t2, $[27] = t3) : (column = $[1], columnEnd = $[2], columnStart = $[3], flex = $[4], height = $[5], marginBottom = $[6], marginLeft = $[7], marginRight = $[8], marginTop = $[9], marginX = $[10], marginY = $[11], overflow = $[12], paddingBottom = $[13], paddingLeft = $[14], paddingRight = $[15], paddingTop = $[16], paddingX = $[17], paddingY = $[18], restProps = $[19], row = $[20], rowEnd = $[21], rowStart = $[22], sizing = $[23], t0 = $[24], t1 = $[25], t2 = $[26], t3 = $[27]);
    const asProp = t0 === void 0 ? "div" : t0, display = t1 === void 0 ? "block" : t1, margin = t2 === void 0 ? 0 : t2, padding = t3 === void 0 ? 0 : t3, t4 = typeof asProp == "string" ? asProp : void 0, t5 = useArrayProp(column), t6 = useArrayProp(columnStart), t7 = useArrayProp(columnEnd), t8 = useArrayProp(display), t9 = useArrayProp(flex), t10 = useArrayProp(height), t11 = useArrayProp(margin), t12 = useArrayProp(marginX), t13 = useArrayProp(marginY), t14 = useArrayProp(marginTop), t15 = useArrayProp(marginRight), t16 = useArrayProp(marginBottom), t17 = useArrayProp(marginLeft), t18 = useArrayProp(overflow), t19 = useArrayProp(padding), t20 = useArrayProp(paddingX), t21 = useArrayProp(paddingY), t22 = useArrayProp(paddingTop), t23 = useArrayProp(paddingRight), t24 = useArrayProp(paddingBottom), t25 = useArrayProp(paddingLeft), t26 = useArrayProp(row), t27 = useArrayProp(rowStart), t28 = useArrayProp(rowEnd), t29 = useArrayProp(sizing);
    let t30;
    return $[28] !== asProp || $[29] !== props.children || $[30] !== ref || $[31] !== restProps || $[32] !== t10 || $[33] !== t11 || $[34] !== t12 || $[35] !== t13 || $[36] !== t14 || $[37] !== t15 || $[38] !== t16 || $[39] !== t17 || $[40] !== t18 || $[41] !== t19 || $[42] !== t20 || $[43] !== t21 || $[44] !== t22 || $[45] !== t23 || $[46] !== t24 || $[47] !== t25 || $[48] !== t26 || $[49] !== t27 || $[50] !== t28 || $[51] !== t29 || $[52] !== t4 || $[53] !== t5 || $[54] !== t6 || $[55] !== t7 || $[56] !== t8 || $[57] !== t9 ? (t30 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledBox, {
        "data-as": t4,
        "data-ui": "Box",
        ...restProps,
        $column: t5,
        $columnStart: t6,
        $columnEnd: t7,
        $display: t8,
        $flex: t9,
        $height: t10,
        $margin: t11,
        $marginX: t12,
        $marginY: t13,
        $marginTop: t14,
        $marginRight: t15,
        $marginBottom: t16,
        $marginLeft: t17,
        $overflow: t18,
        $padding: t19,
        $paddingX: t20,
        $paddingY: t21,
        $paddingTop: t22,
        $paddingRight: t23,
        $paddingBottom: t24,
        $paddingLeft: t25,
        $row: t26,
        $rowStart: t27,
        $rowEnd: t28,
        $sizing: t29,
        as: asProp,
        ref,
        children: props.children
    }), $[28] = asProp, $[29] = props.children, $[30] = ref, $[31] = restProps, $[32] = t10, $[33] = t11, $[34] = t12, $[35] = t13, $[36] = t14, $[37] = t15, $[38] = t16, $[39] = t17, $[40] = t18, $[41] = t19, $[42] = t20, $[43] = t21, $[44] = t22, $[45] = t23, $[46] = t24, $[47] = t25, $[48] = t26, $[49] = t27, $[50] = t28, $[51] = t29, $[52] = t4, $[53] = t5, $[54] = t6, $[55] = t7, $[56] = t8, $[57] = t9, $[58] = t30) : t30 = $[58], t30;
});
Box.displayName = "ForwardRef(Box)";
function textBaseStyle(props) {
    const { $accent, $muted } = props, { font } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    color: var(--card-fg-color);

    ${$accent && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
      color: var(--card-accent-fg-color);
    `}

    ${$muted && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
      color: var(--card-muted-fg-color);
    `}

    & code {
      font-family: ${font.code.family};
      border-radius: 1px;
      background-color: var(--card-code-bg-color);
      color: var(--card-code-fg-color);
    }

    & a {
      text-decoration: none;
      border-radius: 1px;
      color: var(--card-link-color);
      outline: none;

      @media (hover: hover) {
        &:hover {
          text-decoration: underline;
        }
      }

      &:focus {
        box-shadow:
          0 0 0 1px var(--card-bg-color),
          0 0 0 3px var(--card-focus-ring-color);
      }

      &:focus:not(:focus-visible) {
        box-shadow: none;
      }
    }

    & strong {
      font-weight: ${font.text.weights.bold};
    }

    & svg {
      /* Certain popular CSS libraries changes the defaults for SVG display */
      /* Make sure SVGs are rendered as inline elements */
      display: inline;
    }

    & [data-sanity-icon] {
      vertical-align: baseline;
      color: var(--card-icon-color);

      & path {
        vector-effect: non-scaling-stroke !important;
      }
    }
  `;
}
const StyledText = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "StyledText",
    componentId: "sc-11ov82j-0"
})(responsiveTextFont, responsiveTextAlignStyle, textBaseStyle), Text = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(22);
    let align, childrenProp, restProps, t0, t1, t2, textOverflow, weight;
    $[0] !== props ? ({ accent: t0, align, children: childrenProp, muted: t1, size: t2, textOverflow, weight, ...restProps } = props, $[0] = props, $[1] = align, $[2] = childrenProp, $[3] = restProps, $[4] = t0, $[5] = t1, $[6] = t2, $[7] = textOverflow, $[8] = weight) : (align = $[1], childrenProp = $[2], restProps = $[3], t0 = $[4], t1 = $[5], t2 = $[6], textOverflow = $[7], weight = $[8]);
    const accent = t0 === void 0 ? !1 : t0, muted = t1 === void 0 ? !1 : t1, size2 = t2 === void 0 ? 2 : t2;
    let children = childrenProp;
    if (textOverflow === "ellipsis") {
        let t32;
        $[9] !== children ? (t32 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(SpanWithTextOverflow, {
            children
        }), $[9] = children, $[10] = t32) : t32 = $[10], children = t32;
    }
    const t3 = useArrayProp(align), t4 = useArrayProp(size2);
    let t5;
    $[11] !== children ? (t5 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("span", {
        children
    }), $[11] = children, $[12] = t5) : t5 = $[12];
    let t6;
    return $[13] !== accent || $[14] !== muted || $[15] !== ref || $[16] !== restProps || $[17] !== t3 || $[18] !== t4 || $[19] !== t5 || $[20] !== weight ? (t6 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledText, {
        "data-ui": "Text",
        ...restProps,
        $accent: accent,
        $align: t3,
        $muted: muted,
        ref,
        $size: t4,
        $weight: weight,
        children: t5
    }), $[13] = accent, $[14] = muted, $[15] = ref, $[16] = restProps, $[17] = t3, $[18] = t4, $[19] = t5, $[20] = weight, $[21] = t6) : t6 = $[21], t6;
});
Text.displayName = "ForwardRef(Text)";
function badgeStyle(props) {
    const { $tone } = props;
    return {
        "--card-bg-color": `var(--card-badge-${$tone}-bg-color)`,
        "--card-fg-color": `var(--card-badge-${$tone}-fg-color)`,
        backgroundColor: "var(--card-bg-color)",
        cursor: "default",
        "&:not([hidden])": {
            display: "inline-block",
            verticalAlign: "top"
        }
    };
}
const StyledBadge = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Box).withConfig({
    displayName: "StyledBadge",
    componentId: "sc-5u140l-0"
})(responsiveRadiusStyle, badgeStyle), Badge = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(17);
    let children, restProps, t0, t1, t2, t3;
    if ($[0] !== props) {
        const { children: t42, fontSize: t52, mode: _deprecated_mode, padding: t62, radius: t72, tone: t8, ...t9 } = props;
        children = t42, t0 = t52, t1 = t62, t2 = t72, t3 = t8, restProps = t9, $[0] = props, $[1] = children, $[2] = restProps, $[3] = t0, $[4] = t1, $[5] = t2, $[6] = t3;
    } else children = $[1], restProps = $[2], t0 = $[3], t1 = $[4], t2 = $[5], t3 = $[6];
    const fontSize2 = t0 === void 0 ? 1 : t0, padding = t1 === void 0 ? 1 : t1, radius = t2 === void 0 ? "full" : t2, tone = t3 === void 0 ? "default" : t3, t4 = useArrayProp(radius), t5 = useArrayProp(padding);
    let t6;
    $[7] !== children || $[8] !== fontSize2 ? (t6 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Text, {
        size: fontSize2,
        children
    }), $[7] = children, $[8] = fontSize2, $[9] = t6) : t6 = $[9];
    let t7;
    return $[10] !== ref || $[11] !== restProps || $[12] !== t4 || $[13] !== t5 || $[14] !== t6 || $[15] !== tone ? (t7 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledBadge, {
        "data-ui": "Badge",
        ...restProps,
        $tone: tone,
        $radius: t4,
        padding: t5,
        ref,
        children: t6
    }), $[10] = ref, $[11] = restProps, $[12] = t4, $[13] = t5, $[14] = t6, $[15] = tone, $[16] = t7) : t7 = $[16], t7;
});
Badge.displayName = "ForwardRef(Badge)";
const StyledFlex = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Box).withConfig({
    displayName: "StyledFlex",
    componentId: "sc-oxesg3-0"
})(flexItemStyle, responsiveFlexStyle), Flex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(17);
    let align, as, gap, justify, restProps, t0, wrap;
    $[0] !== props ? ({ align, as, direction: t0, gap, justify, wrap, ...restProps } = props, $[0] = props, $[1] = align, $[2] = as, $[3] = gap, $[4] = justify, $[5] = restProps, $[6] = t0, $[7] = wrap) : (align = $[1], as = $[2], gap = $[3], justify = $[4], restProps = $[5], t0 = $[6], wrap = $[7]);
    const direction = t0 === void 0 ? "row" : t0, t1 = useArrayProp(align), t2 = useArrayProp(direction), t3 = useArrayProp(gap), t4 = useArrayProp(justify), t5 = useArrayProp(wrap);
    let t6;
    return $[8] !== as || $[9] !== ref || $[10] !== restProps || $[11] !== t1 || $[12] !== t2 || $[13] !== t3 || $[14] !== t4 || $[15] !== t5 ? (t6 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledFlex, {
        "data-ui": "Flex",
        ...restProps,
        $align: t1,
        $direction: t2,
        $gap: t3,
        $justify: t4,
        $wrap: t5,
        forwardedAs: as,
        ref
    }), $[8] = as, $[9] = ref, $[10] = restProps, $[11] = t1, $[12] = t2, $[13] = t3, $[14] = t4, $[15] = t5, $[16] = t6) : t6 = $[16], t6;
});
Flex.displayName = "ForwardRef(Flex)";
const rotate = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keyframes"]`
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
`, StyledSpinner = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Text).withConfig({
    displayName: "StyledSpinner",
    componentId: "sc-124hnd0-0"
})`& > span > svg{animation:${rotate} 500ms linear infinite;}`, Spinner = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(4);
    let t0;
    $[0] === Symbol.for("react.memo_cache_sentinel") ? (t0 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$icons$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SpinnerIcon"], {}), $[0] = t0) : t0 = $[0];
    let t1;
    return $[1] !== props || $[2] !== ref ? (t1 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledSpinner, {
        "data-ui": "Spinner",
        ...props,
        ref,
        children: t0
    }), $[1] = props, $[2] = ref, $[3] = t1) : t1 = $[3], t1;
});
Spinner.displayName = "ForwardRef(Spinner)";
function _cardColorStyle(base, color, checkered = !1) {
    return {
        // from base
        "--card-backdrop-color": base.backdrop,
        "--card-focus-ring-color": base.focusRing,
        "--card-shadow-outline-color": base.shadow.outline,
        "--card-shadow-umbra-color": base.shadow.umbra,
        "--card-shadow-penumbra-color": base.shadow.penumbra,
        "--card-shadow-ambient-color": base.shadow.ambient,
        // from state
        "--card-accent-fg-color": color.accent.fg,
        "--card-avatar-gray-bg-color": color.avatar.gray.bg,
        "--card-avatar-gray-fg-color": color.avatar.gray.fg,
        "--card-avatar-blue-bg-color": color.avatar.blue.bg,
        "--card-avatar-blue-fg-color": color.avatar.blue.fg,
        "--card-avatar-purple-bg-color": color.avatar.purple.bg,
        "--card-avatar-purple-fg-color": color.avatar.purple.fg,
        "--card-avatar-magenta-bg-color": color.avatar.magenta.bg,
        "--card-avatar-magenta-fg-color": color.avatar.magenta.fg,
        "--card-avatar-red-bg-color": color.avatar.red.bg,
        "--card-avatar-red-fg-color": color.avatar.red.fg,
        "--card-avatar-orange-bg-color": color.avatar.orange.bg,
        "--card-avatar-orange-fg-color": color.avatar.orange.fg,
        "--card-avatar-yellow-bg-color": color.avatar.yellow.bg,
        "--card-avatar-yellow-fg-color": color.avatar.yellow.fg,
        "--card-avatar-green-bg-color": color.avatar.green.bg,
        "--card-avatar-green-fg-color": color.avatar.green.fg,
        "--card-avatar-cyan-bg-color": color.avatar.cyan.bg,
        "--card-avatar-cyan-fg-color": color.avatar.cyan.fg,
        "--card-bg-color": color.bg,
        "--card-bg-image": checkered ? `repeating-conic-gradient(${color.bg} 0% 25%, ${color.muted.bg} 0% 50%)` : void 0,
        "--card-border-color": color.border,
        "--card-badge-default-bg-color": color.badge.default.bg,
        "--card-badge-default-dot-color": color.badge.default.dot,
        "--card-badge-default-fg-color": color.badge.default.fg,
        "--card-badge-default-icon-color": color.badge.default.icon,
        "--card-badge-neutral-bg-color": color.badge.neutral?.bg,
        "--card-badge-neutral-dot-color": color.badge.neutral?.dot,
        "--card-badge-neutral-fg-color": color.badge.neutral?.fg,
        "--card-badge-neutral-icon-color": color.badge.neutral?.icon,
        "--card-badge-primary-bg-color": color.badge.primary.bg,
        "--card-badge-primary-dot-color": color.badge.primary.dot,
        "--card-badge-primary-fg-color": color.badge.primary.fg,
        "--card-badge-primary-icon-color": color.badge.primary.icon,
        "--card-badge-suggest-bg-color": color.badge.suggest?.bg,
        "--card-badge-suggest-dot-color": color.badge.suggest?.dot,
        "--card-badge-suggest-fg-color": color.badge.suggest?.fg,
        "--card-badge-suggest-icon-color": color.badge.suggest?.icon,
        "--card-badge-positive-bg-color": color.badge.positive.bg,
        "--card-badge-positive-dot-color": color.badge.positive.dot,
        "--card-badge-positive-fg-color": color.badge.positive.fg,
        "--card-badge-positive-icon-color": color.badge.positive.icon,
        "--card-badge-caution-bg-color": color.badge.caution.bg,
        "--card-badge-caution-dot-color": color.badge.caution.dot,
        "--card-badge-caution-fg-color": color.badge.caution.fg,
        "--card-badge-caution-icon-color": color.badge.caution.icon,
        "--card-badge-critical-bg-color": color.badge.critical.bg,
        "--card-badge-critical-dot-color": color.badge.critical.dot,
        "--card-badge-critical-fg-color": color.badge.critical.fg,
        "--card-badge-critical-icon-color": color.badge.critical.icon,
        "--card-code-bg-color": color.code.bg,
        "--card-code-fg-color": color.code.fg,
        "--card-fg-color": color.fg,
        "--card-icon-color": color.icon,
        "--card-kbd-bg-color": color.kbd.bg,
        "--card-kbd-border-color": color.kbd.border,
        "--card-kbd-fg-color": color.kbd.fg,
        "--card-link-fg-color": color.link.fg,
        "--card-muted-bg-color": color.muted.bg,
        "--card-muted-fg-color": color.muted.fg,
        "--card-skeleton-color-from": color.skeleton.from,
        "--card-skeleton-color-to": color.skeleton.to,
        // deprecated variables (kept for legacy)
        "--card-bg2-color": color.muted.bg,
        "--card-link-color": color.link.fg,
        "--card-hairline-soft-color": color.border,
        "--card-hairline-hard-color": color.border
    };
}
function buttonBaseStyles(props) {
    const { $width } = props, { style } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    ${style?.button};

    -webkit-font-smoothing: inherit;
    appearance: none;
    display: inline-flex;
    align-items: center;
    font: inherit;
    border: 0;
    outline: none;
    user-select: none;
    text-decoration: none;
    border: 0;
    box-sizing: border-box;
    padding: 0;
    margin: 0;
    white-space: nowrap;
    text-align: left;
    position: relative;
    vertical-align: top;

    ${$width === "fill" && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
      width: -moz-available;
      width: -webkit-fill-available;
      width: stretch;
    `}

    & > span {
      display: block;
      flex: 1;
      min-width: 0;
      border-radius: inherit;
    }

    &::-moz-focus-inner {
      border: 0;
      padding: 0;
    }
  `;
}
function combineBoxShadow(...boxShadows) {
    return boxShadows.filter(Boolean).join(",");
}
function buttonColorStyles(props) {
    const { $mode } = props, { button, color: baseColor, style } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme), shadow = props.$mode === "ghost", mode = baseColor.button[$mode] || baseColor.button.default, color = mode[props.$tone] || mode.default, border2 = {
        width: button.border.width,
        color: "var(--card-border-color)"
    }, defaultBoxShadow = void 0;
    return [
        _cardColorStyle(baseColor, color.enabled),
        {
            backgroundColor: "var(--card-bg-color)",
            color: "var(--card-fg-color)",
            boxShadow: focusRingBorderStyle(border2),
            '&:disabled, &[data-disabled="true"]': _cardColorStyle(baseColor, color.disabled),
            "&:not([data-disabled='true'])": {
                boxShadow: combineBoxShadow(focusRingBorderStyle(border2), shadow ? defaultBoxShadow : void 0),
                "&:focus": {
                    boxShadow: focusRingStyle({
                        base: baseColor,
                        border: {
                            width: 2,
                            color: baseColor.bg
                        },
                        focusRing: button.focusRing
                    })
                },
                "&:focus:not(:focus-visible)": {
                    boxShadow: combineBoxShadow(focusRingBorderStyle(border2), shadow ? defaultBoxShadow : void 0)
                },
                "@media (hover: hover)": {
                    "&:hover": _cardColorStyle(baseColor, color.hovered),
                    "&:active": _cardColorStyle(baseColor, color.pressed),
                    "&[data-hovered]": _cardColorStyle(baseColor, color.hovered)
                },
                "&[data-selected]": _cardColorStyle(baseColor, color.pressed)
            }
        },
        style?.button?.root
    ].filter(Boolean);
}
const StyledButton = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].button.withConfig({
    displayName: "StyledButton",
    componentId: "sc-aaekt4-0"
})(responsiveRadiusStyle, buttonBaseStyles, buttonColorStyles), LoadingBox = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "LoadingBox",
    componentId: "sc-aaekt4-1"
})`position:absolute;top:0;left:0;right:0;bottom:0;display:flex;align-items:center;justify-content:center;background-color:var(--card-bg-color);border-radius:inherit;z-index:1;box-shadow:inherit;`, Button = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(66);
    let IconComponent, IconRightComponent, children, disabled, loading, paddingBottomProp, paddingLeftProp, paddingRightProp, paddingTopProp, paddingXProp, paddingYProp, restProps, selected, t0, t1, t2, t3, t4, t5, t6, t7, t8, text, textAlign, textWeight, width;
    $[0] !== props ? ({ children, disabled, fontSize: t0, icon: IconComponent, iconRight: IconRightComponent, justify: t1, loading, mode: t2, padding: t3, paddingX: paddingXProp, paddingY: paddingYProp, paddingTop: paddingTopProp, paddingBottom: paddingBottomProp, paddingLeft: paddingLeftProp, paddingRight: paddingRightProp, radius: t4, selected, space: t5, text, textAlign, textWeight, tone: t6, type: t7, muted: t8, width, ...restProps } = props, $[0] = props, $[1] = IconComponent, $[2] = IconRightComponent, $[3] = children, $[4] = disabled, $[5] = loading, $[6] = paddingBottomProp, $[7] = paddingLeftProp, $[8] = paddingRightProp, $[9] = paddingTopProp, $[10] = paddingXProp, $[11] = paddingYProp, $[12] = restProps, $[13] = selected, $[14] = t0, $[15] = t1, $[16] = t2, $[17] = t3, $[18] = t4, $[19] = t5, $[20] = t6, $[21] = t7, $[22] = t8, $[23] = text, $[24] = textAlign, $[25] = textWeight, $[26] = width) : (IconComponent = $[1], IconRightComponent = $[2], children = $[3], disabled = $[4], loading = $[5], paddingBottomProp = $[6], paddingLeftProp = $[7], paddingRightProp = $[8], paddingTopProp = $[9], paddingXProp = $[10], paddingYProp = $[11], restProps = $[12], selected = $[13], t0 = $[14], t1 = $[15], t2 = $[16], t3 = $[17], t4 = $[18], t5 = $[19], t6 = $[20], t7 = $[21], t8 = $[22], text = $[23], textAlign = $[24], textWeight = $[25], width = $[26]);
    const fontSize2 = t0 === void 0 ? 1 : t0, justifyProp = t1 === void 0 ? "center" : t1, mode = t2 === void 0 ? "default" : t2, paddingProp = t3 === void 0 ? 3 : t3, radiusProp = t4 === void 0 ? 2 : t4, spaceProp = t5 === void 0 ? 3 : t5, tone = t6 === void 0 ? "default" : t6, type = t7 === void 0 ? "button" : t7, muted = t8 === void 0 ? !1 : t8, { button } = useTheme_v2(), justify = useArrayProp(justifyProp), padding = useArrayProp(paddingProp), paddingX = useArrayProp(paddingXProp), paddingY = useArrayProp(paddingYProp), paddingTop = useArrayProp(paddingTopProp), paddingBottom = useArrayProp(paddingBottomProp), paddingLeft = useArrayProp(paddingLeftProp), paddingRight = useArrayProp(paddingRightProp), radius = useArrayProp(radiusProp), space = useArrayProp(spaceProp);
    let t9, t10;
    $[27] !== padding || $[28] !== paddingBottom || $[29] !== paddingLeft || $[30] !== paddingRight || $[31] !== paddingTop || $[32] !== paddingX || $[33] !== paddingY ? (t10 = {
        padding,
        paddingX,
        paddingY,
        paddingTop,
        paddingBottom,
        paddingLeft,
        paddingRight
    }, $[27] = padding, $[28] = paddingBottom, $[29] = paddingLeft, $[30] = paddingRight, $[31] = paddingTop, $[32] = paddingX, $[33] = paddingY, $[34] = t10) : t10 = $[34], t9 = t10;
    const boxProps = t9, t11 = !!(loading || disabled), t12 = selected ? "" : void 0, t13 = !!(loading || disabled);
    let t14;
    $[35] !== loading ? (t14 = !!loading && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(LoadingBox, {
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Spinner, {})
    }), $[35] = loading, $[36] = t14) : t14 = $[36];
    let t15;
    $[37] !== IconComponent || $[38] !== IconRightComponent || $[39] !== boxProps || $[40] !== button || $[41] !== fontSize2 || $[42] !== justify || $[43] !== muted || $[44] !== space || $[45] !== text || $[46] !== textAlign || $[47] !== textWeight ? (t15 = (IconComponent || text || IconRightComponent) && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Box, {
        as: "span",
        ...boxProps,
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(Flex, {
            as: "span",
            justify,
            gap: space,
            children: [
                IconComponent && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(Text, {
                    size: fontSize2,
                    children: [
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElement"])(IconComponent) && IconComponent,
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$is$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElementType"])(IconComponent) && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(IconComponent, {})
                    ]
                }),
                text && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Box, {
                    children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Text, {
                        muted,
                        align: textAlign,
                        size: fontSize2,
                        textOverflow: "ellipsis",
                        weight: textWeight ?? button.textWeight,
                        children: text
                    })
                }),
                IconRightComponent && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(Text, {
                    size: fontSize2,
                    children: [
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElement"])(IconRightComponent) && IconRightComponent,
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$is$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElementType"])(IconRightComponent) && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(IconRightComponent, {})
                    ]
                })
            ]
        })
    }), $[37] = IconComponent, $[38] = IconRightComponent, $[39] = boxProps, $[40] = button, $[41] = fontSize2, $[42] = justify, $[43] = muted, $[44] = space, $[45] = text, $[46] = textAlign, $[47] = textWeight, $[48] = t15) : t15 = $[48];
    let t16;
    $[49] !== boxProps || $[50] !== children ? (t16 = children && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Box, {
        as: "span",
        ...boxProps,
        children
    }), $[49] = boxProps, $[50] = children, $[51] = t16) : t16 = $[51];
    let t17;
    return $[52] !== mode || $[53] !== radius || $[54] !== ref || $[55] !== restProps || $[56] !== t11 || $[57] !== t12 || $[58] !== t13 || $[59] !== t14 || $[60] !== t15 || $[61] !== t16 || $[62] !== tone || $[63] !== type || $[64] !== width ? (t17 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(StyledButton, {
        "data-ui": "Button",
        ...restProps,
        $mode: mode,
        $radius: radius,
        $tone: tone,
        "data-disabled": t11,
        "data-selected": t12,
        disabled: t13,
        ref,
        type,
        $width: width,
        children: [
            t14,
            t15,
            t16
        ]
    }), $[52] = mode, $[53] = radius, $[54] = ref, $[55] = restProps, $[56] = t11, $[57] = t12, $[58] = t13, $[59] = t14, $[60] = t15, $[61] = t16, $[62] = tone, $[63] = type, $[64] = width, $[65] = t17) : t17 = $[65], t17;
});
Button.displayName = "ForwardRef(Button)";
function cardStyle(props) {
    return [
        cardBaseStyle(props),
        cardColorStyle(props)
    ];
}
function cardBaseStyle(props) {
    const { $checkered } = props, { space } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    ${$checkered && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
      background-size: ${space[3]}px ${space[3]}px;
      background-position: 50% 50%;
      background-image: var(--card-bg-image);
    `}

    &[data-as='button'] {
      -webkit-font-smoothing: inherit;
      appearance: none;
      outline: none;
      font: inherit;
      text-align: inherit;
      border: 0;
      width: -moz-available;
      width: -webkit-fill-available;
      width: stretch;
    }

    /* &:is(a) */
    &[data-as='a'] {
      outline: none;
      text-decoration: none;
    }

    /* &:is(pre) */
    &[data-as='pre'] {
      font: inherit;
    }
  `;
}
function cardColorStyle(props) {
    const { $checkered, $focusRing, $muted } = props, { card, color, style } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme), border2 = {
        width: card.border.width,
        color: "var(--card-border-color)"
    };
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    color-scheme: ${color._dark ? "dark" : "light"};

    ${_cardColorStyle(color, color, $checkered)}

    background-color: ${$muted ? "var(--card-muted-bg-color)" : "var(--card-bg-color)"};
    color: var(--card-fg-color);

    /* &:is(button) */
    &[data-as='button'] {
      --card-focus-ring-box-shadow: none;

      cursor: default;
      box-shadow: var(--card-focus-ring-box-shadow);

      &:disabled {
        ${_cardColorStyle(color, color.selectable.default.disabled, $checkered)}
      }

      &:not(:disabled) {
        &[data-pressed] {
          ${_cardColorStyle(color, color.selectable.default.pressed, $checkered)}
        }

        &[data-selected] {
          ${_cardColorStyle(color, color.selectable.default.selected, $checkered)}
        }

        @media (hover: hover) {
          &:not([data-pressed]):not([data-selected]) {
            &[data-hovered],
            &:hover {
              ${_cardColorStyle(color, color.selectable.default.hovered, $checkered)}
            }

            &:active {
              ${_cardColorStyle(color, color.selectable.default.pressed, $checkered)}
            }
          }
        }

        &:focus-visible {
          --card-focus-ring-box-shadow: ${$focusRing ? focusRingStyle({
        base: color,
        border: border2,
        focusRing: card.focusRing
    }) : void 0};
        }
      }
    }

    /* &:is(a) */
    &[data-as='a'] {
      cursor: pointer;
      box-shadow: var(--card-focus-ring-box-shadow);

      &[data-disabled] {
        ${_cardColorStyle(color, color.selectable.default.disabled, $checkered)}
      }

      &:not([data-disabled]) {
        &[data-pressed] {
          ${_cardColorStyle(color, color.selectable.default.pressed, $checkered)}
        }

        &[data-selected] {
          ${_cardColorStyle(color, color.selectable.default.selected, $checkered)}
        }

        @media (hover: hover) {
          &:not([data-pressed]):not([data-selected]) {
            &[data-hovered],
            &:hover {
              ${_cardColorStyle(color, color.selectable.default.hovered, $checkered)}
            }

            &:active {
              ${_cardColorStyle(color, color.selectable.default.pressed, $checkered)}
            }
          }
        }

        &:focus-visible {
          --card-focus-ring-box-shadow: ${$focusRing ? focusRingStyle({
        base: color,
        border: border2,
        focusRing: card.focusRing
    }) : void 0};
        }
      }
    }

    ${style?.card?.root}
  `;
}
const StyledCard = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Box).withConfig({
    displayName: "StyledCard",
    componentId: "sc-osnro2-0"
})(responsiveBorderStyle, responsiveRadiusStyle, responsiveShadowStyle, cardStyle), Card = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(42);
    let asProp, border2, borderBottom2, borderLeft2, borderRight2, borderTop2, muted, pressed, restProps, scheme, selected, shadow, t0, t1, t2, t3;
    $[0] !== props ? ({ __unstable_checkered: t0, __unstable_focusRing: t1, as: asProp, border: border2, borderTop: borderTop2, borderRight: borderRight2, borderBottom: borderBottom2, borderLeft: borderLeft2, muted, pressed, radius: t2, scheme, selected, shadow, tone: t3, ...restProps } = props, $[0] = props, $[1] = asProp, $[2] = border2, $[3] = borderBottom2, $[4] = borderLeft2, $[5] = borderRight2, $[6] = borderTop2, $[7] = muted, $[8] = pressed, $[9] = restProps, $[10] = scheme, $[11] = selected, $[12] = shadow, $[13] = t0, $[14] = t1, $[15] = t2, $[16] = t3) : (asProp = $[1], border2 = $[2], borderBottom2 = $[3], borderLeft2 = $[4], borderRight2 = $[5], borderTop2 = $[6], muted = $[7], pressed = $[8], restProps = $[9], scheme = $[10], selected = $[11], shadow = $[12], t0 = $[13], t1 = $[14], t2 = $[15], t3 = $[16]);
    const checkered = t0 === void 0 ? !1 : t0, focusRing = t1 === void 0 ? !1 : t1, radius = t2 === void 0 ? 0 : t2, toneProp = t3 === void 0 ? "default" : t3, as = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$is$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElementType"])(asProp) ? asProp : "div", rootTheme = useRootTheme(), tone = toneProp === "inherit" ? rootTheme.tone : toneProp, t4 = typeof as == "string" ? as : void 0, t5 = rootTheme.scheme, t6 = useArrayProp(border2), t7 = useArrayProp(borderTop2), t8 = useArrayProp(borderRight2), t9 = useArrayProp(borderBottom2), t10 = useArrayProp(borderLeft2), t11 = useArrayProp(radius), t12 = useArrayProp(shadow), t13 = checkered ? "" : void 0, t14 = pressed ? "" : void 0, t15 = selected ? "" : void 0;
    let t16;
    $[17] !== as || $[18] !== checkered || $[19] !== focusRing || $[20] !== muted || $[21] !== ref || $[22] !== restProps || $[23] !== rootTheme.scheme || $[24] !== selected || $[25] !== t10 || $[26] !== t11 || $[27] !== t12 || $[28] !== t13 || $[29] !== t14 || $[30] !== t15 || $[31] !== t4 || $[32] !== t6 || $[33] !== t7 || $[34] !== t8 || $[35] !== t9 || $[36] !== tone ? (t16 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledCard, {
        "data-as": t4,
        "data-scheme": t5,
        "data-ui": "Card",
        "data-tone": tone,
        ...restProps,
        $border: t6,
        $borderTop: t7,
        $borderRight: t8,
        $borderBottom: t9,
        $borderLeft: t10,
        $checkered: checkered,
        $focusRing: focusRing,
        $muted: muted,
        $radius: t11,
        $shadow: t12,
        $tone: tone,
        "data-checkered": t13,
        "data-pressed": t14,
        "data-selected": t15,
        forwardedAs: as,
        ref,
        selected
    }), $[17] = as, $[18] = checkered, $[19] = focusRing, $[20] = muted, $[21] = ref, $[22] = restProps, $[23] = rootTheme.scheme, $[24] = selected, $[25] = t10, $[26] = t11, $[27] = t12, $[28] = t13, $[29] = t14, $[30] = t15, $[31] = t4, $[32] = t6, $[33] = t7, $[34] = t8, $[35] = t9, $[36] = tone, $[37] = t16) : t16 = $[37];
    let t17;
    return $[38] !== scheme || $[39] !== t16 || $[40] !== tone ? (t17 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(ThemeColorProvider, {
        scheme,
        tone,
        children: t16
    }), $[38] = scheme, $[39] = t16, $[40] = tone, $[41] = t17) : t17 = $[41], t17;
});
Card.displayName = "ForwardRef(Card)";
function checkboxBaseStyles() {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    position: relative;
    display: inline-block;
  `;
}
function inputElementStyles(props) {
    const { color, input, radius } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme), { focusRing } = input.checkbox;
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    outline: none;
    opacity: 0;
    z-index: 1;
    padding: 0;
    margin: 0;

    & + span {
      position: relative;
      display: block;
      height: ${rem(input.checkbox.size)};
      width: ${rem(input.checkbox.size)};
      box-sizing: border-box;
      box-shadow: ${focusRingBorderStyle({
        color: color.input.default.enabled.border,
        width: input.border.width
    })};
      border-radius: ${rem(radius[2])};
      line-height: 1;
      background-color: ${color.input.default.enabled.bg};

      & > svg {
        display: block;
        position: absolute;
        opacity: 0;
        height: 100%;
        width: 100%;

        & > path {
          vector-effect: non-scaling-stroke;
          stroke-width: 1.5px !important;
        }
      }
    }

    &:checked + span {
      background: ${color.input.default.enabled.fg};
      box-shadow: ${focusRingBorderStyle({
        color: color.input.default.enabled.fg,
        width: input.border.width
    })};
      color: ${color.input.default.enabled.bg};
    }

    /* focus */
    &:not(:disabled):focus:focus-visible + span {
      box-shadow: ${focusRingStyle({
        focusRing
    })};
    }

    /* focus when checked - uses a different offset */
    &:not(:disabled):focus:focus-visible&:checked + span {
      box-shadow: ${focusRingStyle({
        focusRing: {
            width: 1,
            offset: 1
        }
    })};
    }

    &[data-error] + span {
      background-color: ${color.input.invalid.enabled.border};
      box-shadow: ${focusRingBorderStyle({
        width: input.border.width,
        color: color.input.invalid.enabled.muted.bg
    })};
      color: ${color.input.default.disabled.fg};
    }
    &[data-error]&:checked + span {
      background-color: ${color.input.invalid.enabled.muted.bg};
      color: ${color.input.default.enabled.bg};
    }
    &[data-error]&:checked&:not(:disabled):focus:focus-visible + span {
      box-shadow: ${focusRingStyle({
        border: {
            width: input.border.width,
            color: color.input.invalid.readOnly.muted.bg
        },
        focusRing: {
            width: 1,
            offset: 1
        }
    })};
    }

    &:disabled + span {
      background-color: ${color.input.default.disabled.bg};
      box-shadow: ${focusRingBorderStyle({
        width: input.border.width,
        color: color.input.default.disabled.border
    })};
      color: ${color.input.default.disabled.fg};
    }
    &:disabled&:checked + span {
      background-color: ${color.input.default.disabled.muted.bg};
    }

    &[data-read-only] + span {
      background-color: ${color.input.default.readOnly.bg};
      box-shadow: ${focusRingBorderStyle({
        width: input.border.width,
        color: color.input.default.readOnly.border
    })};
      color: ${color.input.default.readOnly.fg};
    }

    &[data-read-only]&:checked + span {
      background-color: ${color.input.default.readOnly.muted.bg};
    }

    &:checked + span > svg:first-child {
      opacity: 1;
    }
    &:indeterminate + span > svg:last-child {
      opacity: 1;
    }
  `;
}
const StyledCheckbox = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "StyledCheckbox",
    componentId: "sc-1l5mt2l-0"
})(checkboxBaseStyles), Input$5 = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].input.withConfig({
    displayName: "Input",
    componentId: "sc-1l5mt2l-1"
})(inputElementStyles), Checkbox = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, forwardedRef) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(25);
    let checked, className, customValidity, disabled, indeterminate, readOnly, restProps, style;
    $[0] !== props ? ({ checked, className, disabled, indeterminate, customValidity, readOnly, style, ...restProps } = props, $[0] = props, $[1] = checked, $[2] = className, $[3] = customValidity, $[4] = disabled, $[5] = indeterminate, $[6] = readOnly, $[7] = restProps, $[8] = style) : (checked = $[1], className = $[2], customValidity = $[3], disabled = $[4], indeterminate = $[5], readOnly = $[6], restProps = $[7], style = $[8]);
    const ref = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    let t0;
    $[9] === Symbol.for("react.memo_cache_sentinel") ? (t0 = ()=>ref.current, $[9] = t0) : t0 = $[9], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useImperativeHandle"])(forwardedRef, t0);
    let t1, t2;
    $[10] !== indeterminate ? (t1 = ()=>{
        ref.current && (ref.current.indeterminate = indeterminate || !1);
    }, t2 = [
        indeterminate
    ], $[10] = indeterminate, $[11] = t1, $[12] = t2) : (t1 = $[11], t2 = $[12]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t1, t2), useCustomValidity(ref, customValidity);
    const t3 = !disabled && readOnly ? "" : void 0, t4 = customValidity ? "" : void 0, t5 = disabled || readOnly;
    let t6;
    $[13] !== checked || $[14] !== readOnly || $[15] !== restProps || $[16] !== t3 || $[17] !== t4 || $[18] !== t5 ? (t6 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Input$5, {
        "data-read-only": t3,
        "data-error": t4,
        ...restProps,
        checked,
        disabled: t5,
        type: "checkbox",
        readOnly,
        ref
    }), $[13] = checked, $[14] = readOnly, $[15] = restProps, $[16] = t3, $[17] = t4, $[18] = t5, $[19] = t6) : t6 = $[19];
    let t7;
    $[20] === Symbol.for("react.memo_cache_sentinel") ? (t7 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])("span", {
        children: [
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$icons$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CheckmarkIcon"], {}),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$icons$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RemoveIcon"], {})
        ]
    }), $[20] = t7) : t7 = $[20];
    let t8;
    return $[21] !== className || $[22] !== style || $[23] !== t6 ? (t8 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(StyledCheckbox, {
        className,
        "data-ui": "Checkbox",
        style,
        children: [
            t6,
            t7
        ]
    }), $[21] = className, $[22] = style, $[23] = t6, $[24] = t8) : t8 = $[24], t8;
});
Checkbox.displayName = "ForwardRef(Checkbox)";
function codeSyntaxHighlightingStyle({ theme }) {
    const { color: { syntax: color } } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(theme);
    return {
        "&.atrule": {
            color: color.atrule
        },
        "&.attr-name": {
            color: color.attrName
        },
        "&.attr-value": {
            color: color.attrValue
        },
        "&.attribute": {
            color: color.attribute
        },
        "&.boolean": {
            color: color.boolean
        },
        "&.builtin": {
            color: color.builtin
        },
        "&.cdata": {
            color: color.cdata
        },
        "&.char": {
            color: color.char
        },
        "&.class": {
            color: color.class
        },
        "&.class-name": {
            color: color.className
        },
        "&.comment": {
            color: color.comment
        },
        "&.constant": {
            color: color.constant
        },
        "&.deleted": {
            color: color.deleted
        },
        "&.doctype": {
            color: color.doctype
        },
        "&.entity": {
            color: color.entity
        },
        "&.function": {
            color: color.function
        },
        "&.hexcode": {
            color: color.hexcode
        },
        "&.id": {
            color: color.id
        },
        "&.important": {
            color: color.important
        },
        "&.inserted": {
            color: color.inserted
        },
        "&.keyword": {
            color: color.keyword
        },
        "&.number": {
            color: color.number
        },
        "&.operator": {
            color: color.operator
        },
        "&.prolog": {
            color: color.prolog
        },
        "&.property": {
            color: color.property
        },
        "&.pseudo-class": {
            color: color.pseudoClass
        },
        "&.pseudo-element": {
            color: color.pseudoElement
        },
        "&.punctuation": {
            color: color.punctuation
        },
        "&.regex": {
            color: color.regex
        },
        "&.selector": {
            color: color.selector
        },
        "&.string": {
            color: color.string
        },
        "&.symbol": {
            color: color.symbol
        },
        "&.tag": {
            color: color.tag
        },
        "&.unit": {
            color: color.unit
        },
        "&.url": {
            color: color.url
        },
        "&.variable": {
            color: color.variable
        }
    };
}
function codeBaseStyle() {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    color: var(--card-code-fg-color);

    & code {
      font-family: inherit;

      &.refractor .token {
        ${codeSyntaxHighlightingStyle}
      }
    }

    & a {
      color: inherit;
      text-decoration: underline;
      border-radius: 1px;
    }

    & svg {
      /* Certain popular CSS libraries changes the defaults for SVG display */
      /* Make sure SVGs are rendered as inline elements */
      display: inline;
    }

    & [data-sanity-icon] {
      vertical-align: baseline;
    }
  `;
}
const LazyRefractor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["lazy"])(()=>__turbopack_context__.r("[project]/node_modules/@sanity/ui/dist/_chunks-es/refractor.mjs [app-client] (ecmascript, async loader)")(__turbopack_context__.i)), StyledCode = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].pre.withConfig({
    displayName: "StyledCode",
    componentId: "sc-4dymyn-0"
})(codeBaseStyle, responsiveCodeFontStyle), Code = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(20);
    let children, language, restProps, t0, weight;
    $[0] !== props ? ({ children, language, size: t0, weight, ...restProps } = props, $[0] = props, $[1] = children, $[2] = language, $[3] = restProps, $[4] = t0, $[5] = weight) : (children = $[1], language = $[2], restProps = $[3], t0 = $[4], weight = $[5]);
    const t1 = useArrayProp(t0 === void 0 ? 2 : t0);
    let t2;
    $[6] !== children ? (t2 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("code", {
        children
    }), $[6] = children, $[7] = t2) : t2 = $[7];
    let t3;
    $[8] !== children || $[9] !== language ? (t3 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(LazyRefractor, {
        language,
        value: children
    }), $[8] = children, $[9] = language, $[10] = t3) : t3 = $[10];
    let t4;
    $[11] !== t2 || $[12] !== t3 ? (t4 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Suspense"], {
        fallback: t2,
        children: t3
    }), $[11] = t2, $[12] = t3, $[13] = t4) : t4 = $[13];
    let t5;
    return $[14] !== ref || $[15] !== restProps || $[16] !== t1 || $[17] !== t4 || $[18] !== weight ? (t5 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledCode, {
        "data-ui": "Code",
        ...restProps,
        $size: t1,
        $weight: weight,
        ref,
        children: t4
    }), $[14] = ref, $[15] = restProps, $[16] = t1, $[17] = t4, $[18] = weight, $[19] = t5) : t5 = $[19], t5;
});
Code.displayName = "ForwardRef(Code)";
const BASE_STYLE$1 = {
    width: "100%",
    margin: "0 auto"
};
function containerBaseStyle() {
    return BASE_STYLE$1;
}
function responsiveContainerWidthStyle(props) {
    const { container, media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$width, (val)=>({
            maxWidth: val === "auto" ? "none" : rem(container[val])
        }));
}
const StyledContainer = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Box).withConfig({
    displayName: "StyledContainer",
    componentId: "sc-wyroop-0"
})(containerBaseStyle, responsiveContainerWidthStyle), Container = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(9);
    let as, restProps, t0;
    $[0] !== props ? ({ as, width: t0, ...restProps } = props, $[0] = props, $[1] = as, $[2] = restProps, $[3] = t0) : (as = $[1], restProps = $[2], t0 = $[3]);
    const t1 = useArrayProp(t0 === void 0 ? 2 : t0);
    let t2;
    return $[4] !== as || $[5] !== ref || $[6] !== restProps || $[7] !== t1 ? (t2 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledContainer, {
        "data-ui": "Container",
        ...restProps,
        $width: t1,
        forwardedAs: as,
        ref
    }), $[4] = as, $[5] = ref, $[6] = restProps, $[7] = t1, $[8] = t2) : t2 = $[8], t2;
});
Container.displayName = "ForwardRef(Container)";
const StyledGrid = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Box).withConfig({
    displayName: "StyledGrid",
    componentId: "sc-v8t8oz-0"
})(responsiveGridStyle), Grid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(26);
    let as, autoCols, autoFlow, autoRows, children, columns, gap, gapX, gapY, restProps, rows;
    $[0] !== props ? ({ as, autoRows, autoCols, autoFlow, columns, gap, gapX, gapY, rows, children, ...restProps } = props, $[0] = props, $[1] = as, $[2] = autoCols, $[3] = autoFlow, $[4] = autoRows, $[5] = children, $[6] = columns, $[7] = gap, $[8] = gapX, $[9] = gapY, $[10] = restProps, $[11] = rows) : (as = $[1], autoCols = $[2], autoFlow = $[3], autoRows = $[4], children = $[5], columns = $[6], gap = $[7], gapX = $[8], gapY = $[9], restProps = $[10], rows = $[11]);
    const t0 = typeof as == "string" ? as : void 0, t1 = useArrayProp(autoRows), t2 = useArrayProp(autoCols), t3 = useArrayProp(autoFlow), t4 = useArrayProp(columns), t5 = useArrayProp(gap), t6 = useArrayProp(gapX), t7 = useArrayProp(gapY), t8 = useArrayProp(rows);
    let t9;
    return $[12] !== as || $[13] !== children || $[14] !== ref || $[15] !== restProps || $[16] !== t0 || $[17] !== t1 || $[18] !== t2 || $[19] !== t3 || $[20] !== t4 || $[21] !== t5 || $[22] !== t6 || $[23] !== t7 || $[24] !== t8 ? (t9 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledGrid, {
        "data-as": t0,
        "data-ui": "Grid",
        ...restProps,
        $autoRows: t1,
        $autoCols: t2,
        $autoFlow: t3,
        $columns: t4,
        $gap: t5,
        $gapX: t6,
        $gapY: t7,
        $rows: t8,
        forwardedAs: as,
        ref,
        children
    }), $[12] = as, $[13] = children, $[14] = ref, $[15] = restProps, $[16] = t0, $[17] = t1, $[18] = t2, $[19] = t3, $[20] = t4, $[21] = t5, $[22] = t6, $[23] = t7, $[24] = t8, $[25] = t9) : t9 = $[25], t9;
});
Grid.displayName = "ForwardRef(Grid)";
function headingBaseStyle(props) {
    const { $accent, $muted } = props, { font } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    ${$accent && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
      color: var(--card-accent-fg-color);
    `}

    ${$muted && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
      color: var(--card-muted-fg-color);
    `}

    & code {
      font-family: ${font.code.family};
      border-radius: 1px;
    }

    & a {
      text-decoration: none;
      border-radius: 1px;
      color: var(--card-link-color);
      outline: none;

      @media (hover: hover) {
        &:hover {
          text-decoration: underline;
        }
      }

      &:focus {
        box-shadow:
          0 0 0 1px var(--card-bg-color),
          0 0 0 3px var(--card-focus-ring-color);
      }

      &:focus:not(:focus-visible) {
        box-shadow: none;
      }
    }

    & strong {
      font-weight: ${font.heading.weights.bold};
    }

    & svg {
      /* Certain popular CSS libraries changes the defaults for SVG display */
      /* Make sure SVGs are rendered as inline elements */
      display: inline;
    }

    & [data-sanity-icon] {
      vertical-align: baseline;
    }
  `;
}
const StyledHeading = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "StyledHeading",
    componentId: "sc-137lwim-0"
})(headingBaseStyle, responsiveTextAlignStyle, responsiveHeadingFont), Heading = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(22);
    let align, childrenProp, restProps, t0, t1, t2, textOverflow, weight;
    $[0] !== props ? ({ accent: t0, align, children: childrenProp, muted: t1, size: t2, textOverflow, weight, ...restProps } = props, $[0] = props, $[1] = align, $[2] = childrenProp, $[3] = restProps, $[4] = t0, $[5] = t1, $[6] = t2, $[7] = textOverflow, $[8] = weight) : (align = $[1], childrenProp = $[2], restProps = $[3], t0 = $[4], t1 = $[5], t2 = $[6], textOverflow = $[7], weight = $[8]);
    const accent = t0 === void 0 ? !1 : t0, muted = t1 === void 0 ? !1 : t1, size2 = t2 === void 0 ? 2 : t2;
    let children = childrenProp;
    if (textOverflow === "ellipsis") {
        let t32;
        $[9] !== children ? (t32 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(SpanWithTextOverflow, {
            children
        }), $[9] = children, $[10] = t32) : t32 = $[10], children = t32;
    }
    const t3 = useArrayProp(align), t4 = useArrayProp(size2);
    let t5;
    $[11] !== children ? (t5 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("span", {
        children
    }), $[11] = children, $[12] = t5) : t5 = $[12];
    let t6;
    return $[13] !== accent || $[14] !== muted || $[15] !== ref || $[16] !== restProps || $[17] !== t3 || $[18] !== t4 || $[19] !== t5 || $[20] !== weight ? (t6 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledHeading, {
        "data-ui": "Heading",
        ...restProps,
        $accent: accent,
        $align: t3,
        $muted: muted,
        $size: t4,
        $weight: weight,
        ref,
        children: t5
    }), $[13] = accent, $[14] = muted, $[15] = ref, $[16] = restProps, $[17] = t3, $[18] = t4, $[19] = t5, $[20] = weight, $[21] = t6) : t6 = $[21], t6;
});
Heading.displayName = "ForwardRef(Heading)";
function inlineBaseStyle() {
    return {
        lineHeight: 0,
        "&&:not([hidden])": {
            display: "block"
        },
        "& > div": {
            display: "inline-block",
            verticalAlign: "middle"
        }
    };
}
function inlineSpaceStyle(props) {
    const { media, space } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$space, (spaceIndex)=>{
        const _space = rem(spaceIndex === 0.5 ? space[1] / 2 : space[spaceIndex]);
        return {
            margin: `-${_space} 0 0 -${_space}`,
            "& > div": {
                padding: `${_space} 0 0 ${_space}`
            }
        };
    });
}
const StyledInline = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Box).withConfig({
    displayName: "StyledInline",
    componentId: "sc-1pkiy6j-0"
})(inlineBaseStyle, inlineSpaceStyle), Inline = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(12);
    let as, childrenProp, restProps, space;
    $[0] !== props ? ({ as, children: childrenProp, space, ...restProps } = props, $[0] = props, $[1] = as, $[2] = childrenProp, $[3] = restProps, $[4] = space) : (as = $[1], childrenProp = $[2], restProps = $[3], space = $[4]);
    let t0, t1;
    $[5] !== childrenProp ? (t1 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Children"].map(childrenProp, _temp$4), $[5] = childrenProp, $[6] = t1) : t1 = $[6], t0 = t1;
    const children = t0, t2 = useArrayProp(space);
    let t3;
    return $[7] !== as || $[8] !== children || $[9] !== restProps || $[10] !== t2 ? (t3 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledInline, {
        "data-ui": "Inline",
        ...restProps,
        $space: t2,
        forwardedAs: as,
        ref,
        children
    }), $[7] = as, $[8] = children, $[9] = restProps, $[10] = t2, $[11] = t3) : t3 = $[11], t3;
});
Inline.displayName = "ForwardRef(Inline)";
function _temp$4(child) {
    return child && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
        children: child
    });
}
function kbdStyle() {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    --card-bg-color: var(--card-kbd-bg-color);
    --card-border-color: var(--card-kbd-border-color);
    --card-fg-color: var(--card-kbd-fg-color);

    box-shadow: inset 0 0 0 1px var(--card-border-color);
    background: var(--card-bg-color);
    font: inherit;

    vertical-align: top;

    &:not([hidden]) {
      display: inline-block;
    }
  `;
}
const StyledKBD = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].kbd.withConfig({
    displayName: "StyledKBD",
    componentId: "sc-1w7yd8w-0"
})(responsiveRadiusStyle, kbdStyle), KBD = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(17);
    let children, restProps, t0, t1, t2;
    $[0] !== props ? ({ children, fontSize: t0, padding: t1, radius: t2, ...restProps } = props, $[0] = props, $[1] = children, $[2] = restProps, $[3] = t0, $[4] = t1, $[5] = t2) : (children = $[1], restProps = $[2], t0 = $[3], t1 = $[4], t2 = $[5]);
    const fontSize2 = t0 === void 0 ? 0 : t0, padding = t1 === void 0 ? 1 : t1, t3 = useArrayProp(t2 === void 0 ? 2 : t2);
    let t4;
    $[6] !== children || $[7] !== fontSize2 ? (t4 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Text, {
        as: "span",
        size: fontSize2,
        weight: "semibold",
        children
    }), $[6] = children, $[7] = fontSize2, $[8] = t4) : t4 = $[8];
    let t5;
    $[9] !== padding || $[10] !== t4 ? (t5 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Box, {
        as: "span",
        padding,
        children: t4
    }), $[9] = padding, $[10] = t4, $[11] = t5) : t5 = $[11];
    let t6;
    return $[12] !== ref || $[13] !== restProps || $[14] !== t3 || $[15] !== t5 ? (t6 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledKBD, {
        "data-ui": "KBD",
        ...restProps,
        $radius: t3,
        ref,
        children: t5
    }), $[12] = ref, $[13] = restProps, $[14] = t3, $[15] = t5, $[16] = t6) : t6 = $[16], t6;
});
KBD.displayName = "ForwardRef(KBD)";
const origin = {
    name: "@sanity/ui/origin",
    fn ({ middlewareData, placement, rects }) {
        const [side] = placement.split("-"), floatingWidth = rects.floating.width, floatingHeight = rects.floating.height, shiftX = middlewareData.shift?.x || 0, shiftY = middlewareData.shift?.y || 0;
        if (floatingWidth <= 0 || floatingHeight <= 0) return {};
        const isVerticalPlacement = [
            "bottom",
            "top"
        ].includes(side), { originX, originY } = isVerticalPlacement ? {
            originX: clamp(0.5 - shiftX / floatingWidth, 0, 1),
            originY: side === "bottom" ? 0 : 1
        } : {
            originX: side === "left" ? 1 : 0,
            originY: clamp(0.5 - shiftY / floatingHeight, 0, 1)
        };
        return {
            data: {
                originX,
                originY
            }
        };
    }
};
function clamp(num, min, max) {
    return Math.min(Math.max(num, min), max);
}
function moveTowardsLength(movingPoint, targetPoint, amount) {
    const width = targetPoint.x - movingPoint.x, height = targetPoint.y - movingPoint.y, distance = Math.sqrt(width * width + height * height);
    return moveTowardsFractional(movingPoint, targetPoint, Math.min(1, amount / distance));
}
function moveTowardsFractional(movingPoint, targetPoint, fraction) {
    return {
        x: movingPoint.x + (targetPoint.x - movingPoint.x) * fraction,
        y: movingPoint.y + (targetPoint.y - movingPoint.y) * fraction
    };
}
function getRoundedCommands(points) {
    const len = points.length, cmds = [];
    for(let i = 0; i < len; i += 1){
        const point = points[i], prevPoint = points[i - 1], nextPoint = points[i + 1];
        if (prevPoint && point.radius) {
            const curveStart = moveTowardsLength(point, prevPoint, point.radius), curveEnd = moveTowardsLength(point, nextPoint, point.radius), startControl = moveTowardsFractional(curveStart, point, 0.5), endControl = moveTowardsFractional(point, curveEnd, 0.5);
            cmds.push({
                type: "point",
                ...curveStart
            }), cmds.push({
                type: "curve",
                curveEnd,
                startControl,
                endControl
            });
        } else cmds.push({
            type: "point",
            ...point
        });
    }
    return cmds;
}
function compileCommands(cmds) {
    return cmds.map((n, idx)=>n.type === "point" ? `${idx === 0 ? "M" : "L"} ${n.x} ${n.y}` : n.type === "curve" ? `C ${n.startControl.x} ${n.startControl.y} ${n.endControl.x} ${n.endControl.y} ${n.curveEnd.x} ${n.curveEnd.y}` : "").join(" ");
}
const StyledArrow = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "StyledArrow",
    componentId: "sc-12vzy6c-0"
})(({ $w: w })=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    position: absolute;
    width: ${w}px;
    height: ${w}px;

    :empty + & {
      display: none;
    }

    & > svg {
      display: block;
      line-height: 0;
      transform-origin: ${w / 2}px ${w / 2}px;
    }

    [data-placement^='top'] > & {
      bottom: -${w}px;

      & > svg {
        transform: rotate(0);
      }
    }

    [data-placement^='right'] > & {
      left: -${w}px;

      & > svg {
        transform: rotate(90deg);
      }
    }

    [data-placement^='left'] > & {
      right: -${w}px;

      & > svg {
        transform: rotate(-90deg);
      }
    }

    [data-placement^='bottom'] > & {
      top: -${w}px;

      & > svg {
        transform: rotate(180deg);
      }
    }
  `), StrokePath = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].path.withConfig({
    displayName: "StrokePath",
    componentId: "sc-12vzy6c-1"
})`stroke:var(--card-shadow-outline-color);`, ShapePath = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].path.withConfig({
    displayName: "ShapePath",
    componentId: "sc-12vzy6c-2"
})`fill:var(--card-bg-color);`, Arrow = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(24);
    let h, restProps, t0, w;
    $[0] !== props ? ({ width: w, height: h, radius: t0, ...restProps } = props, $[0] = props, $[1] = h, $[2] = restProps, $[3] = t0, $[4] = w) : (h = $[1], restProps = $[2], t0 = $[3], w = $[4]);
    const radius = t0 === void 0 ? 0 : t0, { card } = useTheme_v2(), strokeWidth = card.shadow.outline, center = w / 2, points = [
        {
            x: 0,
            y: 0
        },
        {
            x: radius,
            y: 0,
            radius
        },
        {
            x: center,
            y: h - 1,
            radius
        },
        {
            x: w - radius,
            y: 0,
            radius
        },
        {
            x: w,
            y: 0
        }
    ], cmds = getRoundedCommands(points), path = compileCommands(cmds), strokePath = `${path}`, fillPath = `${path} M ${w} -1 M 0 -1 Z`, t1 = `0 0 ${w} ${w}`;
    let t2;
    $[5] !== strokeWidth || $[6] !== w ? (t2 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("mask", {
        id: "stroke-mask",
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("rect", {
            x: 0,
            y: strokeWidth,
            width: w,
            height: w,
            fill: "white"
        })
    }), $[5] = strokeWidth, $[6] = w, $[7] = t2) : t2 = $[7];
    const t3 = strokeWidth * 2;
    let t4;
    $[8] !== strokePath || $[9] !== t3 ? (t4 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StrokePath, {
        d: strokePath,
        mask: "url(#stroke-mask)",
        strokeWidth: t3
    }), $[8] = strokePath, $[9] = t3, $[10] = t4) : t4 = $[10];
    let t5;
    $[11] !== fillPath ? (t5 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(ShapePath, {
        d: fillPath
    }), $[11] = fillPath, $[12] = t5) : t5 = $[12];
    let t6;
    $[13] !== t1 || $[14] !== t2 || $[15] !== t4 || $[16] !== t5 || $[17] !== w ? (t6 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])("svg", {
        width: w,
        height: w,
        viewBox: t1,
        children: [
            t2,
            t4,
            t5
        ]
    }), $[13] = t1, $[14] = t2, $[15] = t4, $[16] = t5, $[17] = w, $[18] = t6) : t6 = $[18];
    let t7;
    return $[19] !== ref || $[20] !== restProps || $[21] !== t6 || $[22] !== w ? (t7 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledArrow, {
        ...restProps,
        $w: w,
        ref,
        children: t6
    }), $[19] = ref, $[20] = restProps, $[21] = t6, $[22] = w, $[23] = t7) : t7 = $[23], t7;
});
Arrow.displayName = "ForwardRef(Arrow)";
const BoundaryElementContext = createGlobalScopedContext("@sanity/ui/context/boundaryElement", null);
function BoundaryElementProvider(props) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(5), { children, element } = props;
    let t0, t1;
    $[0] !== element ? (t1 = {
        version: 0,
        element
    }, $[0] = element, $[1] = t1) : t1 = $[1], t0 = t1;
    const value = t0;
    let t2;
    return $[2] !== children || $[3] !== value ? (t2 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(BoundaryElementContext.Provider, {
        value,
        children
    }), $[2] = children, $[3] = value, $[4] = t2) : t2 = $[4], t2;
}
BoundaryElementProvider.displayName = "BoundaryElementProvider";
function isRecord(value) {
    return !!(value && typeof value == "object" && !Array.isArray(value));
}
const DEFAULT_VALUE = {
    version: 0,
    element: null
};
function useBoundaryElement() {
    const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useContext"])(BoundaryElementContext);
    if (value && (!isRecord(value) || value.version !== 0)) throw new Error("useBoundaryElement(): the context value is not compatible");
    return value || DEFAULT_VALUE;
}
function ConditionalWrapper({ children, condition, wrapper }) {
    return condition ? wrapper(children) : children;
}
ConditionalWrapper.displayName = "ConditionalWrapper";
function findMaxBreakpoints(media, width) {
    const ret = [];
    for(let i = 0; i < media.length; i += 1)media[i] > width && ret.push(i);
    return ret;
}
function findMinBreakpoints(media, width) {
    const ret = [];
    for(let i = 0; i < media.length; i += 1)media[i] <= width && ret.push(i);
    return ret;
}
const ElementQuery = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, forwardedRef) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(18), theme = useTheme_v2();
    let _media, children, restProps;
    $[0] !== props ? ({ children, media: _media, ...restProps } = props, $[0] = props, $[1] = _media, $[2] = children, $[3] = restProps) : (_media = $[1], children = $[2], restProps = $[3]);
    const media = _media ?? theme.media, [element, setElement] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null), elementSize = useElementSize(element);
    let t0;
    t0 = elementSize?.border.width ?? window.innerWidth;
    const width = t0;
    let t1, t2;
    if ($[4] !== media || $[5] !== width) {
        const eq = findMaxBreakpoints(media, width);
        t2 = eq.length ? eq.join(" ") : void 0, $[4] = media, $[5] = width, $[6] = t2;
    } else t2 = $[6];
    t1 = t2;
    const max = t1;
    let t3, t4;
    if ($[7] !== media || $[8] !== width) {
        const eq_0 = findMinBreakpoints(media, width);
        t4 = eq_0.length ? eq_0.join(" ") : void 0, $[7] = media, $[8] = width, $[9] = t4;
    } else t4 = $[9];
    t3 = t4;
    const min = t3;
    let t5, t6;
    $[10] !== element ? (t5 = ()=>element, t6 = [
        element
    ], $[10] = element, $[11] = t5, $[12] = t6) : (t5 = $[11], t6 = $[12]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useImperativeHandle"])(forwardedRef, t5, t6);
    let t7;
    return $[13] !== children || $[14] !== max || $[15] !== min || $[16] !== restProps ? (t7 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
        "data-ui": "ElementQuery",
        ...restProps,
        "data-eq-max": max,
        "data-eq-min": min,
        ref: setElement,
        children
    }), $[13] = children, $[14] = max, $[15] = min, $[16] = restProps, $[17] = t7) : t7 = $[17], t7;
});
ElementQuery.displayName = "ForwardRef(ElementQuery)";
function getLayerContext(contextValue) {
    if (!isRecord(contextValue) || contextValue.version !== 0) throw new Error("the context value is not compatible");
    if (!contextValue) throw new Error("components using `useLayer()` should be wrapped in a <LayerProvider>.");
    if (contextValue.version === 0) return contextValue;
    throw new Error("could not get layer context");
}
const LayerContext = createGlobalScopedContext("@sanity/ui/context/layer", null);
function useLayer() {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(2), value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useContext"])(LayerContext);
    if (!value) throw new Error("useLayer(): missing context value");
    try {
        let t1;
        return $[0] !== value ? (t1 = getLayerContext(value), $[0] = value, $[1] = t1) : t1 = $[1], t1;
    } catch (t0) {
        const err = t0;
        throw err instanceof Error ? new Error(`useLayer(): ${err.message}`) : new Error(`useLayer(): ${err}`);
    }
}
function _isEnterToClickElement(element) {
    return isHTMLAnchorElement(element) || isHTMLButtonElement(element);
}
function isHTMLElement(node) {
    return node instanceof Node && node.nodeType === Node.ELEMENT_NODE;
}
function isHTMLAnchorElement(element) {
    return isHTMLElement(element) && element.nodeName === "A";
}
function isHTMLInputElement(element) {
    return isHTMLElement(element) && element.nodeName === "INPUT";
}
function isHTMLButtonElement(element) {
    return isHTMLElement(element) && element.nodeName === "BUTTON";
}
function isHTMLSelectElement(element) {
    return isHTMLElement(element) && element.nodeName === "SELECT";
}
function isHTMLTextAreaElement(element) {
    return isHTMLElement(element) && element.nodeName === "TEXTAREA";
}
function containsOrEqualsElement(element, node) {
    return element.contains(node) || element === node;
}
function _isScrollable(el) {
    if (!(el instanceof Element)) return !1;
    const style = window.getComputedStyle(el);
    return style.overflowX.includes("auto") || style.overflowX.includes("scroll") || style.overflowY.includes("auto") || style.overflowY.includes("scroll");
}
function LayerProvider(props) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(19), { children, zOffset: t0 } = props, zOffsetProp = t0 === void 0 ? 0 : t0, parentContextValue = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useContext"])(LayerContext);
    let t1;
    $[0] !== parentContextValue ? (t1 = parentContextValue && getLayerContext(parentContextValue), $[0] = parentContextValue, $[1] = t1) : t1 = $[1];
    const parent = t1, parentRegisterChild = parent?.registerChild, level = (parent?.level ?? 0) + 1, zOffset = useArrayProp(zOffsetProp), maxMediaIndex = zOffset.length - 1, mediaIndex = Math.min(useMediaIndex(), maxMediaIndex), zIndex = parent ? parent.zIndex + zOffset[mediaIndex] : zOffset[mediaIndex];
    let t2;
    $[2] === Symbol.for("react.memo_cache_sentinel") ? (t2 = {}, $[2] = t2) : t2 = $[2];
    const [, setChildLayers] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(t2), [size2, setSize] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(0), isTopLayer = size2 === 0;
    let t3;
    $[3] !== parentRegisterChild || $[4] !== setChildLayers ? (t3 = (childLevel)=>{
        const parentDispose = parentRegisterChild?.(childLevel);
        return childLevel !== void 0 ? setChildLayers((state)=>{
            const prevLen = state[childLevel] ?? 0, nextState = {
                ...state,
                [childLevel]: prevLen + 1
            };
            return setSize(Object.keys(nextState).length), nextState;
        }) : setSize(_temp$3), ()=>{
            childLevel !== void 0 ? setChildLayers((state_0)=>{
                const nextState_0 = {
                    ...state_0
                };
                return nextState_0[childLevel] === 1 ? (delete nextState_0[childLevel], setSize(Object.keys(nextState_0).length)) : nextState_0[childLevel] = nextState_0[childLevel] - 1, nextState_0;
            }) : setSize(_temp2$2), parentDispose?.();
        };
    }, $[3] = parentRegisterChild, $[4] = setChildLayers, $[5] = t3) : t3 = $[5];
    const registerChild = t3;
    let t4, t5;
    $[6] !== level || $[7] !== parentRegisterChild ? (t4 = ()=>parentRegisterChild?.(level), t5 = [
        level,
        parentRegisterChild
    ], $[6] = level, $[7] = parentRegisterChild, $[8] = t4, $[9] = t5) : (t4 = $[8], t5 = $[9]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t4, t5);
    let t6, t7;
    $[10] !== isTopLayer || $[11] !== level || $[12] !== registerChild || $[13] !== size2 || $[14] !== zIndex ? (t7 = {
        version: 0,
        isTopLayer,
        level,
        registerChild,
        size: size2,
        zIndex
    }, $[10] = isTopLayer, $[11] = level, $[12] = registerChild, $[13] = size2, $[14] = zIndex, $[15] = t7) : t7 = $[15], t6 = t7;
    const value = t6;
    let t8;
    return $[16] !== children || $[17] !== value ? (t8 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(LayerContext.Provider, {
        value,
        children
    }), $[16] = children, $[17] = value, $[18] = t8) : t8 = $[18], t8;
}
function _temp2$2(v_0) {
    return v_0 - 1;
}
function _temp$3(v) {
    return v + 1;
}
LayerProvider.displayName = "LayerProvider";
const StyledLayer = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "StyledLayer",
    componentId: "sc-16kojrv-0"
})({
    position: "relative"
}), LayerChildren = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, forwardedRef) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(22);
    let children, onActivate, onFocus, restProps, t0;
    $[0] !== props ? ({ children, onActivate, onFocus, style: t0, ...restProps } = props, $[0] = props, $[1] = children, $[2] = onActivate, $[3] = onFocus, $[4] = restProps, $[5] = t0) : (children = $[1], onActivate = $[2], onFocus = $[3], restProps = $[4], t0 = $[5]);
    const style = t0 === void 0 ? EMPTY_RECORD : t0, { zIndex, isTopLayer } = useLayer(), lastFocusedRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null), ref = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null), isTopLayerRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(isTopLayer);
    let t1;
    $[6] === Symbol.for("react.memo_cache_sentinel") ? (t1 = ()=>ref.current, $[6] = t1) : t1 = $[6], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useImperativeHandle"])(forwardedRef, t1);
    let t2, t3;
    $[7] !== isTopLayer || $[8] !== onActivate ? (t2 = ()=>{
        isTopLayerRef.current !== isTopLayer && isTopLayer && onActivate?.({
            activeElement: lastFocusedRef.current
        }), isTopLayerRef.current = isTopLayer;
    }, t3 = [
        isTopLayer,
        onActivate
    ], $[7] = isTopLayer, $[8] = onActivate, $[9] = t2, $[10] = t3) : (t2 = $[9], t3 = $[10]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t2, t3);
    let t4;
    $[11] !== isTopLayer || $[12] !== onFocus ? (t4 = (event)=>{
        onFocus?.(event);
        const rootElement = ref.current, target = document.activeElement;
        !isTopLayer || !rootElement || !target || isHTMLElement(target) && containsOrEqualsElement(rootElement, target) && (lastFocusedRef.current = target);
    }, $[11] = isTopLayer, $[12] = onFocus, $[13] = t4) : t4 = $[13];
    const handleFocus = t4;
    let t5;
    $[14] !== style || $[15] !== zIndex ? (t5 = {
        ...style,
        zIndex
    }, $[14] = style, $[15] = zIndex, $[16] = t5) : t5 = $[16];
    let t6;
    return $[17] !== children || $[18] !== handleFocus || $[19] !== restProps || $[20] !== t5 ? (t6 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledLayer, {
        ...restProps,
        "data-ui": "Layer",
        onFocus: handleFocus,
        ref,
        style: t5,
        children
    }), $[17] = children, $[18] = handleFocus, $[19] = restProps, $[20] = t5, $[21] = t6) : t6 = $[21], t6;
}), Layer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(11);
    let children, restProps, t0;
    $[0] !== props ? ({ children, zOffset: t0, ...restProps } = props, $[0] = props, $[1] = children, $[2] = restProps, $[3] = t0) : (children = $[1], restProps = $[2], t0 = $[3]);
    const zOffset = t0 === void 0 ? 1 : t0;
    let t1;
    $[4] !== children || $[5] !== ref || $[6] !== restProps ? (t1 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(LayerChildren, {
        ...restProps,
        ref,
        children
    }), $[4] = children, $[5] = ref, $[6] = restProps, $[7] = t1) : t1 = $[7];
    let t2;
    return $[8] !== t1 || $[9] !== zOffset ? (t2 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(LayerProvider, {
        zOffset,
        children: t1
    }), $[8] = t1, $[9] = zOffset, $[10] = t2) : t2 = $[10], t2;
});
Layer.displayName = "ForwardRef(Layer)";
const key = "@sanity/ui/context/portal", elementKey = Symbol.for(`${key}/element`);
globalScope[elementKey] = null;
const defaultContextValue = {
    version: 0,
    boundaryElement: null,
    get element () {
        return typeof document > "u" ? null : (globalScope[elementKey] || (globalScope[elementKey] = document.createElement("div"), globalScope[elementKey].setAttribute("data-portal", ""), document.body.appendChild(globalScope[elementKey])), globalScope[elementKey]);
    }
}, PortalContext = createGlobalScopedContext(key, defaultContextValue);
function usePortal() {
    const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useContext"])(PortalContext);
    if (!value) throw new Error("usePortal(): missing context value");
    if (!isRecord(value) || value.version !== 0) throw new Error("usePortal(): the context value is not compatible");
    return value;
}
function Portal(props) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(3), { children, __unstable_name: name } = props, portal = usePortal(), portalElement = (name ? portal.elements && portal.elements[name] : portal.element) || portal.elements?.default;
    if (!portalElement) return null;
    let t0;
    return $[0] !== children || $[1] !== portalElement ? (t0 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2d$dom$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createPortal"])(children, portalElement), $[0] = children, $[1] = portalElement, $[2] = t0) : t0 = $[2], t0;
}
Portal.displayName = "Portal";
function PortalProvider(props) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(7), { boundaryElement, children, element, __unstable_elements: elementsProp } = props, elements = useUnique(elementsProp), fallbackElement = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSyncExternalStore"])(emptySubscribe, _temp$2, _temp2$1);
    let t0;
    const t1 = boundaryElement || null, t2 = element || fallbackElement;
    let t3;
    $[0] !== elements || $[1] !== t1 || $[2] !== t2 ? (t3 = {
        version: 0,
        boundaryElement: t1,
        element: t2,
        elements
    }, $[0] = elements, $[1] = t1, $[2] = t2, $[3] = t3) : t3 = $[3], t0 = t3;
    const value = t0;
    let t4;
    return $[4] !== children || $[5] !== value ? (t4 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(PortalContext.Provider, {
        value,
        children
    }), $[4] = children, $[5] = value, $[6] = t4) : t4 = $[6], t4;
}
function _temp2$1() {
    return null;
}
function _temp$2() {
    return document.body;
}
PortalProvider.displayName = "PortalProvider";
const emptySubscribe = ()=>()=>{};
function useUnique(value) {
    const valueRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(value);
    return _isEqual(valueRef.current, value) || (valueRef.current = value), valueRef.current;
}
function _isEqual(objA, objB) {
    if (!objA || !objB) return objA === objB;
    const keysA = Object.keys(objA), keysB = Object.keys(objB);
    return keysA.length !== keysB.length ? !1 : keysA.every((key2)=>objA[key2] === objB[key2]);
}
const StyledSrOnly = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "StyledSrOnly",
    componentId: "sc-mubr0c-0"
})`display:block;width:0;height:0;position:absolute;overflow:hidden;overflow:clip;`, SrOnly = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(4), { as, children } = props;
    let t0;
    return $[0] !== as || $[1] !== children || $[2] !== ref ? (t0 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledSrOnly, {
        "aria-hidden": !0,
        as,
        "data-ui": "SrOnly",
        ref,
        children
    }), $[0] = as, $[1] = children, $[2] = ref, $[3] = t0) : t0 = $[3], t0;
});
SrOnly.displayName = "ForwardRef(SrOnly)";
const StyledVirtualList = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "StyledVirtualList",
    componentId: "sc-dlqsj4-0"
})`position:relative;`, ItemWrapper = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "ItemWrapper",
    componentId: "sc-dlqsj4-1"
})`position:absolute;left:0;right:0;`, VirtualList = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, forwardedRef) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(56);
    let getItemKey, onChange, renderItem, restProps, t0, t1, t2;
    $[0] !== props ? ({ as: t0, gap: t1, getItemKey, items: t2, onChange, renderItem, ...restProps } = props, $[0] = props, $[1] = getItemKey, $[2] = onChange, $[3] = renderItem, $[4] = restProps, $[5] = t0, $[6] = t1, $[7] = t2) : (getItemKey = $[1], onChange = $[2], renderItem = $[3], restProps = $[4], t0 = $[5], t1 = $[6], t2 = $[7]);
    const as = t0 === void 0 ? "div" : t0, gap = t1 === void 0 ? 0 : t1;
    let t3;
    $[8] !== t2 ? (t3 = t2 === void 0 ? [] : t2, $[8] = t2, $[9] = t3) : t3 = $[9];
    const items = t3, { space } = useTheme_v2(), ref = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null), wrapperRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null), [scrollTop, setScrollTop] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(0), [scrollHeight, setScrollHeight] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(0), [itemHeight, setItemHeight] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(-1);
    let t4;
    $[10] === Symbol.for("react.memo_cache_sentinel") ? (t4 = ()=>ref.current, $[10] = t4) : t4 = $[10], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useImperativeHandle"])(forwardedRef, t4);
    let t5;
    $[11] === Symbol.for("react.memo_cache_sentinel") ? (t5 = ()=>{
        if (!wrapperRef.current) return;
        const firstElement = wrapperRef.current.firstChild;
        firstElement instanceof HTMLElement && setItemHeight(firstElement.offsetHeight);
    }, $[11] = t5) : t5 = $[11];
    let t6;
    $[12] !== renderItem ? (t6 = [
        renderItem
    ], $[12] = renderItem, $[13] = t6) : t6 = $[13], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t5, t6);
    let t7, t8;
    $[14] === Symbol.for("react.memo_cache_sentinel") ? (t7 = ()=>{
        if (!ref.current) return;
        const scrollEl = findScrollable(ref.current.parentNode);
        if (scrollEl) {
            if (!(scrollEl instanceof HTMLElement)) return;
            const handleScroll = ()=>{
                setScrollTop(scrollEl.scrollTop);
            };
            scrollEl.addEventListener("scroll", handleScroll, {
                passive: !0
            });
            const ro = new _ResizeObserver((entries)=>{
                setScrollHeight(entries[0].contentRect.height);
            });
            return ro.observe(scrollEl), handleScroll(), ()=>{
                scrollEl.removeEventListener("scroll", handleScroll), ro.unobserve(scrollEl), ro.disconnect();
            };
        }
        const handleScroll_0 = ()=>{
            setScrollTop(window.scrollY);
        }, handleResize = ()=>{
            setScrollHeight(window.innerHeight);
        };
        return window.addEventListener("scroll", handleScroll_0, {
            passive: !0
        }), window.addEventListener("resize", handleResize), setScrollHeight(window.innerHeight), handleScroll_0(), ()=>{
            window.removeEventListener("scroll", handleScroll_0), window.removeEventListener("resize", handleResize);
        };
    }, t8 = [], $[14] = t7, $[15] = t8) : (t7 = $[14], t8 = $[15]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t7, t8);
    const len = items.length, height = itemHeight ? len * (itemHeight + space[gap]) - space[gap] : 0, fromIndex = height ? Math.max(Math.floor(scrollTop / height * len) - 2, 0) : 0, toIndex = height ? Math.ceil((scrollTop + scrollHeight) / height * len) + 1 : 0;
    let t10, t9;
    $[16] !== fromIndex || $[17] !== gap || $[18] !== itemHeight || $[19] !== onChange || $[20] !== scrollHeight || $[21] !== scrollTop || $[22] !== space || $[23] !== toIndex ? (t9 = ()=>{
        onChange && onChange({
            fromIndex,
            gap: space[gap],
            itemHeight,
            scrollHeight,
            scrollTop,
            toIndex
        });
    }, t10 = [
        fromIndex,
        gap,
        itemHeight,
        onChange,
        scrollHeight,
        scrollTop,
        space,
        toIndex
    ], $[16] = fromIndex, $[17] = gap, $[18] = itemHeight, $[19] = onChange, $[20] = scrollHeight, $[21] = scrollTop, $[22] = space, $[23] = toIndex, $[24] = t10, $[25] = t9) : (t10 = $[24], t9 = $[25]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t9, t10);
    let t11;
    bb0: {
        if (!renderItem || items.length === 0) {
            t11 = null;
            break bb0;
        }
        if (itemHeight === -1) {
            let t123;
            $[26] !== items[0] || $[27] !== renderItem ? (t123 = renderItem(items[0]), $[26] = items[0], $[27] = renderItem, $[28] = t123) : t123 = $[28];
            let t132;
            $[29] !== t123 ? (t132 = [
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(ItemWrapper, {
                    children: t123
                }, 0)
            ], $[29] = t123, $[30] = t132) : t132 = $[30], t11 = t132;
            break bb0;
        }
        let t122;
        if ($[31] !== fromIndex || $[32] !== gap || $[33] !== getItemKey || $[34] !== itemHeight || $[35] !== items || $[36] !== renderItem || $[37] !== space || $[38] !== toIndex) {
            let t132;
            $[40] !== fromIndex || $[41] !== gap || $[42] !== getItemKey || $[43] !== itemHeight || $[44] !== renderItem || $[45] !== space ? (t132 = (item, _itemIndex)=>{
                const itemIndex = fromIndex + _itemIndex, node = renderItem(item), key2 = getItemKey ? getItemKey(item, itemIndex) : itemIndex;
                return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(ItemWrapper, {
                    style: {
                        top: itemIndex * (itemHeight + space[gap])
                    },
                    children: node
                }, key2);
            }, $[40] = fromIndex, $[41] = gap, $[42] = getItemKey, $[43] = itemHeight, $[44] = renderItem, $[45] = space, $[46] = t132) : t132 = $[46], t122 = items.slice(fromIndex, toIndex).map(t132), $[31] = fromIndex, $[32] = gap, $[33] = getItemKey, $[34] = itemHeight, $[35] = items, $[36] = renderItem, $[37] = space, $[38] = toIndex, $[39] = t122;
        } else t122 = $[39];
        t11 = t122;
    }
    const children = t11;
    let t12, t13;
    $[47] !== height ? (t13 = {
        height
    }, $[47] = height, $[48] = t13) : t13 = $[48], t12 = t13;
    const wrapperStyle = t12;
    let t14;
    $[49] !== children || $[50] !== wrapperStyle ? (t14 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
        ref: wrapperRef,
        style: wrapperStyle,
        children
    }), $[49] = children, $[50] = wrapperStyle, $[51] = t14) : t14 = $[51];
    let t15;
    return $[52] !== as || $[53] !== restProps || $[54] !== t14 ? (t15 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledVirtualList, {
        as,
        "data-ui": "VirtualList",
        ...restProps,
        ref,
        children: t14
    }), $[52] = as, $[53] = restProps, $[54] = t14, $[55] = t15) : t15 = $[55], t15;
});
VirtualList.displayName = "ForwardRef(VirtualList)";
function findScrollable(parentNode) {
    let _scrollEl = parentNode;
    for(; _scrollEl && !_isScrollable(_scrollEl);)_scrollEl = _scrollEl.parentNode;
    return _scrollEl;
}
function getElementRef(element) {
    let getter = Object.getOwnPropertyDescriptor(element.props, "ref")?.get, mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
    return mayWarn ? element.ref : (getter = Object.getOwnPropertyDescriptor(element, "ref")?.get, mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning, mayWarn ? element.props.ref : element.props.ref || element.ref);
}
const DEFAULT_POPOVER_DISTANCE = 4, DEFAULT_POPOVER_PADDING = 4, DEFAULT_POPOVER_ARROW_WIDTH = 19, DEFAULT_POPOVER_ARROW_HEIGHT = 8, DEFAULT_POPOVER_ARROW_RADIUS = 2, DEFAULT_POPOVER_MARGINS = [
    0,
    0,
    0,
    0
], DEFAULT_FALLBACK_PLACEMENTS$1 = {
    top: [
        "bottom",
        "left",
        "right"
    ],
    "top-start": [
        "bottom-start",
        "left-start",
        "right-start"
    ],
    "top-end": [
        "bottom-end",
        "left-end",
        "right-end"
    ],
    bottom: [
        "top",
        "left",
        "right"
    ],
    "bottom-start": [
        "top-start",
        "left-start",
        "right-start"
    ],
    "bottom-end": [
        "top-end",
        "left-end",
        "right-end"
    ],
    left: [
        "right",
        "top",
        "bottom"
    ],
    "left-start": [
        "right-start",
        "top-start",
        "bottom-start"
    ],
    "left-end": [
        "right-end",
        "top-end",
        "bottom-end"
    ],
    right: [
        "left",
        "top",
        "bottom"
    ],
    "right-start": [
        "left-start",
        "top-start",
        "bottom-start"
    ],
    "right-end": [
        "left-end",
        "top-end",
        "bottom-end"
    ]
};
function size(options) {
    const { apply, margins, padding = 0 } = options;
    return {
        name: "@sanity/ui/size",
        async fn (args) {
            const { elements, placement, platform, rects } = args, { floating, reference } = rects, overflow = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$floating$2d$ui$2f$dom$2f$dist$2f$floating$2d$ui$2e$dom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["detectOverflow"])(args, {
                altBoundary: !0,
                boundary: options.boundaryElement || void 0,
                elementContext: "floating",
                padding,
                rootBoundary: "viewport"
            });
            let maxWidth = 1 / 0, maxHeight = 1 / 0;
            const floatingW = floating.width, floatingH = floating.height;
            placement.includes("top") && (maxWidth = floatingW - (overflow.left + overflow.right), maxHeight = floatingH - overflow.top), placement.includes("right") && (maxWidth = floatingW - overflow.right, maxHeight = floatingH - (overflow.top + overflow.bottom)), placement.includes("bottom") && (maxWidth = floatingW - (overflow.left + overflow.right), maxHeight = floatingH - overflow.bottom), placement.includes("left") && (maxWidth = floatingW - overflow.left, maxHeight = floatingH - (overflow.top + overflow.bottom)), apply({
                availableWidth: maxWidth - margins[1] - margins[3],
                availableHeight: maxHeight - margins[0] - margins[2],
                elements,
                referenceWidth: reference.width - margins[1] - margins[3]
            });
            const nextDimensions = await platform.getDimensions(elements.floating), targetH = nextDimensions.height, targetW = nextDimensions.width;
            return floatingW !== targetW || floatingH !== targetH ? {
                reset: {
                    rects: !0
                }
            } : {};
        }
    };
}
function calcCurrentWidth(params) {
    const { container, mediaIndex, width } = params, w = width[mediaIndex], currentWidth = w === void 0 ? width[width.length - 1] : w;
    return typeof currentWidth == "number" ? container[currentWidth] : void 0;
}
function calcMaxWidth(params) {
    const { boundaryWidth, currentWidth } = params;
    if (!(currentWidth === void 0 && boundaryWidth === void 0)) return Math.min(currentWidth ?? 1 / 0, (boundaryWidth || 1 / 0) - DEFAULT_POPOVER_PADDING * 2);
}
const MotionCard$1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$framer$2d$motion$2f$dist$2f$es$2f$render$2f$components$2f$motion$2f$proxy$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["motion"].create(Card)).withConfig({
    displayName: "MotionCard",
    componentId: "sc-ihg31s-0"
})`&:not([hidden]){display:flex;}flex-direction:column;width:max-content;min-width:min-content;will-change:transform;`, MotionFlex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$framer$2d$motion$2f$dist$2f$es$2f$render$2f$components$2f$motion$2f$proxy$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["motion"].create(Flex)).withConfig({
    displayName: "MotionFlex",
    componentId: "sc-ihg31s-1"
})`will-change:opacity;`, PopoverCard = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(66);
    let animate, arrow2, arrowRef, arrowX, arrowY, children, marginsProp, originX, originY, overflow, padding, placement, radius, restProps, scheme, shadow, strategy, style, tone, width, xProp, yProp;
    $[0] !== props ? ({ __unstable_margins: marginsProp, animate, arrow: arrow2, arrowRef, arrowX, arrowY, children, padding, placement, originX, originY, overflow, radius, scheme, shadow, strategy, style, tone, width, x: xProp, y: yProp, ...restProps } = props, $[0] = props, $[1] = animate, $[2] = arrow2, $[3] = arrowRef, $[4] = arrowX, $[5] = arrowY, $[6] = children, $[7] = marginsProp, $[8] = originX, $[9] = originY, $[10] = overflow, $[11] = padding, $[12] = placement, $[13] = radius, $[14] = restProps, $[15] = scheme, $[16] = shadow, $[17] = strategy, $[18] = style, $[19] = tone, $[20] = width, $[21] = xProp, $[22] = yProp) : (animate = $[1], arrow2 = $[2], arrowRef = $[3], arrowX = $[4], arrowY = $[5], children = $[6], marginsProp = $[7], originX = $[8], originY = $[9], overflow = $[10], padding = $[11], placement = $[12], radius = $[13], restProps = $[14], scheme = $[15], shadow = $[16], strategy = $[17], style = $[18], tone = $[19], width = $[20], xProp = $[21], yProp = $[22]);
    const { zIndex } = useLayer();
    let t0;
    t0 = marginsProp || DEFAULT_POPOVER_MARGINS;
    const margins = t0, x = (xProp ?? 0) + margins[3], y = (yProp ?? 0) + margins[0];
    let t1;
    const t2 = animate ? "transform" : void 0;
    let t3;
    $[23] !== originX || $[24] !== originY || $[25] !== strategy || $[26] !== style || $[27] !== t2 || $[28] !== width || $[29] !== x || $[30] !== y || $[31] !== zIndex ? (t3 = {
        left: x,
        originX,
        originY,
        position: strategy,
        top: y,
        width,
        zIndex,
        willChange: t2,
        ...style
    }, $[23] = originX, $[24] = originY, $[25] = strategy, $[26] = style, $[27] = t2, $[28] = width, $[29] = x, $[30] = y, $[31] = zIndex, $[32] = t3) : t3 = $[32], t1 = t3;
    const rootStyle2 = t1;
    let t4;
    const t5 = arrowX !== null ? arrowX : void 0, t6 = arrowY !== null ? arrowY : void 0;
    let t7;
    $[33] !== t5 || $[34] !== t6 ? (t7 = {
        left: t5,
        top: t6,
        right: void 0,
        bottom: void 0
    }, $[33] = t5, $[34] = t6, $[35] = t7) : t7 = $[35], t4 = t7;
    const arrowStyle = t4, t8 = restProps;
    let t9;
    $[36] !== animate ? (t9 = animate ? [
        "hidden",
        "initial"
    ] : void 0, $[36] = animate, $[37] = t9) : t9 = $[37];
    let t10;
    $[38] !== animate ? (t10 = animate ? [
        "visible",
        "scaleIn"
    ] : void 0, $[38] = animate, $[39] = t10) : t10 = $[39];
    let t11;
    $[40] !== animate ? (t11 = animate ? [
        "hidden",
        "scaleOut"
    ] : void 0, $[40] = animate, $[41] = t11) : t11 = $[41];
    let t12;
    $[42] !== children || $[43] !== padding ? (t12 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Flex, {
        direction: "column",
        flex: 1,
        padding,
        children
    }), $[42] = children, $[43] = padding, $[44] = t12) : t12 = $[44];
    let t13;
    $[45] !== overflow || $[46] !== t12 ? (t13 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(MotionFlex, {
        "data-ui": "Popover__wrapper",
        direction: "column",
        flex: 1,
        overflow,
        variants: POPOVER_MOTION_PROPS.children,
        transition: POPOVER_MOTION_PROPS.transition,
        children: t12
    }), $[45] = overflow, $[46] = t12, $[47] = t13) : t13 = $[47];
    let t14;
    $[48] !== arrow2 || $[49] !== arrowRef || $[50] !== arrowStyle ? (t14 = arrow2 && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Arrow, {
        ref: arrowRef,
        style: arrowStyle,
        width: DEFAULT_POPOVER_ARROW_WIDTH,
        height: DEFAULT_POPOVER_ARROW_HEIGHT,
        radius: DEFAULT_POPOVER_ARROW_RADIUS
    }), $[48] = arrow2, $[49] = arrowRef, $[50] = arrowStyle, $[51] = t14) : t14 = $[51];
    let t15;
    return $[52] !== placement || $[53] !== radius || $[54] !== ref || $[55] !== rootStyle2 || $[56] !== scheme || $[57] !== shadow || $[58] !== t10 || $[59] !== t11 || $[60] !== t13 || $[61] !== t14 || $[62] !== t8 || $[63] !== t9 || $[64] !== tone ? (t15 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(MotionCard$1, {
        "data-ui": "Popover",
        ...t8,
        "data-placement": placement,
        radius,
        ref,
        scheme,
        shadow,
        sizing: "border",
        style: rootStyle2,
        tone,
        variants: POPOVER_MOTION_PROPS.card,
        transition: POPOVER_MOTION_PROPS.transition,
        initial: t9,
        animate: t10,
        exit: t11,
        children: [
            t13,
            t14
        ]
    }), $[52] = placement, $[53] = radius, $[54] = ref, $[55] = rootStyle2, $[56] = scheme, $[57] = shadow, $[58] = t10, $[59] = t11, $[60] = t13, $[61] = t14, $[62] = t8, $[63] = t9, $[64] = tone, $[65] = t15) : t15 = $[65], t15;
}));
PopoverCard.displayName = "Memo(ForwardRef(PopoverCard))";
const ViewportOverlay = ()=>{
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(2), { zIndex } = useLayer();
    let t0;
    return $[0] !== zIndex ? (t0 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
        style: {
            height: "100vh",
            inset: 0,
            position: "fixed",
            width: "100vw",
            zIndex
        }
    }), $[0] = zIndex, $[1] = t0) : t0 = $[1], t0;
}, Popover = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, forwardedRef) {
    const { container, layer } = useTheme_v2(), boundaryElementContext = useBoundaryElement(), { __unstable_margins: margins = DEFAULT_POPOVER_MARGINS, animate: _animate = !1, arrow: arrowProp = !1, boundaryElement = boundaryElementContext.element, children: childProp, constrainSize = !1, content, disabled, fallbackPlacements = props.fallbackPlacements ?? DEFAULT_FALLBACK_PLACEMENTS$1[props.placement ?? "bottom"], matchReferenceWidth, floatingBoundary = props.boundaryElement ?? boundaryElementContext.element, modal, // eslint-disable-next-line @typescript-eslint/no-unused-vars
    onActivate, open, overflow = "hidden", padding: paddingProp, placement: placementProp = "bottom", portal, preventOverflow = !0, radius: radiusProp = 3, referenceBoundary = props.boundaryElement ?? boundaryElementContext.element, referenceElement, scheme, shadow: shadowProp = 3, tone = "inherit", width: widthProp = "auto", zOffset: zOffsetProp = layer.popover.zOffset, updateRef, ...restProps } = props, animate = usePrefersReducedMotion() ? !1 : _animate, boundarySize = useElementSize(boundaryElement)?.border, padding = useArrayProp(paddingProp), radius = useArrayProp(radiusProp), shadow = useArrayProp(shadowProp), widthArrayProp = useArrayProp(widthProp), zOffset = useArrayProp(zOffsetProp), ref = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null), arrowRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null), rootBoundary = "viewport";
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useImperativeHandle"])(forwardedRef, {
        "Popover.useImperativeHandle": ()=>ref.current
    }["Popover.useImperativeHandle"]);
    const mediaIndex = useMediaIndex(), boundaryWidth = constrainSize || preventOverflow ? boundarySize?.width : void 0, width = calcCurrentWidth({
        container,
        mediaIndex,
        width: widthArrayProp
    }), widthRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(width);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "Popover.useEffect": ()=>{
            widthRef.current = width;
        }
    }["Popover.useEffect"], [
        width
    ]);
    const maxWidth = calcMaxWidth({
        boundaryWidth,
        currentWidth: width
    }), maxWidthRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(maxWidth);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "Popover.useEffect": ()=>{
            maxWidthRef.current = maxWidth;
        }
    }["Popover.useEffect"], [
        maxWidth
    ]);
    const referenceWidthRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(void 0);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "Popover.useEffect": ()=>{
            const floatingElement = ref.current;
            if (!open || !floatingElement) return;
            const referenceWidth = referenceWidthRef.current;
            matchReferenceWidth ? referenceWidth !== void 0 && (floatingElement.style.width = `${referenceWidth}px`) : width !== void 0 && (floatingElement.style.width = `${width}px`), typeof maxWidth == "number" && (floatingElement.style.maxWidth = `${maxWidth}px`);
        }
    }["Popover.useEffect"], [
        width,
        matchReferenceWidth,
        maxWidth,
        open
    ]);
    const middleware = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "Popover.useMemo[middleware]": ()=>{
            const ret = [];
            return (constrainSize || preventOverflow) && ret.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$floating$2d$ui$2f$react$2d$dom$2f$dist$2f$floating$2d$ui$2e$react$2d$dom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["flip"])({
                boundary: floatingBoundary || void 0,
                fallbackPlacements,
                padding: DEFAULT_POPOVER_PADDING,
                rootBoundary
            })), ret.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$floating$2d$ui$2f$react$2d$dom$2f$dist$2f$floating$2d$ui$2e$react$2d$dom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["offset"])({
                mainAxis: DEFAULT_POPOVER_DISTANCE
            })), (constrainSize || matchReferenceWidth) && ret.push(size({
                apply ({ availableWidth, availableHeight, elements, referenceWidth: referenceWidth_0 }) {
                    referenceWidthRef.current = referenceWidth_0;
                    const _currentWidth = widthRef.current, _maxWidth = maxWidthRef.current;
                    matchReferenceWidth ? elements.floating.style.width = `${referenceWidth_0}px` : _currentWidth !== void 0 && (elements.floating.style.width = `${_currentWidth}px`), constrainSize && (elements.floating.style.maxWidth = `${Math.min(availableWidth, _maxWidth ?? 1 / 0)}px`, elements.floating.style.maxHeight = `${availableHeight}px`);
                },
                boundaryElement: floatingBoundary || void 0,
                margins,
                padding: DEFAULT_POPOVER_PADDING
            })), preventOverflow && ret.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$floating$2d$ui$2f$react$2d$dom$2f$dist$2f$floating$2d$ui$2e$react$2d$dom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["shift"])({
                boundary: floatingBoundary || void 0,
                rootBoundary,
                padding: DEFAULT_POPOVER_PADDING
            })), arrowProp && ret.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$floating$2d$ui$2f$react$2d$dom$2f$dist$2f$floating$2d$ui$2e$react$2d$dom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["arrow"])({
                element: arrowRef,
                padding: DEFAULT_POPOVER_PADDING
            })), animate && ret.push(origin), ret.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$floating$2d$ui$2f$react$2d$dom$2f$dist$2f$floating$2d$ui$2e$react$2d$dom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["hide"])({
                boundary: referenceBoundary || void 0,
                padding: DEFAULT_POPOVER_PADDING,
                strategy: "referenceHidden"
            })), ret;
        }
    }["Popover.useMemo[middleware]"], [
        animate,
        arrowProp,
        constrainSize,
        fallbackPlacements,
        floatingBoundary,
        margins,
        matchReferenceWidth,
        preventOverflow,
        referenceBoundary
    ]), { x, y, middlewareData, placement, refs, strategy, update } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$floating$2d$ui$2f$react$2d$dom$2f$dist$2f$floating$2d$ui$2e$react$2d$dom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["useFloating"])({
        middleware,
        placement: placementProp,
        whileElementsMounted: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$floating$2d$ui$2f$dom$2f$dist$2f$floating$2d$ui$2e$dom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["autoUpdate"],
        elements: referenceElement ? {
            reference: referenceElement
        } : void 0
    }), referenceHidden = middlewareData.hide?.referenceHidden, arrowX = middlewareData.arrow?.x, arrowY = middlewareData.arrow?.y, originX = middlewareData["@sanity/ui/origin"]?.originX, originY = middlewareData["@sanity/ui/origin"]?.originY, setArrow = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "Popover.useCallback[setArrow]": (arrowEl)=>{
            arrowRef.current = arrowEl;
        }
    }["Popover.useCallback[setArrow]"], []), setFloating = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "Popover.useCallback[setFloating]": (node)=>{
            ref.current = node, refs.setFloating(node);
        }
    }["Popover.useCallback[setFloating]"], [
        refs
    ]), setReference = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "Popover.useCallback[setReference]": (node_0)=>{
            refs.setReference(node_0);
            const childRef = getElementRef(childProp);
            typeof childRef == "function" ? childRef(node_0) : childRef && (childRef.current = node_0);
        }
    }["Popover.useCallback[setReference]"], [
        childProp,
        refs
    ]), child = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "Popover.useMemo[child]": ()=>referenceElement ? childProp : childProp ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cloneElement"])(childProp, {
                ref: setReference
            }) : null
    }["Popover.useMemo[child]"], [
        childProp,
        referenceElement,
        setReference
    ]);
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "Popover.useEffect": ()=>{
            updateRef && (typeof updateRef == "function" ? updateRef(update) : updateRef && (updateRef.current = update));
        }
    }["Popover.useEffect"], [
        update,
        updateRef
    ]), disabled) return childProp || /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {});
    const popover = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(LayerProvider, {
        zOffset,
        children: [
            modal && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(ViewportOverlay, {}),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(PopoverCard, {
                ...restProps,
                __unstable_margins: margins,
                animate,
                arrow: arrowProp,
                arrowRef: setArrow,
                arrowX,
                arrowY,
                hidden: referenceHidden,
                overflow,
                padding,
                placement,
                radius,
                ref: setFloating,
                scheme,
                shadow,
                originX,
                originY,
                strategy,
                tone,
                width: matchReferenceWidth ? referenceWidthRef.current : width,
                x,
                y,
                children: content
            })
        ]
    }), children = open && (portal ? /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Portal, {
        __unstable_name: typeof portal == "string" ? portal : void 0,
        children: popover
    }) : popover);
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            animate ? /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$framer$2d$motion$2f$dist$2f$es$2f$components$2f$AnimatePresence$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AnimatePresence"], {
                children
            }) : children,
            child
        ]
    });
}));
Popover.displayName = "Memo(ForwardRef(Popover))";
function radioBaseStyle() {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    position: relative;

    &:not([hidden]) {
      display: inline-block;
    }

    &[data-read-only] {
      outline: 1px solid red;
    }
  `;
}
function inputElementStyle(props) {
    const { color, input } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme), dist = (input.radio.size - input.radio.markSize) / 2;
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    appearance: none;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    height: 100%;
    width: 100%;
    outline: none;
    z-index: 1;
    padding: 0;
    margin: 0;
    border-radius: ${rem(input.radio.size / 2)};
    border: none;

    /* enabled */
    & + span {
      display: block;
      position: relative;
      height: ${rem(input.radio.size)};
      width: ${rem(input.radio.size)};
      border-radius: ${rem(input.radio.size / 2)};
      background: ${color.input.default.enabled.bg};
      box-shadow: ${focusRingBorderStyle({
        color: color.input.default.enabled.border,
        width: input.border.width
    })};

      &::after {
        content: '';
        position: absolute;
        top: ${rem(dist)};
        left: ${rem(dist)};
        height: ${rem(input.radio.markSize)};
        width: ${rem(input.radio.markSize)};
        border-radius: ${rem(input.radio.markSize / 2)};
        background: ${color.input.default.enabled.fg};
        opacity: 0;
      }
    }

    /* focused */
    &:not(:disabled):focus + span {
      box-shadow: ${focusRingStyle({
        border: {
            width: input.border.width,
            color: color.input.default.enabled.border
        },
        focusRing: input.radio.focusRing
    })};
    }

    &:not(:disabled):focus:not(:focus-visible) + span {
      box-shadow: ${focusRingBorderStyle({
        color: color.input.default.enabled.border,
        width: input.border.width
    })};
    }

    &:checked + span::after {
      opacity: 1;
    }

    /* customValidity */
    &[data-error] + span {
      background-color: ${color.input.invalid.enabled.border};
      box-shadow: ${focusRingBorderStyle({
        width: input.border.width,
        color: color.input.invalid.enabled.muted.bg
    })};
      &::after {
        background: ${color.input.invalid.enabled.muted.bg};
      }
    }

    /* read only */
    &[data-read-only] + span {
      box-shadow: 0 0 0 1px ${color.input.default.readOnly.border};
      background: ${color.input.default.readOnly.bg};

      &::after {
        background: ${color.input.default.readOnly.border};
      }
    }

    /* disabled */
    &:not([data-read-only]):disabled + span {
      box-shadow: 0 0 0 1px ${color.input.default.disabled.border};
      background: ${color.input.default.disabled.bg};

      &::after {
        background: ${color.input.default.disabled.border};
      }
    }
  `;
}
const StyledRadio = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "StyledRadio",
    componentId: "sc-ccrwkf-0"
})(radioBaseStyle), Input$4 = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].input.withConfig({
    displayName: "Input",
    componentId: "sc-ccrwkf-1"
})(inputElementStyle), Radio = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, forwardedRef) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(19);
    let className, customValidity, disabled, readOnly, restProps, style;
    $[0] !== props ? ({ className, disabled, style, customValidity, readOnly, ...restProps } = props, $[0] = props, $[1] = className, $[2] = customValidity, $[3] = disabled, $[4] = readOnly, $[5] = restProps, $[6] = style) : (className = $[1], customValidity = $[2], disabled = $[3], readOnly = $[4], restProps = $[5], style = $[6]);
    const ref = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    let t0;
    $[7] === Symbol.for("react.memo_cache_sentinel") ? (t0 = ()=>ref.current, $[7] = t0) : t0 = $[7], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useImperativeHandle"])(forwardedRef, t0), useCustomValidity(ref, customValidity);
    const t1 = !disabled && readOnly ? "" : void 0, t2 = customValidity ? "" : void 0, t3 = disabled || readOnly;
    let t4;
    $[8] !== readOnly || $[9] !== restProps || $[10] !== t1 || $[11] !== t2 || $[12] !== t3 ? (t4 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Input$4, {
        "data-read-only": t1,
        "data-error": t2,
        ...restProps,
        disabled: t3,
        readOnly,
        ref,
        type: "radio"
    }), $[8] = readOnly, $[9] = restProps, $[10] = t1, $[11] = t2, $[12] = t3, $[13] = t4) : t4 = $[13];
    let t5;
    $[14] === Symbol.for("react.memo_cache_sentinel") ? (t5 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("span", {}), $[14] = t5) : t5 = $[14];
    let t6;
    return $[15] !== className || $[16] !== style || $[17] !== t4 ? (t6 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(StyledRadio, {
        className,
        "data-ui": "Radio",
        style,
        children: [
            t4,
            t5
        ]
    }), $[15] = className, $[16] = style, $[17] = t4, $[18] = t6) : t6 = $[18], t6;
});
Radio.displayName = "ForwardRef(Radio)";
function rootStyle() {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    position: relative;
    width: -moz-available;
    width: -webkit-fill-available;
    width: stretch;

    &:not([hidden]) {
      display: inline-block;
    }
  `;
}
function inputBaseStyle(props) {
    const { font } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    -webkit-font-smoothing: antialiased;
    appearance: none;
    border: 0;
    font-family: ${font.text.family};
    color: inherit;
    width: 100%;
    outline: none;
    margin: 0;

    &:disabled {
      opacity: 1;
    }
  `;
}
function inputColorStyle(props) {
    const { color, input } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    /* enabled */
    background-color: ${color.input.default.enabled.bg};
    color: ${color.input.default.enabled.fg};
    box-shadow: ${focusRingBorderStyle({
        color: color.input.default.enabled.border,
        width: input.border.width
    })};

    /* hovered */
    @media (hover: hover) {
      &:not(:disabled):hover {
        background-color: ${color.input.default.hovered.bg};
        color: ${color.input.default.hovered.fg};
        box-shadow: ${focusRingBorderStyle({
        color: color.input.default.hovered.border,
        width: input.border.width
    })};
      }
    }

    /* focused */
    &:not(:disabled):focus {
      box-shadow: ${focusRingStyle({
        border: {
            width: input.border.width,
            color: color.input.default.enabled.border
        },
        focusRing: input.select.focusRing
    })};
    }

    /* read-only */
    &[data-read-only] {
      background-color: ${color.input.default.readOnly.bg};
      color: ${color.input.default.readOnly.fg};
      box-shadow: ${focusRingBorderStyle({
        color: color.input.default.readOnly.border,
        width: input.border.width
    })};
    }

    /* disabled */
    &:not([data-read-only]):disabled {
      background-color: ${color.input.default.disabled.bg};
      color: ${color.input.default.disabled.fg};
      box-shadow: ${focusRingBorderStyle({
        color: color.input.default.disabled.border,
        width: input.border.width
    })};
    }
  `;
}
function textSize(size2) {
    return {
        fontSize: rem(size2.fontSize),
        lineHeight: rem(size2.lineHeight)
    };
}
function inputTextSizeStyle(props) {
    const { $fontSize } = props, { font, media } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, $fontSize, (sizeIndex)=>textSize(font.text.sizes[sizeIndex] || font.text.sizes[2]));
}
function inputStyle() {
    return [
        responsiveRadiusStyle,
        inputBaseStyle,
        inputColorStyle,
        inputTextSizeStyle,
        responsiveInputPaddingIconRightStyle
    ];
}
function iconBoxStyle(props) {
    const { color } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    pointer-events: none;
    position: absolute;
    top: 0;
    right: 0;

    /* enabled */
    --card-fg-color: ${color.input.default.enabled.fg};

    /* hover */
    @media (hover: hover) {
      select:not(disabled):not(:read-only):hover + && {
        --card-fg-color: ${color.input.default.hovered.fg};
      }
    }

    /* disabled */
    select:disabled + && {
      --card-fg-color: ${color.input.default.disabled.fg};
    }

    /* read-only */
    select[data-read-only] + && {
      --card-fg-color: ${color.input.default.readOnly.fg};
    }
  `;
}
const selectStyle = {
    root: rootStyle,
    input: inputStyle,
    iconBox: iconBoxStyle
}, StyledSelect = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "StyledSelect",
    componentId: "sc-5mxno7-0"
})(selectStyle.root), Input$3 = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].select.withConfig({
    displayName: "Input",
    componentId: "sc-5mxno7-1"
})(selectStyle.input), IconBox = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Box).withConfig({
    displayName: "IconBox",
    componentId: "sc-5mxno7-2"
})(selectStyle.iconBox), Select = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, forwardedRef) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(29);
    let children, customValidity, disabled, readOnly, restProps, t0, t1, t2, t3;
    $[0] !== props ? ({ children, customValidity, disabled, fontSize: t0, padding: t1, radius: t2, readOnly, space: t3, ...restProps } = props, $[0] = props, $[1] = children, $[2] = customValidity, $[3] = disabled, $[4] = readOnly, $[5] = restProps, $[6] = t0, $[7] = t1, $[8] = t2, $[9] = t3) : (children = $[1], customValidity = $[2], disabled = $[3], readOnly = $[4], restProps = $[5], t0 = $[6], t1 = $[7], t2 = $[8], t3 = $[9]);
    const fontSize2 = t0 === void 0 ? 2 : t0, padding = t1 === void 0 ? 3 : t1, radius = t2 === void 0 ? 2 : t2, space = t3 === void 0 ? 3 : t3, ref = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    let t4;
    $[10] === Symbol.for("react.memo_cache_sentinel") ? (t4 = ()=>ref.current, $[10] = t4) : t4 = $[10], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useImperativeHandle"])(forwardedRef, t4), useCustomValidity(ref, customValidity);
    const t5 = !disabled && readOnly ? "" : void 0, t6 = useArrayProp(fontSize2), t7 = useArrayProp(padding), t8 = useArrayProp(radius), t9 = useArrayProp(space), t10 = disabled || readOnly;
    let t11;
    $[11] !== children || $[12] !== restProps || $[13] !== t10 || $[14] !== t5 || $[15] !== t6 || $[16] !== t7 || $[17] !== t8 || $[18] !== t9 ? (t11 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Input$3, {
        "data-read-only": t5,
        "data-ui": "Select",
        ...restProps,
        $fontSize: t6,
        $padding: t7,
        $radius: t8,
        $space: t9,
        disabled: t10,
        ref,
        children
    }), $[11] = children, $[12] = restProps, $[13] = t10, $[14] = t5, $[15] = t6, $[16] = t7, $[17] = t8, $[18] = t9, $[19] = t11) : t11 = $[19];
    let t12;
    $[20] === Symbol.for("react.memo_cache_sentinel") ? (t12 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$icons$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ChevronDownIcon"], {}), $[20] = t12) : t12 = $[20];
    let t13;
    $[21] !== fontSize2 ? (t13 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Text, {
        size: fontSize2,
        children: t12
    }), $[21] = fontSize2, $[22] = t13) : t13 = $[22];
    let t14;
    $[23] !== padding || $[24] !== t13 ? (t14 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(IconBox, {
        padding,
        children: t13
    }), $[23] = padding, $[24] = t13, $[25] = t14) : t14 = $[25];
    let t15;
    return $[26] !== t11 || $[27] !== t14 ? (t15 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(StyledSelect, {
        "data-ui": "Select",
        children: [
            t11,
            t14
        ]
    }), $[26] = t11, $[27] = t14, $[28] = t15) : t15 = $[28], t15;
});
Select.displayName = "ForwardRef(Select)";
const BASE_STYLE = {
    "&&:not([hidden])": {
        display: "grid"
    },
    '&[data-as="ul"],&[data-as="ol"]': {
        listStyle: "none"
    },
    gridTemplateColumns: "minmax(0, 1fr)",
    gridAutoRows: "min-content"
};
function stackBaseStyle() {
    return BASE_STYLE;
}
function responsiveStackSpaceStyle(props) {
    const { media, space } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return _responsive(media, props.$space, (spaceIndex)=>({
            gridGap: rem(space[spaceIndex])
        }));
}
const StyledStack = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Box).withConfig({
    displayName: "StyledStack",
    componentId: "sc-8dpfq2-0"
})(stackBaseStyle, responsiveStackSpaceStyle), Stack = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(10);
    let as, restProps, space;
    $[0] !== props ? ({ as, space, ...restProps } = props, $[0] = props, $[1] = as, $[2] = restProps, $[3] = space) : (as = $[1], restProps = $[2], space = $[3]);
    const t0 = typeof as == "string" ? as : void 0, t1 = useArrayProp(space);
    let t2;
    return $[4] !== as || $[5] !== ref || $[6] !== restProps || $[7] !== t0 || $[8] !== t1 ? (t2 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledStack, {
        "data-as": t0,
        "data-ui": "Stack",
        ...restProps,
        $space: t1,
        forwardedAs: as,
        ref
    }), $[4] = as, $[5] = ref, $[6] = restProps, $[7] = t0, $[8] = t1, $[9] = t2) : t2 = $[9], t2;
});
Stack.displayName = "ForwardRef(Stack)";
function switchBaseStyles() {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    position: relative;
    &:not([hidden]) {
      display: inline-block;
    }
  `;
}
function switchInputStyles() {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    opacity: 0;
    height: 100%;
    width: 100%;
    outline: none;
    padding: 0;
    margin: 0;

    /* Place the input element above the representation element */
    z-index: 1;
  `;
}
function switchRepresentationStyles(props) {
    const { color, input } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    --switch-bg-color: ${color.input.default.enabled.border};
    --switch-fg-color: ${color.input.default.enabled.bg};
    --switch-box-shadow: none;

    &:not([hidden]) {
      display: block;
    }
    position: relative;
    width: ${rem(input.switch.width)};
    height: ${rem(input.switch.height)};
    border-radius: ${rem(input.switch.height / 2)};

    /* Make sure it’s not possible to interact with the wrapper element */
    pointer-events: none;

    &:after {
      content: '';
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 1;
      box-shadow: var(--switch-box-shadow);
      border-radius: inherit;
    }

    /* Focus styles */
    input:focus + && {
      --switch-box-shadow: ${focusRingStyle({
        focusRing: input.switch.focusRing
    })};
    }

    input:focus:not(:focus-visible) + && {
      --switch-box-shadow: none;
    }

    input:checked + && {
      --switch-bg-color: ${color.input.default.enabled.fg};
      --switch-fg-color: ${color.input.default.enabled.bg};
    }

    @media (hover: hover) {
      input:not(:disabled):hover + && {
        --switch-bg-color: ${color.input.default.hovered.border};
        --switch-fg-color: ${color.input.default.hovered.bg};
      }

      input:not(:disabled):checked:hover + && {
        --switch-bg-color: ${color.input.default.enabled.fg};
        --switch-fg-color: ${color.input.default.enabled.bg};
      }
    }

    input:not([data-read-only]):disabled + && {
      --switch-bg-color: ${color.input.default.disabled.border};
      --switch-fg-color: ${color.input.default.disabled.bg};
    }

    input[data-read-only]:disabled + && {
      --switch-bg-color: ${color.input.default.readOnly.border};
      --switch-fg-color: ${color.input.default.readOnly.bg};
    }

    input:checked[data-read-only]:disabled + && {
      --switch-bg-color: ${color.input.default.readOnly.fg};
      --switch-fg-color: ${color.input.default.readOnly.bg};
    }
  `;
}
function switchTrackStyles(props) {
    const { input } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    &:not([hidden]) {
      display: block;
    }
    background-color: var(--switch-bg-color);
    position: absolute;
    left: 0;
    top: 0;
    width: ${rem(input.switch.width)};
    height: ${rem(input.switch.height)};
    border-radius: ${rem(input.switch.height / 2)};
  `;
}
function switchThumbStyles(props) {
    const { $indeterminate } = props, { input } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme), trackWidth = input.switch.width, trackHeight = input.switch.height, trackPadding = input.switch.padding, size2 = trackHeight - input.switch.padding * 2, checkedOffset = trackWidth - trackPadding * 2 - size2, indeterminateOffset = trackWidth / 2 - size2 / 2 - trackPadding, checked = $indeterminate !== !0 && props.$checked === !0;
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    &:not([hidden]) {
      display: block;
    }
    position: absolute;
    left: ${rem(trackPadding)};
    top: ${rem(trackPadding)};
    height: ${rem(size2)};
    width: ${rem(size2)};
    border-radius: ${rem(size2 / 2)};
    transition-property: transform;
    transition-duration: ${input.switch.transitionDurationMs}ms;
    transition-timing-function: ${input.switch.transitionTimingFunction};
    background: var(--switch-fg-color);
    transform: translate3d(0, 0, 0);
    box-shadow: 0px 1px 0px 0px rgba(0, 0, 0, 0.05);

    ${checked && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
      transform: translate3d(${checkedOffset}px, 0, 0);
    `}

    ${$indeterminate && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
      transform: translate3d(${indeterminateOffset}px, 0, 0);
    `}
  `;
}
const StyledSwitch = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].span.withConfig({
    displayName: "StyledSwitch",
    componentId: "sc-dw1foe-0"
})(switchBaseStyles), Input$2 = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].input.withConfig({
    displayName: "Input",
    componentId: "sc-dw1foe-1"
})(switchInputStyles), Representation = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].span.withConfig({
    displayName: "Representation",
    componentId: "sc-dw1foe-2"
})(switchRepresentationStyles), Track = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].span.withConfig({
    displayName: "Track",
    componentId: "sc-dw1foe-3"
})(switchTrackStyles), Thumb = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].span.withConfig({
    displayName: "Thumb",
    componentId: "sc-dw1foe-4"
})(switchThumbStyles), Switch = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, forwardedRef) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(26);
    let checked, className, disabled, indeterminate, readOnly, restProps, style;
    $[0] !== props ? ({ checked, className, disabled, indeterminate, readOnly, style, ...restProps } = props, $[0] = props, $[1] = checked, $[2] = className, $[3] = disabled, $[4] = indeterminate, $[5] = readOnly, $[6] = restProps, $[7] = style) : (checked = $[1], className = $[2], disabled = $[3], indeterminate = $[4], readOnly = $[5], restProps = $[6], style = $[7]);
    const ref = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    let t0;
    $[8] === Symbol.for("react.memo_cache_sentinel") ? (t0 = ()=>ref.current, $[8] = t0) : t0 = $[8], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useImperativeHandle"])(forwardedRef, t0);
    let t1, t2;
    $[9] !== indeterminate ? (t1 = ()=>{
        ref.current && (ref.current.indeterminate = indeterminate || !1);
    }, t2 = [
        indeterminate
    ], $[9] = indeterminate, $[10] = t1, $[11] = t2) : (t1 = $[10], t2 = $[11]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t1, t2);
    const t3 = !disabled && readOnly ? "" : void 0, t4 = indeterminate !== !0 && checked, t5 = disabled || readOnly;
    let t6;
    $[12] !== restProps || $[13] !== t3 || $[14] !== t4 || $[15] !== t5 ? (t6 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Input$2, {
        "data-read-only": t3,
        ...restProps,
        checked: t4,
        disabled: t5,
        type: "checkbox",
        ref
    }), $[12] = restProps, $[13] = t3, $[14] = t4, $[15] = t5, $[16] = t6) : t6 = $[16];
    let t7;
    $[17] === Symbol.for("react.memo_cache_sentinel") ? (t7 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Track, {}), $[17] = t7) : t7 = $[17];
    let t8;
    $[18] !== checked || $[19] !== indeterminate ? (t8 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(Representation, {
        "aria-hidden": !0,
        "data-name": "representation",
        children: [
            t7,
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Thumb, {
                $checked: checked,
                $indeterminate: indeterminate
            })
        ]
    }), $[18] = checked, $[19] = indeterminate, $[20] = t8) : t8 = $[20];
    let t9;
    return $[21] !== className || $[22] !== style || $[23] !== t6 || $[24] !== t8 ? (t9 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(StyledSwitch, {
        className,
        "data-ui": "Switch",
        style,
        children: [
            t6,
            t8
        ]
    }), $[21] = className, $[22] = style, $[23] = t6, $[24] = t8, $[25] = t9) : t9 = $[25], t9;
});
Switch.displayName = "ForwardRef(Switch)";
const StyledTextArea = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].span.withConfig({
    displayName: "StyledTextArea",
    componentId: "sc-1d6h1o8-0"
})(textInputRootStyle), InputRoot$1 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].span.withConfig({
    displayName: "InputRoot",
    componentId: "sc-1d6h1o8-1"
})`flex:1;min-width:0;display:block;position:relative;`, Input$1 = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].textarea.withConfig({
    displayName: "Input",
    componentId: "sc-1d6h1o8-2"
})(responsiveInputPaddingStyle, textInputBaseStyle, textInputFontSizeStyle), Presentation$1 = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].div.withConfig({
    displayName: "Presentation",
    componentId: "sc-1d6h1o8-3"
})(responsiveRadiusStyle, textInputRepresentationStyle), TextArea = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, forwardedRef) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(29);
    let __unstable_disableFocusRing, customValidity, restProps, t0, t1, t2, t3, t4, weight;
    $[0] !== props ? ({ border: t0, customValidity, disabled: t1, fontSize: t2, padding: t3, radius: t4, weight, __unstable_disableFocusRing, ...restProps } = props, $[0] = props, $[1] = __unstable_disableFocusRing, $[2] = customValidity, $[3] = restProps, $[4] = t0, $[5] = t1, $[6] = t2, $[7] = t3, $[8] = t4, $[9] = weight) : (__unstable_disableFocusRing = $[1], customValidity = $[2], restProps = $[3], t0 = $[4], t1 = $[5], t2 = $[6], t3 = $[7], t4 = $[8], weight = $[9]);
    const border2 = t0 === void 0 ? !0 : t0, disabled = t1 === void 0 ? !1 : t1, fontSize2 = t2 === void 0 ? 2 : t2, padding = t3 === void 0 ? 3 : t3, radius = t4 === void 0 ? 2 : t4, ref = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null), rootTheme = useRootTheme();
    let t5;
    $[10] === Symbol.for("react.memo_cache_sentinel") ? (t5 = ()=>ref.current, $[10] = t5) : t5 = $[10], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useImperativeHandle"])(forwardedRef, t5), useCustomValidity(ref, customValidity);
    const t6 = rootTheme.scheme, t7 = rootTheme.tone, t8 = useArrayProp(fontSize2), t9 = useArrayProp(padding), t10 = rootTheme.scheme, t11 = useArrayProp(0);
    let t12;
    $[11] !== disabled || $[12] !== restProps || $[13] !== rootTheme.scheme || $[14] !== rootTheme.tone || $[15] !== t11 || $[16] !== t8 || $[17] !== t9 || $[18] !== weight ? (t12 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Input$1, {
        "data-as": "textarea",
        "data-scheme": t6,
        "data-tone": t7,
        ...restProps,
        $fontSize: t8,
        $padding: t9,
        $scheme: t10,
        $space: t11,
        $tone: rootTheme.tone,
        $weight: weight,
        disabled,
        ref
    }), $[11] = disabled, $[12] = restProps, $[13] = rootTheme.scheme, $[14] = rootTheme.tone, $[15] = t11, $[16] = t8, $[17] = t9, $[18] = weight, $[19] = t12) : t12 = $[19];
    const t13 = useArrayProp(radius), t14 = border2 ? "" : void 0;
    let t15;
    $[20] !== __unstable_disableFocusRing || $[21] !== rootTheme.scheme || $[22] !== rootTheme.tone || $[23] !== t13 || $[24] !== t14 ? (t15 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Presentation$1, {
        $radius: t13,
        $unstableDisableFocusRing: __unstable_disableFocusRing,
        $scheme: rootTheme.scheme,
        $tone: rootTheme.tone,
        "data-border": t14,
        "data-scheme": rootTheme.scheme,
        "data-tone": rootTheme.tone
    }), $[20] = __unstable_disableFocusRing, $[21] = rootTheme.scheme, $[22] = rootTheme.tone, $[23] = t13, $[24] = t14, $[25] = t15) : t15 = $[25];
    let t16;
    return $[26] !== t12 || $[27] !== t15 ? (t16 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledTextArea, {
        "data-ui": "TextArea",
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(InputRoot$1, {
            children: [
                t12,
                t15
            ]
        })
    }), $[26] = t12, $[27] = t15, $[28] = t16) : t16 = $[28], t16;
});
TextArea.displayName = "ForwardRef(TextArea)";
const CLEAR_BUTTON_BOX_STYLE = {
    zIndex: 2
}, StyledTextInput = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Card).attrs({
    forwardedAs: "span"
}).withConfig({
    displayName: "StyledTextInput",
    componentId: "sc-h62wco-0"
})(textInputRootStyle), InputRoot = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].span.withConfig({
    displayName: "InputRoot",
    componentId: "sc-h62wco-1"
})`flex:1;min-width:0;display:block;position:relative;`, Prefix = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Card).attrs({
    forwardedAs: "span"
}).withConfig({
    displayName: "Prefix",
    componentId: "sc-h62wco-2"
})`border-top-right-radius:0;border-bottom-right-radius:0;& > span{display:block;margin:-1px;}`, Suffix = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Card).attrs({
    forwardedAs: "span"
}).withConfig({
    displayName: "Suffix",
    componentId: "sc-h62wco-3"
})`border-top-left-radius:0;border-bottom-left-radius:0;& > span{display:block;margin:-1px;}`, Input = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].input.withConfig({
    displayName: "Input",
    componentId: "sc-h62wco-4"
})(responsiveInputPaddingStyle, textInputBaseStyle, textInputFontSizeStyle), Presentation = /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].span.withConfig({
    displayName: "Presentation",
    componentId: "sc-h62wco-5"
})(responsiveRadiusStyle, textInputRepresentationStyle), LeftBox = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Box).withConfig({
    displayName: "LeftBox",
    componentId: "sc-h62wco-6"
})`position:absolute;top:0;left:0;`, RightBox = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Box).withConfig({
    displayName: "RightBox",
    componentId: "sc-h62wco-7"
})`position:absolute;top:0;right:0;`, RightCard = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Card).withConfig({
    displayName: "RightCard",
    componentId: "sc-h62wco-8"
})`background-color:transparent;position:absolute;top:0;right:0;`, TextInputClearButton = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Button).withConfig({
    displayName: "TextInputClearButton",
    componentId: "sc-h62wco-9"
})({
    "&:not([hidden])": {
        display: "block"
    }
}), TextInput = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, forwardedRef) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(84);
    let IconComponent, IconRightComponent, __unstable_disableFocusRing, clearButton, customValidity, onClear, prefix, readOnly, restProps, suffix, t0, t1, t2, t3, t4, t5, t6, weight;
    $[0] !== props ? ({ __unstable_disableFocusRing, border: t0, clearButton, disabled: t1, fontSize: t2, icon: IconComponent, iconRight: IconRightComponent, onClear, padding: t3, prefix, radius: t4, readOnly, space: t5, suffix, customValidity, type: t6, weight, ...restProps } = props, $[0] = props, $[1] = IconComponent, $[2] = IconRightComponent, $[3] = __unstable_disableFocusRing, $[4] = clearButton, $[5] = customValidity, $[6] = onClear, $[7] = prefix, $[8] = readOnly, $[9] = restProps, $[10] = suffix, $[11] = t0, $[12] = t1, $[13] = t2, $[14] = t3, $[15] = t4, $[16] = t5, $[17] = t6, $[18] = weight) : (IconComponent = $[1], IconRightComponent = $[2], __unstable_disableFocusRing = $[3], clearButton = $[4], customValidity = $[5], onClear = $[6], prefix = $[7], readOnly = $[8], restProps = $[9], suffix = $[10], t0 = $[11], t1 = $[12], t2 = $[13], t3 = $[14], t4 = $[15], t5 = $[16], t6 = $[17], weight = $[18]);
    const border2 = t0 === void 0 ? !0 : t0, disabled = t1 === void 0 ? !1 : t1, fontSizeProp = t2 === void 0 ? 2 : t2, paddingProp = t3 === void 0 ? 3 : t3, radiusProp = t4 === void 0 ? 2 : t4, spaceProp = t5 === void 0 ? 3 : t5, type = t6 === void 0 ? "text" : t6, ref = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null), rootTheme = useRootTheme(), fontSize2 = useArrayProp(fontSizeProp), padding = useArrayProp(paddingProp), radius = useArrayProp(radiusProp), space = useArrayProp(spaceProp), $hasClearButton = !!clearButton, $hasIcon = !!IconComponent, $hasIconRight = !!IconRightComponent, $hasSuffix = !!suffix, $hasPrefix = !!prefix;
    let t7;
    $[19] === Symbol.for("react.memo_cache_sentinel") ? (t7 = ()=>ref.current, $[19] = t7) : t7 = $[19], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useImperativeHandle"])(forwardedRef, t7), useCustomValidity(ref, customValidity);
    const handleClearMouseDown = _temp$1;
    let t8;
    $[20] !== onClear ? (t8 = (event_0)=>{
        event_0.preventDefault(), event_0.stopPropagation(), onClear && onClear(), ref.current?.focus();
    }, $[20] = onClear, $[21] = t8) : t8 = $[21];
    const handleClearClick = t8;
    let t9, t10;
    $[22] !== prefix || $[23] !== radius ? (t10 = prefix && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Prefix, {
        borderTop: !0,
        borderLeft: !0,
        borderBottom: !0,
        radius,
        sizing: "border",
        tone: "inherit",
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("span", {
            children: prefix
        })
    }), $[22] = prefix, $[23] = radius, $[24] = t10) : t10 = $[24], t9 = t10;
    const prefixNode = t9;
    let t11;
    const t12 = border2 ? "" : void 0;
    let t13;
    $[25] !== IconComponent || $[26] !== fontSize2 || $[27] !== padding ? (t13 = IconComponent && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(LeftBox, {
        padding,
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(Text, {
            size: fontSize2,
            children: [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElement"])(IconComponent) && IconComponent,
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$is$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElementType"])(IconComponent) && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(IconComponent, {})
            ]
        })
    }), $[25] = IconComponent, $[26] = fontSize2, $[27] = padding, $[28] = t13) : t13 = $[28];
    let t14;
    $[29] !== $hasClearButton || $[30] !== IconRightComponent || $[31] !== fontSize2 || $[32] !== padding ? (t14 = !$hasClearButton && IconRightComponent && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(RightBox, {
        padding,
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(Text, {
            size: fontSize2,
            children: [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElement"])(IconRightComponent) && IconRightComponent,
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$is$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElementType"])(IconRightComponent) && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(IconRightComponent, {})
            ]
        })
    }), $[29] = $hasClearButton, $[30] = IconRightComponent, $[31] = fontSize2, $[32] = padding, $[33] = t14) : t14 = $[33];
    let t15;
    $[34] !== $hasPrefix || $[35] !== $hasSuffix || $[36] !== __unstable_disableFocusRing || $[37] !== radius || $[38] !== rootTheme.scheme || $[39] !== rootTheme.tone || $[40] !== t12 || $[41] !== t13 || $[42] !== t14 ? (t15 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(Presentation, {
        $hasPrefix,
        $unstableDisableFocusRing: __unstable_disableFocusRing,
        $hasSuffix,
        $radius: radius,
        $scheme: rootTheme.scheme,
        $tone: rootTheme.tone,
        "data-border": t12,
        "data-scheme": rootTheme.scheme,
        "data-tone": rootTheme.tone,
        children: [
            t13,
            t14
        ]
    }), $[34] = $hasPrefix, $[35] = $hasSuffix, $[36] = __unstable_disableFocusRing, $[37] = radius, $[38] = rootTheme.scheme, $[39] = rootTheme.tone, $[40] = t12, $[41] = t13, $[42] = t14, $[43] = t15) : t15 = $[43], t11 = t15;
    const presentationNode = t11;
    let t16, t17;
    $[44] !== padding ? (t17 = padding.map(_temp2), $[44] = padding, $[45] = t17) : t17 = $[45], t16 = t17;
    const clearButtonBoxPadding = t16;
    let t18, t19;
    $[46] !== padding ? (t19 = padding.map(_temp3), $[46] = padding, $[47] = t19) : t19 = $[47], t18 = t19;
    const clearButtonPadding = t18;
    let t20;
    t20 = typeof clearButton == "object" ? clearButton : EMPTY_RECORD;
    const clearButtonProps = t20;
    let t21, t22;
    $[48] !== clearButton || $[49] !== clearButtonBoxPadding || $[50] !== clearButtonPadding || $[51] !== clearButtonProps || $[52] !== customValidity || $[53] !== disabled || $[54] !== fontSize2 || $[55] !== handleClearClick || $[56] !== radius || $[57] !== readOnly ? (t22 = !disabled && !readOnly && clearButton && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(RightCard, {
        forwardedAs: "span",
        padding: clearButtonBoxPadding,
        style: CLEAR_BUTTON_BOX_STYLE,
        tone: customValidity ? "critical" : "inherit",
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(TextInputClearButton, {
            "aria-label": "Clear",
            "data-qa": "clear-button",
            fontSize: fontSize2,
            icon: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$icons$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CloseIcon"],
            mode: "bleed",
            padding: clearButtonPadding,
            radius,
            ...clearButtonProps,
            onClick: handleClearClick,
            onMouseDown: handleClearMouseDown
        })
    }), $[48] = clearButton, $[49] = clearButtonBoxPadding, $[50] = clearButtonPadding, $[51] = clearButtonProps, $[52] = customValidity, $[53] = disabled, $[54] = fontSize2, $[55] = handleClearClick, $[56] = radius, $[57] = readOnly, $[58] = t22) : t22 = $[58], t21 = t22;
    const clearButtonNode = t21;
    let t23, t24;
    $[59] !== radius || $[60] !== suffix ? (t24 = suffix && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Suffix, {
        borderTop: !0,
        borderRight: !0,
        borderBottom: !0,
        radius,
        sizing: "border",
        tone: "inherit",
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("span", {
            children: suffix
        })
    }), $[59] = radius, $[60] = suffix, $[61] = t24) : t24 = $[61], t23 = t24;
    const suffixNode = t23, t25 = $hasIconRight || $hasClearButton;
    let t26;
    $[62] !== $hasIcon || $[63] !== disabled || $[64] !== fontSize2 || $[65] !== padding || $[66] !== readOnly || $[67] !== restProps || $[68] !== rootTheme.scheme || $[69] !== rootTheme.tone || $[70] !== space || $[71] !== t25 || $[72] !== type || $[73] !== weight ? (t26 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Input, {
        "data-as": "input",
        "data-scheme": rootTheme.scheme,
        "data-tone": rootTheme.tone,
        ...restProps,
        $fontSize: fontSize2,
        $iconLeft: $hasIcon,
        $iconRight: t25,
        $padding: padding,
        $scheme: rootTheme.scheme,
        $space: space,
        $tone: rootTheme.tone,
        $weight: weight,
        disabled,
        readOnly,
        ref,
        type
    }), $[62] = $hasIcon, $[63] = disabled, $[64] = fontSize2, $[65] = padding, $[66] = readOnly, $[67] = restProps, $[68] = rootTheme.scheme, $[69] = rootTheme.tone, $[70] = space, $[71] = t25, $[72] = type, $[73] = weight, $[74] = t26) : t26 = $[74];
    let t27;
    $[75] !== clearButtonNode || $[76] !== presentationNode || $[77] !== t26 ? (t27 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(InputRoot, {
        children: [
            t26,
            presentationNode,
            clearButtonNode
        ]
    }), $[75] = clearButtonNode, $[76] = presentationNode, $[77] = t26, $[78] = t27) : t27 = $[78];
    let t28;
    return $[79] !== prefixNode || $[80] !== rootTheme.tone || $[81] !== suffixNode || $[82] !== t27 ? (t28 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(StyledTextInput, {
        "data-ui": "TextInput",
        tone: rootTheme.tone,
        children: [
            prefixNode,
            t27,
            suffixNode
        ]
    }), $[79] = prefixNode, $[80] = rootTheme.tone, $[81] = suffixNode, $[82] = t27, $[83] = t28) : t28 = $[83], t28;
});
TextInput.displayName = "ForwardRef(TextInput)";
function _temp$1(event) {
    event.preventDefault(), event.stopPropagation();
}
function _temp2(v) {
    return v === 0 ? 0 : v === 1 || v === 2 ? 1 : v - 2;
}
function _temp3(v_0) {
    return v_0 === 0 || v_0 === 1 ? 0 : v_0 === 2 ? 1 : v_0 - 1;
}
function useDelayedState(initialState) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(3), [state, setState] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(initialState), delayedAction = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(void 0);
    let t0;
    $[0] === Symbol.for("react.memo_cache_sentinel") ? (t0 = (nextState, delay)=>{
        const action = ()=>{
            setState(nextState);
        };
        if (delayedAction.current && (clearTimeout(delayedAction.current), delayedAction.current = void 0), !delay) return action();
        delayedAction.current = setTimeout(action, delay);
    }, $[0] = t0) : t0 = $[0];
    const onStateChange = t0;
    let t1;
    return $[1] !== state ? (t1 = [
        state,
        onStateChange
    ], $[1] = state, $[2] = t1) : t1 = $[2], t1;
}
const DEFAULT_TOOLTIP_ARROW_WIDTH = 15, DEFAULT_TOOLTIP_ARROW_HEIGHT = 6, DEFAULT_TOOLTIP_ARROW_RADIUS = 2, DEFAULT_TOOLTIP_DISTANCE = 4, DEFAULT_TOOLTIP_PADDING = 4, DEFAULT_FALLBACK_PLACEMENTS = {
    top: [
        "top-end",
        "top-start",
        "bottom",
        "left",
        "right"
    ],
    "top-start": [
        "top",
        "top-end",
        "bottom-start",
        "left-start",
        "right-start"
    ],
    "top-end": [
        "top",
        "top-start",
        "bottom-end",
        "left-end",
        "right-end"
    ],
    bottom: [
        "bottom-end",
        "bottom-start",
        "top",
        "left",
        "right"
    ],
    "bottom-start": [
        "bottom",
        "bottom-end",
        "top-start",
        "left-start",
        "right-start"
    ],
    "bottom-end": [
        "bottom",
        "bottom-start",
        "top-end",
        "left-end",
        "right-end"
    ],
    left: [
        "left-end",
        "left-start",
        "right",
        "top",
        "bottom"
    ],
    "left-start": [
        "left",
        "left-end",
        "right-start",
        "top-start",
        "bottom-start"
    ],
    "left-end": [
        "left",
        "left-start",
        "right-end",
        "top-end",
        "bottom-end"
    ],
    right: [
        "right-end",
        "right-start",
        "left",
        "top",
        "bottom"
    ],
    "right-start": [
        "right",
        "right-end",
        "left-start",
        "top-start",
        "bottom-start"
    ],
    "right-end": [
        "right",
        "right-start",
        "left-end",
        "top-end",
        "bottom-end"
    ]
}, MotionCard = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$framer$2d$motion$2f$dist$2f$es$2f$render$2f$components$2f$motion$2f$proxy$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["motion"].create(Card)).withConfig({
    displayName: "MotionCard",
    componentId: "sc-1xn138w-0"
})`will-change:transform;`, TooltipCard = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(48);
    let animate, arrow2, arrowRef, arrowX, arrowY, children, originX, originY, padding, placement, radius, restProps, scheme, shadow, style;
    $[0] !== props ? ({ animate, arrow: arrow2, arrowRef, arrowX, arrowY, children, originX, originY, padding, placement, radius, scheme, shadow, style, ...restProps } = props, $[0] = props, $[1] = animate, $[2] = arrow2, $[3] = arrowRef, $[4] = arrowX, $[5] = arrowY, $[6] = children, $[7] = originX, $[8] = originY, $[9] = padding, $[10] = placement, $[11] = radius, $[12] = restProps, $[13] = scheme, $[14] = shadow, $[15] = style) : (animate = $[1], arrow2 = $[2], arrowRef = $[3], arrowX = $[4], arrowY = $[5], children = $[6], originX = $[7], originY = $[8], padding = $[9], placement = $[10], radius = $[11], restProps = $[12], scheme = $[13], shadow = $[14], style = $[15]);
    let t0;
    const t1 = animate ? "transform" : void 0;
    let t2;
    $[16] !== originX || $[17] !== originY || $[18] !== style || $[19] !== t1 ? (t2 = {
        originX,
        originY,
        willChange: t1,
        ...style
    }, $[16] = originX, $[17] = originY, $[18] = style, $[19] = t1, $[20] = t2) : t2 = $[20], t0 = t2;
    const rootStyle2 = t0;
    let t3;
    const t4 = arrowX !== null ? arrowX : void 0, t5 = arrowY !== null ? arrowY : void 0;
    let t6;
    $[21] !== t4 || $[22] !== t5 ? (t6 = {
        left: t4,
        top: t5,
        right: void 0,
        bottom: void 0
    }, $[21] = t4, $[22] = t5, $[23] = t6) : t6 = $[23], t3 = t6;
    const arrowStyle = t3, t7 = restProps;
    let t8;
    $[24] !== animate ? (t8 = animate ? [
        "hidden",
        "initial"
    ] : void 0, $[24] = animate, $[25] = t8) : t8 = $[25];
    let t9;
    $[26] !== animate ? (t9 = animate ? [
        "visible",
        "scaleIn"
    ] : void 0, $[26] = animate, $[27] = t9) : t9 = $[27];
    let t10;
    $[28] !== animate ? (t10 = animate ? [
        "hidden",
        "scaleOut"
    ] : void 0, $[28] = animate, $[29] = t10) : t10 = $[29];
    let t11;
    $[30] !== arrow2 || $[31] !== arrowRef || $[32] !== arrowStyle ? (t11 = arrow2 && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Arrow, {
        ref: arrowRef,
        style: arrowStyle,
        width: DEFAULT_TOOLTIP_ARROW_WIDTH,
        height: DEFAULT_TOOLTIP_ARROW_HEIGHT,
        radius: DEFAULT_TOOLTIP_ARROW_RADIUS
    }), $[30] = arrow2, $[31] = arrowRef, $[32] = arrowStyle, $[33] = t11) : t11 = $[33];
    let t12;
    return $[34] !== children || $[35] !== padding || $[36] !== placement || $[37] !== radius || $[38] !== ref || $[39] !== rootStyle2 || $[40] !== scheme || $[41] !== shadow || $[42] !== t10 || $[43] !== t11 || $[44] !== t7 || $[45] !== t8 || $[46] !== t9 ? (t12 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(MotionCard, {
        "data-ui": "Tooltip__card",
        ...t7,
        "data-placement": placement,
        padding,
        radius,
        ref,
        scheme,
        shadow,
        style: rootStyle2,
        variants: POPOVER_MOTION_PROPS.card,
        transition: POPOVER_MOTION_PROPS.transition,
        initial: t8,
        animate: t9,
        exit: t10,
        children: [
            children,
            t11
        ]
    }), $[34] = children, $[35] = padding, $[36] = placement, $[37] = radius, $[38] = ref, $[39] = rootStyle2, $[40] = scheme, $[41] = shadow, $[42] = t10, $[43] = t11, $[44] = t7, $[45] = t8, $[46] = t9, $[47] = t12) : t12 = $[47], t12;
}));
TooltipCard.displayName = "Memo(ForwardRef(TooltipCard))";
const TooltipDelayGroupContext = createGlobalScopedContext("@sanity/ui/context/tooltipDelayGroup", null);
function useTooltipDelayGroup() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useContext"])(TooltipDelayGroupContext);
}
function TooltipDelayGroupProvider(props) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(10), { children, delay } = props, [isGroupActive, setIsGroupActive] = useDelayedState(!1), [openTooltipId, setOpenTooltipId] = useDelayedState(null), openDelay = typeof delay == "number" ? delay : delay?.open || 0, closeDelay = typeof delay == "number" ? delay : delay?.close || 0;
    let t0;
    const t1 = isGroupActive ? 1 : openDelay;
    let t2;
    $[0] !== closeDelay || $[1] !== isGroupActive || $[2] !== openTooltipId || $[3] !== setIsGroupActive || $[4] !== setOpenTooltipId || $[5] !== t1 ? (t2 = {
        isGroupActive,
        setIsGroupActive,
        openTooltipId,
        setOpenTooltipId,
        openDelay: t1,
        closeDelay
    }, $[0] = closeDelay, $[1] = isGroupActive, $[2] = openTooltipId, $[3] = setIsGroupActive, $[4] = setOpenTooltipId, $[5] = t1, $[6] = t2) : t2 = $[6], t0 = t2;
    const value = t0;
    let t3;
    return $[7] !== children || $[8] !== value ? (t3 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(TooltipDelayGroupContext.Provider, {
        value,
        children
    }), $[7] = children, $[8] = value, $[9] = t3) : t3 = $[9], t3;
}
TooltipDelayGroupProvider.displayName = "TooltipDelayGroupProvider";
const StyledTooltip = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Layer).withConfig({
    displayName: "StyledTooltip",
    componentId: "sc-13f2zvh-0"
})`pointer-events:none;`, Tooltip = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, forwardedRef) {
    const boundaryElementContext = useBoundaryElement(), { layer } = useTheme_v2(), { animate: _animate = !1, arrow: arrowProp = !1, boundaryElement = boundaryElementContext?.element, children: childProp, content, disabled, fallbackPlacements: fallbackPlacementsProp = props.fallbackPlacements ?? DEFAULT_FALLBACK_PLACEMENTS[props.placement ?? "bottom"], padding = 2, placement: placementProp = "bottom", portal: portalProp, radius = 2, scheme, shadow = 2, zOffset = layer.tooltip.zOffset, delay, ...restProps } = props, animate = usePrefersReducedMotion() ? !1 : _animate, fallbackPlacements = useArrayProp(fallbackPlacementsProp), ref = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null), [referenceElement, setReferenceElement] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null), arrowRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null), rootBoundary = "viewport", [tooltipMaxWidth, setTooltipMaxWidth] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(0);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useImperativeHandle"])(forwardedRef, {
        "Tooltip.useImperativeHandle": ()=>ref.current
    }["Tooltip.useImperativeHandle"]);
    const portal = usePortal(), portalElement = typeof portalProp == "string" ? portal.elements?.[portalProp] || null : portal.element, middleware = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "Tooltip.useMemo[middleware]": ()=>{
            const ret = [];
            return ret.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$floating$2d$ui$2f$react$2d$dom$2f$dist$2f$floating$2d$ui$2e$react$2d$dom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["flip"])({
                boundary: boundaryElement || void 0,
                fallbackPlacements,
                padding: DEFAULT_TOOLTIP_PADDING,
                rootBoundary
            })), ret.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$floating$2d$ui$2f$react$2d$dom$2f$dist$2f$floating$2d$ui$2e$react$2d$dom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["offset"])({
                mainAxis: DEFAULT_TOOLTIP_DISTANCE
            })), ret.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$floating$2d$ui$2f$react$2d$dom$2f$dist$2f$floating$2d$ui$2e$react$2d$dom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["shift"])({
                boundary: boundaryElement || void 0,
                rootBoundary,
                padding: DEFAULT_TOOLTIP_PADDING
            })), arrowProp && ret.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$floating$2d$ui$2f$react$2d$dom$2f$dist$2f$floating$2d$ui$2e$react$2d$dom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["arrow"])({
                element: arrowRef,
                padding: DEFAULT_TOOLTIP_PADDING
            })), animate && ret.push(origin), ret;
        }
    }["Tooltip.useMemo[middleware]"], [
        animate,
        arrowProp,
        boundaryElement,
        fallbackPlacements
    ]), { floatingStyles, placement, middlewareData, refs, update } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$floating$2d$ui$2f$react$2d$dom$2f$dist$2f$floating$2d$ui$2e$react$2d$dom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["useFloating"])({
        middleware,
        placement: placementProp,
        whileElementsMounted: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$floating$2d$ui$2f$dom$2f$dist$2f$floating$2d$ui$2e$dom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["autoUpdate"],
        elements: {
            reference: referenceElement
        }
    }), arrowX = middlewareData.arrow?.x, arrowY = middlewareData.arrow?.y, originX = middlewareData["@sanity/ui/origin"]?.originX, originY = middlewareData["@sanity/ui/origin"]?.originY, tooltipId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useId"])(), [isOpen, setIsOpen] = useDelayedState(!1), delayGroupContext = useTooltipDelayGroup(), showTooltip = isOpen || delayGroupContext?.openTooltipId === tooltipId, isInsideGroup = delayGroupContext !== null, openDelayProp = typeof delay == "number" ? delay : delay?.open || 0, closeDelayProp = typeof delay == "number" ? delay : delay?.close || 0, openDelay = isInsideGroup ? delayGroupContext.openDelay : openDelayProp, closeDelay = isInsideGroup ? delayGroupContext.closeDelay : closeDelayProp, handleIsOpenChange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "Tooltip.useCallback[handleIsOpenChange]": (open, immediate)=>{
            if (isInsideGroup) if (open) {
                const groupedOpenDelay = immediate ? 0 : openDelay;
                delayGroupContext.setIsGroupActive(open, groupedOpenDelay), delayGroupContext.setOpenTooltipId(tooltipId, groupedOpenDelay);
            } else {
                const groupDeactivateDelay = closeDelay > 200 ? closeDelay : 200;
                delayGroupContext.setIsGroupActive(open, groupDeactivateDelay), delayGroupContext.setOpenTooltipId(null, immediate ? 0 : closeDelay);
            }
            else setIsOpen(open, immediate ? 0 : open ? openDelay : closeDelay);
        }
    }["Tooltip.useCallback[handleIsOpenChange]"], [
        isInsideGroup,
        delayGroupContext,
        openDelay,
        tooltipId,
        closeDelay,
        setIsOpen
    ]), handleBlur = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "Tooltip.useCallback[handleBlur]": (e)=>{
            handleIsOpenChange(!1), childProp?.props?.onBlur?.(e);
        }
    }["Tooltip.useCallback[handleBlur]"], [
        childProp?.props,
        handleIsOpenChange
    ]), handleClick = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "Tooltip.useCallback[handleClick]": (e_0)=>{
            handleIsOpenChange(!1, !0), childProp?.props.onClick?.(e_0);
        }
    }["Tooltip.useCallback[handleClick]"], [
        childProp?.props,
        handleIsOpenChange
    ]), handleContextMenu = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "Tooltip.useCallback[handleContextMenu]": (e_1)=>{
            handleIsOpenChange(!1, !0), childProp?.props.onContextMenu?.(e_1);
        }
    }["Tooltip.useCallback[handleContextMenu]"], [
        childProp?.props,
        handleIsOpenChange
    ]), handleFocus = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "Tooltip.useCallback[handleFocus]": (e_2)=>{
            handleIsOpenChange(!0), childProp?.props?.onFocus?.(e_2);
        }
    }["Tooltip.useCallback[handleFocus]"], [
        childProp?.props,
        handleIsOpenChange
    ]), handleMouseEnter = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "Tooltip.useCallback[handleMouseEnter]": (e_3)=>{
            handleIsOpenChange(!0), childProp?.props?.onMouseEnter?.(e_3);
        }
    }["Tooltip.useCallback[handleMouseEnter]"], [
        childProp?.props,
        handleIsOpenChange
    ]), handleMouseLeave = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "Tooltip.useCallback[handleMouseLeave]": (e_4)=>{
            handleIsOpenChange(!1), childProp?.props?.onMouseLeave?.(e_4);
        }
    }["Tooltip.useCallback[handleMouseLeave]"], [
        childProp?.props,
        handleIsOpenChange
    ]);
    useCloseOnMouseLeave({
        handleIsOpenChange,
        referenceElement,
        showTooltip
    }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "Tooltip.useEffect": ()=>{
            disabled && showTooltip && handleIsOpenChange(!1);
        }
    }["Tooltip.useEffect"], [
        disabled,
        handleIsOpenChange,
        showTooltip
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "Tooltip.useEffect": ()=>{
            !content && showTooltip && handleIsOpenChange(!1);
        }
    }["Tooltip.useEffect"], [
        content,
        handleIsOpenChange,
        showTooltip
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "Tooltip.useEffect": ()=>{
            if (!showTooltip) return;
            function handleWindowKeyDown(event) {
                event.key === "Escape" && handleIsOpenChange(!1, !0);
            }
            return window.addEventListener("keydown", handleWindowKeyDown), ({
                "Tooltip.useEffect": ()=>{
                    window.removeEventListener("keydown", handleWindowKeyDown);
                }
            })["Tooltip.useEffect"];
        }
    }["Tooltip.useEffect"], [
        handleIsOpenChange,
        showTooltip
    ]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useLayoutEffect"])({
        "Tooltip.useLayoutEffect": ()=>{
            const availableWidths = [
                ...boundaryElement ? [
                    boundaryElement.offsetWidth
                ] : [],
                portalElement?.offsetWidth || document.body.offsetWidth
            ];
            setTooltipMaxWidth(Math.min(...availableWidths) - DEFAULT_TOOLTIP_PADDING * 2);
        }
    }["Tooltip.useLayoutEffect"], [
        boundaryElement,
        portalElement
    ]);
    const setArrow = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "Tooltip.useCallback[setArrow]": (arrowEl)=>{
            arrowRef.current = arrowEl, update();
        }
    }["Tooltip.useCallback[setArrow]"], [
        update
    ]), setFloating = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "Tooltip.useCallback[setFloating]": (node)=>{
            ref.current = node, refs.setFloating(node);
        }
    }["Tooltip.useCallback[setFloating]"], [
        refs
    ]), child = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "Tooltip.useMemo[child]": ()=>childProp ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cloneElement"])(childProp, {
                onBlur: handleBlur,
                onFocus: handleFocus,
                onMouseEnter: handleMouseEnter,
                onMouseLeave: handleMouseLeave,
                onClick: handleClick,
                onContextMenu: handleContextMenu,
                ref: setReferenceElement
            }) : null
    }["Tooltip.useMemo[child]"], [
        childProp,
        handleBlur,
        handleClick,
        handleContextMenu,
        handleFocus,
        handleMouseEnter,
        handleMouseLeave
    ]);
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useImperativeHandle"])(childProp ? getElementRef(childProp) : null, {
        "Tooltip.useImperativeHandle": ()=>referenceElement
    }["Tooltip.useImperativeHandle"], [
        referenceElement
    ]), !child) return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {});
    if (disabled) return child;
    const tooltip = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledTooltip, {
        "data-ui": "Tooltip",
        ...restProps,
        ref: setFloating,
        style: {
            ...floatingStyles,
            maxWidth: tooltipMaxWidth > 0 ? `${tooltipMaxWidth}px` : void 0
        },
        zOffset,
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(TooltipCard, {
            ...restProps,
            animate,
            arrow: arrowProp,
            arrowRef: setArrow,
            arrowX,
            arrowY,
            originX,
            originY,
            padding,
            placement,
            radius,
            ref: setFloating,
            scheme,
            shadow,
            children: content
        })
    }), children = showTooltip && (portalProp ? /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Portal, {
        __unstable_name: typeof portalProp == "string" ? portalProp : void 0,
        children: tooltip
    }) : tooltip);
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            animate ? /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$framer$2d$motion$2f$dist$2f$es$2f$components$2f$AnimatePresence$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AnimatePresence"], {
                children
            }) : children,
            child
        ]
    });
});
Tooltip.displayName = "ForwardRef(Tooltip)";
function useCloseOnMouseLeave(t0) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(8), { handleIsOpenChange, referenceElement, showTooltip } = t0;
    let t1;
    $[0] !== handleIsOpenChange || $[1] !== referenceElement ? (t1 = (target, teardown)=>{
        referenceElement && (referenceElement === target || target instanceof Node && referenceElement.contains(target) || (handleIsOpenChange(!1), teardown()));
    }, $[0] = handleIsOpenChange, $[1] = referenceElement, $[2] = t1) : t1 = $[2];
    const onMouseMove = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$use$2d$effect$2d$event$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffectEvent"])(t1);
    let t2;
    $[3] !== onMouseMove || $[4] !== showTooltip ? (t2 = ()=>{
        if (!showTooltip) return;
        const handleMouseMove = (event)=>{
            onMouseMove(event.target, ()=>window.removeEventListener("mousemove", handleMouseMove));
        };
        return window.addEventListener("mousemove", handleMouseMove), ()=>window.removeEventListener("mousemove", handleMouseMove);
    }, $[3] = onMouseMove, $[4] = showTooltip, $[5] = t2) : t2 = $[5];
    let t3;
    $[6] !== showTooltip ? (t3 = [
        showTooltip
    ], $[6] = showTooltip, $[7] = t3) : t3 = $[7], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t2, t3);
}
const StyledHotkeys = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].kbd.withConfig({
    displayName: "StyledHotkeys",
    componentId: "sc-b37mge-0"
})`font:inherit;padding:1px;&:not([hidden]){display:block;}`, Key = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(KBD).withConfig({
    displayName: "Key",
    componentId: "sc-b37mge-1"
})`&:not([hidden]){display:block;}`, Hotkeys = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(24);
    let fontSize2, keys, padding, radius, restProps, t0;
    $[0] !== props ? ({ fontSize: fontSize2, keys, padding, radius, space: t0, ...restProps } = props, $[0] = props, $[1] = fontSize2, $[2] = keys, $[3] = padding, $[4] = radius, $[5] = restProps, $[6] = t0) : (fontSize2 = $[1], keys = $[2], padding = $[3], radius = $[4], restProps = $[5], t0 = $[6]);
    const space = useArrayProp(t0 === void 0 ? 0.5 : t0);
    if (!keys || keys.length === 0) {
        let t12;
        return $[7] === Symbol.for("react.memo_cache_sentinel") ? (t12 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {}), $[7] = t12) : t12 = $[7], t12;
    }
    let t1;
    if ($[8] !== fontSize2 || $[9] !== keys || $[10] !== padding || $[11] !== radius) {
        let t22;
        $[13] !== fontSize2 || $[14] !== padding || $[15] !== radius ? (t22 = (key2, i)=>/* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Key, {
                fontSize: fontSize2,
                padding,
                radius,
                children: key2
            }, i), $[13] = fontSize2, $[14] = padding, $[15] = radius, $[16] = t22) : t22 = $[16], t1 = keys.map(t22), $[8] = fontSize2, $[9] = keys, $[10] = padding, $[11] = radius, $[12] = t1;
    } else t1 = $[12];
    let t2;
    $[17] !== space || $[18] !== t1 ? (t2 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Inline, {
        as: "span",
        space,
        children: t1
    }), $[17] = space, $[18] = t1, $[19] = t2) : t2 = $[19];
    let t3;
    return $[20] !== ref || $[21] !== restProps || $[22] !== t2 ? (t3 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledHotkeys, {
        "data-ui": "Hotkeys",
        ...restProps,
        ref,
        children: t2
    }), $[20] = ref, $[21] = restProps, $[22] = t2, $[23] = t3) : t3 = $[23], t3;
});
Hotkeys.displayName = "ForwardRef(Hotkeys)";
const MenuContext = createGlobalScopedContext("@sanity/ui/context/menu", null);
function _isFocusable(element) {
    return isHTMLAnchorElement(element) && element.getAttribute("data-disabled") !== "true" || isHTMLButtonElement(element) && !element.disabled;
}
function _getFocusableElements(elements) {
    return elements.filter(_isFocusable);
}
function _getDOMPath(rootElement, el) {
    const path = [];
    let e = el;
    for(; e !== rootElement;){
        const parentElement = e.parentElement;
        if (!parentElement) return path;
        const index = Array.from(parentElement.childNodes).indexOf(e);
        if (path.unshift(index), parentElement === rootElement) return path;
        e = parentElement;
    }
    return path;
}
const EMPTY_PATH = [];
function _sortElements(rootElement, elements) {
    if (!rootElement) return;
    const map = /* @__PURE__ */ new WeakMap();
    for (const el of elements)map.set(el, _getDOMPath(rootElement, el));
    const _sort = (a, b)=>{
        const _a = map.get(a) || EMPTY_PATH, _b = map.get(b) || EMPTY_PATH, len = Math.max(_a.length, _b.length);
        for(let i = 0; i < len; i += 1){
            const aIndex = _a[i] || -1, bIndex = _b[i] || -1;
            if (aIndex !== bIndex) return aIndex - bIndex;
        }
        return 0;
    };
    elements.sort(_sort);
}
function useMenuController(props) {
    const { onKeyDown, originElement, shouldFocus, rootElementRef } = props, elementsRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])([]), [activeIndex, _setActiveIndex] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(-1), activeIndexRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(activeIndex), activeElement = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "useMenuController.useMemo[activeElement]": ()=>elementsRef.current[activeIndex] || null
    }["useMenuController.useMemo[activeElement]"], [
        activeIndex
    ]), mounted = !!rootElementRef.current, setActiveIndex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useMenuController.useCallback[setActiveIndex]": (nextActiveIndex)=>{
            _setActiveIndex(nextActiveIndex), activeIndexRef.current = nextActiveIndex;
        }
    }["useMenuController.useCallback[setActiveIndex]"], []), mount = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useMenuController.useCallback[mount]": (element, selected)=>{
            if (!element) return ({
                "useMenuController.useCallback[mount]": ()=>{}
            })["useMenuController.useCallback[mount]"];
            if (elementsRef.current.indexOf(element) === -1 && (elementsRef.current.push(element), _sortElements(rootElementRef.current, elementsRef.current)), selected) {
                const selectedIndex = elementsRef.current.indexOf(element);
                setActiveIndex(selectedIndex);
            }
            return ({
                "useMenuController.useCallback[mount]": ()=>{
                    const idx = elementsRef.current.indexOf(element);
                    idx > -1 && elementsRef.current.splice(idx, 1);
                }
            })["useMenuController.useCallback[mount]"];
        }
    }["useMenuController.useCallback[mount]"], [
        rootElementRef,
        setActiveIndex
    ]), handleKeyDown = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useMenuController.useCallback[handleKeyDown]": (event)=>{
            if (event.key === "Tab") {
                originElement && originElement.focus();
                return;
            }
            if (event.key === "Home") {
                event.preventDefault(), event.stopPropagation();
                const el = _getFocusableElements(elementsRef.current)[0];
                if (!el) return;
                const currentIndex = elementsRef.current.indexOf(el);
                setActiveIndex(currentIndex);
                return;
            }
            if (event.key === "End") {
                event.preventDefault(), event.stopPropagation();
                const focusableElements_0 = _getFocusableElements(elementsRef.current), el_0 = focusableElements_0[focusableElements_0.length - 1];
                if (!el_0) return;
                const currentIndex_0 = elementsRef.current.indexOf(el_0);
                setActiveIndex(currentIndex_0);
                return;
            }
            if (event.key === "ArrowUp") {
                event.preventDefault(), event.stopPropagation();
                const focusableElements_1 = _getFocusableElements(elementsRef.current), focusableLen = focusableElements_1.length;
                if (focusableLen === 0) return;
                const focusedElement = elementsRef.current[activeIndexRef.current];
                let focusedIndex = focusableElements_1.indexOf(focusedElement);
                focusedIndex = (focusedIndex - 1 + focusableLen) % focusableLen;
                const el_1 = focusableElements_1[focusedIndex], currentIndex_1 = elementsRef.current.indexOf(el_1);
                setActiveIndex(currentIndex_1);
                return;
            }
            if (event.key === "ArrowDown") {
                event.preventDefault(), event.stopPropagation();
                const focusableElements_2 = _getFocusableElements(elementsRef.current), focusableLen_0 = focusableElements_2.length;
                if (focusableLen_0 === 0) return;
                const focusedElement_0 = elementsRef.current[activeIndexRef.current];
                let focusedIndex_0 = focusableElements_2.indexOf(focusedElement_0);
                focusedIndex_0 = (focusedIndex_0 + 1) % focusableLen_0;
                const el_2 = focusableElements_2[focusedIndex_0], currentIndex_2 = elementsRef.current.indexOf(el_2);
                setActiveIndex(currentIndex_2);
                return;
            }
            onKeyDown && onKeyDown(event);
        }
    }["useMenuController.useCallback[handleKeyDown]"], [
        onKeyDown,
        originElement,
        setActiveIndex
    ]), handleItemMouseEnter = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useMenuController.useCallback[handleItemMouseEnter]": (event_0)=>{
            const element_0 = event_0.currentTarget, currentIndex_3 = elementsRef.current.indexOf(element_0);
            setActiveIndex(currentIndex_3);
        }
    }["useMenuController.useCallback[handleItemMouseEnter]"], [
        setActiveIndex
    ]), handleItemMouseLeave = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useMenuController.useCallback[handleItemMouseLeave]": ()=>{
            setActiveIndex(-2), rootElementRef.current?.focus();
        }
    }["useMenuController.useCallback[handleItemMouseLeave]"], [
        rootElementRef,
        setActiveIndex
    ]);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "useMenuController.useEffect": ()=>{
            if (!mounted) return;
            const rafId = requestAnimationFrame({
                "useMenuController.useEffect.rafId": ()=>{
                    if (activeIndex === -1) {
                        if (shouldFocus === "first") {
                            const el_3 = _getFocusableElements(elementsRef.current)[0];
                            if (el_3) {
                                const currentIndex_4 = elementsRef.current.indexOf(el_3);
                                setActiveIndex(currentIndex_4);
                            }
                        }
                        if (shouldFocus === "last") {
                            const focusableElements_4 = _getFocusableElements(elementsRef.current), el_4 = focusableElements_4[focusableElements_4.length - 1];
                            if (el_4) {
                                const currentIndex_5 = elementsRef.current.indexOf(el_4);
                                setActiveIndex(currentIndex_5);
                            }
                        }
                        return;
                    }
                    (elementsRef.current[activeIndex] || null)?.focus();
                }
            }["useMenuController.useEffect.rafId"]);
            return ({
                "useMenuController.useEffect": ()=>cancelAnimationFrame(rafId)
            })["useMenuController.useEffect"];
        }
    }["useMenuController.useEffect"], [
        activeIndex,
        mounted,
        setActiveIndex,
        shouldFocus
    ]), {
        activeElement,
        activeIndex,
        handleItemMouseEnter,
        handleItemMouseLeave,
        handleKeyDown,
        mount
    };
}
const StyledMenu = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Box).withConfig({
    displayName: "StyledMenu",
    componentId: "sc-xt0tnv-0"
})`outline:none;overflow:auto;`, Menu = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, forwardedRef) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(50);
    let _shouldFocus, children, onClickOutside, onEscape, onItemClick, onItemSelect, onKeyDown, originElement, registerElement, restProps, t0, t1;
    if ($[0] !== props) {
        const { children: t22, focusFirst, focusLast, onClickOutside: t32, onEscape: t42, onItemClick: t52, onItemSelect: t62, onKeyDown: t72, originElement: t82, padding: t92, registerElement: t102, shouldFocus: t112, space: t122, ...t132 } = props;
        children = t22, onClickOutside = t32, onEscape = t42, onItemClick = t52, onItemSelect = t62, onKeyDown = t72, originElement = t82, t0 = t92, registerElement = t102, _shouldFocus = t112, t1 = t122, restProps = t132, $[0] = props, $[1] = _shouldFocus, $[2] = children, $[3] = onClickOutside, $[4] = onEscape, $[5] = onItemClick, $[6] = onItemSelect, $[7] = onKeyDown, $[8] = originElement, $[9] = registerElement, $[10] = restProps, $[11] = t0, $[12] = t1;
    } else _shouldFocus = $[1], children = $[2], onClickOutside = $[3], onEscape = $[4], onItemClick = $[5], onItemSelect = $[6], onKeyDown = $[7], originElement = $[8], registerElement = $[9], restProps = $[10], t0 = $[11], t1 = $[12];
    const padding = t0 === void 0 ? 1 : t0, space = t1 === void 0 ? 1 : t1, shouldFocus = _shouldFocus ?? (props.focusFirst && "first" || props.focusLast && "last" || null), ref = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    let t2;
    $[13] === Symbol.for("react.memo_cache_sentinel") ? (t2 = ()=>ref.current, $[13] = t2) : t2 = $[13], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useImperativeHandle"])(forwardedRef, t2);
    const { isTopLayer } = useLayer();
    let t3;
    $[14] !== onKeyDown || $[15] !== originElement || $[16] !== shouldFocus ? (t3 = {
        onKeyDown,
        originElement,
        shouldFocus,
        rootElementRef: ref
    }, $[14] = onKeyDown, $[15] = originElement, $[16] = shouldFocus, $[17] = t3) : t3 = $[17];
    const { activeElement, activeIndex, handleItemMouseEnter, handleItemMouseLeave, handleKeyDown, mount } = useMenuController(t3), unregisterElementRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    let t4;
    $[18] !== registerElement ? (t4 = (el)=>{
        unregisterElementRef.current && (unregisterElementRef.current(), unregisterElementRef.current = null), ref.current = el, ref.current && registerElement && (unregisterElementRef.current = registerElement(ref.current));
    }, $[18] = registerElement, $[19] = t4) : t4 = $[19];
    const handleRefChange = t4;
    let t5, t6;
    $[20] !== activeIndex || $[21] !== onItemSelect ? (t5 = ()=>{
        onItemSelect && onItemSelect(activeIndex);
    }, t6 = [
        activeIndex,
        onItemSelect
    ], $[20] = activeIndex, $[21] = onItemSelect, $[22] = t5, $[23] = t6) : (t5 = $[22], t6 = $[23]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t5, t6);
    let t7;
    $[24] === Symbol.for("react.memo_cache_sentinel") ? (t7 = ()=>[
            ref.current
        ], $[24] = t7) : t7 = $[24], useClickOutsideEvent(isTopLayer && onClickOutside, t7);
    let t8;
    $[25] !== isTopLayer || $[26] !== onEscape ? (t8 = (event)=>{
        isTopLayer && event.key === "Escape" && (event.stopPropagation(), onEscape && onEscape());
    }, $[25] = isTopLayer, $[26] = onEscape, $[27] = t8) : t8 = $[27], useGlobalKeyDown(t8);
    let t9, t10;
    $[28] !== activeElement || $[29] !== activeIndex || $[30] !== handleItemMouseEnter || $[31] !== handleItemMouseLeave || $[32] !== mount || $[33] !== onClickOutside || $[34] !== onEscape || $[35] !== onItemClick || $[36] !== registerElement ? (t10 = {
        version: 0,
        activeElement,
        activeIndex,
        mount,
        onClickOutside,
        onEscape,
        onItemClick,
        onItemMouseEnter: handleItemMouseEnter,
        onItemMouseLeave: handleItemMouseLeave,
        registerElement,
        onMouseEnter: handleItemMouseEnter,
        onMouseLeave: handleItemMouseLeave
    }, $[28] = activeElement, $[29] = activeIndex, $[30] = handleItemMouseEnter, $[31] = handleItemMouseLeave, $[32] = mount, $[33] = onClickOutside, $[34] = onEscape, $[35] = onItemClick, $[36] = registerElement, $[37] = t10) : t10 = $[37], t9 = t10;
    const value = t9;
    let t11;
    $[38] !== children || $[39] !== space ? (t11 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Stack, {
        space,
        children
    }), $[38] = children, $[39] = space, $[40] = t11) : t11 = $[40];
    let t12;
    $[41] !== handleKeyDown || $[42] !== handleRefChange || $[43] !== padding || $[44] !== restProps || $[45] !== t11 ? (t12 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StyledMenu, {
        "data-ui": "Menu",
        ...restProps,
        onKeyDown: handleKeyDown,
        padding,
        ref: handleRefChange,
        role: "menu",
        tabIndex: -1,
        children: t11
    }), $[41] = handleKeyDown, $[42] = handleRefChange, $[43] = padding, $[44] = restProps, $[45] = t11, $[46] = t12) : t12 = $[46];
    let t13;
    return $[47] !== t12 || $[48] !== value ? (t13 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(MenuContext.Provider, {
        value,
        children: t12
    }), $[47] = t12, $[48] = value, $[49] = t13) : t13 = $[49], t13;
});
Menu.displayName = "ForwardRef(Menu)";
const MenuDivider = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"].hr.withConfig({
    displayName: "MenuDivider",
    componentId: "sc-uhoxwu-0"
})`height:1px;border:0;background:var(--card-hairline-soft-color);margin:0;`;
MenuDivider.displayName = "MenuDivider";
function selectableBaseStyle() {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    background-color: inherit;
    color: inherit;

    &[data-as='button'] {
      -webkit-font-smoothing: inherit;
      appearance: none;
      outline: none;
      font: inherit;
      text-align: inherit;
      border: 0;
      width: -moz-available;
      width: -webkit-fill-available;
      width: stretch;
    }

    /* &:is(a) */
    &[data-as='a'] {
      text-decoration: none;
    }
  `;
}
function selectableColorStyle(props) {
    const { $tone } = props, { color, style } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$ui$2f$dist$2f$_chunks$2d$es$2f$getTheme_v2$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTheme_v2"])(props.theme), tone = color.selectable[$tone];
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["css"]`
    ${_cardColorStyle(color, tone.enabled)}

    background-color: var(--card-bg-color);
    color: var(--card-fg-color);
    outline: none;

    /* &:is(button) */
    &[data-as='button'] {
      &:disabled {
        ${_cardColorStyle(color, tone.disabled)}
      }

      &:not(:disabled) {
        &[aria-pressed='true'] {
          ${_cardColorStyle(color, tone.pressed)}
        }

        &[data-selected],
        &[aria-selected='true'] > & {
          ${_cardColorStyle(color, tone.selected)}
        }

        @media (hover: hover) {
          &:not([data-selected]) {
            &[data-hovered],
            &:hover {
              ${_cardColorStyle(color, tone.hovered)}
            }

            &:active {
              ${_cardColorStyle(color, tone.pressed)}
            }
          }
        }
      }
    }

    /* &:is(a) */
    &[data-as='a'] {
      &[data-disabled] {
        ${_cardColorStyle(color, tone.disabled)}
      }

      &:not([data-disabled]) {
        &[data-pressed] {
          ${_cardColorStyle(color, tone.pressed)}
        }

        &[data-selected] {
          ${_cardColorStyle(color, tone.selected)}
        }

        @media (hover: hover) {
          &:not([data-selected]) {
            &[data-hovered],
            &:hover {
              ${_cardColorStyle(color, tone.hovered)}
            }
            &:active {
              ${_cardColorStyle(color, tone.pressed)}
            }
          }
        }
      }
    }

    ${style?.card?.root}
  `;
}
const Selectable = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Box).withConfig({
    displayName: "Selectable",
    componentId: "sc-1w01ang-0"
})(responsiveRadiusStyle, selectableBaseStyle, selectableColorStyle);
Selectable.displayName = "Selectable";
function useMenu() {
    const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useContext"])(MenuContext);
    if (!value) throw new Error("useMenu(): missing context value");
    if (!isRecord(value) || value.version !== 0) throw new Error("useMenu(): the context value is not compatible");
    return value;
}
function MenuGroup(props) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(79);
    let IconComponent, children, menuProps, onClick, popover, restProps, t0, t1, t2, t3, t4, t5, text;
    $[0] !== props ? ({ as: t0, children, fontSize: t1, icon: IconComponent, menu: menuProps, onClick, padding: t2, popover, radius: t3, space: t4, text, tone: t5, ...restProps } = props, $[0] = props, $[1] = IconComponent, $[2] = children, $[3] = menuProps, $[4] = onClick, $[5] = popover, $[6] = restProps, $[7] = t0, $[8] = t1, $[9] = t2, $[10] = t3, $[11] = t4, $[12] = t5, $[13] = text) : (IconComponent = $[1], children = $[2], menuProps = $[3], onClick = $[4], popover = $[5], restProps = $[6], t0 = $[7], t1 = $[8], t2 = $[9], t3 = $[10], t4 = $[11], t5 = $[12], text = $[13]);
    const as = t0 === void 0 ? "button" : t0, fontSize2 = t1 === void 0 ? 1 : t1, padding = t2 === void 0 ? 3 : t2, radius = t3 === void 0 ? 2 : t3, space = t4 === void 0 ? 3 : t4, tone = t5 === void 0 ? "default" : t5, menu = useMenu(), { scheme } = useRootTheme(), { activeElement, mount, onClickOutside, onEscape, onItemClick, onItemMouseEnter: _onItemMouseEnter, registerElement } = menu, onItemMouseEnter = _onItemMouseEnter ?? menu.onMouseEnter, [rootElement, setRootElement] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null), [open, setOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(!1), [shouldFocus, setShouldFocus] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null), active = !!activeElement && activeElement === rootElement, [withinMenu, setWithinMenu] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(!1);
    let t6;
    $[14] !== onItemMouseEnter ? (t6 = (event)=>{
        setWithinMenu(!1), onItemMouseEnter(event), setOpen(!0);
    }, $[14] = onItemMouseEnter, $[15] = t6) : t6 = $[15];
    const handleMouseEnter = t6;
    let t7;
    $[16] !== rootElement ? (t7 = (event_0)=>{
        event_0.key === "ArrowLeft" && (event_0.stopPropagation(), setOpen(!1), requestAnimationFrame(()=>{
            rootElement?.focus();
        }));
    }, $[16] = rootElement, $[17] = t7) : t7 = $[17];
    const handleMenuKeyDown = t7;
    let t8;
    $[18] !== onClick ? (t8 = (event_1)=>{
        onClick?.(event_1), setShouldFocus("first"), setOpen(!0);
    }, $[18] = onClick, $[19] = t8) : t8 = $[19];
    const handleClick = t8;
    let t9;
    $[20] !== onItemClick ? (t9 = ()=>{
        setOpen(!1), onItemClick?.();
    }, $[20] = onItemClick, $[21] = t9) : t9 = $[21];
    const handleChildItemClick = t9;
    let t10;
    $[22] === Symbol.for("react.memo_cache_sentinel") ? (t10 = ()=>setWithinMenu(!0), $[22] = t10) : t10 = $[22];
    const handleMenuMouseEnter = t10;
    let t11, t12;
    $[23] !== mount || $[24] !== rootElement ? (t11 = ()=>mount(rootElement), t12 = [
        mount,
        rootElement
    ], $[23] = mount, $[24] = rootElement, $[25] = t11, $[26] = t12) : (t11 = $[25], t12 = $[26]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t11, t12);
    let t13, t14;
    $[27] !== active ? (t13 = ()=>{
        active || setOpen(!1);
    }, t14 = [
        active
    ], $[27] = active, $[28] = t13, $[29] = t14) : (t13 = $[28], t14 = $[29]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t13, t14);
    let t15, t16;
    $[30] !== open ? (t15 = ()=>{
        open || setWithinMenu(!1);
    }, t16 = [
        open
    ], $[30] = open, $[31] = t15, $[32] = t16) : (t15 = $[31], t16 = $[32]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t15, t16);
    let t17, t18;
    $[33] !== shouldFocus ? (t17 = ()=>{
        if (!shouldFocus) return;
        const rafId = requestAnimationFrame(()=>setShouldFocus(null));
        return ()=>cancelAnimationFrame(rafId);
    }, t18 = [
        shouldFocus
    ], $[33] = shouldFocus, $[34] = t17, $[35] = t18) : (t17 = $[34], t18 = $[35]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t17, t18);
    let t19;
    $[36] !== children || $[37] !== handleChildItemClick || $[38] !== handleMenuKeyDown || $[39] !== menuProps || $[40] !== onClickOutside || $[41] !== onEscape || $[42] !== registerElement || $[43] !== shouldFocus ? (t19 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Menu, {
        ...menuProps,
        onClickOutside,
        onEscape,
        onItemClick: handleChildItemClick,
        onKeyDown: handleMenuKeyDown,
        onMouseEnter: handleMenuMouseEnter,
        registerElement,
        shouldFocus,
        children
    }), $[36] = children, $[37] = handleChildItemClick, $[38] = handleMenuKeyDown, $[39] = menuProps, $[40] = onClickOutside, $[41] = onEscape, $[42] = registerElement, $[43] = shouldFocus, $[44] = t19) : t19 = $[44];
    const childMenu = t19;
    let t20;
    $[45] === Symbol.for("react.memo_cache_sentinel") ? (t20 = (event_2)=>{
        const target = event_2.currentTarget;
        if (document.activeElement === target && event_2.key === "ArrowRight") {
            setShouldFocus("first"), setOpen(!0), setWithinMenu(!0);
            return;
        }
    }, $[45] = t20) : t20 = $[45];
    const handleKeyDown = t20, t21 = as === "button" ? withinMenu : void 0, t22 = as !== "button" ? withinMenu : void 0, t23 = !withinMenu && active ? "" : void 0, t24 = useArrayProp(radius), t25 = as === "button" ? "button" : void 0;
    let t26;
    $[46] !== IconComponent || $[47] !== fontSize2 ? (t26 = IconComponent && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(Text, {
        size: fontSize2,
        children: [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElement"])(IconComponent) && IconComponent,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$is$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElementType"])(IconComponent) && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(IconComponent, {})
        ]
    }), $[46] = IconComponent, $[47] = fontSize2, $[48] = t26) : t26 = $[48];
    let t27;
    $[49] !== fontSize2 || $[50] !== text ? (t27 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Box, {
        flex: 1,
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Text, {
            size: fontSize2,
            textOverflow: "ellipsis",
            weight: "medium",
            children: text
        })
    }), $[49] = fontSize2, $[50] = text, $[51] = t27) : t27 = $[51];
    let t28;
    $[52] === Symbol.for("react.memo_cache_sentinel") ? (t28 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$sanity$2f$icons$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ChevronRightIcon"], {}), $[52] = t28) : t28 = $[52];
    let t29;
    $[53] !== fontSize2 ? (t29 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Text, {
        size: fontSize2,
        children: t28
    }), $[53] = fontSize2, $[54] = t29) : t29 = $[54];
    let t30;
    $[55] !== padding || $[56] !== space || $[57] !== t26 || $[58] !== t27 || $[59] !== t29 ? (t30 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(Flex, {
        gap: space,
        padding,
        children: [
            t26,
            t27,
            t29
        ]
    }), $[55] = padding, $[56] = space, $[57] = t26, $[58] = t27, $[59] = t29, $[60] = t30) : t30 = $[60];
    let t31;
    $[61] !== as || $[62] !== handleClick || $[63] !== handleMouseEnter || $[64] !== restProps || $[65] !== scheme || $[66] !== t21 || $[67] !== t22 || $[68] !== t23 || $[69] !== t24 || $[70] !== t25 || $[71] !== t30 || $[72] !== tone ? (t31 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Selectable, {
        "data-as": as,
        "data-ui": "MenuGroup",
        forwardedAs: as,
        ...restProps,
        "aria-pressed": t21,
        "data-pressed": t22,
        "data-selected": t23,
        $radius: t24,
        $tone: tone,
        $scheme: scheme,
        onClick: handleClick,
        onKeyDown: handleKeyDown,
        onMouseEnter: handleMouseEnter,
        ref: setRootElement,
        tabIndex: -1,
        type: t25,
        children: t30
    }), $[61] = as, $[62] = handleClick, $[63] = handleMouseEnter, $[64] = restProps, $[65] = scheme, $[66] = t21, $[67] = t22, $[68] = t23, $[69] = t24, $[70] = t25, $[71] = t30, $[72] = tone, $[73] = t31) : t31 = $[73];
    let t32;
    return $[74] !== childMenu || $[75] !== open || $[76] !== popover || $[77] !== t31 ? (t32 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Popover, {
        ...popover,
        content: childMenu,
        "data-ui": "MenuGroup__popover",
        open,
        children: t31
    }), $[74] = childMenu, $[75] = open, $[76] = popover, $[77] = t31, $[78] = t32) : t32 = $[78], t32;
}
MenuGroup.displayName = "MenuGroup";
const MenuItem = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, forwardedRef) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(74);
    let IconComponent, IconRightComponent, children, disabled, hotkeys, onClick, paddingBottom, paddingLeft, paddingRight, paddingTop, paddingX, paddingY, pressed, restProps, selectedProp, t0, t1, t2, t3, t4, t5, text;
    $[0] !== props ? ({ as: t0, children, disabled, fontSize: t1, hotkeys, icon: IconComponent, iconRight: IconRightComponent, onClick, padding: t2, paddingX, paddingY, paddingTop, paddingRight, paddingBottom, paddingLeft, pressed, radius: t3, selected: selectedProp, space: t4, text, tone: t5, ...restProps } = props, $[0] = props, $[1] = IconComponent, $[2] = IconRightComponent, $[3] = children, $[4] = disabled, $[5] = hotkeys, $[6] = onClick, $[7] = paddingBottom, $[8] = paddingLeft, $[9] = paddingRight, $[10] = paddingTop, $[11] = paddingX, $[12] = paddingY, $[13] = pressed, $[14] = restProps, $[15] = selectedProp, $[16] = t0, $[17] = t1, $[18] = t2, $[19] = t3, $[20] = t4, $[21] = t5, $[22] = text) : (IconComponent = $[1], IconRightComponent = $[2], children = $[3], disabled = $[4], hotkeys = $[5], onClick = $[6], paddingBottom = $[7], paddingLeft = $[8], paddingRight = $[9], paddingTop = $[10], paddingX = $[11], paddingY = $[12], pressed = $[13], restProps = $[14], selectedProp = $[15], t0 = $[16], t1 = $[17], t2 = $[18], t3 = $[19], t4 = $[20], t5 = $[21], text = $[22]);
    const as = t0 === void 0 ? "button" : t0, fontSize2 = t1 === void 0 ? 1 : t1, padding = t2 === void 0 ? 3 : t2, radius = t3 === void 0 ? 2 : t3, space = t4 === void 0 ? 3 : t4, tone = t5 === void 0 ? "default" : t5, { scheme } = useRootTheme(), menu = useMenu(), { activeElement, mount, onItemClick, onItemMouseEnter: _onItemMouseEnter, onItemMouseLeave: _onItemMouseLeave } = menu, onItemMouseEnter = _onItemMouseEnter ?? menu.onMouseEnter, onItemMouseLeave = _onItemMouseLeave ?? menu.onMouseLeave, [rootElement, setRootElement] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null), active = !!activeElement && activeElement === rootElement, ref = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    let t6;
    $[23] === Symbol.for("react.memo_cache_sentinel") ? (t6 = ()=>ref.current, $[23] = t6) : t6 = $[23], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useImperativeHandle"])(forwardedRef, t6);
    let t7, t8;
    $[24] !== mount || $[25] !== rootElement || $[26] !== selectedProp ? (t7 = ()=>mount(rootElement, selectedProp), t8 = [
        mount,
        rootElement,
        selectedProp
    ], $[24] = mount, $[25] = rootElement, $[26] = selectedProp, $[27] = t7, $[28] = t8) : (t7 = $[27], t8 = $[28]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t7, t8);
    let t9;
    $[29] !== disabled || $[30] !== onClick || $[31] !== onItemClick ? (t9 = (event)=>{
        disabled || (onClick && onClick(event), onItemClick && onItemClick());
    }, $[29] = disabled, $[30] = onClick, $[31] = onItemClick, $[32] = t9) : t9 = $[32];
    const handleClick = t9;
    let t10, t11;
    $[33] !== padding || $[34] !== paddingBottom || $[35] !== paddingLeft || $[36] !== paddingRight || $[37] !== paddingTop || $[38] !== paddingX || $[39] !== paddingY ? (t11 = {
        padding,
        paddingX,
        paddingY,
        paddingTop,
        paddingRight,
        paddingBottom,
        paddingLeft
    }, $[33] = padding, $[34] = paddingBottom, $[35] = paddingLeft, $[36] = paddingRight, $[37] = paddingTop, $[38] = paddingX, $[39] = paddingY, $[40] = t11) : t11 = $[40], t10 = t11;
    const paddingProps = t10, t12 = useArrayProp(fontSize2);
    let t13;
    $[41] !== t12 ? (t13 = t12.map(_temp), $[41] = t12, $[42] = t13) : t13 = $[42];
    const hotkeysFontSize = t13;
    let t14;
    $[43] === Symbol.for("react.memo_cache_sentinel") ? (t14 = (el)=>{
        ref.current = el, setRootElement(el);
    }, $[43] = t14) : t14 = $[43];
    const setRef = t14, t15 = as === "button" && pressed, t16 = as !== "button" && pressed ? "" : void 0, t17 = active ? "" : void 0, t18 = disabled ? "" : void 0, t19 = useArrayProp(radius), t20 = useArrayProp(0), t21 = disabled ? "default" : tone, t22 = as === "button" ? "button" : void 0;
    let t23;
    $[44] !== IconComponent || $[45] !== IconRightComponent || $[46] !== fontSize2 || $[47] !== hotkeys || $[48] !== hotkeysFontSize || $[49] !== paddingProps || $[50] !== space || $[51] !== text ? (t23 = (IconComponent || text || IconRightComponent) && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(Flex, {
        as: "span",
        gap: space,
        align: "center",
        ...paddingProps,
        children: [
            IconComponent && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(Text, {
                size: fontSize2,
                children: [
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElement"])(IconComponent) && IconComponent,
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$is$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElementType"])(IconComponent) && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(IconComponent, {})
                ]
            }),
            text && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Box, {
                flex: 1,
                children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Text, {
                    size: fontSize2,
                    textOverflow: "ellipsis",
                    weight: "medium",
                    children: text
                })
            }),
            hotkeys && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Hotkeys, {
                fontSize: hotkeysFontSize,
                keys: hotkeys,
                style: {
                    marginTop: -4,
                    marginBottom: -4
                }
            }),
            IconRightComponent && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(Text, {
                size: fontSize2,
                children: [
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElement"])(IconRightComponent) && IconRightComponent,
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$is$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElementType"])(IconRightComponent) && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(IconRightComponent, {})
                ]
            })
        ]
    }), $[44] = IconComponent, $[45] = IconRightComponent, $[46] = fontSize2, $[47] = hotkeys, $[48] = hotkeysFontSize, $[49] = paddingProps, $[50] = space, $[51] = text, $[52] = t23) : t23 = $[52];
    let t24;
    $[53] !== children || $[54] !== paddingProps ? (t24 = children && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Box, {
        as: "span",
        ...paddingProps,
        children
    }), $[53] = children, $[54] = paddingProps, $[55] = t24) : t24 = $[55];
    let t25;
    return $[56] !== as || $[57] !== disabled || $[58] !== handleClick || $[59] !== onItemMouseEnter || $[60] !== onItemMouseLeave || $[61] !== restProps || $[62] !== scheme || $[63] !== t15 || $[64] !== t16 || $[65] !== t17 || $[66] !== t18 || $[67] !== t19 || $[68] !== t20 || $[69] !== t21 || $[70] !== t22 || $[71] !== t23 || $[72] !== t24 ? (t25 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(Selectable, {
        "data-ui": "MenuItem",
        role: "menuitem",
        ...restProps,
        "aria-pressed": t15,
        "data-pressed": t16,
        "data-selected": t17,
        "data-disabled": t18,
        forwardedAs: as,
        $radius: t19,
        $padding: t20,
        $tone: t21,
        $scheme: scheme,
        disabled,
        onClick: handleClick,
        onMouseEnter: onItemMouseEnter,
        onMouseLeave: onItemMouseLeave,
        ref: setRef,
        tabIndex: -1,
        type: t22,
        children: [
            t23,
            t24
        ]
    }), $[56] = as, $[57] = disabled, $[58] = handleClick, $[59] = onItemMouseEnter, $[60] = onItemMouseLeave, $[61] = restProps, $[62] = scheme, $[63] = t15, $[64] = t16, $[65] = t17, $[66] = t18, $[67] = t19, $[68] = t20, $[69] = t21, $[70] = t22, $[71] = t23, $[72] = t24, $[73] = t25) : t25 = $[73], t25;
});
MenuItem.displayName = "ForwardRef(MenuItem)";
function _temp(s) {
    return s - 1;
}
const CustomButton = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Button).withConfig({
    displayName: "CustomButton",
    componentId: "sc-1kns779-0"
})`max-width:100%;`, Tab = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, forwardedRef) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(30);
    let focused, icon, id, label, onClick, onFocus, restProps, selected, t0, t1;
    $[0] !== props ? ({ icon, id, focused, fontSize: t0, label, onClick, onFocus, padding: t1, selected, ...restProps } = props, $[0] = props, $[1] = focused, $[2] = icon, $[3] = id, $[4] = label, $[5] = onClick, $[6] = onFocus, $[7] = restProps, $[8] = selected, $[9] = t0, $[10] = t1) : (focused = $[1], icon = $[2], id = $[3], label = $[4], onClick = $[5], onFocus = $[6], restProps = $[7], selected = $[8], t0 = $[9], t1 = $[10]);
    const fontSize2 = t0 === void 0 ? 1 : t0, padding = t1 === void 0 ? 2 : t1, ref = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null), focusedRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(!1);
    let t2;
    $[11] === Symbol.for("react.memo_cache_sentinel") ? (t2 = ()=>ref.current, $[11] = t2) : t2 = $[11], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useImperativeHandle"])(forwardedRef, t2);
    let t3;
    $[12] === Symbol.for("react.memo_cache_sentinel") ? (t3 = ()=>{
        focusedRef.current = !1;
    }, $[12] = t3) : t3 = $[12];
    const handleBlur = t3;
    let t4;
    $[13] !== onFocus ? (t4 = (event)=>{
        focusedRef.current = !0, onFocus && onFocus(event);
    }, $[13] = onFocus, $[14] = t4) : t4 = $[14];
    const handleFocus = t4;
    let t5, t6;
    $[15] !== focused ? (t5 = ()=>{
        focused && !focusedRef.current && (ref.current && ref.current.focus(), focusedRef.current = !0);
    }, t6 = [
        focused
    ], $[15] = focused, $[16] = t5, $[17] = t6) : (t5 = $[16], t6 = $[17]), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(t5, t6);
    const t7 = selected ? "true" : "false", t8 = selected ? 0 : -1;
    let t9;
    return $[18] !== fontSize2 || $[19] !== handleFocus || $[20] !== icon || $[21] !== id || $[22] !== label || $[23] !== onClick || $[24] !== padding || $[25] !== restProps || $[26] !== selected || $[27] !== t7 || $[28] !== t8 ? (t9 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(CustomButton, {
        "data-ui": "Tab",
        ...restProps,
        "aria-selected": t7,
        fontSize: fontSize2,
        icon,
        id,
        mode: "bleed",
        onClick,
        onBlur: handleBlur,
        onFocus: handleFocus,
        padding,
        ref,
        role: "tab",
        selected,
        tabIndex: t8,
        text: label,
        type: "button"
    }), $[18] = fontSize2, $[19] = handleFocus, $[20] = icon, $[21] = id, $[22] = label, $[23] = onClick, $[24] = padding, $[25] = restProps, $[26] = selected, $[27] = t7, $[28] = t8, $[29] = t9) : t9 = $[29], t9;
});
Tab.displayName = "ForwardRef(Tab)";
const CustomInline = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$components$2f$dist$2f$styled$2d$components$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["styled"])(Inline).withConfig({
    displayName: "CustomInline",
    componentId: "sc-5cm04m-0"
})`& > div{display:inline-block;vertical-align:middle;max-width:100%;box-sizing:border-box;}`, TabList = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(function(props, ref) {
    const $ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$compiler$2d$runtime$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(15);
    let childrenProp, restProps;
    $[0] !== props ? ({ children: childrenProp, ...restProps } = props, $[0] = props, $[1] = childrenProp, $[2] = restProps) : (childrenProp = $[1], restProps = $[2]);
    const [focusedIndex, setFocusedIndex] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(-1);
    let t0;
    if ($[3] !== childrenProp || $[4] !== focusedIndex) {
        const children = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Children"].toArray(childrenProp).filter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValidElement"]);
        let t12;
        $[6] !== focusedIndex ? (t12 = (child, childIndex)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cloneElement"])(child, {
                focused: focusedIndex === childIndex,
                key: childIndex,
                onFocus: ()=>setFocusedIndex(childIndex)
            }), $[6] = focusedIndex, $[7] = t12) : t12 = $[7], t0 = children.map(t12), $[3] = childrenProp, $[4] = focusedIndex, $[5] = t0;
    } else t0 = $[5];
    const tabs = t0, numTabs = tabs.length;
    let t1;
    $[8] !== numTabs ? (t1 = (event)=>{
        event.key === "ArrowLeft" && setFocusedIndex((prevIndex)=>(prevIndex + numTabs - 1) % numTabs), event.key === "ArrowRight" && setFocusedIndex((prevIndex_0)=>(prevIndex_0 + 1) % numTabs);
    }, $[8] = numTabs, $[9] = t1) : t1 = $[9];
    const handleKeyDown = t1;
    let t2;
    return $[10] !== handleKeyDown || $[11] !== ref || $[12] !== restProps || $[13] !== tabs ? (t2 = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(CustomInline, {
        "data-ui": "TabList",
        ...restProps,
        onKeyDown: handleKeyDown,
        ref,
        role: "tablist",
        children: tabs
    }), $[10] = handleKeyDown, $[11] = ref, $[12] = restProps, $[13] = tabs, $[14] = t2) : t2 = $[14], t2;
});
TabList.displayName = "ForwardRef(TabList)";
;
 //# sourceMappingURL=_visual-editing.mjs.map
}}),
}]);

//# sourceMappingURL=node_modules_%40sanity_ui_dist_4bb1e1a5._.js.map