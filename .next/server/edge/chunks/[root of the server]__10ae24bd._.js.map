{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n \n// List of all supported languages\nexport const supportedLanguages = ['hr', 'en', 'fr', 'de']\n \nexport function middleware(request: NextRequest) {\n  // Check if there is any supported language in the pathname\n  const pathname = request.nextUrl.pathname\n  \n  // Check if the pathname starts with a locale\n  const pathnameHasLanguage = supportedLanguages.some(\n    (lang) => pathname.startsWith(`/${lang}/`) || pathname === `/${lang}`\n  )\n\n  if (pathnameHasLanguage) return\n\n  // Redirect if there is no language in the pathname\n  const language = 'hr' // Default language\n  \n  // e.g. incoming request is /posts\n  // The new URL is now /hr/posts\n  return NextResponse.redirect(\n    new URL(`/${language}${pathname}`, request.url)\n  )\n}\n \nexport const config = {\n  matcher: [\n    // Skip all internal paths (_next, api, etc)\n    '/((?!api|_next/static|_next/image|favicon.ico).*)',\n  ],\n}"],"names":[],"mappings":";;;;;AAAA;AAAA;;AAIO,MAAM,qBAAqB;IAAC;IAAM;IAAM;IAAM;CAAK;AAEnD,SAAS,WAAW,OAAoB;IAC7C,2DAA2D;IAC3D,MAAM,WAAW,QAAQ,OAAO,CAAC,QAAQ;IAEzC,6CAA6C;IAC7C,MAAM,sBAAsB,mBAAmB,IAAI,CACjD,CAAC,OAAS,SAAS,UAAU,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,aAAa,CAAC,CAAC,EAAE,MAAM;IAGvE,IAAI,qBAAqB;IAEzB,mDAAmD;IACnD,MAAM,WAAW,KAAK,mBAAmB;;IAEzC,kCAAkC;IAClC,+BAA+B;IAC/B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAC1B,IAAI,IAAI,CAAC,CAAC,EAAE,WAAW,UAAU,EAAE,QAAQ,GAAG;AAElD;AAEO,MAAM,SAAS;IACpB,SAAS;QACP,4CAA4C;QAC5C;KACD;AACH"}}]
}