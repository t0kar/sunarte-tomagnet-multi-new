{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/sanity/lib/api.ts"],"sourcesContent":["/**\n * As this file is reused in several other files, try to keep it lean and small.\n * Importing other npm packages here could lead to needlessly increasing the client bundle size, or end up in a server-only function that don't need it.\n */\n\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\n  if (v === undefined) {\n    throw new Error(errorMessage);\n  }\n\n  return v;\n}\n\nexport const dataset = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\n  \"Missing environment variable: NEXT_PUBLIC_SANITY_DATASET\",\n);\n\nexport const projectId = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n  \"Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID\",\n);\n\n/**\n * see https://www.sanity.io/docs/api-versioning for how versioning works\n */\nexport const apiVersion =\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || \"2024-02-28\";\n\n/**\n * Used to configure edit intent links, for Presentation Mode, as well as to configure where the Studio is mounted in the router.\n */\nexport const studioUrl = \"/studio\";\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;AAED,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;AAEO,MAAM,UAAU,4DAErB;AAGK,MAAM,YAAY,0DAEvB;AAMK,MAAM,aACX,QAAQ,GAAG,CAAC,8BAA8B,IAAI;AAKzC,MAAM,YAAY","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/sanity/lib/utils.ts"],"sourcesContent":["import createImageUrlBuilder from '@sanity/image-url';\n\nimport { dataset, projectId } from '@/sanity/lib/api';\n\nconst imageBuilder = createImageUrlBuilder({\n  projectId: projectId || '',\n  dataset: dataset || '',\n});\n\nexport const urlForImage = (source: any) => {\n  // Ensure that source image contains a valid reference\n  if (!source?.asset?._ref) {\n    return undefined;\n  }\n\n  return imageBuilder?.image(source).auto('format').fit('max');\n};\n\nexport function resolveOpenGraphImage(image: any, width = 1200, height = 627) {\n  if (!image) return;\n  const url = urlForImage(image)?.width(1200).height(627).fit('crop').url();\n  if (!url) return;\n  return { url, alt: image?.alt as string, width, height };\n}\n\nexport function resolveHref(\n  type: string,\n  slug?: string,\n  language: string = 'hr'\n) {\n  if (!slug) return undefined;\n\n  switch (type) {\n    case 'post':\n      return `/${language}/posts/${slug}`;\n    case 'about':\n      return `/${language}/about`;\n    case 'contact':\n      return `/${language}/contact`;\n    default:\n      return undefined;\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;AAEA,MAAM,eAAe,CAAA,GAAA,gKAAA,CAAA,UAAqB,AAAD,EAAE;IACzC,WAAW,oHAAA,CAAA,YAAS,IAAI;IACxB,SAAS,oHAAA,CAAA,UAAO,IAAI;AACtB;AAEO,MAAM,cAAc,CAAC;IAC1B,sDAAsD;IACtD,IAAI,CAAC,QAAQ,OAAO,MAAM;QACxB,OAAO;IACT;IAEA,OAAO,cAAc,MAAM,QAAQ,KAAK,UAAU,IAAI;AACxD;AAEO,SAAS,sBAAsB,KAAU,EAAE,QAAQ,IAAI,EAAE,SAAS,GAAG;IAC1E,IAAI,CAAC,OAAO;IACZ,MAAM,MAAM,YAAY,QAAQ,MAAM,MAAM,OAAO,KAAK,IAAI,QAAQ;IACpE,IAAI,CAAC,KAAK;IACV,OAAO;QAAE;QAAK,KAAK,OAAO;QAAe;QAAO;IAAO;AACzD;AAEO,SAAS,YACd,IAAY,EACZ,IAAa,EACb,WAAmB,IAAI;IAEvB,IAAI,CAAC,MAAM,OAAO;IAElB,OAAQ;QACN,KAAK;YACH,OAAO,CAAC,CAAC,EAAE,SAAS,OAAO,EAAE,MAAM;QACrC,KAAK;YACH,OAAO,CAAC,CAAC,EAAE,SAAS,MAAM,CAAC;QAC7B,KAAK;YACH,OAAO,CAAC,CAAC,EAAE,SAAS,QAAQ,CAAC;QAC/B;YACE,OAAO;IACX;AACF","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/app/%28blog%29/avatar.tsx"],"sourcesContent":["import { Image } from \"next-sanity/image\";\n\nimport type { Author } from \"@/sanity.types\";\nimport { urlForImage } from \"@/sanity/lib/utils\";\n\ninterface Props {\n  name: string;\n  picture: Exclude<Author[\"picture\"], undefined> | null;\n}\n\nexport default function Avatar({ name, picture }: Props) {\n  return (\n    <div className=\"flex items-center text-xl\">\n      {picture?.asset?._ref ? (\n        <div className=\"mr-4 h-12 w-12\">\n          <Image\n            alt={picture?.alt || \"\"}\n            className=\"h-full rounded-full object-cover\"\n            height={48}\n            width={48}\n            src={\n              urlForImage(picture)\n                ?.height(96)\n                .width(96)\n                .fit(\"crop\")\n                .url() as string\n            }\n          />\n        </div>\n      ) : (\n        <div className=\"mr-1\">By </div>\n      )}\n      <div className=\"text-pretty text-xl font-bold\">{name}</div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAGA;;;;AAOe,SAAS,OAAO,EAAE,IAAI,EAAE,OAAO,EAAS;IACrD,qBACE,8OAAC;QAAI,WAAU;;YACZ,SAAS,OAAO,qBACf,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,+IAAA,CAAA,QAAK;oBACJ,KAAK,SAAS,OAAO;oBACrB,WAAU;oBACV,QAAQ;oBACR,OAAO;oBACP,KACE,CAAA,GAAA,sHAAA,CAAA,cAAW,AAAD,EAAE,UACR,OAAO,IACR,MAAM,IACN,IAAI,QACJ;;;;;;;;;;qCAKT,8OAAC;gBAAI,WAAU;0BAAO;;;;;;0BAExB,8OAAC;gBAAI,WAAU;0BAAiC;;;;;;;;;;;;AAGtD","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/app/%28blog%29/cover-image.tsx"],"sourcesContent":["import { Image } from \"next-sanity/image\";\n\nimport { urlForImage } from \"@/sanity/lib/utils\";\n\ninterface CoverImageProps {\n  image: any;\n  priority?: boolean;\n}\n\nexport default function CoverImage(props: CoverImageProps) {\n  const { image: source, priority } = props;\n  const image = source?.asset?._ref ? (\n    <Image\n      className=\"h-auto w-full\"\n      width={2000}\n      height={1000}\n      alt={source?.alt || \"\"}\n      src={urlForImage(source)?.height(1000).width(2000).url() as string}\n      sizes=\"100vw\"\n      priority={priority}\n    />\n  ) : (\n    <div className=\"bg-slate-50\" style={{ paddingTop: \"50%\" }} />\n  );\n\n  return (\n    <div className=\"shadow-md transition-shadow duration-200 group-hover:shadow-lg sm:mx-0\">\n      {image}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAOe,SAAS,WAAW,KAAsB;IACvD,MAAM,EAAE,OAAO,MAAM,EAAE,QAAQ,EAAE,GAAG;IACpC,MAAM,QAAQ,QAAQ,OAAO,qBAC3B,8OAAC,+IAAA,CAAA,QAAK;QACJ,WAAU;QACV,OAAO;QACP,QAAQ;QACR,KAAK,QAAQ,OAAO;QACpB,KAAK,CAAA,GAAA,sHAAA,CAAA,cAAW,AAAD,EAAE,SAAS,OAAO,MAAM,MAAM,MAAM;QACnD,OAAM;QACN,UAAU;;;;;6BAGZ,8OAAC;QAAI,WAAU;QAAc,OAAO;YAAE,YAAY;QAAM;;;;;;IAG1D,qBACE,8OAAC;QAAI,WAAU;kBACZ;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/app/%28blog%29/date.tsx"],"sourcesContent":["import { format } from \"date-fns\";\n\nexport default function DateComponent({ dateString }: { dateString: string }) {\n  return (\n    <time dateTime={dateString}>\n      {format(new Date(dateString), \"LLLL\td, yyyy\")}\n    </time>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,cAAc,EAAE,UAAU,EAA0B;IAC1E,qBACE,8OAAC;QAAK,UAAU;kBACb,CAAA,GAAA,qJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,aAAa;;;;;;AAGpC","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/sanity/lib/client.ts"],"sourcesContent":["import { createClient } from \"next-sanity\";\n\nimport { apiVersion, dataset, projectId, studioUrl } from \"@/sanity/lib/api\";\n\nexport const client = createClient({\n  projectId,\n  dataset,\n  apiVersion,\n  useCdn: true,\n  perspective: \"published\",\n  stega: {\n    studioUrl,\n    logger: console,\n    filter: (props) => {\n      if (props.sourcePath.at(-1) === \"title\") {\n        return true;\n      }\n\n      return props.filterDefault(props);\n    },\n  },\n});\n"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEO,MAAM,SAAS,CAAA,GAAA,8KAAA,CAAA,eAAY,AAAD,EAAE;IACjC,WAAA,oHAAA,CAAA,YAAS;IACT,SAAA,oHAAA,CAAA,UAAO;IACP,YAAA,oHAAA,CAAA,aAAU;IACV,QAAQ;IACR,aAAa;IACb,OAAO;QACL,WAAA,oHAAA,CAAA,YAAS;QACT,QAAQ;QACR,QAAQ,CAAC;YACP,IAAI,MAAM,UAAU,CAAC,EAAE,CAAC,CAAC,OAAO,SAAS;gBACvC,OAAO;YACT;YAEA,OAAO,MAAM,aAAa,CAAC;QAC7B;IACF;AACF","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/sanity/lib/token.ts"],"sourcesContent":["import \"server-only\";\n\nexport const token = process.env.SANITY_API_READ_TOKEN;\n\nif (!token) {\n  throw new Error(\"Missing SANITY_API_READ_TOKEN\");\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,QAAQ,QAAQ,GAAG,CAAC,qBAAqB;AAEtD,IAAI,CAAC,OAAO;IACV,MAAM,IAAI,MAAM;AAClB","debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/sanity/lib/fetch.ts"],"sourcesContent":["import type { ClientPerspective, QueryParams } from \"next-sanity\";\nimport { draftMode } from \"next/headers\";\n\nimport { client } from \"@/sanity/lib/client\";\nimport { token } from \"@/sanity/lib/token\";\n\n/**\n * Used to fetch data in Server Components, it has built in support for handling Draft Mode and perspectives.\n * When using the \"published\" perspective then time-based revalidation is used, set to match the time-to-live on Sanity's API CDN (60 seconds)\n * and will also fetch from the CDN.\n * When using the \"previewDrafts\" perspective then the data is fetched from the live API and isn't cached, it will also fetch draft content that isn't published yet.\n */\nexport async function sanityFetch<const QueryString extends string>({\n  query,\n  params = {},\n  perspective: _perspective,\n  /**\n   * Stega embedded Content Source Maps are used by Visual Editing by both the Sanity Presentation Tool and Vercel Visual Editing.\n   * The Sanity Presentation Tool will enable Draft Mode when loading up the live preview, and we use it as a signal for when to embed source maps.\n   * When outside of the Sanity Studio we also support the Vercel Toolbar Visual Editing feature, which is only enabled in production when it's a Vercel Preview Deployment.\n   */\n  stega: _stega,\n}: {\n  query: QueryString;\n  params?: QueryParams | Promise<QueryParams>;\n  perspective?: Omit<ClientPerspective, \"raw\">;\n  stega?: boolean;\n}) {\n  const perspective =\n    _perspective || (await draftMode()).isEnabled\n      ? \"previewDrafts\"\n      : \"published\";\n  const stega =\n    _stega ||\n    perspective === \"previewDrafts\" ||\n    process.env.VERCEL_ENV === \"preview\";\n  if (perspective === \"previewDrafts\") {\n    return client.fetch(query, await params, {\n      stega,\n      perspective: \"previewDrafts\",\n      // The token is required to fetch draft content\n      token,\n      // The `previewDrafts` perspective isn't available on the API CDN\n      useCdn: false,\n      // And we can't cache the responses as it would slow down the live preview experience\n      next: { revalidate: 0 },\n    });\n  }\n  return client.fetch(query, await params, {\n    stega,\n    perspective: \"published\",\n    // The `published` perspective is available on the API CDN\n    useCdn: true,\n    // Only enable Stega in production if it's a Vercel Preview Deployment, as the Vercel Toolbar supports Visual Editing\n    // When using the `published` perspective we use time-based revalidation to match the time-to-live on Sanity's API CDN (60 seconds)\n    next: { revalidate: 60 },\n  });\n}\n"],"names":[],"mappings":";;;AACA;AAEA;AACA;;;;AAQO,eAAe,YAA8C,EAClE,KAAK,EACL,SAAS,CAAC,CAAC,EACX,aAAa,YAAY,EACzB;;;;GAIC,GACD,OAAO,MAAM,EAMd;IACC,MAAM,cACJ,gBAAgB,CAAC,MAAM,CAAA,GAAA,+HAAA,CAAA,YAAS,AAAD,GAAG,EAAE,SAAS,GACzC,kBACA;IACN,MAAM,QACJ,UACA,gBAAgB,mBAChB,QAAQ,GAAG,CAAC,UAAU,KAAK;IAC7B,IAAI,gBAAgB,iBAAiB;QACnC,OAAO,uHAAA,CAAA,SAAM,CAAC,KAAK,CAAC,OAAO,MAAM,QAAQ;YACvC;YACA,aAAa;YACb,+CAA+C;YAC/C,OAAA,sHAAA,CAAA,QAAK;YACL,iEAAiE;YACjE,QAAQ;YACR,qFAAqF;YACrF,MAAM;gBAAE,YAAY;YAAE;QACxB;IACF;IACA,OAAO,uHAAA,CAAA,SAAM,CAAC,KAAK,CAAC,OAAO,MAAM,QAAQ;QACvC;QACA,aAAa;QACb,0DAA0D;QAC1D,QAAQ;QACR,qHAAqH;QACrH,mIAAmI;QACnI,MAAM;YAAE,YAAY;QAAG;IACzB;AACF","debugId":null}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/sanity/lib/queries.ts"],"sourcesContent":["import { defineQuery } from 'next-sanity';\n\nexport const settingsQuery = defineQuery(`*[_type == \"settings\"][0]`);\n\nconst postFields = /* groq */ `\n  _id,\n  \"status\": select(_originalId in path(\"drafts.**\") => \"draft\", \"published\"),\n  \"title\": coalesce(title, \"Untitled\"),\n  \"slug\": slug.current,\n  language,\n  excerpt,\n  coverImage,\n  \"date\": coalesce(date, _updatedAt),\n  \"author\": author->{\"name\": coalesce(name, \"Anonymous\"), picture},\n  \"translations\": translations[]->{\n    \"title\": coalesce(title, \"Untitled\"),\n    \"slug\": slug.current,\n    language\n  }\n`;\n\nexport const heroQuery = defineQuery(`\n  *[_type == \"post\" && defined(slug.current)] | order(date desc, _updatedAt desc) [0] {\n    content,\n    ${postFields}\n  }\n`);\n\nexport const moreStoriesQuery = defineQuery(`\n  *[_type == \"post\" && _id != $skip && defined(slug.current)] | order(date desc, _updatedAt desc) [0...$limit] {\n    ${postFields}\n  }\n`);\n\nexport const postQuery = defineQuery(`\n  *[_type == \"post\" && slug.current == $slug && language == $lang] [0] {\n    content,\n    ${postFields}\n  }\n`);\n\nexport const postSlugs = defineQuery(`\n  *[_type == \"post\" && defined(slug.current) && defined(language)] {\n    \"slug\": slug.current,\n    \"lang\": language\n  }\n`);\n"],"names":[],"mappings":";;;;;;;AAAA;;AAEO,MAAM,gBAAgB,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE,CAAC,yBAAyB,CAAC;AAEpE,MAAM,aAAa,QAAQ,GAAG,CAAC;;;;;;;;;;;;;;;AAe/B,CAAC;AAEM,MAAM,YAAY,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;;IAGlC,EAAE,WAAW;;AAEjB,CAAC;AAEM,MAAM,mBAAmB,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;IAEzC,EAAE,WAAW;;AAEjB,CAAC;AAEM,MAAM,YAAY,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;;IAGlC,EAAE,WAAW;;AAEjB,CAAC;AAEM,MAAM,YAAY,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;;;;AAKtC,CAAC","debugId":null}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/app/%28blog%29/more-stories.tsx"],"sourcesContent":["import Link from 'next/link';\n\nimport Avatar from './avatar';\nimport CoverImage from './cover-image';\nimport DateComponent from './date';\n\nimport { sanityFetch } from '@/sanity/lib/fetch';\nimport { moreStoriesQuery } from '@/sanity/lib/queries';\n\nexport default async function MoreStories(params: {\n  skip: string;\n  limit: number;\n}) {\n  const data = await sanityFetch({ query: moreStoriesQuery, params });\n\n  console.log('more storeie', data);\n\n  return (\n    <div className='mb-32 grid grid-cols-1 gap-y-20 md:grid-cols-2 md:gap-x-16 md:gap-y-32 lg:gap-x-32'>\n      {data?.map((post: any) => {\n        const { _id, title, slug, coverImage, excerpt, author } = post;\n        return (\n          <article key={_id}>\n            <Link href={`/posts/${slug}`} className='group mb-5 block'>\n              <CoverImage image={coverImage} priority={false} />\n            </Link>\n            <h3 className='text-balance mb-3 text-3xl leading-snug'>\n              <Link href={`/posts/${slug}`} className='hover:underline'>\n                {title}\n              </Link>\n            </h3>\n            <div className='mb-4 text-lg'>\n              <DateComponent dateString={post.date} />\n            </div>\n            {excerpt && (\n              <p className='text-pretty mb-4 text-lg leading-relaxed'>\n                {excerpt}\n              </p>\n            )}\n            {author && <Avatar name={author.name} picture={author.picture} />}\n          </article>\n        );\n      })}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;AAEe,eAAe,YAAY,MAGzC;IACC,MAAM,OAAO,MAAM,CAAA,GAAA,sHAAA,CAAA,cAAW,AAAD,EAAE;QAAE,OAAO,wHAAA,CAAA,mBAAgB;QAAE;IAAO;IAEjE,QAAQ,GAAG,CAAC,gBAAgB;IAE5B,qBACE,8OAAC;QAAI,WAAU;kBACZ,MAAM,IAAI,CAAC;YACV,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;YAC1D,qBACE,8OAAC;;kCACC,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAM,CAAC,OAAO,EAAE,MAAM;wBAAE,WAAU;kCACtC,cAAA,8OAAC,kIAAA,CAAA,UAAU;4BAAC,OAAO;4BAAY,UAAU;;;;;;;;;;;kCAE3C,8OAAC;wBAAG,WAAU;kCACZ,cAAA,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAM,CAAC,OAAO,EAAE,MAAM;4BAAE,WAAU;sCACrC;;;;;;;;;;;kCAGL,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,wHAAA,CAAA,UAAa;4BAAC,YAAY,KAAK,IAAI;;;;;;;;;;;oBAErC,yBACC,8OAAC;wBAAE,WAAU;kCACV;;;;;;oBAGJ,wBAAU,8OAAC,0HAAA,CAAA,UAAM;wBAAC,MAAM,OAAO,IAAI;wBAAE,SAAS,OAAO,OAAO;;;;;;;eAjBjD;;;;;QAoBlB;;;;;;AAGN","debugId":null}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/app/%28blog%29/onboarding.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(blog)/onboarding.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(blog)/onboarding.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA","debugId":null}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/app/%28blog%29/onboarding.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(blog)/onboarding.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(blog)/onboarding.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA","debugId":null}},
    {"offset": {"line": 509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/app/%28blog%29/portable-text.tsx"],"sourcesContent":["/**\n * This component uses Portable Text to render a post body.\n *\n * You can learn more about Portable Text on:\n * https://www.sanity.io/docs/block-content\n * https://github.com/portabletext/react-portabletext\n * https://portabletext.org/\n *\n */\n\nimport {\n  PortableText,\n  type PortableTextComponents,\n  type PortableTextBlock,\n} from \"next-sanity\";\n\nexport default function CustomPortableText({\n  className,\n  value,\n}: {\n  className?: string;\n  value: PortableTextBlock[];\n}) {\n  const components: PortableTextComponents = {\n    block: {\n      h5: ({ children }) => (\n        <h5 className=\"mb-2 text-sm font-semibold\">{children}</h5>\n      ),\n      h6: ({ children }) => (\n        <h6 className=\"mb-1 text-xs font-semibold\">{children}</h6>\n      ),\n    },\n    marks: {\n      link: ({ children, value }) => {\n        return (\n          <a href={value?.href} rel=\"noreferrer noopener\">\n            {children}\n          </a>\n        );\n      },\n    },\n  };\n\n  return (\n    <div className={[\"prose\", className].filter(Boolean).join(\" \")}>\n      <PortableText components={components} value={value} />\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;CAQC;;;;AAED;;;AAMe,SAAS,mBAAmB,EACzC,SAAS,EACT,KAAK,EAIN;IACC,MAAM,aAAqC;QACzC,OAAO;YACL,IAAI,CAAC,EAAE,QAAQ,EAAE,iBACf,8OAAC;oBAAG,WAAU;8BAA8B;;;;;;YAE9C,IAAI,CAAC,EAAE,QAAQ,EAAE,iBACf,8OAAC;oBAAG,WAAU;8BAA8B;;;;;;QAEhD;QACA,OAAO;YACL,MAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE;gBACxB,qBACE,8OAAC;oBAAE,MAAM,OAAO;oBAAM,KAAI;8BACvB;;;;;;YAGP;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,WAAW;YAAC;YAAS;SAAU,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC;kBACxD,cAAA,8OAAC,wKAAA,CAAA,eAAY;YAAC,YAAY;YAAY,OAAO;;;;;;;;;;;AAGnD","debugId":null}},
    {"offset": {"line": 593, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/sanity/lib/demo.ts"],"sourcesContent":["/**\n * Demo data used as placeholders and initial values for the blog\n */\n\nexport const title = \"Blog.\";\n\nexport const description = [\n  {\n    _key: \"9f1a629887fd\",\n    _type: \"block\",\n    children: [\n      {\n        _key: \"4a58edd077880\",\n        _type: \"span\",\n        marks: [],\n        text: \"A statically generated blog example using \",\n      },\n      {\n        _key: \"4a58edd077881\",\n        _type: \"span\",\n        marks: [\"ec5b66c9b1e0\"],\n        text: \"Next.js\",\n      },\n      {\n        _key: \"4a58edd077882\",\n        _type: \"span\",\n        marks: [],\n        text: \" and \",\n      },\n      {\n        _key: \"4a58edd077883\",\n        _type: \"span\",\n        marks: [\"1f8991913ea8\"],\n        text: \"Sanity\",\n      },\n      {\n        _key: \"4a58edd077884\",\n        _type: \"span\",\n        marks: [],\n        text: \".\",\n      },\n    ],\n    markDefs: [\n      {\n        _key: \"ec5b66c9b1e0\",\n        _type: \"link\",\n        href: \"https://nextjs.org/\",\n      },\n      {\n        _key: \"1f8991913ea8\",\n        _type: \"link\",\n        href: \"https://sanity.io/\",\n      },\n    ],\n    style: \"normal\",\n  },\n];\n\nexport const ogImageTitle = \"A Next.js Blog with a Native Authoring Experience\";\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;AAEM,MAAM,QAAQ;AAEd,MAAM,cAAc;IACzB;QACE,MAAM;QACN,OAAO;QACP,UAAU;YACR;gBACE,MAAM;gBACN,OAAO;gBACP,OAAO,EAAE;gBACT,MAAM;YACR;YACA;gBACE,MAAM;gBACN,OAAO;gBACP,OAAO;oBAAC;iBAAe;gBACvB,MAAM;YACR;YACA;gBACE,MAAM;gBACN,OAAO;gBACP,OAAO,EAAE;gBACT,MAAM;YACR;YACA;gBACE,MAAM;gBACN,OAAO;gBACP,OAAO;oBAAC;iBAAe;gBACvB,MAAM;YACR;YACA;gBACE,MAAM;gBACN,OAAO;gBACP,OAAO,EAAE;gBACT,MAAM;YACR;SACD;QACD,UAAU;YACR;gBACE,MAAM;gBACN,OAAO;gBACP,MAAM;YACR;YACA;gBACE,MAAM;gBACN,OAAO;gBACP,MAAM;YACR;SACD;QACD,OAAO;IACT;CACD;AAEM,MAAM,eAAe","debugId":null}},
    {"offset": {"line": 663, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/app/%28blog%29/page.tsx"],"sourcesContent":["import Link from 'next/link';\nimport { Suspense } from 'react';\n\nimport Avatar from './avatar';\nimport CoverImage from './cover-image';\nimport DateComponent from './date';\nimport MoreStories from './more-stories';\nimport Onboarding from './onboarding';\nimport PortableText from './portable-text';\n\nimport * as demo from '@/sanity/lib/demo';\nimport { sanityFetch } from '@/sanity/lib/fetch';\nimport { heroQuery, settingsQuery } from '@/sanity/lib/queries';\n\nfunction Intro(props: { title: string | null | undefined; description: any }) {\n  const title = props.title || demo.title;\n  const description = props.description?.length\n    ? props.description\n    : demo.description;\n  return (\n    <section className='mt-16 mb-16 flex flex-col items-center lg:mb-12 lg:flex-row lg:justify-between'>\n      <h1 className='text-balance text-6xl font-bold leading-tight tracking-tighter lg:pr-8 lg:text-8xl'>\n        {title || demo.title}\n      </h1>\n      <h2 className='text-pretty mt-5 text-center text-lg lg:pl-8 lg:text-left'>\n        <PortableText\n          className='prose-lg'\n          value={description?.length ? description : demo.description}\n        />\n      </h2>\n    </section>\n  );\n}\n\nfunction HeroPost({\n  title,\n  slug,\n  excerpt,\n  coverImage,\n  date,\n  author,\n  language,\n}: Pick<\n  Exclude<any, null>,\n  'title' | 'coverImage' | 'date' | 'excerpt' | 'author' | 'slug'\n> & { language: string }) {\n  return (\n    <article>\n      <Link\n        className='group mb-8 block md:mb-16'\n        href={`${language}/posts/${slug}`}\n      >\n        <CoverImage image={coverImage} priority />\n      </Link>\n      <div className='mb-20 md:mb-28 md:grid md:grid-cols-2 md:gap-x-16 lg:gap-x-8'>\n        <div>\n          <h3 className='text-pretty mb-4 text-4xl leading-tight lg:text-6xl'>\n            <Link\n              href={`${language}/posts/${slug}`}\n              className='hover:underline'\n            >\n              {title}\n            </Link>\n          </h3>\n          <div className='mb-4 text-lg md:mb-0'>\n            <DateComponent dateString={date} />\n          </div>\n        </div>\n        <div>\n          {excerpt && (\n            <p className='text-pretty mb-4 text-lg leading-relaxed'>\n              {excerpt}\n            </p>\n          )}\n          {author && <Avatar name={author.name} picture={author.picture} />}\n        </div>\n      </div>\n    </article>\n  );\n}\n\nexport default async function Page() {\n  const [settings, heroPost] = await Promise.all([\n    sanityFetch({ query: settingsQuery }),\n    sanityFetch({ query: heroQuery }),\n  ]);\n\n  console.log('hero post', heroPost, settings);\n\n  return (\n    <div className='container mx-auto px-5'>\n      <Intro title={settings?.title} description={settings?.description} />\n      {heroPost ? (\n        <HeroPost\n          title={heroPost.title}\n          slug={heroPost.slug}\n          coverImage={heroPost.coverImage}\n          excerpt={heroPost.excerpt}\n          date={heroPost.date}\n          author={heroPost.author}\n          language={heroPost.language}\n        />\n      ) : (\n        <Onboarding />\n      )}\n      {heroPost?._id && (\n        <aside>\n          <h2 className='mb-8 text-6xl font-bold leading-tight tracking-tighter md:text-7xl'>\n            More Stories\n          </h2>\n          <Suspense>\n            <MoreStories skip={heroPost._id} limit={100} />\n          </Suspense>\n        </aside>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;AAEA,SAAS,MAAM,KAA6D;IAC1E,MAAM,QAAQ,MAAM,KAAK,IAAI,qHAAA,CAAA,QAAU;IACvC,MAAM,cAAc,MAAM,WAAW,EAAE,SACnC,MAAM,WAAW,GACjB,qHAAA,CAAA,cAAgB;IACpB,qBACE,8OAAC;QAAQ,WAAU;;0BACjB,8OAAC;gBAAG,WAAU;0BACX,SAAS,qHAAA,CAAA,QAAU;;;;;;0BAEtB,8OAAC;gBAAG,WAAU;0BACZ,cAAA,8OAAC,oIAAA,CAAA,UAAY;oBACX,WAAU;oBACV,OAAO,aAAa,SAAS,cAAc,qHAAA,CAAA,cAAgB;;;;;;;;;;;;;;;;;AAKrE;AAEA,SAAS,SAAS,EAChB,KAAK,EACL,IAAI,EACJ,OAAO,EACP,UAAU,EACV,IAAI,EACJ,MAAM,EACN,QAAQ,EAIc;IACtB,qBACE,8OAAC;;0BACC,8OAAC,4JAAA,CAAA,UAAI;gBACH,WAAU;gBACV,MAAM,GAAG,SAAS,OAAO,EAAE,MAAM;0BAEjC,cAAA,8OAAC,kIAAA,CAAA,UAAU;oBAAC,OAAO;oBAAY,QAAQ;;;;;;;;;;;0BAEzC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CACZ,cAAA,8OAAC,4JAAA,CAAA,UAAI;oCACH,MAAM,GAAG,SAAS,OAAO,EAAE,MAAM;oCACjC,WAAU;8CAET;;;;;;;;;;;0CAGL,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,wHAAA,CAAA,UAAa;oCAAC,YAAY;;;;;;;;;;;;;;;;;kCAG/B,8OAAC;;4BACE,yBACC,8OAAC;gCAAE,WAAU;0CACV;;;;;;4BAGJ,wBAAU,8OAAC,0HAAA,CAAA,UAAM;gCAAC,MAAM,OAAO,IAAI;gCAAE,SAAS,OAAO,OAAO;;;;;;;;;;;;;;;;;;;;;;;;AAKvE;AAEe,eAAe;IAC5B,MAAM,CAAC,UAAU,SAAS,GAAG,MAAM,QAAQ,GAAG,CAAC;QAC7C,CAAA,GAAA,sHAAA,CAAA,cAAW,AAAD,EAAE;YAAE,OAAO,wHAAA,CAAA,gBAAa;QAAC;QACnC,CAAA,GAAA,sHAAA,CAAA,cAAW,AAAD,EAAE;YAAE,OAAO,wHAAA,CAAA,YAAS;QAAC;KAChC;IAED,QAAQ,GAAG,CAAC,aAAa,UAAU;IAEnC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAM,OAAO,UAAU;gBAAO,aAAa,UAAU;;;;;;YACrD,yBACC,8OAAC;gBACC,OAAO,SAAS,KAAK;gBACrB,MAAM,SAAS,IAAI;gBACnB,YAAY,SAAS,UAAU;gBAC/B,SAAS,SAAS,OAAO;gBACzB,MAAM,SAAS,IAAI;gBACnB,QAAQ,SAAS,MAAM;gBACvB,UAAU,SAAS,QAAQ;;;;;qCAG7B,8OAAC,8HAAA,CAAA,UAAU;;;;;YAEZ,UAAU,qBACT,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAAqE;;;;;;kCAGnF,8OAAC,qMAAA,CAAA,WAAQ;kCACP,cAAA,8OAAC,mIAAA,CAAA,UAAW;4BAAC,MAAM,SAAS,GAAG;4BAAE,OAAO;;;;;;;;;;;;;;;;;;;;;;;AAMpD","debugId":null}}]
}