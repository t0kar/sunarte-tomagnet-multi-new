{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"PostMessageRefreshMutations.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/editor/PostMessageRefreshMutations.tsx"],"sourcesContent":["import {memo, startTransition, useEffect, useMemo, useState} from 'react'\nimport {getPublishedId, type SanityDocument, useEditState} from 'sanity'\n\nimport {type ConnectionStatus, type VisualEditingConnection} from '../types'\n\nexport interface PostMessageRefreshMutationsProps {\n  id: string\n  type: string\n  comlink: VisualEditingConnection\n  previewKitConnection: ConnectionStatus\n  loadersConnection: ConnectionStatus\n}\n\nfunction PostMessageRefreshMutations(props: PostMessageRefreshMutationsProps): React.ReactNode {\n  const {comlink, type, previewKitConnection, loadersConnection} = props\n  const id = useMemo(() => getPublishedId(props.id), [props.id])\n  const {draft, published, ready} = useEditState(id, type, 'low')\n  const livePreviewEnabled =\n    previewKitConnection === 'connected' || loadersConnection === 'connected'\n\n  if ((ready && draft) || published) {\n    return (\n      <PostMessageRefreshMutationsInner\n        key={id}\n        comlink={comlink}\n        draft={draft}\n        livePreviewEnabled={livePreviewEnabled}\n        published={published}\n      />\n    )\n  }\n\n  return null\n}\n\ninterface PostMessageRefreshMutationsInnerProps\n  extends Pick<PostMessageRefreshMutationsProps, 'comlink'> {\n  livePreviewEnabled: boolean\n  draft: SanityDocument | null\n  published: SanityDocument | null\n}\nfunction PostMessageRefreshMutationsInner(props: PostMessageRefreshMutationsInnerProps) {\n  const {comlink, draft, published, livePreviewEnabled} = props\n  const [prevDraft, setPrevDraft] = useState(draft)\n  const [prevPublished, setPrevPublished] = useState(published)\n\n  useEffect(() => {\n    if (prevDraft?._rev !== draft?._rev) {\n      startTransition(() => setPrevDraft(draft))\n      if (draft) {\n        comlink?.post('presentation/refresh', {\n          source: 'mutation',\n          livePreviewEnabled,\n          document: parseDocument(draft),\n        })\n      }\n    }\n    if (prevPublished?._rev !== published?._rev) {\n      startTransition(() => setPrevPublished(published))\n      if (published) {\n        comlink?.post('presentation/refresh', {\n          source: 'mutation',\n          livePreviewEnabled,\n          document: parseDocument(published),\n        })\n      }\n    }\n  }, [comlink, draft, livePreviewEnabled, prevDraft?._rev, prevPublished?._rev, published])\n\n  return null\n}\n\nfunction parseDocument(document: SanityDocument & {slug?: {current?: string | null}}): {\n  _id: string\n  _type: string\n  _rev: string\n  slug?: {current?: string | null}\n} {\n  const {_id, _type, _rev, slug} = document\n  return {_id, _type, _rev, slug}\n}\n\nexport default memo(PostMessageRefreshMutations)\n"],"names":["PostMessageRefreshMutations","props","$","_c","comlink","type","previewKitConnection","loadersConnection","t0","t1","id","getPublishedId","draft","published","ready","useEditState","livePreviewEnabled","t2","PostMessageRefreshMutationsInner","prevDraft","setPrevDraft","useState","prevPublished","setPrevPublished","_rev","startTransition","post","source","document","parseDocument","t3","useEffect","_id","_type","slug","memo"],"mappings":"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","ignoreList":[0],"debugId":null}}]
}