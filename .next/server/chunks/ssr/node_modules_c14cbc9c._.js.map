{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/comlink/node_modules/uuid/dist/esm/native.js"],"sourcesContent":["import { randomUUID } from 'crypto';\nexport default { randomUUID };\n"],"names":[],"mappings":";;;AAAA;;uCACe;IAAE,YAAA,qGAAA,CAAA,aAAU;AAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/comlink/node_modules/uuid/dist/esm/rng.js"],"sourcesContent":["import { randomFillSync } from 'crypto';\nconst rnds8Pool = new Uint8Array(256);\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n    if (poolPtr > rnds8Pool.length - 16) {\n        randomFillSync(rnds8Pool);\n        poolPtr = 0;\n    }\n    return rnds8Pool.slice(poolPtr, (poolPtr += 16));\n}\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,YAAY,IAAI,WAAW;AACjC,IAAI,UAAU,UAAU,MAAM;AACf,SAAS;IACpB,IAAI,UAAU,UAAU,MAAM,GAAG,IAAI;QACjC,CAAA,GAAA,qGAAA,CAAA,iBAAc,AAAD,EAAE;QACf,UAAU;IACd;IACA,OAAO,UAAU,KAAK,CAAC,SAAU,WAAW;AAChD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/comlink/node_modules/uuid/dist/esm/regex.js"],"sourcesContent":["export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;\n"],"names":[],"mappings":";;;uCAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/comlink/node_modules/uuid/dist/esm/validate.js"],"sourcesContent":["import REGEX from './regex.js';\nfunction validate(uuid) {\n    return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;\n"],"names":[],"mappings":";;;AAAA;;AACA,SAAS,SAAS,IAAI;IAClB,OAAO,OAAO,SAAS,YAAY,mLAAA,CAAA,UAAK,CAAC,IAAI,CAAC;AAClD;uCACe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/comlink/node_modules/uuid/dist/esm/stringify.js"],"sourcesContent":["import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,YAAY,EAAE;AACpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,EAAE,EAAG;IAC1B,UAAU,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE,QAAQ,CAAC,IAAI,KAAK,CAAC;AAClD;AACO,SAAS,gBAAgB,GAAG,EAAE,SAAS,CAAC;IAC3C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC9B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,EAAE,WAAW;AAChD;AACA,SAAS,UAAU,GAAG,EAAE,SAAS,CAAC;IAC9B,MAAM,OAAO,gBAAgB,KAAK;IAClC,IAAI,CAAC,CAAA,GAAA,sLAAA,CAAA,UAAQ,AAAD,EAAE,OAAO;QACjB,MAAM,UAAU;IACpB;IACA,OAAO;AACX;uCACe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/comlink/node_modules/uuid/dist/esm/v4.js"],"sourcesContent":["import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACA,SAAS,GAAG,OAAO,EAAE,GAAG,EAAE,MAAM;IAC5B,IAAI,oLAAA,CAAA,UAAM,CAAC,UAAU,IAAI,CAAC,OAAO,CAAC,SAAS;QACvC,OAAO,oLAAA,CAAA,UAAM,CAAC,UAAU;IAC5B;IACA,UAAU,WAAW,CAAC;IACtB,MAAM,OAAO,QAAQ,MAAM,IAAI,QAAQ,GAAG,QAAQ,CAAA,GAAA,iLAAA,CAAA,UAAG,AAAD;IACpD,IAAI,KAAK,MAAM,GAAG,IAAI;QAClB,MAAM,IAAI,MAAM;IACpB;IACA,IAAI,CAAC,EAAE,GAAG,AAAC,IAAI,CAAC,EAAE,GAAG,OAAQ;IAC7B,IAAI,CAAC,EAAE,GAAG,AAAC,IAAI,CAAC,EAAE,GAAG,OAAQ;IAC7B,IAAI,KAAK;QACL,SAAS,UAAU;QACnB,IAAI,SAAS,KAAK,SAAS,KAAK,IAAI,MAAM,EAAE;YACxC,MAAM,IAAI,WAAW,CAAC,gBAAgB,EAAE,OAAO,CAAC,EAAE,SAAS,GAAG,wBAAwB,CAAC;QAC3F;QACA,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,EAAG;YACzB,GAAG,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,EAAE;QAC7B;QACA,OAAO;IACX;IACA,OAAO,CAAA,GAAA,uLAAA,CAAA,kBAAe,AAAD,EAAE;AAC3B;uCACe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/comlink/src/common.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/comlink/src/constants.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/comlink/src/request.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/comlink/src/connection.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/comlink/src/controller.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/comlink/src/node.ts"],"sourcesContent":["import {bufferCount, concatMap, defer, filter, fromEvent, map, pipe, take} from 'rxjs'\nimport {fromEventObservable} from 'xstate'\nimport type {ListenInput, ProtocolMessage} from './types'\n\nexport const listenInputFromContext =\n  (\n    config: (\n      | {\n          include: string | string[]\n          exclude?: string | string[]\n        }\n      | {\n          include?: string | string[]\n          exclude: string | string[]\n        }\n    ) & {\n      matches?: boolean\n      count?: number\n      responseType?: string\n    },\n  ) =>\n  <\n    TContext extends {\n      domain: string\n      connectTo: string\n      name: string\n      target: MessageEventSource | undefined\n    },\n  >({\n    context,\n  }: {\n    context: TContext\n  }): ListenInput => {\n    const {count, include, exclude, responseType = 'message.received'} = config\n    return {\n      count,\n      domain: context.domain,\n      from: context.connectTo,\n      include: include ? (Array.isArray(include) ? include : [include]) : [],\n      exclude: exclude ? (Array.isArray(exclude) ? exclude : [exclude]) : [],\n      responseType,\n      target: context.target,\n      to: context.name,\n    }\n  }\n\nexport const listenFilter =\n  (input: ListenInput) =>\n  (event: MessageEvent<ProtocolMessage>): boolean => {\n    const {data} = event\n    return (\n      (input.include.length ? input.include.includes(data.type) : true) &&\n      (input.exclude.length ? !input.exclude.includes(data.type) : true) &&\n      data.domain === input.domain &&\n      data.from === input.from &&\n      data.to === input.to &&\n      (!input.target || event.source === input.target)\n    )\n  }\n\nexport const eventToMessage =\n  <TType>(type: TType) =>\n  (\n    event: MessageEvent<ProtocolMessage>,\n  ): {type: TType; message: MessageEvent<ProtocolMessage>} => ({\n    type,\n    message: event,\n  })\n\nexport const messageEvents$ = defer(() =>\n  fromEvent<MessageEvent<ProtocolMessage>>(window, 'message'),\n)\n\n/**\n * @public\n */\nexport const createListenLogic = (\n  compatMap?: (event: MessageEvent<ProtocolMessage>) => MessageEvent<ProtocolMessage>,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n) =>\n  fromEventObservable(({input}: {input: ListenInput}) => {\n    return messageEvents$.pipe(\n      compatMap ? map(compatMap) : pipe(),\n      filter(listenFilter(input)),\n      map(eventToMessage(input.responseType)),\n      input.count\n        ? pipe(\n            bufferCount(input.count),\n            concatMap((arr) => arr),\n            take(input.count),\n          )\n        : pipe(),\n    )\n  })\n","import type {MessageType} from './types'\n\n/** @internal */\nexport const DOMAIN = 'sanity/comlink'\n\n/** @internal */\nexport const RESPONSE_TIMEOUT_DEFAULT = 3_000\n\n/** @internal */\nexport const FETCH_TIMEOUT_DEFAULT = 10_000\n\n/** @internal */\nexport const HEARTBEAT_INTERVAL = 1000\n\n/** @internal */\nexport const HANDSHAKE_INTERVAL = 500\n\n/**\n * @public\n */\nexport const MSG_RESPONSE = 'comlink/response'\n\n/**\n * @public\n */\nexport const MSG_HEARTBEAT = 'comlink/heartbeat'\n\n/** @internal */\nexport const MSG_DISCONNECT = 'comlink/disconnect'\n\n/** @internal */\nexport const MSG_HANDSHAKE_SYN = 'comlink/handshake/syn'\n\n/** @internal */\nexport const MSG_HANDSHAKE_SYN_ACK = 'comlink/handshake/syn-ack'\n\n/** @internal */\nexport const MSG_HANDSHAKE_ACK = 'comlink/handshake/ack'\n\n/** @internal */\nexport const HANDSHAKE_MSG_TYPES = [\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HANDSHAKE_ACK,\n] satisfies MessageType[]\n\n/** @internal */\nexport const INTERNAL_MSG_TYPES = [\n  MSG_RESPONSE,\n  MSG_DISCONNECT,\n  MSG_HEARTBEAT,\n  ...HANDSHAKE_MSG_TYPES,\n] satisfies MessageType[]\n","import {EMPTY, filter, fromEvent, map, take, takeUntil, type Observable} from 'rxjs'\nimport {v4 as uuid} from 'uuid'\nimport {\n  assign,\n  fromEventObservable,\n  sendTo,\n  setup,\n  type ActorRefFrom,\n  type AnyActorRef,\n} from 'xstate'\nimport {MSG_RESPONSE, RESPONSE_TIMEOUT_DEFAULT} from './constants'\nimport type {Message, MessageData, MessageType, ProtocolMessage, ResponseMessage} from './types'\n\nconst throwOnEvent =\n  <T>(message?: string) =>\n  (source: Observable<T>) =>\n    source.pipe(\n      take(1),\n      map(() => {\n        throw new Error(message)\n      }),\n    )\n\n/**\n * @public\n */\nexport interface RequestMachineContext<TSends extends Message> {\n  channelId: string\n  data: MessageData | undefined\n  domain: string\n  expectResponse: boolean\n  from: string\n  id: string\n  parentRef: AnyActorRef\n  resolvable: PromiseWithResolvers<TSends['response']> | undefined\n  response: TSends['response'] | null\n  responseTimeout: number | undefined\n  responseTo: string | undefined\n  signal: AbortSignal | undefined\n  suppressWarnings: boolean | undefined\n  sources: Set<MessageEventSource>\n  targetOrigin: string\n  to: string\n  type: MessageType\n}\n\n/**\n * @public\n */\nexport type RequestActorRef<TSends extends Message> = ActorRefFrom<\n  ReturnType<typeof createRequestMachine<TSends>>\n>\n\n/**\n * @public\n */\nexport const createRequestMachine = <\n  TSends extends Message,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n>() => {\n  return setup({\n    types: {} as {\n      children: {\n        'listen for response': 'listen'\n      }\n      context: RequestMachineContext<TSends>\n      // @todo Should response types be specified?\n      events: {type: 'message'; data: ProtocolMessage<ResponseMessage>} | {type: 'abort'}\n      emitted:\n        | {type: 'request.failed'; requestId: string}\n        | {type: 'request.aborted'; requestId: string}\n        | {\n            type: 'request.success'\n            requestId: string\n            response: MessageData | null\n            responseTo: string | undefined\n          }\n      input: {\n        channelId: string\n        data?: TSends['data']\n        domain: string\n        expectResponse?: boolean\n        from: string\n        parentRef: AnyActorRef\n        resolvable?: PromiseWithResolvers<TSends['response']>\n        responseTimeout?: number\n        responseTo?: string\n        signal?: AbortSignal\n        sources: Set<MessageEventSource> | MessageEventSource\n        suppressWarnings?: boolean\n        targetOrigin: string\n        to: string\n        type: TSends['type']\n      }\n      output: {\n        requestId: string\n        response: TSends['response'] | null\n        responseTo: string | undefined\n      }\n    },\n    actors: {\n      listen: fromEventObservable(\n        ({\n          input,\n        }: {\n          input: {\n            requestId: string\n            sources: Set<MessageEventSource>\n            signal?: AbortSignal\n          }\n        }) => {\n          const abortSignal$ = input.signal\n            ? fromEvent(input.signal, 'abort').pipe(\n                throwOnEvent(`Request ${input.requestId} aborted`),\n              )\n            : EMPTY\n\n          const messageFilter = (event: MessageEvent<ProtocolMessage<ResponseMessage>>) =>\n            event.data?.type === MSG_RESPONSE &&\n            event.data?.responseTo === input.requestId &&\n            !!event.source &&\n            input.sources.has(event.source)\n\n          return fromEvent<MessageEvent<ProtocolMessage<ResponseMessage>>>(window, 'message').pipe(\n            filter(messageFilter),\n            take(input.sources.size),\n            takeUntil(abortSignal$),\n          )\n        },\n      ),\n    },\n    actions: {\n      'send message': ({context}, params: {message: ProtocolMessage}) => {\n        const {sources, targetOrigin} = context\n        const {message} = params\n\n        sources.forEach((source) => {\n          source.postMessage(message, {targetOrigin})\n        })\n      },\n      'on success': sendTo(\n        ({context}) => context.parentRef,\n        ({context, self}) => {\n          if (context.response) {\n            context.resolvable?.resolve(context.response)\n          }\n          return {\n            type: 'request.success',\n            requestId: self.id,\n            response: context.response,\n            responseTo: context.responseTo,\n          }\n        },\n      ),\n      'on fail': sendTo(\n        ({context}) => context.parentRef,\n        ({context, self}) => {\n          if (!context.suppressWarnings) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              `[@sanity/comlink] Received no response to message '${context.type}' on client '${context.from}' (ID: '${context.id}').`,\n            )\n          }\n          context.resolvable?.reject(new Error('No response received'))\n          return {type: 'request.failed', requestId: self.id}\n        },\n      ),\n      'on abort': sendTo(\n        ({context}) => context.parentRef,\n        ({context, self}) => {\n          context.resolvable?.reject(new Error('Request aborted'))\n          return {type: 'request.aborted', requestId: self.id}\n        },\n      ),\n    },\n    guards: {\n      expectsResponse: ({context}) => context.expectResponse,\n    },\n    delays: {\n      initialTimeout: 0,\n      responseTimeout: ({context}) => context.responseTimeout ?? RESPONSE_TIMEOUT_DEFAULT,\n    },\n  }).createMachine({\n    /** @xstate-layout N4IgpgJg5mDOIC5QAoC2BDAxgCwJYDswBKAOlwgBswBiAD1gBd0GwT0AzFgJ2QNwdzoKAFVyowAewCuDItTRY8hUuSoBtAAwBdRKAAOE2P1wT8ukLUQBGAEwBWEgBYAnK+eOAzB7sB2DzY8rABoQAE9rDQc3V0cNTw8fAA4NHwBfVJCFHAJiElgwfAgCKGpNHSQQAyMBU3NLBDsrDxI7DTaAjQA2OOcNDxDwhHsNJx9Ou0TOq2cJxP9HdMyMbOU8gqL8ErUrcv1DY1qK+sbm1vaPLp6+gcRnGydo9wDGycWQLKVc9AB3dGNN6jiWCwdAwMrmKoHMxHRCJRKOEiJHwuZKBZwXKzBMKIGyYkhtAkXOweTqOHw2RJvD45Ug-P4CAH0JgsNicMA8LhwAz4fKicTSWTyZafWm-f5QcEVSE1aGgepwhFIlF9aYYrGDC4+JzEppjGzOUkeGbpDIgfASCBwczU5QQ-YyuqIAC0nRuCBd+IJXu9KSpwppZEoYDt1RMsosiEcNjdVjiJEeGisiSTHkcVgWpptuXyhWKIahjqGzi1BqRJINnVcdkcbuTLS9VYC8ISfsUAbp4vzDphCHJIyjBvJNlxNmRNexQ3sJGH43GPj8jWJrZWuXYfyoEC7YcLsbrgRsjkcvkmdgNbopVhIPhVfnsh8ClMz-tWsCkmEwcHgUvt257u8v+6Hse4xnhOdZnImVidPqCRNB4JqpEAA */\n    context: ({input}) => {\n      return {\n        channelId: input.channelId,\n        data: input.data,\n        domain: input.domain,\n        expectResponse: input.expectResponse ?? false,\n        from: input.from,\n        id: `msg-${uuid()}`,\n        parentRef: input.parentRef,\n        resolvable: input.resolvable,\n        response: null,\n        responseTimeout: input.responseTimeout,\n        responseTo: input.responseTo,\n        signal: input.signal,\n        sources: input.sources instanceof Set ? input.sources : new Set([input.sources]),\n        suppressWarnings: input.suppressWarnings,\n        targetOrigin: input.targetOrigin,\n        to: input.to,\n        type: input.type,\n      }\n    },\n    initial: 'idle',\n    on: {\n      abort: '.aborted',\n    },\n    states: {\n      idle: {\n        after: {\n          initialTimeout: [\n            {\n              target: 'sending',\n            },\n          ],\n        },\n      },\n      sending: {\n        entry: {\n          type: 'send message',\n          params: ({context}) => {\n            const {channelId, data, domain, from, id, responseTo, to, type} = context\n            const message = {\n              channelId,\n              data,\n              domain,\n              from,\n              id,\n              to,\n              type,\n              responseTo,\n            }\n            return {message}\n          },\n        },\n        always: [\n          {\n            guard: 'expectsResponse',\n            target: 'awaiting',\n          },\n          'success',\n        ],\n      },\n      awaiting: {\n        invoke: {\n          id: 'listen for response',\n          src: 'listen',\n          input: ({context}) => ({\n            requestId: context.id,\n            sources: context.sources,\n            signal: context.signal,\n          }),\n          onError: 'aborted',\n        },\n        after: {\n          responseTimeout: 'failed',\n        },\n        on: {\n          message: {\n            actions: assign({\n              response: ({event}) => event.data.data,\n              responseTo: ({event}) => event.data.responseTo,\n            }),\n            target: 'success',\n          },\n        },\n      },\n      failed: {\n        type: 'final',\n        entry: 'on fail',\n      },\n      success: {\n        type: 'final',\n        entry: 'on success',\n      },\n      aborted: {\n        type: 'final',\n        entry: 'on abort',\n      },\n    },\n    output: ({context, self}) => {\n      const output = {\n        requestId: self.id,\n        response: context.response,\n        responseTo: context.responseTo,\n      }\n      return output\n    },\n  })\n}\n\n// export const delayedRequestMachine = requestMachine.provide({\n//   delays: {\n//     initialTimeout: 500,\n//   },\n// })\n","import {v4 as uuid} from 'uuid'\nimport {\n  assertEvent,\n  assign,\n  createActor,\n  emit,\n  enqueueActions,\n  fromCallback,\n  raise,\n  setup,\n  stopChild,\n  type ActorRefFrom,\n  type EventObject,\n} from 'xstate'\nimport {createListenLogic, listenInputFromContext} from './common'\nimport {\n  DOMAIN,\n  HANDSHAKE_INTERVAL,\n  MSG_DISCONNECT,\n  MSG_HANDSHAKE_ACK,\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HEARTBEAT,\n  MSG_RESPONSE,\n} from './constants'\nimport {createRequestMachine, type RequestActorRef} from './request'\nimport type {\n  BufferAddedEmitEvent,\n  BufferFlushedEmitEvent,\n  Message,\n  MessageEmitEvent,\n  ProtocolMessage,\n  RequestData,\n  Status,\n  StatusEmitEvent,\n  WithoutResponse,\n} from './types'\n\n/**\n * @public\n */\nexport type ConnectionActorLogic<TSends extends Message, TReceives extends Message> = ReturnType<\n  typeof createConnectionMachine<TSends, TReceives>\n>\n/**\n * @public\n */\nexport type ConnectionActor<TSends extends Message, TReceives extends Message> = ActorRefFrom<\n  ReturnType<typeof createConnectionMachine<TSends, TReceives>>\n>\n\n/**\n * @public\n */\nexport type Connection<TSends extends Message = Message, TReceives extends Message = Message> = {\n  actor: ConnectionActor<TSends, TReceives>\n  connect: () => void\n  disconnect: () => void\n  id: string\n  name: string\n  machine: ReturnType<typeof createConnectionMachine<TSends, TReceives>>\n  on: <TType extends TReceives['type'], TMessage extends Extract<TReceives, {type: TType}>>(\n    type: TType,\n    handler: (data: TMessage['data']) => Promise<TMessage['response']> | TMessage['response'],\n  ) => () => void\n  onStatus: (handler: (status: Status) => void, filter?: Status) => () => void\n  post: <TType extends TSends['type'], TMessage extends Extract<TSends, {type: TType}>>(\n    ...params: (TMessage['data'] extends undefined ? [TType] : never) | [TType, TMessage['data']]\n  ) => void\n  setTarget: (target: MessageEventSource) => void\n  start: () => () => void\n  stop: () => void\n  target: MessageEventSource | undefined\n}\n\n/**\n * @public\n */\nexport interface ConnectionInput {\n  connectTo: string\n  domain?: string\n  heartbeat?: boolean\n  name: string\n  id?: string\n  target?: MessageEventSource\n  targetOrigin: string\n}\n\nconst sendBackAtInterval = fromCallback<\n  EventObject,\n  {event: EventObject; immediate?: boolean; interval: number}\n>(({sendBack, input}) => {\n  const send = () => {\n    sendBack(input.event)\n  }\n\n  if (input.immediate) {\n    send()\n  }\n\n  const interval = setInterval(send, input.interval)\n\n  return () => {\n    clearInterval(interval)\n  }\n})\n\n/**\n * @public\n */\nexport const createConnectionMachine = <\n  TSends extends Message, // Sends\n  TReceives extends Message, // Receives\n  TSendsWithoutResponse extends WithoutResponse<TSends> = WithoutResponse<TSends>,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n>() => {\n  const connectionMachine = setup({\n    types: {} as {\n      children: {\n        'listen for handshake': 'listen'\n        'listen for messages': 'listen'\n        'send heartbeat': 'sendBackAtInterval'\n        'send syn': 'sendBackAtInterval'\n      }\n      context: {\n        buffer: Array<TSendsWithoutResponse>\n        channelId: string\n        connectTo: string\n        domain: string\n        heartbeat: boolean\n        id: string\n        name: string\n        requests: Array<RequestActorRef<TSends>>\n        target: MessageEventSource | undefined\n        targetOrigin: string\n      }\n      emitted:\n        | BufferAddedEmitEvent<TSendsWithoutResponse>\n        | BufferFlushedEmitEvent<TSendsWithoutResponse>\n        | MessageEmitEvent<TReceives>\n        | StatusEmitEvent\n      events:\n        | {type: 'connect'}\n        | {type: 'disconnect'}\n        | {type: 'message.received'; message: MessageEvent<ProtocolMessage<TReceives>>}\n        | {type: 'post'; data: TSendsWithoutResponse}\n        | {type: 'response'; respondTo: string; data: Pick<TSends, 'response'>}\n        | {type: 'request.aborted'; requestId: string}\n        | {type: 'request.failed'; requestId: string}\n        | {\n            type: 'request.success'\n            requestId: string\n            response: TSends['response'] | null\n            responseTo: string | undefined\n          }\n        | {type: 'request'; data: RequestData<TSends> | RequestData<TSends>[]}\n        | {type: 'syn'}\n        | {type: 'target.set'; target: MessageEventSource}\n      input: ConnectionInput\n    },\n    actors: {\n      requestMachine: createRequestMachine<TSends>(),\n      listen: createListenLogic(),\n      sendBackAtInterval,\n    },\n    actions: {\n      'buffer message': enqueueActions(({enqueue}) => {\n        enqueue.assign({\n          buffer: ({event, context}) => {\n            assertEvent(event, 'post')\n            return [...context.buffer, event.data]\n          },\n        })\n        enqueue.emit(({event}) => {\n          assertEvent(event, 'post')\n          return {\n            type: 'buffer.added',\n            message: event.data,\n          } satisfies BufferAddedEmitEvent<TSendsWithoutResponse>\n        })\n      }),\n      'create request': assign({\n        requests: ({context, event, self, spawn}) => {\n          assertEvent(event, 'request')\n          const arr = Array.isArray(event.data) ? event.data : [event.data]\n          const requests = arr.map((request) => {\n            const id = `req-${uuid()}`\n            return spawn('requestMachine', {\n              id,\n              input: {\n                channelId: context.channelId,\n                data: request.data,\n                domain: context.domain,\n                expectResponse: request.expectResponse,\n                from: context.name,\n                parentRef: self,\n                responseTo: request.responseTo,\n                sources: context.target!,\n                targetOrigin: context.targetOrigin,\n                to: context.connectTo,\n                type: request.type,\n              },\n            })\n          })\n          return [...context.requests, ...requests]\n        },\n      }),\n      'emit received message': enqueueActions(({enqueue}) => {\n        enqueue.emit(({event}) => {\n          assertEvent(event, 'message.received')\n          return {\n            type: 'message',\n            message: event.message.data,\n          }\n        })\n      }),\n      'emit status': emit((_, params: {status: Status}) => {\n        return {\n          type: 'status',\n          status: params.status,\n        } satisfies StatusEmitEvent\n      }),\n      'post message': raise(({event}) => {\n        assertEvent(event, 'post')\n        return {\n          type: 'request' as const,\n          data: {\n            data: event.data.data,\n            expectResponse: true,\n            type: event.data.type,\n          },\n        }\n      }),\n      'remove request': enqueueActions(({context, enqueue, event}) => {\n        assertEvent(event, ['request.success', 'request.failed', 'request.aborted'])\n        stopChild(event.requestId)\n        enqueue.assign({requests: context.requests.filter(({id}) => id !== event.requestId)})\n      }),\n      'respond': raise(({event}) => {\n        assertEvent(event, 'response')\n        return {\n          type: 'request' as const,\n          data: {\n            data: event.data,\n            type: MSG_RESPONSE,\n            responseTo: event.respondTo,\n          },\n        }\n      }),\n\n      'send handshake ack': raise({\n        type: 'request',\n        data: {type: MSG_HANDSHAKE_ACK},\n      }),\n      'send disconnect': raise(() => {\n        return {\n          type: 'request' as const,\n          data: {type: MSG_DISCONNECT},\n        }\n      }),\n      'send handshake syn': raise({\n        type: 'request',\n        data: {type: MSG_HANDSHAKE_SYN},\n      }),\n      'send pending messages': enqueueActions(({enqueue}) => {\n        enqueue.raise(({context}) => ({\n          type: 'request',\n          data: context.buffer.map(({data, type}) => ({data, type})),\n        }))\n        enqueue.emit(({context}) => {\n          return {\n            type: 'buffer.flushed',\n            messages: context.buffer,\n          } satisfies BufferFlushedEmitEvent<TSendsWithoutResponse>\n        })\n        enqueue.assign({\n          buffer: [],\n        })\n      }),\n      'set target': assign({\n        target: ({event}) => {\n          assertEvent(event, 'target.set')\n          return event.target\n        },\n      }),\n    },\n    guards: {\n      'has target': ({context}) => !!context.target,\n      'should send heartbeats': ({context}) => context.heartbeat,\n    },\n  }).createMachine({\n    /** @xstate-layout N4IgpgJg5mDOIC5QGMAWBDAdpsAbAxAC7oBOMhAdLGIQNoAMAuoqAA4D2sAloV+5ixAAPRAHZRAJgoAWABz0ArHICMy2QGZZCgJwAaEAE9EE+tIrb6ANgkLl46fTuj1AXxf60WHARJgAjgCucJSwAcjIcLAMzEggHNy8-IIiCKLS2hQS6qb2yurisrL6RgjK9LIyCuqq0g7WstZuHhjYePi+gcEUAGboXLiQ0YLxPHwCsSmiCgoykpayDtqS6trqxYjKEk0gnq24FFwQA-jI-DjIdEzDnKNJExuOZpZ12eq29OrSCuupypYUojUaTKCnm5Wk2123gORzA+HilxibBuiXGoBSGnUAIU4gU9FWamUtR+lmUM1EllBEkslMUEnpkJa0JaEFgGAA1lxMFB8LADJghrERqjkhtshk3mTtNo5OpqpYfqCKhTptoqpY1WUtu4dky8BQWWz0Jzue1-EFYIjrgkxqLSupqRRPpoPqJtLI0hIioZENJJE7NnJ8ZYHVk1YyvPrDRyuTyEYLkTa7uixVlMh81KGFhS1j6EPkZlpVjTphr8mkI3sDVhWTHTQBbSLoGAUXwRLgAN0GVyFKNt91KimUFEKXvKC2s9R+6X+jipnzJeSqEJ1UKjNaNJp5EC4sFOrQuCbifeTwg2cgoym0RPxDtqkj0eaB9Ao8zSolMEivZVcq71+33c5CEgeFOCtXskzRM8EDxKRpmkSw3QJbQsmpH5tHmV8JHSbJpDsakV2aSMALOMALhAjoLXAxNbiglI-SxWw1Vw0QNDw0Qfg9KQ7EJSxHHxApK2hQCyOAiAzVgDhMGoI9hX7FMEHSF8cWkelpHURCbBsb481xAEgT9BQJCmWQsiE-URPI8TG1gWBmzAVsyLATtuyRY9ILtWoKmlL82Kqd0tAVJ91LMHFZDKIkVlkNVZHMkiDzE-Adz3UjDx7GiRQHCKnheD53k+HSSkDDIwpBVTqQwuKKEssSDTAUhCAAI3qyg0DIrd8Fkk86MQUMnVM+RynoegTDJH48hGp0vR-FDRqqKqasgOqGua9AQjATAd1NSiul6fpXOtWi7Wy19cslD4vnG7IX3oVjVDUVYEJQqrksW8SdstLqPKy0wKgG1RhtMWogqKhoMjkWp6XxUyFBe3c3tAz70vco6fq+V8PTkGUFzdQqNnELEM2yClrwwzQ4ZShKQJqr7UYU98AS0W9pT4z5pHG0yXwMkNNTyGk3B1TB2AgOBBDXXBDsyhSFG9EovQqN5i1JeRcKqw4Bkl+ToMx8x0j+EaqQ9XMSkBURMgMkEwQWKro2NWNNdPFJAzN0lJGM4slDxhBEJfXyplBd03wW1KxIdnrBxBh4JAyW75C8rJpmDqmIGWkgmpasPjqUcaHooMLHA0uU1UkJOgKW1B6rT1bWor5At0zgcTAkK7hrz1irB0D8cW0UvRPLyv07WqgNq2qAG+l9SnXUz0UOXD5xuMs3Y4+DVJBX7UiKrV6Q8gcfoJO54rFefLLqfJYX1WKYNLxL4NO1NwgA */\n    id: 'connection',\n    context: ({input}) => ({\n      id: input.id || `${input.name}-${uuid()}`,\n      buffer: [],\n      channelId: `chn-${uuid()}`,\n      connectTo: input.connectTo,\n      domain: input.domain ?? DOMAIN,\n      heartbeat: input.heartbeat ?? false,\n      name: input.name,\n      requests: [],\n      target: input.target,\n      targetOrigin: input.targetOrigin,\n    }),\n    on: {\n      'target.set': {\n        actions: 'set target',\n      },\n      'request.success': {\n        actions: 'remove request',\n      },\n      'request.failed': {\n        actions: 'remove request',\n      },\n    },\n    initial: 'idle',\n    states: {\n      idle: {\n        entry: [{type: 'emit status', params: {status: 'idle'}}],\n        on: {\n          connect: {\n            target: 'handshaking',\n            guard: 'has target',\n          },\n          post: {\n            actions: 'buffer message',\n          },\n        },\n      },\n      handshaking: {\n        id: 'handshaking',\n        entry: [{type: 'emit status', params: {status: 'handshaking'}}],\n        invoke: [\n          {\n            id: 'send syn',\n            src: 'sendBackAtInterval',\n            input: () => ({\n              event: {type: 'syn'},\n              interval: HANDSHAKE_INTERVAL,\n              immediate: true,\n            }),\n          },\n          {\n            id: 'listen for handshake',\n            src: 'listen',\n            input: (input) =>\n              listenInputFromContext({\n                include: MSG_HANDSHAKE_SYN_ACK,\n                count: 1,\n              })(input),\n            /* Below would maybe be more readable than transitioning to\n          'connected' on 'message', and 'ack' on exit but having onDone when\n          using passing invocations currently breaks XState Editor */\n            // onDone: {\n            //   target: 'connected',\n            //   actions: 'ack',\n            // },\n          },\n        ],\n        on: {\n          'syn': {\n            actions: 'send handshake syn',\n          },\n          'request': {\n            actions: 'create request',\n          },\n          'post': {\n            actions: 'buffer message',\n          },\n          'message.received': {\n            target: 'connected',\n          },\n          'disconnect': {\n            target: 'disconnected',\n          },\n        },\n        exit: 'send handshake ack',\n      },\n      connected: {\n        entry: ['send pending messages', {type: 'emit status', params: {status: 'connected'}}],\n        invoke: {\n          id: 'listen for messages',\n          src: 'listen',\n          input: listenInputFromContext({\n            exclude: [MSG_RESPONSE, MSG_HEARTBEAT],\n          }),\n        },\n        on: {\n          'post': {\n            actions: 'post message',\n          },\n          'request': {\n            actions: 'create request',\n          },\n          'response': {\n            actions: 'respond',\n          },\n          'message.received': {\n            actions: 'emit received message',\n          },\n          'disconnect': {\n            target: 'disconnected',\n          },\n        },\n        initial: 'heartbeat',\n        states: {\n          heartbeat: {\n            initial: 'checking',\n            states: {\n              checking: {\n                always: {\n                  guard: 'should send heartbeats',\n                  target: 'sending',\n                },\n              },\n              sending: {\n                on: {\n                  'request.failed': {\n                    target: '#handshaking',\n                  },\n                },\n                invoke: {\n                  id: 'send heartbeat',\n                  src: 'sendBackAtInterval',\n                  input: () => ({\n                    event: {type: 'post', data: {type: MSG_HEARTBEAT, data: undefined}},\n                    interval: 2000,\n                    immediate: false,\n                  }),\n                },\n              },\n            },\n          },\n        },\n      },\n      disconnected: {\n        id: 'disconnected',\n        entry: ['send disconnect', {type: 'emit status', params: {status: 'disconnected'}}],\n        on: {\n          request: {\n            actions: 'create request',\n          },\n          post: {\n            actions: 'buffer message',\n          },\n          connect: {\n            target: 'handshaking',\n            guard: 'has target',\n          },\n        },\n      },\n    },\n  })\n\n  return connectionMachine\n}\n\n/**\n * @public\n */\nexport const createConnection = <TSends extends Message, TReceives extends Message>(\n  input: ConnectionInput,\n  machine: ConnectionActorLogic<TSends, TReceives> = createConnectionMachine<TSends, TReceives>(),\n): Connection<TSends, TReceives> => {\n  const id = input.id || `${input.name}-${uuid()}`\n  const actor = createActor(machine, {\n    input: {...input, id},\n  })\n\n  const eventHandlers: Map<\n    string,\n    Set<(event: TReceives['data']) => Promise<TReceives['response']> | TReceives['response']>\n  > = new Map()\n\n  const unhandledMessages: Map<string, Set<ProtocolMessage<Message>>> = new Map()\n\n  const on = <TType extends TReceives['type'], TMessage extends Extract<TReceives, {type: TType}>>(\n    type: TType,\n    handler: (data: TMessage['data']) => Promise<TMessage['response']> | TMessage['response'],\n    options?: {replay?: number},\n  ) => {\n    const handlers = eventHandlers.get(type) || new Set()\n\n    if (!eventHandlers.has(type)) {\n      eventHandlers.set(type, handlers)\n    }\n\n    // Register the new handler\n    handlers.add(handler)\n\n    // Process any unhandled messages for this type\n    const unhandledMessagesForType = unhandledMessages.get(type)\n    if (unhandledMessagesForType) {\n      const replayCount = options?.replay ?? 1\n      const messagesToReplay = Array.from(unhandledMessagesForType).slice(-replayCount)\n\n      // Replay messages to the new handler\n      messagesToReplay.forEach(async ({data, id}) => {\n        const response = await handler(data)\n        if (response) {\n          actor.send({\n            type: 'response',\n            respondTo: id,\n            data: response,\n          })\n        }\n      })\n\n      // Clear the unhandled messages for this type\n      unhandledMessages.delete(type)\n    }\n\n    return () => {\n      handlers.delete(handler)\n    }\n  }\n\n  const connect = () => {\n    actor.send({type: 'connect'})\n  }\n\n  const disconnect = () => {\n    actor.send({type: 'disconnect'})\n  }\n\n  const onStatus = (handler: (status: Status) => void, filter?: Status) => {\n    const {unsubscribe} = actor.on('status', (event: StatusEmitEvent & {status: Status}) => {\n      if (filter && event.status !== filter) {\n        return\n      }\n\n      handler(event.status)\n    })\n\n    return unsubscribe\n  }\n\n  const setTarget = (target: MessageEventSource) => {\n    actor.send({type: 'target.set', target})\n  }\n\n  const post = <TType extends TSends['type'], TMessage extends Extract<TSends, {type: TType}>>(\n    type: TType,\n    data?: TMessage['data'],\n  ) => {\n    const _data = {type, data} as WithoutResponse<TMessage>\n    actor.send({type: 'post', data: _data})\n  }\n\n  actor.on('message', async ({message}) => {\n    const handlers = eventHandlers.get(message.type)\n\n    if (handlers) {\n      // Execute all registered handlers for this message type\n      handlers.forEach(async (handler) => {\n        const response = await handler(message.data)\n        if (response) {\n          actor.send({type: 'response', respondTo: message.id, data: response})\n        }\n      })\n      return\n    }\n\n    // Store unhandled messages for potential replay\n    const unhandledMessagesForType = unhandledMessages.get(message.type)\n    if (unhandledMessagesForType) {\n      unhandledMessagesForType.add(message)\n    } else {\n      unhandledMessages.set(message.type, new Set([message]))\n    }\n  })\n\n  const stop = () => {\n    actor.stop()\n  }\n\n  const start = () => {\n    actor.start()\n    return stop\n  }\n\n  return {\n    actor,\n    connect,\n    disconnect,\n    id,\n    name: input.name,\n    machine,\n    on,\n    onStatus,\n    post,\n    setTarget,\n    start,\n    stop,\n    get target() {\n      return actor.getSnapshot().context.target\n    },\n  }\n}\n\n// Helper function to cleanup a connection\nexport const cleanupConnection: (connection: Connection<Message, Message>) => void = (\n  connection,\n) => {\n  connection.disconnect()\n  // Necessary to allow disconnect messages to be sent before the connection\n  // actor is stopped\n  setTimeout(() => {\n    connection.stop()\n  }, 0)\n}\n","import {\n  cleanupConnection,\n  createConnection,\n  createConnectionMachine,\n  type Connection,\n  type ConnectionActorLogic,\n  type ConnectionInput,\n} from './connection'\nimport {type InternalEmitEvent, type Message, type StatusEvent} from './types'\n\n/**\n * @public\n */\nexport type ChannelInput = Omit<ConnectionInput, 'target' | 'targetOrigin'>\n\n/**\n * @public\n */\nexport interface ChannelInstance<TSends extends Message, TReceives extends Message> {\n  on: <TType extends TReceives['type'], TMessage extends Extract<TReceives, {type: TType}>>(\n    type: TType,\n    handler: (data: TMessage['data']) => Promise<TMessage['response']> | TMessage['response'],\n  ) => () => void\n  onInternalEvent: <\n    TType extends InternalEmitEvent<TSends, TReceives>['type'],\n    TEvent extends Extract<InternalEmitEvent<TSends, TReceives>, {type: TType}>,\n  >(\n    type: TType,\n    handler: (event: TEvent) => void,\n  ) => () => void\n  onStatus: (handler: (event: StatusEvent) => void) => void\n  post: <TType extends TSends['type'], TMessage extends Extract<TSends, {type: TType}>>(\n    ...params: (TMessage['data'] extends undefined ? [TType] : never) | [TType, TMessage['data']]\n  ) => void\n  start: () => () => void\n  stop: () => void\n}\n\n/**\n * @public\n */\nexport interface Controller {\n  addTarget: (target: MessageEventSource) => () => void\n  createChannel: <TSends extends Message, TReceives extends Message>(\n    input: ChannelInput,\n    machine?: ConnectionActorLogic<TSends, TReceives>,\n  ) => ChannelInstance<TSends, TReceives>\n  destroy: () => void\n}\n\ninterface Channel<\n  TSends extends Message = Message,\n  TReceives extends Message = Message,\n  TType extends InternalEmitEvent<TSends, TReceives>['type'] = InternalEmitEvent<\n    TSends,\n    TReceives\n  >['type'],\n> {\n  input: ChannelInput\n  connections: Set<Connection<TSends, TReceives>>\n  internalEventSubscribers: Set<{\n    type: TType\n    handler: (event: Extract<InternalEmitEvent<TSends, TReceives>, {type: TType}>) => void\n    unsubscribers: Array<() => void>\n  }>\n  machine: ConnectionActorLogic<TSends, TReceives>\n  statusSubscribers: Set<{\n    handler: (event: StatusEvent) => void\n    unsubscribers: Array<() => void>\n  }>\n  subscribers: Set<{\n    type: TReceives['type']\n    handler: (event: TReceives['data']) => Promise<TReceives['response']> | TReceives['response']\n    unsubscribers: Array<() => void>\n  }>\n}\n\nconst noop = () => {}\n\n/**\n * @public\n */\nexport const createController = (input: {targetOrigin: string}): Controller => {\n  const {targetOrigin} = input\n  const targets = new Set<MessageEventSource>()\n  const channels = new Set<Channel>()\n\n  const addTarget = (target: MessageEventSource) => {\n    // If the target has already been added, return just a noop cleanup\n    if (targets.has(target)) {\n      return noop\n    }\n\n    if (!targets.size || !channels.size) {\n      targets.add(target)\n\n      // If there are existing channels, set the target on all existing\n      // connections, and trigger a connection event\n      channels.forEach((channel) => {\n        channel.connections.forEach((connection) => {\n          connection.setTarget(target)\n          connection.connect()\n        })\n      })\n      // We perform a 'soft' cleanup here: disconnect only as we want to\n      // maintain at least one live connection per channel\n      return () => {\n        targets.delete(target)\n        channels.forEach((channel) => {\n          channel.connections.forEach((connection) => {\n            if (connection.target === target) {\n              connection.disconnect()\n            }\n          })\n        })\n      }\n    }\n\n    targets.add(target)\n\n    // Maintain a list of connections to cleanup\n    const targetConnections = new Set<Connection<Message, Message>>()\n\n    // If we already have targets and channels, we need to create new\n    // connections for each source with all the associated subscribers.\n    channels.forEach((channel) => {\n      const connection = createConnection(\n        {\n          ...channel.input,\n          target,\n          targetOrigin,\n        },\n        channel.machine,\n      )\n\n      targetConnections.add(connection)\n      channel.connections.add(connection)\n\n      channel.subscribers.forEach(({type, handler, unsubscribers}) => {\n        unsubscribers.push(connection.on(type, handler))\n      })\n      channel.internalEventSubscribers.forEach(({type, handler, unsubscribers}) => {\n        unsubscribers.push(connection.actor.on(type, handler).unsubscribe)\n      })\n      channel.statusSubscribers.forEach(({handler, unsubscribers}) => {\n        unsubscribers.push(\n          connection.onStatus((status) => handler({connection: connection.id, status})),\n        )\n      })\n\n      connection.start()\n      connection.connect()\n    })\n\n    // We perform a more 'aggressive' cleanup here as we do not need to maintain\n    // these 'duplicate' connections: disconnect, stop, and remove the connections from\n    // all channels\n    return () => {\n      targets.delete(target)\n      targetConnections.forEach((connection) => {\n        cleanupConnection(connection)\n        channels.forEach((channel) => {\n          channel.connections.delete(connection)\n        })\n      })\n    }\n  }\n\n  const createChannel = <TSends extends Message, TReceives extends Message>(\n    input: ChannelInput,\n    machine: ConnectionActorLogic<TSends, TReceives> = createConnectionMachine<TSends, TReceives>(),\n  ): ChannelInstance<TSends, TReceives> => {\n    const channel: Channel<TSends, TReceives> = {\n      connections: new Set(),\n      input,\n      internalEventSubscribers: new Set(),\n      machine,\n      statusSubscribers: new Set(),\n      subscribers: new Set(),\n    }\n\n    channels.add(channel as unknown as Channel)\n\n    const {connections, internalEventSubscribers, statusSubscribers, subscribers} = channel\n\n    if (targets.size) {\n      // If targets have already been added, create a connection for each target\n      targets.forEach((target) => {\n        const connection = createConnection<TSends, TReceives>(\n          {\n            ...input,\n            target,\n            targetOrigin,\n          },\n          machine,\n        )\n        connections.add(connection)\n      })\n    } else {\n      // If targets have not been added yet, create a connection without a target\n      const connection = createConnection<TSends, TReceives>({...input, targetOrigin}, machine)\n      connections.add(connection)\n    }\n\n    const post: ChannelInstance<TSends, TReceives>['post'] = (...params) => {\n      const [type, data] = params\n      connections.forEach((connection) => {\n        connection.post(type, data)\n      })\n    }\n\n    const on: ChannelInstance<TSends, TReceives>['on'] = (type, handler) => {\n      const unsubscribers: Array<() => void> = []\n      connections.forEach((connection) => {\n        unsubscribers.push(connection.on(type, handler))\n      })\n      const subscriber = {type, handler, unsubscribers}\n      subscribers.add(subscriber)\n      return () => {\n        unsubscribers.forEach((unsub) => unsub())\n        subscribers.delete(subscriber)\n      }\n    }\n\n    const onInternalEvent = <\n      TType extends InternalEmitEvent<TSends, TReceives>['type'],\n      TEvent extends Extract<InternalEmitEvent<TSends, TReceives>, {type: TType}>,\n    >(\n      type: TType,\n      handler: (event: TEvent) => void,\n    ) => {\n      const unsubscribers: Array<() => void> = []\n      connections.forEach((connection) => {\n        // @ts-expect-error @todo @help\n        unsubscribers.push(connection.actor.on(type, handler).unsubscribe)\n      })\n      const subscriber = {type, handler, unsubscribers}\n      // @ts-expect-error @todo @help\n      internalEventSubscribers.add(subscriber)\n      return () => {\n        unsubscribers.forEach((unsub) => unsub())\n        // @ts-expect-error @todo @help\n        internalEventSubscribers.delete(subscriber)\n      }\n    }\n\n    const onStatus = (handler: (event: StatusEvent) => void) => {\n      const unsubscribers: Array<() => void> = []\n      connections.forEach((connection) => {\n        unsubscribers.push(\n          connection.onStatus((status) => handler({connection: connection.id, status})),\n        )\n      })\n      const subscriber = {handler, unsubscribers}\n      statusSubscribers.add(subscriber)\n      return () => {\n        unsubscribers.forEach((unsub) => unsub())\n        statusSubscribers.delete(subscriber)\n      }\n    }\n\n    // Stop a connection, cleanup all connections and remove the connection itself\n    // from the controller\n    // @todo Remove casting\n    const stop = () => {\n      const connections = channel.connections as unknown as Set<Connection>\n      connections.forEach(cleanupConnection)\n      connections.clear()\n      channels.delete(channel as unknown as Channel)\n    }\n\n    const start = () => {\n      connections.forEach((connection) => {\n        connection.start()\n        connection.connect()\n      })\n\n      return stop\n    }\n\n    return {\n      on,\n      onInternalEvent,\n      onStatus,\n      post,\n      start,\n      stop,\n    }\n  }\n\n  // Destroy the controller, cleanup all connections in all channels\n  const destroy = () => {\n    channels.forEach(({connections}) => {\n      connections.forEach(cleanupConnection)\n      connections.clear()\n    })\n    channels.clear()\n    targets.clear()\n  }\n\n  return {\n    addTarget,\n    createChannel,\n    destroy,\n  }\n}\n","import {v4 as uuid} from 'uuid'\nimport {\n  assertEvent,\n  assign,\n  createActor,\n  emit,\n  enqueueActions,\n  raise,\n  setup,\n  stopChild,\n  type ActorRefFrom,\n} from 'xstate'\nimport {createListenLogic, listenInputFromContext} from './common'\nimport {\n  DOMAIN,\n  FETCH_TIMEOUT_DEFAULT,\n  MSG_DISCONNECT,\n  MSG_HANDSHAKE_ACK,\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HEARTBEAT,\n  MSG_RESPONSE,\n} from './constants'\nimport {createRequestMachine, type RequestActorRef} from './request'\nimport type {\n  BufferAddedEmitEvent,\n  BufferFlushedEmitEvent,\n  HeartbeatEmitEvent,\n  HeartbeatMessage,\n  Message,\n  MessageEmitEvent,\n  ProtocolMessage,\n  RequestData,\n  Status,\n  StatusEmitEvent,\n  WithoutResponse,\n} from './types'\n\n/**\n * @public\n */\nexport interface NodeInput {\n  name: string\n  connectTo: string\n  domain?: string\n}\n\n/**\n * @public\n */\nexport type NodeActorLogic<TSends extends Message, TReceives extends Message> = ReturnType<\n  typeof createNodeMachine<TSends, TReceives>\n>\n\n/**\n * @public\n */\nexport type NodeActor<TSends extends Message, TReceives extends Message> = ActorRefFrom<\n  NodeActorLogic<TSends, TReceives>\n>\n\n/**\n * @public\n */\nexport type Node<TSends extends Message, TReceives extends Message> = {\n  actor: NodeActor<TSends, TReceives>\n  fetch: <TType extends TSends['type'], TMessage extends Extract<TSends, {type: TType}>>(\n    ...params:\n      | (TMessage['data'] extends undefined ? [TType] : never)\n      | [TType, TMessage['data']]\n      | [TType, TMessage['data'], {signal?: AbortSignal; suppressWarnings?: boolean}]\n  ) => TSends extends TMessage\n    ? TSends['type'] extends TType\n      ? Promise<TSends['response']>\n      : never\n    : never\n  machine: NodeActorLogic<TSends, TReceives>\n  on: <TType extends TReceives['type'], TMessage extends Extract<TReceives, {type: TType}>>(\n    type: TType,\n    handler: (event: TMessage['data']) => TMessage['response'],\n  ) => () => void\n  onStatus: (\n    handler: (status: Exclude<Status, 'disconnected'>) => void,\n    filter?: Exclude<Status, 'disconnected'>,\n  ) => () => void\n  post: <TType extends TSends['type'], TMessage extends Extract<TSends, {type: TType}>>(\n    ...params: (TMessage['data'] extends undefined ? [TType] : never) | [TType, TMessage['data']]\n  ) => void\n  start: () => () => void\n  stop: () => void\n}\n\n/**\n * @public\n */\nexport const createNodeMachine = <\n  TSends extends Message, // Sends\n  TReceives extends Message, // Receives\n  TSendsWithoutResponse extends WithoutResponse<TSends> = WithoutResponse<TSends>,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n>() => {\n  const nodeMachine = setup({\n    types: {} as {\n      children: {\n        'listen for disconnect': 'listen'\n        'listen for handshake ack': 'listen'\n        'listen for handshake syn': 'listen'\n        'listen for heartbeat': 'listen'\n        'listen for messages': 'listen'\n      }\n      context: {\n        buffer: Array<{\n          data: TSendsWithoutResponse\n          resolvable?: PromiseWithResolvers<TSends['response']>\n          options?: {\n            signal?: AbortSignal\n            suppressWarnings?: boolean\n          }\n        }>\n        channelId: string | null\n        connectTo: string\n        domain: string\n        // The handshake buffer is a workaround to maintain backwards\n        // compatibility with the Sanity channels package, which may incorrectly\n        // send buffered messages _before_ it completes the handshake (i.e.\n        // sends an ack message). It should be removed in the next major.\n        handshakeBuffer: Array<{\n          type: 'message.received'\n          message: MessageEvent<ProtocolMessage<TReceives>>\n        }>\n        name: string\n        requests: Array<RequestActorRef<TSends>>\n        target: MessageEventSource | undefined\n        targetOrigin: string | null\n      }\n      emitted:\n        | BufferAddedEmitEvent<TSendsWithoutResponse>\n        | BufferFlushedEmitEvent<TSendsWithoutResponse>\n        | HeartbeatEmitEvent\n        | MessageEmitEvent<TReceives>\n        | (StatusEmitEvent & {status: Exclude<Status, 'disconnected'>})\n      events:\n        | {type: 'heartbeat.received'; message: MessageEvent<ProtocolMessage<HeartbeatMessage>>}\n        | {type: 'message.received'; message: MessageEvent<ProtocolMessage<TReceives>>}\n        | {type: 'handshake.syn'; message: MessageEvent<ProtocolMessage<TReceives>>}\n        | {\n            type: 'post'\n            data: TSendsWithoutResponse\n            resolvable?: PromiseWithResolvers<TSends['response']>\n            options?: {\n              responseTimeout?: number\n              signal?: AbortSignal\n              suppressWarnings?: boolean\n            }\n          }\n        | {type: 'request.aborted'; requestId: string}\n        | {type: 'request.failed'; requestId: string}\n        | {\n            type: 'request.success'\n            requestId: string\n            response: TSends['response'] | null\n            responseTo: string | undefined\n          }\n        | {type: 'request'; data: RequestData<TSends> | RequestData<TSends>[]} // @todo align with 'post' type\n      input: NodeInput\n    },\n    actors: {\n      requestMachine: createRequestMachine<TSends>(),\n      listen: createListenLogic(),\n    },\n    actions: {\n      'buffer handshake': assign({\n        handshakeBuffer: ({event, context}) => {\n          assertEvent(event, 'message.received')\n          return [...context.handshakeBuffer, event]\n        },\n      }),\n      'buffer message': enqueueActions(({enqueue}) => {\n        enqueue.assign({\n          buffer: ({event, context}) => {\n            assertEvent(event, 'post')\n            return [\n              ...context.buffer,\n              {\n                data: event.data,\n                resolvable: event.resolvable,\n                options: event.options,\n              },\n            ]\n          },\n        })\n        enqueue.emit(({event}) => {\n          assertEvent(event, 'post')\n          return {\n            type: 'buffer.added',\n            message: event.data,\n          } satisfies BufferAddedEmitEvent<TSendsWithoutResponse>\n        })\n      }),\n      'create request': assign({\n        requests: ({context, event, self, spawn}) => {\n          assertEvent(event, 'request')\n          const arr = Array.isArray(event.data) ? event.data : [event.data]\n          const requests = arr.map((request) => {\n            const id = `req-${uuid()}`\n            return spawn('requestMachine', {\n              id,\n              input: {\n                channelId: context.channelId!,\n                data: request.data,\n                domain: context.domain!,\n                expectResponse: request.expectResponse,\n                from: context.name,\n                parentRef: self,\n                resolvable: request.resolvable,\n                responseTimeout: request.options?.responseTimeout,\n                responseTo: request.responseTo,\n                signal: request.options?.signal,\n                sources: context.target!,\n                suppressWarnings: request.options?.suppressWarnings,\n                targetOrigin: context.targetOrigin!,\n                to: context.connectTo,\n                type: request.type,\n              },\n            })\n          })\n          return [...context.requests, ...requests]\n        },\n      }),\n      'emit heartbeat': emit(() => {\n        return {\n          type: 'heartbeat',\n        } satisfies HeartbeatEmitEvent\n      }),\n      'emit received message': enqueueActions(({enqueue}) => {\n        enqueue.emit(({event}) => {\n          assertEvent(event, 'message.received')\n          return {\n            type: 'message',\n            message: event.message.data,\n          }\n        })\n      }),\n      'emit status': emit((_, params: {status: Exclude<Status, 'disconnected'>}) => {\n        return {\n          type: 'status',\n          status: params.status,\n        } satisfies StatusEmitEvent & {status: Exclude<Status, 'disconnected'>}\n      }),\n      'post message': raise(({event}) => {\n        assertEvent(event, 'post')\n        return {\n          type: 'request' as const,\n          data: {\n            data: event.data.data,\n            expectResponse: event.resolvable ? true : false,\n            type: event.data.type,\n            resolvable: event.resolvable,\n            options: event.options,\n          },\n        }\n      }),\n      'process pending handshakes': enqueueActions(({context, enqueue}) => {\n        context.handshakeBuffer.forEach((event) => enqueue.raise(event))\n        enqueue.assign({\n          handshakeBuffer: [],\n        })\n      }),\n      'remove request': enqueueActions(({context, enqueue, event}) => {\n        assertEvent(event, ['request.success', 'request.failed', 'request.aborted'])\n        stopChild(event.requestId)\n        enqueue.assign({requests: context.requests.filter(({id}) => id !== event.requestId)})\n      }),\n      'send response': raise(({event}) => {\n        assertEvent(event, ['message.received', 'heartbeat.received'])\n        return {\n          type: 'request' as const,\n          data: {\n            type: MSG_RESPONSE,\n            responseTo: event.message.data.id,\n            data: undefined,\n          },\n        }\n      }),\n      'send handshake syn ack': raise({\n        type: 'request',\n        data: {type: MSG_HANDSHAKE_SYN_ACK},\n      }),\n      'send pending messages': enqueueActions(({enqueue}) => {\n        enqueue.raise(({context}) => ({\n          type: 'request',\n          data: context.buffer.map(({data, resolvable, options}) => ({\n            data: data.data,\n            type: data.type,\n            expectResponse: resolvable ? true : false,\n            resolvable,\n            options,\n          })),\n        }))\n        enqueue.emit(({context}) => {\n          return {\n            type: 'buffer.flushed',\n            messages: context.buffer.map(({data}) => data),\n          } satisfies BufferFlushedEmitEvent<TSendsWithoutResponse>\n        })\n        enqueue.assign({\n          buffer: [],\n        })\n      }),\n      'set connection config': assign({\n        channelId: ({event}) => {\n          assertEvent(event, 'handshake.syn')\n          return event.message.data.channelId\n        },\n        target: ({event}) => {\n          assertEvent(event, 'handshake.syn')\n          return event.message.source || undefined\n        },\n        targetOrigin: ({event}) => {\n          assertEvent(event, 'handshake.syn')\n          return event.message.origin\n        },\n      }),\n    },\n    guards: {\n      hasSource: ({context}) => context.target !== null,\n    },\n  }).createMachine({\n    /** @xstate-layout N4IgpgJg5mDOIC5QDsD2EwGIBOYCOArnAC4B0sBAxpXLANoAMAuoqAA6qwCWxXqyrEAA9EAVgYAWUgEYJDUQA4JAZmUSJC0coDsAGhABPRNIYLSErdOkBOAGzbx227YUBfV-rQYc+IrDIAZgCGXAA2kIwsSCAc3Lz8giIIoiakqgBMDKbp2tYS0srp+kYI0ununuhgpFwQ4ZgQ-NVcyABuqADW1V7NdWAILe2UQfHIkZGCsTx8AtFJ6aKipAzWOtrpC7Z5BUWGiNoK6aS26RLW2tLaqkqqFSA9NX2YALa0QTCkuDRcrRHMk5xpgk5ogJLZSNZIVDoVCFLZiohbIVSLkXLZRHZDgxbHcHrV6rFiBNolNRolEVJbCsdGUzsoyhiEcllOC1DowelVmVrOUPPcqqQABZBZAQWDCjotKANJo1NqdboC4Wi8VBSXIKADeXDUbjf4kwFkkEILbg8RZMHKOzWKzKJkHJa086Xa4qZS4pUisUSqU+QgkYnsQ0zcnJaRLDbpZwKNQSBYspm2MEyC5KTnaDSSd18h7K71q32EwMxYPA0BJFLKY5yZxIrKSURM0RnFHSBTrQqQ9babQejBCr2q9XSiBcWCUfjIMCUIn6oNxEPGtTWFFR0RUy7iGzt+3Ip0XURXVZKPvVCfIKczyB+vyzqLzoGzcuIG0MGTyCztjRtjaJjbHVMNAUTdu1PUhz0vYhryLOcSwXMthBfK0ZGsLQGBZekCi0Jso1IdI23WG04zOE4wIg6coIgBox3Imdi1JRdnxNOxSHNSQkWtW0mTjMxMQ7fDzgcbNKn7WjKJeN4Pi+MAfj+e84MfUMFHbZZwxOHZNDyO09gQOQjmAhZJCM9IMjIycKOvQUwCCbBiAAI2sshpNkiB6NLJ9EIQBQbWOdJlMhYCUjbJkchXGsFmsJQMVsWl3BzKp4GiHoAXgjykgAWmkZZ6xy3LZF2EobCy6xsQWJQ42kE4FjA-EwBSxTjSRUhDgqkzgO2BxdykU4AvXFQ-KjMC8yHKV6qNJi6WOdcypcZsXGxe0JG0XySKjM5lKsMyLwsiAxsYzylDfONznUEqrmi+1ThkHqXDONbULi1wgA */\n    id: 'node',\n    context: ({input}) => ({\n      buffer: [],\n      channelId: null,\n      connectTo: input.connectTo,\n      domain: input.domain ?? DOMAIN,\n      handshakeBuffer: [],\n      name: input.name,\n      requests: [],\n      target: undefined,\n      targetOrigin: null,\n    }),\n    // Always listen for handshake syn messages. The channel could have\n    // disconnected without being able to notify the node, and so need to\n    // re-establish the connection.\n    invoke: {\n      id: 'listen for handshake syn',\n      src: 'listen',\n      input: listenInputFromContext({\n        include: MSG_HANDSHAKE_SYN,\n        responseType: 'handshake.syn',\n      }),\n    },\n    on: {\n      'request.success': {\n        actions: 'remove request',\n      },\n      'request.failed': {\n        actions: 'remove request',\n      },\n      'request.aborted': {\n        actions: 'remove request',\n      },\n      'handshake.syn': {\n        actions: 'set connection config',\n        target: '.handshaking',\n      },\n    },\n    initial: 'idle',\n    states: {\n      idle: {\n        entry: [{type: 'emit status', params: {status: 'idle'}}],\n        on: {\n          post: {\n            actions: 'buffer message',\n          },\n        },\n      },\n      handshaking: {\n        guard: 'hasSource',\n        entry: ['send handshake syn ack', {type: 'emit status', params: {status: 'handshaking'}}],\n        invoke: [\n          {\n            id: 'listen for handshake ack',\n            src: 'listen',\n            input: listenInputFromContext({\n              include: MSG_HANDSHAKE_ACK,\n              count: 1,\n              // Override the default `message.received` responseType to prevent\n              // buffering the ack message. We transition to the connected state\n              // using onDone instead of listening to this event using `on`\n              responseType: 'handshake.complete',\n            }),\n            onDone: 'connected',\n          },\n          {\n            id: 'listen for disconnect',\n            src: 'listen',\n            input: listenInputFromContext({\n              include: MSG_DISCONNECT,\n              count: 1,\n              responseType: 'disconnect',\n            }),\n          },\n          {\n            id: 'listen for messages',\n            src: 'listen',\n            input: listenInputFromContext({\n              exclude: [\n                MSG_DISCONNECT,\n                MSG_HANDSHAKE_SYN,\n                MSG_HANDSHAKE_ACK,\n                MSG_HEARTBEAT,\n                MSG_RESPONSE,\n              ],\n            }),\n          },\n        ],\n        on: {\n          'request': {\n            actions: 'create request',\n          },\n          'post': {\n            actions: 'buffer message',\n          },\n          'message.received': {\n            actions: 'buffer handshake',\n          },\n          'disconnect': {\n            target: 'idle',\n          },\n        },\n      },\n      connected: {\n        entry: [\n          'process pending handshakes',\n          'send pending messages',\n          {type: 'emit status', params: {status: 'connected'}},\n        ],\n        invoke: [\n          {\n            id: 'listen for messages',\n            src: 'listen',\n            input: listenInputFromContext({\n              exclude: [\n                MSG_DISCONNECT,\n                MSG_HANDSHAKE_SYN,\n                MSG_HANDSHAKE_ACK,\n                MSG_HEARTBEAT,\n                MSG_RESPONSE,\n              ],\n            }),\n          },\n          {\n            id: 'listen for heartbeat',\n            src: 'listen',\n            input: listenInputFromContext({\n              include: MSG_HEARTBEAT,\n              responseType: 'heartbeat.received',\n            }),\n          },\n          {\n            id: 'listen for disconnect',\n            src: 'listen',\n            input: listenInputFromContext({\n              include: MSG_DISCONNECT,\n              count: 1,\n              responseType: 'disconnect',\n            }),\n          },\n        ],\n        on: {\n          'request': {\n            actions: 'create request',\n          },\n          'post': {\n            actions: 'post message',\n          },\n          'disconnect': {\n            target: 'idle',\n          },\n          'message.received': {\n            actions: ['send response', 'emit received message'],\n          },\n          'heartbeat.received': {\n            actions: ['send response', 'emit heartbeat'],\n          },\n        },\n      },\n    },\n  })\n  return nodeMachine\n}\n\n/**\n * @public\n */\nexport const createNode = <TSends extends Message, TReceives extends Message>(\n  input: NodeInput,\n  machine: NodeActorLogic<TSends, TReceives> = createNodeMachine<TSends, TReceives>(),\n): Node<TSends, TReceives> => {\n  const actor = createActor(machine, {\n    input,\n  })\n\n  const eventHandlers: Map<\n    string,\n    Set<(event: TReceives['data']) => TReceives['response']>\n  > = new Map()\n\n  const unhandledMessages: Map<string, Set<ProtocolMessage<Message>>> = new Map()\n\n  const on = <TType extends TReceives['type'], TMessage extends Extract<TReceives, {type: TType}>>(\n    type: TType,\n    handler: (event: TMessage['data']) => TMessage['response'],\n    options?: {replay?: number},\n  ) => {\n    const handlers = eventHandlers.get(type) || new Set()\n\n    if (!eventHandlers.has(type)) {\n      eventHandlers.set(type, handlers)\n    }\n\n    // Register the new handler\n    handlers.add(handler)\n\n    // Process any unhandled messages for this type\n    const unhandledMessagesForType = unhandledMessages.get(type)\n    if (unhandledMessagesForType) {\n      const replayCount = options?.replay ?? 1\n      const messagesToReplay = Array.from(unhandledMessagesForType).slice(-replayCount)\n\n      // Replay messages to the new handler\n      messagesToReplay.forEach(({data}) => handler(data))\n\n      // Clear the unhandled messages for this type\n      unhandledMessages.delete(type)\n    }\n\n    return () => {\n      handlers.delete(handler)\n    }\n  }\n\n  let cachedStatus: Exclude<Status, 'disconnected'>\n  const onStatus = (\n    handler: (status: Exclude<Status, 'disconnected'>) => void,\n    filter?: Exclude<Status, 'disconnected'>,\n  ) => {\n    const {unsubscribe} = actor.on(\n      'status',\n      (event: StatusEmitEvent & {status: Exclude<Status, 'disconnected'>}) => {\n        cachedStatus = event.status\n        if (filter && event.status !== filter) {\n          return\n        }\n\n        handler(event.status)\n      },\n    )\n\n    // Call the handler immediately with the current status, if we have one\n    if (cachedStatus) {\n      handler(cachedStatus)\n    }\n\n    return unsubscribe\n  }\n\n  const post = <TType extends TSends['type'], TMessage extends Extract<TSends, {type: TType}>>(\n    type: TType,\n    data?: TMessage['data'],\n  ) => {\n    const _data = {type, data} as WithoutResponse<TMessage>\n    actor.send({type: 'post', data: _data})\n  }\n\n  const fetch = <TType extends TSends['type'], TMessage extends Extract<TSends, {type: TType}>>(\n    type: TType,\n    data?: TMessage['data'],\n    options?: {\n      responseTimeout?: number\n      signal?: AbortSignal\n      suppressWarnings?: boolean\n    },\n  ) => {\n    const {responseTimeout = FETCH_TIMEOUT_DEFAULT, signal, suppressWarnings} = options || {}\n\n    const resolvable = Promise.withResolvers<TSends['response']>()\n    const _data = {type, data} as WithoutResponse<TMessage>\n\n    actor.send({\n      type: 'post',\n      data: _data,\n      resolvable,\n      options: {responseTimeout, signal, suppressWarnings},\n    })\n    return resolvable.promise as never\n  }\n\n  actor.on('message', ({message}) => {\n    const handlers = eventHandlers.get(message.type)\n\n    if (handlers) {\n      // Execute all registered handlers for this message type\n      handlers.forEach((handler) => handler(message.data))\n      return\n    }\n\n    // Store unhandled messages for potential replay\n    const unhandledMessagesForType = unhandledMessages.get(message.type)\n    if (unhandledMessagesForType) {\n      unhandledMessagesForType.add(message)\n    } else {\n      unhandledMessages.set(message.type, new Set([message]))\n    }\n  })\n\n  const stop = () => {\n    actor.stop()\n  }\n\n  const start = () => {\n    actor.start()\n    return stop\n  }\n\n  return {\n    actor,\n    fetch,\n    machine,\n    on,\n    onStatus,\n    post,\n    start,\n    stop,\n  }\n}\n"],"names":["uuid","id","filter","input","connections"],"mappings":"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","ignoreList":[0,1,2,3,4,5],"debugId":null}},
    {"offset": {"line": 1350, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/presentation-comlink/src/comlinkCompatibility.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/presentation-comlink/src/isMaybePresentation.ts"],"sourcesContent":["import {\n  createListenLogic,\n  createRequestMachine,\n  DOMAIN,\n  MSG_DISCONNECT,\n  MSG_HANDSHAKE_ACK,\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HEARTBEAT,\n  MSG_RESPONSE,\n  type InternalMessageType,\n  type Message,\n  type ProtocolMessage,\n  type RequestMachineContext,\n} from '@sanity/comlink'\nimport type {\n  LoaderControllerMsg,\n  LoaderNodeMsg,\n  PreviewKitNodeMsg,\n  VisualEditingControllerMsg,\n  VisualEditingNodeMsg,\n} from './types'\n\ntype ComlinkMessageType =\n  | InternalMessageType\n  | (\n      | LoaderControllerMsg\n      | LoaderNodeMsg\n      | PreviewKitNodeMsg\n      | VisualEditingControllerMsg\n      | VisualEditingNodeMsg\n    )['type']\n\ntype ChannelsMessageType =\n  | 'handshake/syn'\n  | 'handshake/syn-ack'\n  | 'handshake/ack'\n  | 'channel/response'\n  | 'channel/heartbeat'\n  | 'channel/disconnect'\n  | 'overlay/focus'\n  | 'overlay/navigate'\n  | 'overlay/toggle'\n  | 'presentation/toggleOverlay'\n\nconst channelsToComlinkMap: {[key in ChannelsMessageType]: ComlinkMessageType} = {\n  'handshake/syn': MSG_HANDSHAKE_SYN,\n  'handshake/syn-ack': MSG_HANDSHAKE_SYN_ACK,\n  'handshake/ack': MSG_HANDSHAKE_ACK,\n  'channel/response': MSG_RESPONSE,\n  'channel/heartbeat': MSG_HEARTBEAT,\n  'channel/disconnect': MSG_DISCONNECT,\n  'overlay/focus': 'visual-editing/focus',\n  'overlay/navigate': 'visual-editing/navigate',\n  'overlay/toggle': 'visual-editing/toggle',\n  'presentation/toggleOverlay': 'presentation/toggle-overlay',\n}\n\nconst comlinkToChannelsMap: {[key in ComlinkMessageType]?: ChannelsMessageType} = {\n  [MSG_HANDSHAKE_SYN]: 'handshake/syn',\n  [MSG_HANDSHAKE_SYN_ACK]: 'handshake/syn-ack',\n  [MSG_HANDSHAKE_ACK]: 'handshake/ack',\n  [MSG_RESPONSE]: 'channel/response',\n  [MSG_HEARTBEAT]: 'channel/heartbeat',\n  [MSG_DISCONNECT]: 'channel/disconnect',\n  'visual-editing/focus': 'overlay/focus',\n  'visual-editing/navigate': 'overlay/navigate',\n  'visual-editing/toggle': 'overlay/toggle',\n  'presentation/toggle-overlay': 'presentation/toggleOverlay',\n}\n\ntype ChannelMsg = Omit<ProtocolMessage, 'channelId'> & {connectionId: string}\n\nconst convertToComlinkEvent = (event: MessageEvent): MessageEvent<ProtocolMessage> => {\n  const {data} = event\n\n  if (\n    data &&\n    typeof data === 'object' &&\n    'domain' in data &&\n    'type' in data &&\n    'from' in data &&\n    'to' in data\n  ) {\n    if (data.domain === 'sanity/channels') {\n      data.domain = DOMAIN\n    }\n\n    if (data.to === 'overlays') {\n      data.to = 'visual-editing'\n    }\n\n    if (data.from === 'overlays') {\n      data.from = 'visual-editing'\n    }\n\n    data.channelId = data.connectionId\n    delete data.connectionId\n\n    data.type = channelsToComlinkMap[data.type as ChannelsMessageType] ?? data.type\n  }\n\n  return event\n}\n\nconst convertToChannelsMessage = (comlinkMessage: ProtocolMessage): ChannelMsg => {\n  const {channelId, ...rest} = comlinkMessage\n  const message = {...rest, connectionId: channelId} as ChannelMsg\n\n  if (message.domain === DOMAIN) {\n    message.domain = 'sanity/channels'\n  }\n\n  if (message.to === 'visual-editing') {\n    message.to = 'overlays'\n  }\n\n  if (message.from === 'visual-editing') {\n    message.from = 'overlays'\n  }\n\n  message.type = comlinkToChannelsMap[message.type as ComlinkMessageType] ?? message.type\n\n  if (message.type === 'channel/response' && message.responseTo && !message.data) {\n    message.data = {responseTo: message.responseTo}\n  }\n\n  if (\n    message.type === 'handshake/syn' ||\n    message.type === 'handshake/syn-ack' ||\n    message.type === 'handshake/ack'\n  ) {\n    message.data = {id: message.connectionId}\n  }\n\n  return message\n}\n\nconst sendAsChannelsMessage = <S extends Message>(\n  {context}: {context: RequestMachineContext<S>},\n  params: {message: ProtocolMessage},\n): void => {\n  const {sources, targetOrigin} = context\n\n  const message = convertToChannelsMessage(params.message)\n\n  sources.forEach((source) => {\n    source.postMessage(message, {targetOrigin})\n  })\n}\n\nexport {\n  type ListenInput,\n  type Message,\n  type MessageData,\n  type MessageType,\n  MSG_RESPONSE,\n  type ProtocolMessage,\n  type RequestMachineContext,\n  type ResponseMessage,\n} from '@sanity/comlink'\n\nexport const createCompatibilityActors = <\n  T extends Message,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n>() => ({\n  listen: createListenLogic(convertToComlinkEvent),\n  requestMachine: createRequestMachine<T>().provide({\n    actions: {\n      'send message': sendAsChannelsMessage,\n    },\n  }),\n})\n","export function isMaybePreviewIframe(): boolean {\n  return window.self !== window.top\n}\nexport function isMaybePreviewWindow(): boolean {\n  return Boolean(window.opener)\n}\nexport function isMaybePresentation(): boolean {\n  return isMaybePreviewIframe() || isMaybePreviewWindow()\n}\n"],"names":[],"mappings":";;;;;;;;;AA6CA,MAAM,uBAA2E;IAC/E,sKAAiB,oBAAA;IACjB,0KAAqB,wBAAA;IACrB,sKAAiB,oBAAA;IACjB,yKAAoB,eAAA;IACpB,0KAAqB,gBAAA;IACrB,2KAAsB,iBAAA;IACtB,iBAAiB;IACjB,oBAAoB;IACpB,kBAAkB;IAClB,8BAA8B;AAChC,GAEM,uBAA4E;IAChF,sJAAC,oBAAiB,CAAA,EAAG;IACrB,sJAAC,wBAAqB,CAAA,EAAG;IACzB,CAAC,yKAAiB,CAAA,EAAG;IACrB,sJAAC,eAAY,CAAA,EAAG;IAChB,sJAAC,gBAAa,CAAA,EAAG;IACjB,sJAAC,iBAAc,CAAA,EAAG;IAClB,wBAAwB;IACxB,2BAA2B;IAC3B,yBAAyB;IACzB,+BAA+B;AACjC,GAIM,wBAAwB,CAAC,UAAuD;IAC9E,MAAA,EAAC,IAAA,EAAA,GAAQ;IAGb,OAAA,QACA,OAAO,QAAS,YAChB,YAAY,QACZ,UAAU,QACV,UAAU,QACV,QAAQ,QAAA,CAEJ,KAAK,MAAA,KAAW,qBAAA,CAClB,KAAK,MAAA,wJAAS,SAAA,GAGZ,KAAK,EAAA,KAAO,cAAA,CACd,KAAK,EAAA,GAAK,gBAAA,GAGR,KAAK,IAAA,KAAS,cAAA,CAChB,KAAK,IAAA,GAAO,gBAAA,GAGd,KAAK,SAAA,GAAY,KAAK,YAAA,EACtB,OAAO,KAAK,YAAA,EAEZ,KAAK,IAAA,GAAO,oBAAA,CAAqB,KAAK,IAA2B,CAAA,IAAK,KAAK,IAAA,GAGtE;AACT,GAEM,2BAA2B,CAAC,mBAAgD;IAC1E,MAAA,EAAC,SAAA,EAAW,GAAG,MAAA,GAAQ,gBACvB,UAAU;QAAC,GAAG,IAAA;QAAM,cAAc;IAAS;IAE7C,OAAA,QAAQ,MAAA,0JAAW,SAAA,IAAA,CACrB,QAAQ,MAAA,GAAS,iBAAA,GAGf,QAAQ,EAAA,KAAO,oBAAA,CACjB,QAAQ,EAAA,GAAK,UAAA,GAGX,QAAQ,IAAA,KAAS,oBAAA,CACnB,QAAQ,IAAA,GAAO,UAAA,GAGjB,QAAQ,IAAA,GAAO,oBAAA,CAAqB,QAAQ,IAA0B,CAAA,IAAK,QAAQ,IAAA,EAE/E,QAAQ,IAAA,KAAS,sBAAsB,QAAQ,UAAA,IAAc,CAAC,QAAQ,IAAA,IAAA,CACxE,QAAQ,IAAA,GAAO;QAAC,YAAY,QAAQ,UAAA;IAAU,CAAA,GAAA,CAI9C,QAAQ,IAAA,KAAS,mBACjB,QAAQ,IAAA,KAAS,uBACjB,QAAQ,IAAA,KAAS,eAAA,KAAA,CAEjB,QAAQ,IAAA,GAAO;QAAC,IAAI,QAAQ,YAAA;IAAA,CAAA,GAGvB;AACT,GAEM,wBAAwB,CAC5B,EAAC,OAAA,CAAA,CAAA,EACD,WACS;IACH,MAAA,EAAC,OAAA,EAAS,YAAA,EAAA,GAAgB,SAE1B,UAAU,yBAAyB,OAAO,OAAO;IAE/C,QAAA,OAAA,CAAQ,CAAC,WAAW;QAC1B,OAAO,WAAA,CAAY,SAAS;YAAC;QAAA,CAAa;IAAA,CAC3C;AACH,GAaa,4BAA4B,IAAA,CAGjC;QACN,iKAAQ,oBAAA,EAAkB,qBAAqB;QAC/C,yKAAgB,uBAAA,CAAwB,GAAE,OAAA,CAAQ;YAChD,SAAS;gBACP,gBAAgB;YAAA;QAEnB,CAAA;IACH,CAAA;AC5KO,SAAS,uBAAgC;IACvC,OAAA,OAAO,IAAA,KAAS,OAAO,GAAA;AAChC;AACO,SAAS,uBAAgC;IAC9C,OAAO,CAAA,CAAQ,OAAO,MAAA;AACxB;AACO,SAAS,sBAA+B;IACtC,OAAA,0BAA0B,qBAAqB;AACxD","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 1435, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/fast-deep-equal/index.js"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"names":[],"mappings":"AAAA;AAEA,sDAAsD;AAItD,OAAO,OAAO,GAAG,SAAS,MAAM,CAAC,EAAE,CAAC;IAClC,IAAI,MAAM,GAAG,OAAO;IAEpB,IAAI,KAAK,KAAK,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU;QAC1D,IAAI,EAAE,WAAW,KAAK,EAAE,WAAW,EAAE,OAAO;QAE5C,IAAI,QAAQ,GAAG;QACf,IAAI,MAAM,OAAO,CAAC,IAAI;YACpB,SAAS,EAAE,MAAM;YACjB,IAAI,UAAU,EAAE,MAAM,EAAE,OAAO;YAC/B,IAAK,IAAI,QAAQ,QAAQ,GACvB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,OAAO;YACjC,OAAO;QACT;QAIA,IAAI,EAAE,WAAW,KAAK,QAAQ,OAAO,EAAE,MAAM,KAAK,EAAE,MAAM,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK;QACjF,IAAI,EAAE,OAAO,KAAK,OAAO,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,OAAO,EAAE,OAAO;QAC5E,IAAI,EAAE,QAAQ,KAAK,OAAO,SAAS,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,OAAO,EAAE,QAAQ;QAEhF,OAAO,OAAO,IAAI,CAAC;QACnB,SAAS,KAAK,MAAM;QACpB,IAAI,WAAW,OAAO,IAAI,CAAC,GAAG,MAAM,EAAE,OAAO;QAE7C,IAAK,IAAI,QAAQ,QAAQ,GACvB,IAAI,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,OAAO;QAEhE,IAAK,IAAI,QAAQ,QAAQ,GAAI;YAC3B,IAAI,MAAM,IAAI,CAAC,EAAE;YAEjB,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,GAAG,OAAO;QACrC;QAEA,OAAO;IACT;IAEA,oCAAoC;IACpC,OAAO,MAAI,KAAK,MAAI;AACtB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1470, "column": 0}, "map": {"version":3,"file":"DisplayedDocumentBroadcaster.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/loader/DisplayedDocumentBroadcaster.tsx"],"sourcesContent":["/**\n * Report back up the document state being displayed in the document pane,\n * allowing Presentation Tool to patch the live queries with the same state.\n * This makes the Perspective switcher less confusing, as it applies to everything else on the page.\n * It's also why it's possible to select an older revision and see it in the preview,\n * effectively letting you preview a revert action you might be considering to perform.\n */\n\nimport isEqual from 'fast-deep-equal'\nimport {type PropsWithChildren, useCallback, useContext, useEffect} from 'react'\nimport {type SanityDocument} from 'sanity'\nimport {PresentationDisplayedDocumentContext} from 'sanity/_singletons'\n\nimport {type PresentationDisplayedDocumentContextValue} from './types'\n\nexport interface DisplayedDocumentBroadcasterProps extends PropsWithChildren {\n  setDisplayedDocument: React.Dispatch<\n    React.SetStateAction<Partial<SanityDocument> | null | undefined>\n  >\n  documentId: string | null | undefined\n}\n\nexport function DisplayedDocumentBroadcasterProvider(\n  props: DisplayedDocumentBroadcasterProps,\n): React.JSX.Element {\n  const {children, setDisplayedDocument, documentId} = props\n\n  const context = useCallback<PresentationDisplayedDocumentContextValue>(\n    (next) => setDisplayedDocument((prev) => (isEqual(prev, next) ? prev : next)),\n    [setDisplayedDocument],\n  )\n\n  useEffect(() => {\n    // If no document is currently being displayed then reset the state\n    if (documentId) {\n      return undefined\n    }\n    const timeout = setTimeout(() => setDisplayedDocument(null))\n    return () => clearTimeout(timeout)\n  }, [documentId, setDisplayedDocument])\n\n  return (\n    <PresentationDisplayedDocumentContext.Provider value={context}>\n      {children}\n    </PresentationDisplayedDocumentContext.Provider>\n  )\n}\n\nexport function useDisplayedDocumentBroadcaster(): PresentationDisplayedDocumentContextValue | null {\n  return useContext(PresentationDisplayedDocumentContext)\n}\n"],"names":["DisplayedDocumentBroadcasterProvider","props","$","_c","children","setDisplayedDocument","documentId","t0","next","prev","isEqual","context","t1","t2","timeout","setTimeout","clearTimeout","useEffect","t3","useDisplayedDocumentBroadcaster","useContext","PresentationDisplayedDocumentContext"],"mappings":";;;;;;;;;;;;;;AAsBO,SAAAA,qCAAAC,KAAAA,EAAA;IAAAC,MAAAA,0KAAAC,EAAA,CAAA,GAGL,EAAAC,QAAAA,EAAAC,oBAAAA,EAAAC,UAAAA,EAAAA,GAAqDL;IAAKM,IAAAA;IAAAL,CAAAA,CAAAA,EAAAA,KAAAG,uBAAAA,CAGxDE,KAAAC,CAAAA,OAAUH,qBAAoBI,CAAAA,0JAAYC,UAAAA,EAAQD,MAAMD,IAAI,IAAIC,OAAOD,IAAK,GAACN,CAAAA,CAAAA,EAAAA,GAAAG,sBAAAH,CAAAA,CAAAA,EAAAA,GAAAK,EAAAA,IAAAA,KAAAL,CAAAA,CAAA,CAAA,CAAA;IAD/E,MAAAS,UAAgBJ;IAGf,IAAAK,IAAAC;IAAAX,CAAAA,CAAAI,CAAAA,CAAAA,KAAAA,cAAAJ,CAAAA,CAAAA,EAAAA,KAAAG,uBAAAA,CAESO,KAAAA,MAAA;QAEJN,IAAAA,YAAU;QAGd,MAAAQ,UAAgBC,WAAAA,IAAiBV,qBAAoB,IAAK,CAAC;QAC9CW,OAAAA,IAAAA,aAAaF,OAAO;IAChCD,GAAAA,KAAA;QAACP;QAAYD,oBAAoB;KAAA,EAACH,CAAAA,CAAAA,EAAAA,GAAAI,YAAAJ,CAAAA,CAAAA,EAAAA,GAAAG,sBAAAH,CAAAA,CAAAA,EAAAA,GAAAU,IAAAV,CAAAA,CAAAA,EAAAA,GAAAW,EAAAA,IAAAA,CAAAD,KAAAV,CAAAA,CAAA,CAAA,CAAA,EAAAW,KAAAX,CAAAA,CAAA,CAAA,CAAA,6MAPrCe,YAAAA,EAAUL,IAOPC,EAAkC;IAACK,IAAAA;IAAA,OAAAhB,CAAAA,CAAAE,CAAAA,CAAAA,KAAAA,YAAAF,CAAAA,CAAAA,EAAAA,KAAAS,UAAAA,CAGpCO,KAAA,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAA,qLAAA,CAAA,QAAA,EAAA;QAAsDP,OAAAA;QACnDP;IAAAA,CACH,GAAgDF,CAAAA,CAAAA,EAAAA,GAAAE,UAAAF,CAAAA,CAAAA,EAAAA,GAAAS,SAAAT,CAAAA,CAAAA,EAAAA,GAAAgB,EAAAA,IAAAA,KAAAhB,CAAAA,CAAA,CAAA,CAAA,EAFhDgB;AAEgD;AAI7C,SAAAC,kCAAA;IAAA,iNACEC,aAAAA,gJAAAC,uCAA+C;AAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1515, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/node_modules/uuid/dist/esm/native.js"],"sourcesContent":["import { randomUUID } from 'crypto';\nexport default { randomUUID };\n"],"names":[],"mappings":";;;AAAA;;uCACe;IAAE,YAAA,qGAAA,CAAA,aAAU;AAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1529, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/node_modules/uuid/dist/esm/rng.js"],"sourcesContent":["import { randomFillSync } from 'crypto';\nconst rnds8Pool = new Uint8Array(256);\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n    if (poolPtr > rnds8Pool.length - 16) {\n        randomFillSync(rnds8Pool);\n        poolPtr = 0;\n    }\n    return rnds8Pool.slice(poolPtr, (poolPtr += 16));\n}\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,YAAY,IAAI,WAAW;AACjC,IAAI,UAAU,UAAU,MAAM;AACf,SAAS;IACpB,IAAI,UAAU,UAAU,MAAM,GAAG,IAAI;QACjC,CAAA,GAAA,qGAAA,CAAA,iBAAc,AAAD,EAAE;QACf,UAAU;IACd;IACA,OAAO,UAAU,KAAK,CAAC,SAAU,WAAW;AAChD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1549, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/node_modules/uuid/dist/esm/regex.js"],"sourcesContent":["export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;\n"],"names":[],"mappings":";;;uCAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1559, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/node_modules/uuid/dist/esm/validate.js"],"sourcesContent":["import REGEX from './regex.js';\nfunction validate(uuid) {\n    return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;\n"],"names":[],"mappings":";;;AAAA;;AACA,SAAS,SAAS,IAAI;IAClB,OAAO,OAAO,SAAS,YAAY,sKAAA,CAAA,UAAK,CAAC,IAAI,CAAC;AAClD;uCACe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1574, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/node_modules/uuid/dist/esm/stringify.js"],"sourcesContent":["import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,YAAY,EAAE;AACpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,EAAE,EAAG;IAC1B,UAAU,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE,QAAQ,CAAC,IAAI,KAAK,CAAC;AAClD;AACO,SAAS,gBAAgB,GAAG,EAAE,SAAS,CAAC;IAC3C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC9B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,EAAE,WAAW;AAChD;AACA,SAAS,UAAU,GAAG,EAAE,SAAS,CAAC;IAC9B,MAAM,OAAO,gBAAgB,KAAK;IAClC,IAAI,CAAC,CAAA,GAAA,yKAAA,CAAA,UAAQ,AAAD,EAAE,OAAO;QACjB,MAAM,UAAU;IACpB;IACA,OAAO;AACX;uCACe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1601, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/node_modules/uuid/dist/esm/v4.js"],"sourcesContent":["import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACA,SAAS,GAAG,OAAO,EAAE,GAAG,EAAE,MAAM;IAC5B,IAAI,uKAAA,CAAA,UAAM,CAAC,UAAU,IAAI,CAAC,OAAO,CAAC,SAAS;QACvC,OAAO,uKAAA,CAAA,UAAM,CAAC,UAAU;IAC5B;IACA,UAAU,WAAW,CAAC;IACtB,MAAM,OAAO,QAAQ,MAAM,IAAI,QAAQ,GAAG,QAAQ,CAAA,GAAA,oKAAA,CAAA,UAAG,AAAD;IACpD,IAAI,KAAK,MAAM,GAAG,IAAI;QAClB,MAAM,IAAI,MAAM;IACpB;IACA,IAAI,CAAC,EAAE,GAAG,AAAC,IAAI,CAAC,EAAE,GAAG,OAAQ;IAC7B,IAAI,CAAC,EAAE,GAAG,AAAC,IAAI,CAAC,EAAE,GAAG,OAAQ;IAC7B,IAAI,KAAK;QACL,SAAS,UAAU;QACnB,IAAI,SAAS,KAAK,SAAS,KAAK,IAAI,MAAM,EAAE;YACxC,MAAM,IAAI,WAAW,CAAC,gBAAgB,EAAE,OAAO,CAAC,EAAE,SAAS,GAAG,wBAAwB,CAAC;QAC3F;QACA,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,EAAG;YACzB,GAAG,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,EAAE;QAC7B;QACA,OAAO;IACX;IACA,OAAO,CAAA,GAAA,0KAAA,CAAA,kBAAe,AAAD,EAAE;AAC3B;uCACe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1650, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/framer-motion/dist/es/components/MotionConfig/index.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, useMemo } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { loadExternalIsValidProp } from '../../render/dom/utils/filter-props.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig({ children, isValidProp, ...config }) {\n    isValidProp && loadExternalIsValidProp(isValidProp);\n    /**\n     * Inherit props from any parent MotionConfig components\n     */\n    config = { ...useContext(MotionConfigContext), ...config };\n    /**\n     * Don't allow isStatic to change between renders as it affects how many hooks\n     * motion components fire.\n     */\n    config.isStatic = useConstant(() => config.isStatic);\n    /**\n     * Creating a new config context object will re-render every `motion` component\n     * every time it renders. So we only want to create a new one sparingly.\n     */\n    const context = useMemo(() => config, [\n        JSON.stringify(config.transition),\n        config.transformPagePoint,\n        config.reducedMotion,\n    ]);\n    return (jsx(MotionConfigContext.Provider, { value: context, children: children }));\n}\n\nexport { MotionConfig };\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;AAOA;;;;;;;;;;;;;;;;CAgBC,GACD,SAAS,aAAa,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,QAAQ;IACtD,eAAe,CAAA,GAAA,4LAAA,CAAA,0BAAuB,AAAD,EAAE;IACvC;;KAEC,GACD,SAAS;QAAE,GAAG,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,iLAAA,CAAA,sBAAmB,CAAC;QAAE,GAAG,MAAM;IAAC;IACzD;;;KAGC,GACD,OAAO,QAAQ,GAAG,CAAA,GAAA,2KAAA,CAAA,cAAW,AAAD,EAAE,IAAM,OAAO,QAAQ;IACnD;;;KAGC,GACD,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE,IAAM,QAAQ;QAClC,KAAK,SAAS,CAAC,OAAO,UAAU;QAChC,OAAO,kBAAkB;QACzB,OAAO,aAAa;KACvB;IACD,OAAQ,CAAA,GAAA,uNAAA,CAAA,MAAG,AAAD,EAAE,iLAAA,CAAA,sBAAmB,CAAC,QAAQ,EAAE;QAAE,OAAO;QAAS,UAAU;IAAS;AACnF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1712, "column": 0}, "map": {"version":3,"file":"without-secret-search-params.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/preview-url-secret/src/withoutSecretSearchParams.ts"],"sourcesContent":["import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n} from './constants'\n\n/** @alpha */\nexport function withoutSecretSearchParams(url: URL): URL {\n  const newUrl = new URL(url)\n  const {searchParams} = newUrl\n  searchParams.delete(urlSearchParamPreviewPathname)\n  searchParams.delete(urlSearchParamPreviewSecret)\n  searchParams.delete(urlSearchParamPreviewPerspective)\n  searchParams.delete(urlSearchParamVercelProtectionBypass)\n  searchParams.delete(urlSearchParamVercelSetBypassCookie)\n  return newUrl\n}\n\n/** @alpha */\nexport function hasSecretSearchParams(url: URL): boolean {\n  return url.searchParams.has(urlSearchParamPreviewSecret)\n}\n\n/** @alpha */\nexport function setSecretSearchParams(\n  url: URL,\n  secret: string | null,\n  redirectTo: string,\n  perspective: string,\n): URL {\n  const newUrl = new URL(url)\n  const {searchParams} = newUrl\n  // Preview secrets are added when preview mode is setup with an `enable` endpoint\n  if (secret) {\n    searchParams.set(urlSearchParamPreviewSecret, secret)\n    searchParams.set(urlSearchParamPreviewPathname, redirectTo)\n  }\n  // Always set the perspective that's being used\n  searchParams.set(urlSearchParamPreviewPerspective, perspective)\n\n  return newUrl\n}\n"],"names":[],"mappings":";;;;;;;AASO,SAAS,0BAA0B,GAAA,EAAe;IACvD,MAAM,SAAS,IAAI,IAAI,GAAG,GACpB,EAAC,YAAA,EAAA,GAAgB;IACvB,OAAA,aAAa,MAAA,2KAAO,gCAA6B,GACjD,aAAa,MAAA,2KAAO,8BAA2B,GAC/C,aAAa,MAAA,2KAAO,mCAAgC,GACpD,aAAa,MAAA,2KAAO,uCAAoC,GACxD,aAAa,MAAA,2KAAO,sCAAmC,GAChD;AACT;AAGO,SAAS,sBAAsB,GAAA,EAAmB;IAChD,OAAA,IAAI,YAAA,CAAa,GAAA,2KAAI,8BAA2B;AACzD;AAGO,SAAS,sBACd,GAAA,EACA,MAAA,EACA,UAAA,EACA,WAAA,EACK;IACL,MAAM,SAAS,IAAI,IAAI,GAAG,GACpB,EAAC,YAAA,EAAA,GAAgB;IAEvB,OAAI,UAAA,CACF,aAAa,GAAA,2KAAI,8BAAA,EAA6B,MAAM,GACpD,aAAa,GAAA,2KAAI,gCAAA,EAA+B,UAAU,CAAA,GAG5D,aAAa,GAAA,2KAAI,mCAAA,EAAkC,WAAW,GAEvD;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1738, "column": 0}, "map": {"version":3,"file":"generateSecret.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/preview-url-secret/src/generateSecret.ts"],"sourcesContent":["/** @internal */\nexport function generateUrlSecret(): string {\n  // Try using WebCrypto if available\n  if (typeof crypto !== 'undefined') {\n    // Generate a random array of 16 bytes\n    const array = new Uint8Array(16)\n    crypto.getRandomValues(array)\n\n    // Convert the array to a URL-safe string\n    let key = ''\n    for (let i = 0; i < array.length; i++) {\n      // Convert each byte to a 2-digit hexadecimal number\n      key += array[i].toString(16).padStart(2, '0')\n    }\n\n    // Replace '+' and '/' from base64url to '-' and '_'\n    key = btoa(key).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/[=]+$/, '')\n\n    return key\n  }\n  // If not fallback to Math.random\n  return Math.random().toString(36).slice(2)\n}\n"],"names":[],"mappings":";;;AACO,SAAS,oBAA4B;IAEtC,IAAA,OAAO,SAAW,KAAa;QAE3B,MAAA,QAAQ,IAAI,WAAW,EAAE;QAC/B,OAAO,eAAA,CAAgB,KAAK;QAG5B,IAAI,MAAM;QACV,IAAA,IAAS,IAAI,GAAG,IAAI,MAAM,MAAA,EAAQ,IAEzB,OAAA,KAAA,CAAM,CAAC,CAAA,CAAE,QAAA,CAAS,EAAE,EAAE,QAAA,CAAS,GAAG,GAAG;QAI9C,OAAA,MAAM,KAAK,GAAG,EAAE,OAAA,CAAQ,OAAO,GAAG,EAAE,OAAA,CAAQ,OAAO,GAAG,EAAE,OAAA,CAAQ,SAAS,EAAE,GAEpE;IAAA;IAGT,OAAO,KAAK,MAAA,GAAS,QAAA,CAAS,EAAE,EAAE,KAAA,CAAM,CAAC;AAC3C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1759, "column": 0}, "map": {"version":3,"file":"toggle-preview-access-sharing.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/preview-url-secret/src/togglePreviewAccessSharing.ts"],"sourcesContent":["import type {SanityClient} from '@sanity/client'\nimport {schemaIdSingleton as _id, schemaTypeSingleton as _type, apiVersion, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function enablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<{secret: string}> {\n  const client = _client.withConfig({apiVersion})\n  const newSecret = generateUrlSecret()\n  const patch = client.patch(_id).set({secret: newSecret, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n\n  return {secret: newSecret}\n}\n\n/** @internal */\nexport async function disablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<void> {\n  const client = _client.withConfig({apiVersion})\n  const patch = client.patch(_id).set({secret: null, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n}\n\nexport type {SanityClientLike}\n"],"names":["_id","_type"],"mappings":";;;;;;;;AAMA,eAAsB,2BACpB,OAAA,EACA,MAAA,EACA,SAAA,EACA,MAAA,EAC2B;IACrB,MAAA,SAAS,QAAQ,UAAA,CAAW;8LAAC,aAAA;IAAA,CAAW,GACxC,gBAAY,oNAAA,KACZ,QAAQ,OAAO,KAAA,2KAAMA,oBAAG,EAAE,GAAA,CAAI;QAAC,QAAQ;QAAW;QAAW;IAAA,CAAO;IACpE,OAAA,MAAA,OACH,WAAA,GACA,iBAAA,CAAkB;QAAA,+KAACA,oBAAAA;QAAKC,iLAAAA,sBAAAA;QAAO;QAAQ;QAAW;IAAO,CAAA,EACzD,KAAA,CAAM,KAAK,EACX,MAAA,CAAO;uLAAC,MAAA;IAAA,CAAI,GAER;QAAC,QAAQ;IAAS;AAC3B;AAGA,eAAsB,4BACpB,OAAA,EACA,MAAA,EACA,SAAA,EACA,MAAA,EACe;IACf,MAAM,SAAS,QAAQ,UAAA,CAAW;8LAAC,aAAA;IAAW,CAAA,GACxC,QAAQ,OAAO,KAAA,2KAAMD,oBAAG,EAAE,GAAA,CAAI;QAAC,QAAQ;QAAM;QAAW;IAAA,CAAO;IACrE,MAAM,OACH,WAAA,CAAY,EACZ,iBAAA,CAAkB;QAACA,+KAAAA,oBAAAA;QAAKC,iLAAAA,sBAAAA;QAAO;QAAQ;QAAW;IAAM,CAAC,EACzD,KAAA,CAAM,KAAK,EACX,MAAA,CAAO;uLAAC,MAAA;IAAA,CAAI;AACjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1813, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/path-to-regexp/src/index.ts"],"sourcesContent":["/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2232, "column": 0}, "map": {"version":3,"file":"create-secret.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/preview-url-secret/src/createPreviewSecret.ts"],"sourcesContent":["import type {SanityClient} from '@sanity/client'\nimport {uuid} from '@sanity/uuid'\nimport {apiVersion, deleteExpiredSecretsQuery, schemaType, SECRET_TTL, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function createPreviewSecret(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n  id = uuid(),\n): Promise<{secret: string; expiresAt: Date}> {\n  const client = _client.withConfig({apiVersion})\n\n  try {\n    const expiresAt = new Date(Date.now() + 1000 * SECRET_TTL)\n    const _id = `drafts.${id}`\n    const newSecret = generateUrlSecret()\n    const patch = client.patch(_id).set({secret: newSecret, source, studioUrl, userId})\n    await client.transaction().createOrReplace({_id, _type: schemaType}).patch(patch).commit({tag})\n\n    return {secret: newSecret, expiresAt}\n  } finally {\n    try {\n      // Garbage collect expired secrets\n      await client.delete({query: deleteExpiredSecretsQuery})\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Failed to delete expired secrets', err)\n    }\n  }\n}\n\nexport type {SanityClientLike}\n"],"names":[],"mappings":";;;;;;;;;AAOA,eAAsB,oBACpB,OAAA,EACA,MAAA,EACA,SAAA,EACA,MAAA,EACA,8LAAK,OAAA,GAAA,EACuC;IAC5C,MAAM,SAAS,QAAQ,UAAA,CAAW;8LAAC,aAAA;IAAA,CAAW;IAE1C,IAAA;QACF,MAAM,YAAY,IAAI,KAAK,KAAK,GAAA,CAAI,IAAI,gLAAO,aAAU,GACnD,MAAM,CAAA,OAAA,EAAU,EAAE,EAAA,EAClB,aAAY,uNAAA,CAAkB,IAC9B,QAAQ,OAAO,KAAA,CAAM,GAAG,EAAE,GAAA,CAAI;YAAC,QAAQ;YAAW;YAAQ;YAAW;QAAA,CAAO;QAC5E,OAAA,MAAA,OAAO,WAAA,GAAc,eAAA,CAAgB;YAAC;YAAK,iLAAO,aAAA;QAAA,CAAW,EAAE,KAAA,CAAM,KAAK,EAAE,MAAA,CAAO;2LAAC,MAAA;QAAA,CAAI,GAEvF;YAAC,QAAQ;YAAW;QAAS;IAAA,SACpC;QACI,IAAA;YAEF,MAAM,OAAO,MAAA,CAAO;gBAAC,iLAAO,4BAAA;YAAA,CAA0B;QAAA,EAAA,OAC/C,KAAK;YAEJ,QAAA,KAAA,CAAM,oCAAoC,GAAG;QAAA;IACvD;AAEJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2279, "column": 0}, "map": {"version":3,"file":"define-preview-url.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/preview-url-secret/src/definePreviewUrl.ts"],"sourcesContent":["import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n} from './constants'\nimport type {\n  PreviewUrlResolver,\n  PreviewUrlResolverContext,\n  PreviewUrlResolverOptions,\n} from './types'\n\n/**\n * @internal\n */\nexport function definePreviewUrl<SanityClientType>(\n  options: PreviewUrlResolverOptions,\n): PreviewUrlResolver<SanityClientType> {\n  const {\n    draftMode,\n    previewMode,\n    origin = typeof location === 'undefined' ? 'https://localhost' : location.origin,\n  } = options\n  const enableUrl = previewMode?.enable || draftMode?.enable\n  let {preview = '/'} = options\n  const productionUrl = new URL(preview, origin)\n  const enablePreviewModeUrl = enableUrl ? new URL(enableUrl, origin) : undefined\n\n  return async (context): Promise<string> => {\n    try {\n      if (context.previewSearchParam) {\n        const restoredUrl = new URL(context.previewSearchParam, productionUrl)\n        if (restoredUrl.origin === productionUrl.origin) {\n          preview = `${restoredUrl.pathname}${restoredUrl.search}`\n        }\n      }\n    } catch {\n      // ignore\n    }\n    // Prevent infinite recursion\n    if (\n      typeof location !== 'undefined' &&\n      location.origin === productionUrl.origin &&\n      context.studioBasePath &&\n      (preview.startsWith(`${context.studioBasePath}/`) || preview === context.studioBasePath)\n    ) {\n      preview = options.preview || '/'\n    }\n    const previewUrl = new URL(preview, productionUrl)\n    if (enablePreviewModeUrl) {\n      const enablePreviewModeRequestUrl = new URL(enablePreviewModeUrl)\n      const {searchParams} = enablePreviewModeRequestUrl\n      searchParams.set(urlSearchParamPreviewSecret, context.previewUrlSecret)\n      searchParams.set(urlSearchParamPreviewPerspective, context.studioPreviewPerspective)\n      if (previewUrl.pathname !== enablePreviewModeRequestUrl.pathname) {\n        searchParams.set(\n          urlSearchParamPreviewPathname,\n          `${previewUrl.pathname}${previewUrl.search}`,\n        )\n      }\n\n      return enablePreviewModeRequestUrl.toString()\n    }\n    return previewUrl.toString()\n  }\n}\n\nexport type {PreviewUrlResolver, PreviewUrlResolverContext, PreviewUrlResolverOptions}\n"],"names":[],"mappings":";;;;;AAcO,SAAS,iBACd,OAAA,EACsC;IAChC,MAAA,EACJ,SAAA,EACA,WAAA,EACA,SAAS,OAAO,WAAa,MAAc,sBAAsB,SAAS,MAAA,EACxE,GAAA,SACE,YAAY,aAAa,UAAU,WAAW;IAChD,IAAA,EAAC,UAAU,GAAA,CAAA,CAAA,GAAO;IACtB,MAAM,gBAAgB,IAAI,IAAI,SAAS,MAAM,GACvC,uBAAuB,YAAY,IAAI,IAAI,WAAW,MAAM,IAAI,KAAA;IAEtE,OAAO,OAAO,YAA6B;QACrC,IAAA;YACF,IAAI,QAAQ,kBAAA,EAAoB;gBAC9B,MAAM,cAAc,IAAI,IAAI,QAAQ,kBAAA,EAAoB,aAAa;gBACjE,YAAY,MAAA,KAAW,cAAc,MAAA,IAAA,CACvC,UAAU,GAAG,YAAY,QAAQ,GAAG,YAAY,MAAM,EAAA;YAAA;QAE1D,EAAA,OACM,CAAA;QAKN,OAAO,WAAa,OACpB,SAAS,MAAA,KAAW,cAAc,MAAA,IAClC,QAAQ,cAAA,IAAA,CACP,QAAQ,UAAA,CAAW,GAAG,QAAQ,cAAc,CAAA,CAAA,CAAG,KAAK,YAAY,QAAQ,cAAA,KAAA,CAEzE,UAAU,QAAQ,OAAA,IAAW,GAAA;QAE/B,MAAM,aAAa,IAAI,IAAI,SAAS,aAAa;QACjD,IAAI,sBAAsB;YACxB,MAAM,8BAA8B,IAAI,IAAI,oBAAoB,GAC1D,EAAC,YAAA,EAAA,GAAgB;YACvB,OAAA,aAAa,GAAA,2KAAI,8BAAA,EAA6B,QAAQ,gBAAgB,GACtE,aAAa,GAAA,2KAAI,mCAAA,EAAkC,QAAQ,wBAAwB,GAC/E,WAAW,QAAA,KAAa,4BAA4B,QAAA,IACtD,aAAa,GAAA,2KACX,gCAAA,EACA,GAAG,WAAW,QAAQ,GAAG,WAAW,MAAM,EAAA,GAIvC,4BAA4B,QAAA,CAAS;QAAA;QAE9C,OAAO,WAAW,QAAA,CAAS;IAC7B;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2312, "column": 0}, "map": {"version":3,"sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/suspend-react/index.js"],"sourcesContent":["const isPromise = promise => typeof promise === 'object' && typeof promise.then === 'function';\n\nconst globalCache = [];\n\nfunction shallowEqualArrays(arrA, arrB, equal = (a, b) => a === b) {\n  if (arrA === arrB) return true;\n  if (!arrA || !arrB) return false;\n  const len = arrA.length;\n  if (arrB.length !== len) return false;\n\n  for (let i = 0; i < len; i++) if (!equal(arrA[i], arrB[i])) return false;\n\n  return true;\n}\n\nfunction query(fn, keys = null, preload = false, config = {}) {\n  // If no keys were given, the function is the key\n  if (keys === null) keys = [fn];\n\n  for (const entry of globalCache) {\n    // Find a match\n    if (shallowEqualArrays(keys, entry.keys, entry.equal)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return undefined; // If an error occurred, throw\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'error')) throw entry.error; // If a response was successful, return\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'response')) {\n        if (config.lifespan && config.lifespan > 0) {\n          if (entry.timeout) clearTimeout(entry.timeout);\n          entry.timeout = setTimeout(entry.remove, config.lifespan);\n        }\n\n        return entry.response;\n      } // If the promise is still unresolved, throw\n\n\n      if (!preload) throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    keys,\n    equal: config.equal,\n    remove: () => {\n      const index = globalCache.indexOf(entry);\n      if (index !== -1) globalCache.splice(index, 1);\n    },\n    promise: // Execute the promise\n    (isPromise(fn) ? fn : fn(...keys) // When it resolves, store its value\n    ).then(response => {\n      entry.response = response; // Remove the entry in time if a lifespan was given\n\n      if (config.lifespan && config.lifespan > 0) {\n        entry.timeout = setTimeout(entry.remove, config.lifespan);\n      }\n    }) // Store caught errors, they will be thrown in the render-phase to bubble into an error-bound\n    .catch(error => entry.error = error)\n  }; // Register the entry\n\n  globalCache.push(entry); // And throw the promise, this yields control back to React\n\n  if (!preload) throw entry.promise;\n  return undefined;\n}\n\nconst suspend = (fn, keys, config) => query(fn, keys, false, config);\n\nconst preload = (fn, keys, config) => void query(fn, keys, true, config);\n\nconst peek = keys => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal))) == null ? void 0 : _globalCache$find.response;\n};\n\nconst clear = keys => {\n  if (keys === undefined || keys.length === 0) globalCache.splice(0, globalCache.length);else {\n    const entry = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal));\n    if (entry) entry.remove();\n  }\n};\n\nexport { clear, peek, preload, suspend };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2389, "column": 0}, "map": {"version":3,"file":"toggle-vercel-protection-bypass.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/preview-url-secret/src/toggleVercelProtectionBypass.ts"],"sourcesContent":["import type {SanityClient, SyncTag} from '@sanity/client'\nimport {\n  vercelProtectionBypassSchemaId as _id,\n  vercelProtectionBypassSchemaType as _type,\n  fetchVercelProtectionBypassSecret,\n  tag,\n} from './constants'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function enableVercelProtectionBypass(\n  client: SanityClient,\n  secret: string,\n): Promise<void> {\n  const patch = client.patch(_id).set({secret})\n  await client.transaction().createIfNotExists({_id, _type}).patch(patch).commit({tag})\n}\n\n/** @internal */\nexport async function disableVercelProtectionBypass(client: SanityClient): Promise<void> {\n  const patch = client.patch(_id).set({secret: null})\n  await client.transaction().createIfNotExists({_id, _type}).patch(patch).commit({tag})\n}\n\n/** @internal */\nexport function subcribeToVercelProtectionBypass(\n  client: SanityClient,\n  onChange: (secret: string | null) => void,\n): () => void {\n  let controller = new AbortController()\n  let usedTags: SyncTag[] = []\n  async function fetchSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n    const {result, syncTags} = await client.fetch<string | null>(\n      fetchVercelProtectionBypassSecret,\n      {},\n      {\n        filterResponse: false,\n        lastLiveEventId,\n        tag: 'preview-url-secret.fetch-vercel-bypass-protection-secret',\n      },\n    )\n    if (Array.isArray(syncTags)) {\n      usedTags = syncTags\n    }\n    if (!signal.aborted) {\n      onChange(result)\n    }\n  }\n  const subscription = client.live.events().subscribe({\n    next: (event) => {\n      if (event.type === 'message') {\n        controller.abort()\n        controller = new AbortController()\n        if (event.tags.some((tag) => usedTags.includes(tag))) {\n          fetchSecret(event.id, controller.signal)\n        }\n      }\n    },\n    // eslint-disable-next-line no-console\n    error: (reason) => console.error(reason),\n  })\n\n  fetchSecret(null, controller.signal)\n\n  return () => {\n    subscription.unsubscribe()\n    controller.abort()\n  }\n}\n\nexport type {SanityClientLike}\n"],"names":["_id","_type","tag"],"mappings":";;;;;;;AAUsB,eAAA,6BACpB,MAAA,EACA,MAAA,EACe;IACT,MAAA,QAAQ,OAAO,KAAA,2KAAMA,iCAAG,EAAE,GAAA,CAAI;QAAC;IAAA,CAAO;IAC5C,MAAM,OAAO,WAAA,CAAA,EAAc,iBAAA,CAAkB;QAACA,+KAAAA,iCAAAA;QAAKC,iLAAAA,mCAAAA;IAAAA,CAAM,EAAE,KAAA,CAAM,KAAK,EAAE,MAAA,CAAO;uLAAC,MAAA;IAAA,CAAI;AACtF;AAGA,eAAsB,8BAA8B,MAAA,EAAqC;IACjF,MAAA,QAAQ,OAAO,KAAA,2KAAMD,iCAAG,EAAE,GAAA,CAAI;QAAC,QAAQ;IAAA,CAAK;IAClD,MAAM,OAAO,WAAA,CAAA,EAAc,iBAAA,CAAkB;QAACA,+KAAAA,iCAAAA;QAAKC,iLAAAA,mCAAAA;IAAAA,CAAM,EAAE,KAAA,CAAM,KAAK,EAAE,MAAA,CAAO;uLAAC,MAAA;IAAA,CAAI;AACtF;AAGgB,SAAA,iCACd,MAAA,EACA,QAAA,EACY;IACZ,IAAI,aAAa,IAAI,gBAAgB,GACjC,WAAsB,CAAC,CAAA;IACZ,eAAA,YAAY,eAAA,EAAgC,MAAA,EAAqB;QAC9E,MAAM,EAAC,MAAA,EAAQ,QAAA,EAAA,GAAY,MAAM,OAAO,KAAA,2KACtC,oCAAA,EACA,CAAC,GACD;YACE,gBAAgB,CAAA;YAChB;YACA,KAAK;QAAA;QAGL,MAAM,OAAA,CAAQ,QAAQ,KAAA,CACxB,WAAW,QAAA,GAER,OAAO,OAAA,IACV,SAAS,MAAM;IAAA;IAGnB,MAAM,eAAe,OAAO,IAAA,CAAK,MAAA,CAAA,EAAS,SAAA,CAAU;QAClD,MAAM,CAAC,UAAU;YACX,MAAM,IAAA,KAAS,aAAA,CACjB,WAAW,KAAA,CAAA,GACX,aAAa,IAAI,gBAAgB,GAC7B,MAAM,IAAA,CAAK,IAAA,CAAK,CAACC,OAAQ,SAAS,QAAA,CAASA,IAAG,CAAC,KACjD,YAAY,MAAM,EAAA,EAAI,WAAW,MAAM,CAAA;QAG7C;QAAA,sCAAA;QAEA,OAAO,CAAC,SAAW,QAAQ,KAAA,CAAM,MAAM;IAAA,CACxC;IAED,OAAA,YAAY,MAAM,WAAW,MAAM,GAE5B,MAAM;QACE,aAAA,WAAA,CAAA,GACb,WAAW,KAAA,CAAM;IACnB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2447, "column": 0}, "map": {"version":3,"file":"PresentationToolGrantsCheck.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/features/PostMessageFeatures.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/lib/debounce.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/overlays/SharedStateProvider.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/panels/Panel.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/panels/usePanelsStorage.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/panels/util.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/panels/Panels.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/components/ErrorCard.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/editor/PresentationPaneRouterProvider.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/editor/DocumentListPane.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/editor/DocumentPane.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/editor/DocumentPanel.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/editor/usePreviewState.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/editor/ContentEditor.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/panels/usePanelId.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/panels/PanelResizer.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/PresentationContent.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/PresentationNavigateProvider.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/useLocalState.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/PresentationNavigator.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/PresentationParamsProvider.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/PresentationProvider.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/util/encodeStudioPerspective.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/preview/IFrame.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/preview/OpenPreviewButton.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/preview/PreviewLocationInput.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/preview/SharePreviewMenu.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/preview/PreviewHeader.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/preview/Preview.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/util/warnOnce.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/useDocumentsOnPage.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/useMainDocument.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/.pnpm/%40sanity%2Bvisual-editing-csm%402.0.10_%40sanity%2Bclient%406.28.3_debug%404.4.0__%40sanity%2Btypes%40packages%2B%40sanity%2Btypes/node_modules/%40sanity/visual-editing-csm/dist/index.js","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/lib/parse.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/useParams.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/usePopups.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/usePreviewUrl.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/useStatus.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/PresentationTool.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/useVercelBypassSecret.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/PresentationToolGrantsCheck.tsx"],"sourcesContent":["import {type FC, memo, useEffect} from 'react'\n\nimport {type VisualEditingConnection} from '../types'\n\nexport interface PostMessagePreviewsProps {\n  comlink: VisualEditingConnection\n}\n\nconst PostMessageFeatures: FC<PostMessagePreviewsProps> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    return comlink.on('visual-editing/features', () => ({\n      features: {\n        optimistic: true,\n      },\n    }))\n  }, [comlink])\n\n  return null\n}\n\nexport default memo(PostMessageFeatures)\n","export function debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import {type Serializable, type SerializableObject} from '@sanity/presentation-comlink'\nimport {\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react'\nimport {PresentationSharedStateContext} from 'sanity/_singletons'\n\nimport {type VisualEditingConnection} from '../types'\nimport {type PresentationSharedStateContextValue} from './types'\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink: VisualEditingConnection | null\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const sharedState = useRef<SerializableObject>({})\n\n  useEffect(() => {\n    return comlink?.on('visual-editing/shared-state', () => {\n      return {state: sharedState.current}\n    })\n  }, [comlink])\n\n  const setValue = useCallback(\n    (key: string, value: Serializable) => {\n      sharedState.current[key] = value\n      comlink?.post('presentation/shared-state', {key, value})\n    },\n    [comlink],\n  )\n\n  const removeValue = useCallback(\n    (key: string) => {\n      comlink?.post('presentation/shared-state', {key})\n      delete sharedState.current[key]\n    },\n    [comlink],\n  )\n\n  const context = useMemo<PresentationSharedStateContextValue>(\n    () => ({removeValue, setValue}),\n    [removeValue, setValue],\n  )\n\n  return (\n    <PresentationSharedStateContext.Provider value={context}>\n      {children}\n    </PresentationSharedStateContext.Provider>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useContext, useLayoutEffect} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const {getPanelStyle, registerElement, unregisterElement} = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, defaultSize, order, maxWidth, minWidth, registerElement, unregisterElement])\n\n  return <Root style={style}>{children}</Root>\n}\n","import {useMemo} from 'react'\n\nimport {debounce} from '../lib/debounce'\nimport {type PanelElement} from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[] | undefined\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return Array.isArray(stored[key]) && stored[key].some((val) => val === null)\n        ? undefined\n        : stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","/* eslint-disable @typescript-eslint/no-shadow,no-eq-null */\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\n\nfunction getNextWidth(panel: PanelElement, nextWidth: number, containerWidth: number) {\n  const {maxWidth: maxWidthPx, minWidth: minWidthPx} = panel\n  const maxWidth = maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\n// eslint-disable-next-line max-params\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const {panels, widths: prevWidths} = panelsState\n  const {widths: initialWidths} = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(pivotPanel, width + Math.abs(delta), containerWidth)\n    if (width === nextWidth) {\n      return widths\n    }\n    delta = delta < 0 ? width - nextWidth : nextWidth - width\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(panel, width - deltaRemaining, containerWidth)\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied.toPrecision(10).localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n          numeric: true,\n        }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else if (++index >= panels.length) {\n      break\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(panels: PanelElement[], id: string, widths: number[]): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  // eslint-disable-next-line no-eq-null\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(element: PanelElement | ResizerElement): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(element: PanelElement | ResizerElement): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(elements: ElementMap): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({order: a}, {order: b}) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let {maxWidth, minWidth} = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        // eslint-disable-next-line no-negated-condition\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal -= panel.defaultSize\n      panelsWithoutWidth -= 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\nimport {usePanelsStorage} from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({children}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(() => getSortedElements(elements).filter(isPanel), [elements])\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback((id: string, data: PanelElement | ResizerElement) => {\n    setElements((prev) => {\n      if (prev.has(id)) return prev\n      const next = new Map(prev)\n      next.set(id, data)\n      return next\n    })\n  }, [])\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {containerWidth, dragOffset, panelBefore, panelAfter, resizerRect} = dragRef.current\n\n      // eslint-disable-next-line no-eq-null\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const {widths: prevWidths} = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const {widths} = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(panels, storedWidths, window.innerWidth)\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const {panels, widths: prevWidths} = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PresentationPanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PresentationPanelsContext.Provider>\n  )\n}\n","/* eslint-disable no-nested-ternary */\nimport {Box, Card, type CardProps, Container, Flex, Inline, Stack, Text} from '@sanity/ui'\nimport {type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): React.JSX.Element {\n  const {children, message, onRetry, onContinueAnyway, ...restProps} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const retryButton = (\n    <Button mode=\"ghost\" onClick={onRetry} text={t('error-card.retry-button.text')} />\n  )\n  const continueAnywayButton = (\n    <Button\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text={t('error-card.continue-button.text')}\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                {t('error-card.title')}\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","/* eslint-disable no-console */\n\nimport {forwardRef, type PropsWithChildren, useCallback, useMemo} from 'react'\nimport {getPublishedId, useUnique} from 'sanity'\nimport {StateLink, useRouter} from 'sanity/router'\nimport {\n  type BackLinkProps,\n  PaneRouterContext,\n  type PaneRouterContextValue,\n  type ReferenceChildLinkProps,\n} from 'sanity/structure'\n\nimport {\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(nextParams: Record<string, string | undefined>) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParamsContextValue> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return {...obj, [key]: value}\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {searchParams, ...restProps} = props\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {\n    documentId,\n    documentType,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    parentRefPath,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    template,\n    searchParams,\n    ...restProps\n  } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        id: documentId,\n        type: documentType,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onStructureParams: (params: StructureDocumentPaneParams) => void\n    refs?: {_id: string; _type: string}[]\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>,\n): React.JSX.Element {\n  const {children, onStructureParams, structureParams, searchParams, refs} = props\n\n  const {state: routerState, resolvePathFromState} = useRouter()\n\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const path = resolvePathFromState(routerState)\n      const qs = resolveQueryStringFromParams({\n        ...routerSearchParams,\n        ...nextParams,\n      })\n      return `${path}${qs}`\n    },\n    [resolvePathFromState, routerSearchParams, routerState],\n  )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      params: structureParams as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const {childId, ...restProps} = childLinkProps\n        const ref = refs?.find((r) => r._id === childId || getPublishedId(r._id) === childId)\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                id: childId,\n                type: ref._type,\n                _searchParams: Object.entries(searchParams),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink: (backLinkProps) => <BackLink {...backLinkProps} searchParams={searchParams} />,\n      ReferenceChildLink: (childLinkProps) => (\n        <ReferenceChildLink {...childLinkProps} searchParams={searchParams} />\n      ),\n      ParameterizedLink: () => {\n        throw new Error('ParameterizedLink not implemented')\n      },\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        // eslint-disable-next-line no-warning-comments\n        // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n        onStructureParams({\n          ...nextParams,\n          inspect: nextParams.inspect ?? undefined,\n        } as StructureDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onStructureParams, refs, searchParams, structureParams])\n\n  return <PaneRouterContext.Provider value={context}>{children}</PaneRouterContext.Provider>\n}\n","import {Card, Code, Flex, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {getPublishedId, useTranslation} from 'sanity'\nimport {\n  DocumentListPane as StructureDocumentListPane,\n  PaneLayout,\n  type PaneNode,\n  StructureToolProvider,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type MainDocumentState,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  mainDocumentState?: MainDocumentState\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  refs: {_id: string; _type: string}[]\n}): React.JSX.Element {\n  const {mainDocumentState, onStructureParams, searchParams, refs} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const ids = useMemo(\n    () =>\n      refs\n        .filter((r) => getPublishedId(r._id) !== mainDocumentState?.document?._id)\n        .map((r) => getPublishedId(r._id)),\n    [mainDocumentState, refs],\n  )\n\n  const pane: Extract<PaneNode, {type: 'documentList'}> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: {ids},\n        // defaultOrdering: [{field: '_updatedAt', direction: 'desc'}],\n      },\n      schemaTypeName: '',\n      title: t('document-list-pane.document-list.title'),\n      type: 'documentList',\n    }),\n    [ids, t],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [structureParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-list-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            onStructureParams={onStructureParams}\n            structureParams={structureParams}\n            searchParams={searchParams}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <StructureDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import {Card, Code, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type Path, useTranslation} from 'sanity'\nimport {decodeJsonParams} from 'sanity/router'\nimport {\n  DocumentPane as StructureDocumentPane,\n  type DocumentPaneNode,\n  PaneLayout,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {PresentationSpinner} from '../PresentationSpinner'\nimport {type PresentationSearchParams, type StructureDocumentPaneParams} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  const {template, templateParams} = structureParams\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n        template,\n        templateParameters: decodeJsonParams(templateParams),\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType, template, templateParams],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, structureParams])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout style={{height: '100%'}}>\n        <PresentationPaneRouterProvider\n          searchParams={searchParams}\n          onStructureParams={onStructureParams}\n          structureParams={structureParams}\n        >\n          <Suspense fallback={<PresentationSpinner />}>\n            <StructureDocumentPane\n              // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n              paneKey=\"document\"\n              index={1}\n              itemId=\"document\"\n              pane={paneDocumentNode}\n              onFocusPath={onFocusPath}\n            />\n          </Suspense>\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import {type Path} from 'sanity'\nimport {StructureToolProvider} from 'sanity/structure'\n\nimport {type PresentationSearchParams, type StructureDocumentPaneParams} from '../types'\nimport {DocumentPane} from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}): React.JSX.Element {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </StructureToolProvider>\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {\n  getPreviewStateObservable,\n  type PreviewValue,\n  type SanityDocument,\n  useDocumentPreviewStore,\n  usePerspective,\n} from 'sanity'\n\ninterface PreviewState {\n  isLoading?: boolean\n  snapshot?: PreviewValue | Partial<SanityDocument> | null\n}\n\nexport default function usePreviewState(documentId: string, schemaType?: SchemaType): PreviewState {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const [preview, setPreview] = useState<PreviewState>({})\n  const {perspectiveStack} = usePerspective()\n  useEffect(() => {\n    if (!schemaType) {\n      return undefined\n    }\n    const subscription = getPreviewStateObservable(\n      documentPreviewStore,\n      schemaType,\n      documentId,\n      perspectiveStack,\n    ).subscribe((state) => {\n      setPreview(state)\n    })\n\n    return () => {\n      subscription?.unsubscribe()\n    }\n  }, [documentPreviewStore, schemaType, documentId, perspectiveStack])\n\n  return preview\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, useCallback, useMemo} from 'react'\nimport {\n  getPreviewValueWithFallback,\n  type Path,\n  PreviewCard,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type MainDocumentState,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentListPane} from './DocumentListPane'\nimport {DocumentPanel} from './DocumentPanel'\nimport usePreviewState from './usePreviewState'\n\nexport function ContentEditor(props: {\n  documentId?: string\n  documentType?: string\n  mainDocumentState?: MainDocumentState\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs: {_id: string; _type: string}[]\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const schema = useSchema()\n\n  const MainDocumentLink = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (props: HTMLProps<HTMLAnchorElement>) => {\n      return (\n        <StateLink\n          {...props}\n          state={{\n            id: mainDocumentState?.document?._id,\n            type: mainDocumentState?.document?._type,\n            _searchParams: Object.entries(searchParams),\n          }}\n        />\n      )\n    },\n    [mainDocumentState, searchParams],\n  )\n\n  const schemaType = useMemo(\n    () => schema.get(mainDocumentState?.document?._type || 'shoe')!,\n    [mainDocumentState, schema],\n  )\n\n  const previewState = usePreviewState(mainDocumentState?.document?._id || '', schemaType)\n\n  const preview = useMemo(() => {\n    if (!mainDocumentState?.document) return null\n\n    return (\n      <SanityDefaultPreview\n        {...getPreviewValueWithFallback({\n          snapshot: previewState.snapshot,\n          fallback: mainDocumentState!.document,\n        })}\n        schemaType={schemaType}\n        status={\n          <Card padding={1} radius={2} shadow={1}>\n            <Text muted size={0} weight=\"medium\">\n              {t('main-document.label')}\n            </Text>\n          </Card>\n        }\n      />\n    )\n  }, [mainDocumentState, schemaType, t, previewState])\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    )\n  }\n\n  return (\n    <Flex direction=\"column\" flex={1} height=\"fill\">\n      {mainDocumentState && (\n        <Card padding={3} tone={mainDocumentState.document ? 'inherit' : 'caution'}>\n          {mainDocumentState.document ? (\n            <PreviewCard\n              __unstable_focusRing\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              as={MainDocumentLink as any}\n              data-as=\"a\"\n              radius={2}\n              sizing=\"border\"\n              tone=\"inherit\"\n            >\n              {preview}\n            </PreviewCard>\n          ) : (\n            <Card padding={2} radius={2} tone=\"inherit\">\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <WarningOutlineIcon />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1}>\n                    <Translate\n                      t={t}\n                      i18nKey=\"main-document.missing.text\"\n                      components={{Code: 'code'}}\n                      values={{path: mainDocumentState.path}}\n                    />\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n          )}\n        </Card>\n      )}\n\n      <DocumentListPane\n        mainDocumentState={mainDocumentState}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        refs={refs}\n      />\n    </Flex>\n  )\n}\n","import {useState} from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const [panelId] = useState(() => id || uuid())\n  return panelId\n}\n","import {\n  type FunctionComponent,\n  type MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {usePanelId} from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({$disabled}) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({$disabled}) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({id: propId, order, disabled = false}) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const id = usePanelId(propId)\n\n  const {activeResizer, drag, startDragging, stopDragging, registerElement, unregisterElement} =\n    context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    // Set styles to prevent text selection and force an ew-resize cursor whilst\n    // dragging. Return a reset callback so we can revert to any values that\n    // might have been present before dragging started.\n    function setDocumentStyles() {\n      const bodyStyle = document.body.style\n      const documentStyle = document.documentElement.style\n\n      const {cursor} = documentStyle\n      const {userSelect} = bodyStyle\n\n      documentStyle.cursor = 'ew-resize'\n      bodyStyle.userSelect = 'none'\n\n      return () => {\n        if (cursor) documentStyle.cursor = cursor\n        else documentStyle.removeProperty('cursor')\n\n        if (userSelect) bodyStyle.userSelect = userSelect\n        else bodyStyle.removeProperty('user-select')\n      }\n    }\n\n    const resetDocumentStyles = setDocumentStyles()\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n    window.addEventListener('contextmenu', onDragStop)\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      resetDocumentStyles()\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n      window.removeEventListener('contextmenu', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, {id, order, type: 'resizer', el})\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import {\n  type Dispatch,\n  type FunctionComponent,\n  type PropsWithChildren,\n  type SetStateAction,\n} from 'react'\nimport {\n  type CommentIntentGetter,\n  CommentsIntentProvider,\n  type Path,\n  type SanityDocument,\n} from 'sanity'\n\nimport {ContentEditor} from './editor/ContentEditor'\nimport {DisplayedDocumentBroadcasterProvider} from './loader/DisplayedDocumentBroadcaster'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {\n  type MainDocumentState,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport interface PresentationContentProps {\n  documentId: PresentationParamsContextValue['id']\n  documentsOnPage: {_id: string; _type: string}[]\n  documentType: PresentationParamsContextValue['type']\n  getCommentIntent: CommentIntentGetter\n  mainDocumentState: MainDocumentState | undefined\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  structureParams: StructureDocumentPaneParams\n}\n\nconst PresentationContentWrapper: FunctionComponent<\n  PropsWithChildren<{\n    documentId?: string\n    getCommentIntent: CommentIntentGetter\n    setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  }>\n> = (props) => {\n  const {documentId, setDisplayedDocument, getCommentIntent} = props\n  return (\n    <>\n      <PanelResizer order={4} />\n      <Panel id=\"content\" minWidth={325} order={5}>\n        <DisplayedDocumentBroadcasterProvider\n          documentId={documentId}\n          setDisplayedDocument={setDisplayedDocument}\n        >\n          <CommentsIntentProvider getIntent={getCommentIntent}>\n            {props.children}\n          </CommentsIntentProvider>\n        </DisplayedDocumentBroadcasterProvider>\n      </Panel>\n    </>\n  )\n}\n\nexport const PresentationContent: FunctionComponent<PresentationContentProps> = (props) => {\n  const {\n    documentId,\n    documentsOnPage,\n    documentType,\n    getCommentIntent,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    searchParams,\n    setDisplayedDocument,\n    structureParams,\n  } = props\n\n  return (\n    <PresentationContentWrapper\n      documentId={documentId}\n      getCommentIntent={getCommentIntent}\n      setDisplayedDocument={setDisplayedDocument}\n    >\n      <ContentEditor\n        documentId={documentId}\n        documentType={documentType}\n        mainDocumentState={mainDocumentState}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        refs={documentsOnPage}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </PresentationContentWrapper>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useCallback} from 'react'\nimport {PresentationNavigateContext} from 'sanity/_singletons'\n\nimport {type PresentationNavigate, type PresentationNavigateContextValue} from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const {children, navigate: _navigate} = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document = undefined) => {\n      _navigate(document || {}, preview ? {preview} : {})\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import {type Dispatch, type SetStateAction, useEffect, useState} from 'react'\n\nexport function useLocalState<T>(key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import {memo, useCallback, useMemo} from 'react'\n\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {type NavigatorOptions} from './types'\nimport {useLocalState} from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => React.JSX.Element] {\n  const {unstable_navigator} = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{navigatorEnabled, toggleNavigator}, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const {minWidth, maxWidth, component: NavigatorComponent} = props\n  // eslint-disable-next-line no-eq-null\n  const navigatorDisabled = minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationParamsContext} from 'sanity/_singletons'\n\nimport {type PresentationParamsContextValue} from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParamsContextValue\n  }>\n> = function (props) {\n  const {children, params} = props\n\n  const context = useMemo<PresentationParamsContextValue>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationContext} from 'sanity/_singletons'\n\nimport {\n  type PresentationContextValue,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParamsContextValue\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>\n> = function (props) {\n  const {children, devMode, name, navigate, params, searchParams, structureParams} = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      devMode,\n      name,\n      navigate,\n      params,\n      searchParams,\n      structureParams,\n    }),\n    [devMode, name, navigate, params, searchParams, structureParams],\n  )\n\n  return <PresentationContext.Provider value={context}>{children}</PresentationContext.Provider>\n}\n","/**\n * When encoding the current studio perspective it's necessary to deal with it sometimes being an array, in a consistent way.\n */\nexport function encodeStudioPerspective(studioPerspective: string[] | string): string {\n  return Array.isArray(studioPerspective) ? studioPerspective.join(',') : studioPerspective\n}\n","import {Box} from '@sanity/ui'\nimport {motion, type VariantLabels, type Variants} from 'framer-motion'\nimport {forwardRef, type ReactEventHandler, useId} from 'react'\nimport {styled} from 'styled-components'\n\nconst IFrameElement = motion.create(styled.iframe`\n  box-shadow: 0 0 0 1px var(--card-border-color);\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  view-transition-class: presentation-tool-iframe;\n`)\n\nconst IFrameOverlay = styled(Box)`\n  position: absolute;\n  inset: 0;\n  background: transparent;\n`\n\ninterface IFrameProps {\n  animate: VariantLabels\n  initial: VariantLabels\n  onLoad: ReactEventHandler<HTMLIFrameElement>\n  preventClick: boolean\n  src: string\n  variants: Variants\n  style: React.CSSProperties\n}\n\nexport const IFrame = forwardRef<HTMLIFrameElement, IFrameProps>(function IFrame(props, ref) {\n  const {animate, initial, onLoad, preventClick, src, variants, style} = props\n  const id = useId()\n\n  return (\n    <>\n      <IFrameElement\n        style={{\n          ...style,\n          // useId() guarantees that the ID will be unique, even if we add support for multiple iframe instances,\n          // while `view-transition-class: presentation-tool-iframe` provides userland a way to customize the transition with CSS if they wish\n          viewTransitionName: `presentation-tool-iframe-${id.replace(/[^a-zA-Z0-9-_]/g, '_')}`,\n        }}\n        animate={animate}\n        initial={initial}\n        onLoad={onLoad}\n        ref={ref}\n        src={src}\n        variants={variants}\n      />\n      {preventClick && <IFrameOverlay />}\n    </>\n  )\n})\n","import {LaunchIcon} from '@sanity/icons'\nimport {urlSearchParamPreviewPerspective} from '@sanity/preview-url-secret/constants'\nimport {Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PresentationPerspective} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\n/** @internal */\nexport function OpenPreviewButton(\n  props: Pick<PreviewProps, 'openPopup'> & {\n    previewLocationOrigin?: string\n    previewLocationRoute: string\n    perspective: PresentationPerspective\n    targetOrigin: string\n  },\n): React.ReactNode {\n  const {openPopup, previewLocationOrigin, previewLocationRoute, perspective, targetOrigin} = props\n\n  const openPreviewLink = useMemo(() => {\n    const url = new URL(previewLocationRoute, previewLocationOrigin || targetOrigin)\n    url.searchParams.set(urlSearchParamPreviewPerspective, encodeStudioPerspective(perspective))\n    const {pathname, search} = url\n\n    return `${previewLocationOrigin}${pathname}${search}`\n  }, [perspective, previewLocationOrigin, previewLocationRoute, targetOrigin])\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <Tooltip\n      animate\n      content={<Text size={1}>{t('share-url.menu-item.open.text')}</Text>}\n      fallbackPlacements={['bottom-start']}\n      placement=\"bottom\"\n      portal\n    >\n      <Button\n        as=\"a\"\n        aria-label={t('share-url.menu-item.open.text')}\n        icon={LaunchIcon}\n        mode=\"bleed\"\n        href={openPreviewLink}\n        rel=\"opener\"\n        target=\"_blank\"\n        tooltipProps={null}\n        // @ts-expect-error the `as=\"a\"` prop isn't enough to change the type of event.target from <div> to <a>\n        onClick={handleOpenPopup}\n      />\n    </Tooltip>\n  )\n}\n","import {ResetIcon} from '@sanity/icons'\nimport {TextInput, type TextInputClearButtonProps} from '@sanity/ui'\nimport {\n  type ChangeEvent,\n  type FunctionComponent,\n  type KeyboardEvent,\n  type ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport const PreviewLocationInput: FunctionComponent<{\n  fontSize?: number\n  onChange: (value: string) => void\n  origin: string\n  padding?: number\n  prefix?: ReactNode\n  suffix?: ReactNode\n  value: string\n}> = function (props) {\n  const {fontSize = 1, onChange, origin, padding = 3, prefix, suffix, value} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {basePath = '/'} = useActiveWorkspace()?.activeWorkspace || {}\n\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(undefined)\n  const [customValidity, setCustomValidity] = useState<string | undefined>(undefined)\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        const absoluteValue =\n          sessionValue.startsWith('/') || sessionValue === ''\n            ? `${origin}${sessionValue}`\n            : sessionValue\n\n        if (!absoluteValue.startsWith(`${origin}/`) && absoluteValue !== origin) {\n          setCustomValidity(t('preview-location-input.error', {origin, context: 'missing-origin'}))\n          return\n        }\n        // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        if (!origin && (absoluteValue.startsWith(`${basePath}/`) || absoluteValue === basePath)) {\n          setCustomValidity(\n            t('preview-location-input.error', {basePath, context: 'same-base-path'}),\n          )\n          return\n        }\n\n        const nextValue = absoluteValue === origin ? `${origin}/` : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue.slice(origin.length))\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [basePath, onChange, origin, sessionValue, t],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [origin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(() => ({icon: ResetIcon}), [])\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={() => {\n          setCustomValidity(undefined)\n          setSessionValue(origin + value)\n        }}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        prefix={prefix}\n        style={{zIndex: 1}}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={suffix}\n        value={sessionValue === undefined ? `${origin}${value}` : sessionValue}\n      />\n    </>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-shadow,no-negated-condition,no-nested-ternary */\nimport {type ClientPerspective, type SyncTag} from '@sanity/client'\nimport {CopyIcon, ShareIcon} from '@sanity/icons'\nimport {SanityMonogram} from '@sanity/logos'\nimport {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {\n  disablePreviewAccessSharing,\n  enablePreviewAccessSharing,\n} from '@sanity/preview-url-secret/toggle-preview-access-sharing'\nimport {setSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Card,\n  Grid,\n  Menu,\n  MenuDivider,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  useToast,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {lazy, memo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useClient, useCurrentUser, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../ui-components'\nimport {API_VERSION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\nconst QRCodeSVG = lazy(() => import('./QRCodeSVG'))\n\nexport interface SharePreviewMenuProps {\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  previewLocationRoute: string\n  initialUrl: PreviewProps['initialUrl']\n  perspective: ClientPerspective\n}\n\nconst QrCodeLogoSize = 24\nconst QrCodeLogoPadding = 16\nconst QrSize = 224\n\nconst StyledSanityMonogram = styled(SanityMonogram)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: ${QrCodeLogoSize}px;\n  width: ${QrCodeLogoSize}px;\n`\n\nconst MotionSpinner = motion.create(Spinner)\nconst MotionText = motion.create(Text)\nconst MotionMonogram = motion.create(StyledSanityMonogram)\n\nexport const SharePreviewMenu = memo(function SharePreviewMenuComponent(\n  props: SharePreviewMenuProps,\n) {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    initialUrl,\n    previewLocationRoute,\n    perspective,\n  } = props\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [loading, setLoading] = useState(true)\n  const [enabling, setEnabling] = useState(false)\n  const [disabling, setDisabling] = useState(false)\n  const [secret, setSecret] = useState<string | null>(null)\n  const busy = enabling || disabling || loading\n  const url = useMemo(\n    () =>\n      secret\n        ? setSecretSearchParams(\n            initialUrl,\n            secret,\n            previewLocationRoute,\n            encodeStudioPerspective(perspective),\n          )\n        : null,\n    [initialUrl, perspective, previewLocationRoute, secret],\n  )\n\n  const [error, setError] = useState<unknown>(null)\n  if (error) {\n    throw error\n  }\n\n  const handleUnableToToggle = useCallback(() => {\n    pushToast({\n      closable: true,\n      status: 'warning',\n      title: t('share-preview-menu.error_toggle-sharing', {context: 'toggle-sharing'}),\n    })\n  }, [pushToast, t])\n\n  const handleDisableSharing = useCallback(async () => {\n    try {\n      setDisabling(true)\n      await disablePreviewAccessSharing(\n        client,\n        '@sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(null)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setDisabling(false)\n    }\n  }, [client, currentUser?.id])\n  const handleEnableSharing = useCallback(async () => {\n    try {\n      setEnabling(true)\n\n      const previewUrlSecret = await enablePreviewAccessSharing(\n        client,\n        '@sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(previewUrlSecret.secret)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setEnabling(false)\n    }\n  }, [client, currentUser?.id])\n\n  const handleCopyUrl = useCallback(() => {\n    try {\n      if (!url) {\n        throw new Error('No URL to copy')\n      }\n      navigator.clipboard.writeText(url.toString())\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: t('share-url.clipboard.status', {context: 'success'}),\n      })\n    } catch (error) {\n      setError(error)\n    }\n  }, [pushToast, t, url])\n\n  useEffect(() => {\n    let controller = new AbortController()\n    let usedTags: SyncTag[] = []\n    async function fetchShareSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n      const {result, syncTags} = await client.fetch<string | null>(\n        fetchSharedAccessQuery,\n        {},\n        {filterResponse: false, lastLiveEventId, tag: 'presentation.fetch-shared-access-secret'},\n      )\n      if (Array.isArray(syncTags)) {\n        usedTags = syncTags\n      }\n      if (!signal.aborted) {\n        setSecret(result)\n      }\n    }\n    const subscription = client.live.events().subscribe({\n      next: (event) => {\n        if (event.type === 'message') {\n          controller.abort()\n          controller = new AbortController()\n          if (event.tags.some((tag) => usedTags.includes(tag))) {\n            fetchShareSecret(event.id, controller.signal)\n          }\n        }\n      },\n      error: setError,\n    })\n\n    fetchShareSecret(null, controller.signal).finally(() => setLoading(false))\n\n    return () => {\n      subscription.unsubscribe()\n      controller.abort()\n    }\n  }, [client])\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          aria-label={t('preview-frame.share-button.aria-label')}\n          icon={ShareIcon}\n          mode=\"bleed\"\n          tooltipProps={null}\n        />\n      }\n      id=\"share-menu\"\n      menu={\n        <Menu style={{maxWidth: 248}} padding={canUseSharedPreviewAccess ? undefined : 0}>\n          {canUseSharedPreviewAccess ? (\n            <>\n              <label style={{cursor: 'pointer'}}>\n                <Grid\n                  columns={2}\n                  rows={2}\n                  gapX={3}\n                  gapY={1}\n                  style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gridTemplateColumns: 'min-content 1fr',\n                    gridTemplateRows: 'min-content',\n                  }}\n                  paddingTop={3}\n                  paddingX={3}\n                >\n                  <Tooltip\n                    animate\n                    content={\n                      <Text size={1}>\n                        {t('share-preview-menu.toggle-button.tooltip', {\n                          context: url ? 'disable' : 'enable',\n                        })}\n                      </Text>\n                    }\n                    fallbackPlacements={['bottom-start']}\n                    placement=\"bottom\"\n                    portal\n                  >\n                    <Switch\n                      checked={enabling || (url !== null && !disabling)}\n                      readOnly={enabling || disabling}\n                      indeterminate={loading}\n                      onChange={\n                        !canToggleSharePreviewAccess\n                          ? handleUnableToToggle\n                          : url\n                            ? handleDisableSharing\n                            : handleEnableSharing\n                      }\n                    />\n                  </Tooltip>\n                  <Text size={1} weight=\"medium\">\n                    {t('share-preview-menu.toggle-button.label', {context: 'first-line'})}\n                  </Text>\n                  <span />\n                  <Text muted size={1}>\n                    {t('share-preview-menu.toggle-button.label', {context: 'second-line'})}\n                  </Text>\n                </Grid>\n              </label>\n              <Box padding={3} paddingTop={2}>\n                <Stack space={3}>\n                  <Card\n                    tone={busy || !url ? 'transparent' : undefined}\n                    style={{\n                      position: 'relative',\n                      aspectRatio: '1 / 1',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <AnimatePresence>\n                      {busy ? (\n                        <MotionSpinner\n                          muted\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        />\n                      ) : url ? (\n                        <>\n                          <Suspense fallback={<Spinner />}>\n                            <QRCodeSVG\n                              title={t('share-preview-menu.qr-code.title', {url: url.toString()})}\n                              value={url.toString()}\n                              size={QrSize}\n                              color=\"var(--card-fg-color)\"\n                              logoSize={QrCodeLogoSize + QrCodeLogoPadding}\n                            />\n                            <MotionMonogram\n                              initial={{opacity: -0.5}}\n                              animate={{opacity: 1.5}}\n                              exit={{opacity: 0}}\n                            />\n                          </Suspense>\n                        </>\n                      ) : (\n                        <MotionText\n                          muted\n                          size={1}\n                          style={{maxWidth: '100px', textWrap: 'pretty', textAlign: 'center'}}\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        >\n                          {t('share-preview-menu.qr-code.placeholder')}\n                        </MotionText>\n                      )}\n                    </AnimatePresence>\n                  </Card>\n                  <Text muted size={1}>\n                    {t('share-preview-menu.qr-code.instructions')}\n                  </Text>\n                </Stack>\n              </Box>\n              <MenuDivider />\n              <MenuItem\n                disabled={!url || disabling}\n                icon={CopyIcon}\n                onClick={handleCopyUrl}\n                text={t('share-preview-menu.copy-url.text')}\n              />\n            </>\n          ) : (\n            <Card padding={2} tone=\"caution\" radius={3}>\n              <Text style={{textWrap: 'pretty'}}>\n                {t('share-preview-menu.error', {context: 'missing-grants'})}\n              </Text>\n            </Card>\n          )}\n        </Menu>\n      }\n      popover={{\n        constrainSize: true,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n})\nSharePreviewMenu.displayName = 'Memo(SharePreviewMenu)'\n","import {DesktopIcon, MobileDeviceIcon, PanelLeftIcon, RefreshIcon} from '@sanity/icons'\nimport {withoutSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {Box, Card, Flex, Hotkeys, Switch, Text} from '@sanity/ui'\nimport {type RefObject, useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {ACTION_IFRAME_RELOAD} from '../reducers/presentationReducer'\nimport {type HeaderOptions} from '../types'\nimport {OpenPreviewButton} from './OpenPreviewButton'\nimport {type PreviewProps} from './Preview'\nimport {PreviewLocationInput} from './PreviewLocationInput'\nimport {SharePreviewMenu} from './SharePreviewMenu'\n\n/** @public */\nexport interface PreviewHeaderProps extends PreviewProps {\n  iframeRef: RefObject<HTMLIFrameElement | null>\n  renderDefault: (props: PreviewHeaderProps) => React.JSX.Element\n}\n\nconst PreviewHeaderDefault = (props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n  const {\n    canSharePreviewAccess,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    dispatch,\n    iframe,\n    iframeRef,\n    initialUrl,\n    navigatorEnabled,\n    onPathChange,\n    onRefresh,\n    openPopup,\n    overlaysConnection,\n    perspective,\n    previewUrl,\n    setViewport,\n    targetOrigin,\n    toggleNavigator,\n    toggleOverlay,\n    viewport,\n    visualEditing: {overlaysEnabled},\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const toggleViewportSize = useCallback(\n    () => setViewport(viewport === 'desktop' ? 'mobile' : 'desktop'),\n    [setViewport, viewport],\n  )\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = () => {\n    onRefresh(() => {\n      if (!iframeRef.current) {\n        return\n      }\n      dispatch({type: ACTION_IFRAME_RELOAD})\n      // Funky way to reload an iframe without CORS issues\n      // eslint-disable-next-line no-self-assign\n      // ref.current.src = ref.current.src\n      Object.assign(iframeRef.current, {src: `${targetOrigin}${previewUrl || '/'}`})\n    })\n  }\n\n  const previewLocationRoute = useMemo(() => {\n    const previewURL = new URL(previewUrl || '/', targetOrigin)\n    const {pathname, search} = withoutSecretSearchParams(previewURL)\n\n    return `${pathname}${search}`\n  }, [previewUrl, targetOrigin])\n\n  return (\n    <Flex align=\"center\" gap={1} paddingX={1} style={{width: '100%'}}>\n      {toggleNavigator && (\n        <Button\n          aria-label={t('preview-frame.navigator.toggle-button.aria-label')}\n          icon={PanelLeftIcon}\n          mode=\"bleed\"\n          onClick={toggleNavigator}\n          selected={navigatorEnabled}\n          tooltipProps={{\n            content: <Text size={1}>{t('preview-frame.navigator.toggle-button.tooltip')}</Text>,\n            fallbackPlacements: ['bottom-start'],\n            placement: 'bottom',\n          }}\n        />\n      )}\n\n      <Tooltip\n        animate\n        content={\n          <Flex align=\"center\" style={{whiteSpace: 'nowrap'}}>\n            <Box padding={1}>\n              <Text size={1}>\n                {t('preview-frame.overlay.toggle-button.tooltip', {\n                  context: overlaysEnabled ? 'disable' : 'enable',\n                })}\n              </Text>\n            </Box>\n            <Box paddingY={1}>\n              <Hotkeys keys={['Alt']} style={{marginTop: -4, marginBottom: -4}} />\n            </Box>\n          </Flex>\n        }\n        fallbackPlacements={['bottom-start']}\n        placement=\"bottom\"\n        portal\n      >\n        <Card\n          as=\"label\"\n          flex=\"none\"\n          padding={3}\n          marginX={1}\n          style={{\n            lineHeight: 0,\n            borderRadius: 999,\n            userSelect: 'none',\n          }}\n          tone={overlaysEnabled ? 'transparent' : undefined}\n        >\n          <Flex align=\"center\" gap={3}>\n            <div style={{margin: -4}}>\n              <Switch\n                checked={overlaysEnabled}\n                onChange={toggleOverlay}\n                disabled={iframe.status === 'loading' || overlaysConnection !== 'connected'}\n              />\n            </div>\n            <Box>\n              <Text muted={!overlaysEnabled} size={1} weight=\"medium\">\n                {t('preview-frame.overlay.toggle-button.text')}\n              </Text>\n            </Box>\n          </Flex>\n        </Card>\n      </Tooltip>\n\n      <Box flex={1}>\n        <PreviewLocationInput\n          prefix={\n            <Box padding={1}>\n              <Tooltip\n                animate\n                content={\n                  <Text size={1}>\n                    {iframe.status === 'loaded'\n                      ? t('preview-frame.refresh-button.tooltip')\n                      : t('preview-frame.status', {context: iframe.status})}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-end']}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label={t('preview-frame.refresh-button.aria-label')}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={iframe.status === 'reloading' || iframe.status === 'refreshing'}\n                  onClick={handleRefresh}\n                  tooltipProps={null}\n                />\n              </Tooltip>\n            </Box>\n          }\n          onChange={onPathChange}\n          origin={previewLocationOrigin}\n          suffix={\n            <Box padding={1}>\n              <OpenPreviewButton\n                openPopup={openPopup}\n                previewLocationOrigin={previewLocationOrigin}\n                previewLocationRoute={previewLocationRoute}\n                perspective={perspective}\n                targetOrigin={targetOrigin}\n              />\n            </Box>\n          }\n          value={previewLocationRoute}\n        />\n      </Box>\n\n      <Flex align=\"center\" flex=\"none\" gap={1}>\n        <Tooltip\n          animate\n          content={\n            <Text size={1}>\n              {t('preview-frame.viewport-button.tooltip', {\n                context: viewport === 'desktop' ? 'narrow' : 'full',\n              })}\n            </Text>\n          }\n          fallbackPlacements={['bottom-start']}\n          placement=\"bottom\"\n          portal\n        >\n          <Button\n            data-testid=\"preview-viewport-toggle\"\n            data-viewport={viewport}\n            aria-label={t('preview-frame.viewport-button.aria-label')}\n            icon={viewport === 'desktop' ? MobileDeviceIcon : DesktopIcon}\n            mode=\"bleed\"\n            onClick={toggleViewportSize}\n            tooltipProps={null}\n          />\n        </Tooltip>\n      </Flex>\n\n      {canSharePreviewAccess && (\n        <Flex align=\"center\" flex=\"none\" gap={1}>\n          <SharePreviewMenu\n            canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n            canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n            previewLocationRoute={previewLocationRoute}\n            initialUrl={initialUrl}\n            perspective={perspective}\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\n/** @internal */\nexport function PreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n): React.JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const renderDefault = useCallback((props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n    return <PreviewHeaderDefault {...props} />\n  }, [])\n\n  const HeaderComponent = props.options?.component\n  const header = HeaderComponent ? (\n    <HeaderComponent {...props} renderDefault={renderDefault} />\n  ) : (\n    renderDefault(props)\n  )\n\n  return (\n    <Card flex=\"none\" padding={2} borderBottom style={{position: 'relative'}}>\n      <Flex align=\"center\" style={{minHeight: 0}}>\n        {header}\n      </Flex>\n    </Card>\n  )\n}\n","/* eslint-disable react/no-unused-prop-types,no-nested-ternary */\nimport {\n  urlSearchParamPreviewPerspective,\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n  type VercelSetBypassCookieValue,\n} from '@sanity/preview-url-secret/constants'\nimport {Card, Code, Flex, Label, Spinner, Stack, Text, usePrefersReducedMotion} from '@sanity/ui'\nimport {AnimatePresence, motion, MotionConfig} from 'framer-motion'\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n} from 'react'\nimport {flushSync} from 'react-dom'\nimport {useTranslation} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {MAX_TIME_TO_OVERLAYS_CONNECTION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_RELOAD,\n  type DispatchPresentationAction,\n  type PresentationState,\n} from '../reducers/presentationReducer'\nimport {\n  type ConnectionStatus,\n  type HeaderOptions,\n  type PresentationPerspective,\n  type PresentationViewport,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {IFrame} from './IFrame'\nimport {PreviewHeader} from './PreviewHeader'\n\nconst MotionFlex = motion.create(Flex)\n\n/** @public */\nexport interface PreviewProps extends Pick<PresentationState, 'iframe' | 'visualEditing'> {\n  canSharePreviewAccess: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  dispatch: DispatchPresentationAction\n  header?: HeaderOptions\n  initialUrl: URL\n  loadersConnection: ConnectionStatus\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  onRefresh: (fallback: () => void) => void\n  openPopup: (url: string) => void\n  overlaysConnection: ConnectionStatus\n  perspective: PresentationPerspective\n  previewUrl?: string\n  setViewport: (mode: 'desktop' | 'mobile') => void\n  targetOrigin: string\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  viewport: PresentationViewport\n  vercelProtectionBypass: string | null\n}\n\nexport const Preview = memo(\n  forwardRef<HTMLIFrameElement, PreviewProps>(function PreviewComponent(props, forwardedRef) {\n    const {\n      dispatch,\n      iframe,\n      header,\n      initialUrl,\n      loadersConnection,\n      overlaysConnection,\n      perspective,\n      viewport,\n      vercelProtectionBypass,\n    } = props\n\n    const [stablePerspective, setStablePerspective] = useState<typeof perspective | null>(null)\n    const urlPerspective = encodeStudioPerspective(\n      stablePerspective === null ? perspective : stablePerspective,\n    )\n    const previewUrl = useMemo(() => {\n      const url = new URL(initialUrl)\n      // Always set the perspective that's being used, even if preview mode isn't configured\n      if (!url.searchParams.get(urlSearchParamPreviewPerspective)) {\n        url.searchParams.set(urlSearchParamPreviewPerspective, urlPerspective)\n      }\n\n      if (vercelProtectionBypass || url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        // samesitenone is required since the request is from an iframe\n        url.searchParams.set(\n          urlSearchParamVercelSetBypassCookie,\n          'samesitenone' satisfies VercelSetBypassCookieValue,\n        )\n      }\n      // If there's a vercel protection bypass secret in the context, set it if none exists already\n      if (vercelProtectionBypass && !url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        url.searchParams.set(urlSearchParamVercelProtectionBypass, vercelProtectionBypass)\n      }\n\n      return url\n    }, [initialUrl, urlPerspective, vercelProtectionBypass])\n\n    useEffect(() => {\n      /**\n       * If the preview iframe is connected to the loader, we know that switching the perspective can be done without reloading the iframe.\n       */\n      if (loadersConnection === 'connected') {\n        /**\n         * Only set the stable perspective if it hasn't been set yet.\n         */\n        setStablePerspective((prev) => (prev === null ? perspective : prev))\n      }\n    }, [loadersConnection, perspective])\n\n    const {t} = useTranslation(presentationLocaleNamespace)\n    const {devMode} = usePresentationTool()\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const ref = useRef<HTMLIFrameElement | null>(null)\n\n    const previewHeader = <PreviewHeader {...props} iframeRef={ref} options={header} />\n\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    const loading = iframe.status === 'loading' || iframe.status === 'reloading'\n    const [timedOut, setTimedOut] = useState(false)\n    const refreshing = iframe.status === 'refreshing'\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy = loading || refreshing || overlaysConnection === 'connecting'\n\n    const handleRetry = useCallback(() => {\n      if (!ref.current) {\n        return\n      }\n\n      ref.current.src = previewUrl.toString()\n\n      dispatch({type: ACTION_IFRAME_RELOAD})\n    }, [dispatch, previewUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] = useState(false)\n    useEffect(() => {\n      if (loading || refreshing) {\n        return undefined\n      }\n\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 5_000)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [overlaysConnection, loading, refreshing])\n\n    useEffect(() => {\n      if (loading || refreshing || !showOverlaysConnectionStatus) {\n        return undefined\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          // eslint-disable-next-line no-console\n          console.error(\n            `Unable to connect to visual editing. Make sure you've setup '@sanity/visual-editing' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [loading, overlaysConnection, refreshing, showOverlaysConnectionStatus])\n\n    const onIFrameLoad = useCallback(() => {\n      dispatch({type: ACTION_IFRAME_LOADED})\n    }, [dispatch])\n\n    /**\n     * Ensure that clicking outside of menus and dialogs will close as focus shifts to the iframe\n     */\n    useEffect(() => {\n      if (!ref.current) {\n        return undefined\n      }\n      const instance = ref.current\n      function handleBlur() {\n        if (instance !== document.activeElement) {\n          return\n        }\n\n        instance.dispatchEvent(new MouseEvent('mousedown', {bubbles: true, cancelable: true}))\n      }\n      window.addEventListener('blur', handleBlur)\n      return () => {\n        window.removeEventListener('blur', handleBlur)\n      }\n    }, [])\n\n    const preventIframeInteraction = useMemo(() => {\n      return (\n        (loading || (overlaysConnection === 'connecting' && iframe.status !== 'refreshing')) &&\n        !continueAnyway\n      )\n    }, [continueAnyway, iframe.status, loading, overlaysConnection])\n\n    const canUseViewTransition = useSyncExternalStore(\n      // eslint-disable-next-line no-empty-function\n      useCallback(() => () => {}, []),\n      () => CSS.supports(`(view-transition-name: test)`),\n    )\n    const iframeAnimations = useMemo(() => {\n      return [\n        preventIframeInteraction ? 'background' : 'active',\n        loading ? 'reloading' : 'idle',\n        // If CSS View Transitions are supported, then transition iframe viewport dimensions with that instead of Motion\n        canUseViewTransition ? '' : viewport,\n        showOverlaysConnectionStatus && !continueAnyway ? 'timedOut' : '',\n      ]\n    }, [\n      canUseViewTransition,\n      continueAnyway,\n      loading,\n      preventIframeInteraction,\n      showOverlaysConnectionStatus,\n      viewport,\n    ])\n\n    const [currentViewport, setCurrentViewport] = useState(viewport)\n    const [iframeStyle, setIframeStyle] = useState(iframeVariants[viewport])\n    useEffect(() => {\n      if (canUseViewTransition && viewport !== currentViewport) {\n        const update = () => {\n          setCurrentViewport(viewport)\n          setIframeStyle(iframeVariants[viewport])\n        }\n        if (\n          !prefersReducedMotion &&\n          'startViewTransition' in document &&\n          typeof document.startViewTransition === 'function'\n        ) {\n          document.startViewTransition(() => flushSync(() => update()))\n        } else {\n          update()\n        }\n      }\n    }, [canUseViewTransition, prefersReducedMotion, currentViewport, viewport])\n\n    return (\n      <MotionConfig transition={prefersReducedMotion ? {duration: 0} : undefined}>\n        <TooltipDelayGroupProvider>\n          {previewHeader}\n\n          {/* @TODO: Move this to <PreviewFrame /> */}\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={(canUseViewTransition ? currentViewport : viewport) === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !loading &&\n                !refreshing &&\n                // viewport, // using CSS View Transitions instead of framer motion to drive this\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]: 'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition: '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          mode=\"ghost\"\n                          text={t('preview-frame.continue-button.text')}\n                          style={{opacity: 0}}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={4}>\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut\n                              ? t('preview-frame.status', {context: 'timeout'})\n                              : t('preview-frame.status', {context: 'connecting'})}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text={t('preview-frame.continue-button.text')}\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (loading ||\n                    (overlaysConnection === 'connecting' && iframe.status !== 'refreshing')) &&\n                  !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        {t('preview-frame.status', {context: 'loading'})}\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: '0',\n                      position: 'absolute',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message={t('preview-frame.connection.error.text')}\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.overlay.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: overlaysConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.loader.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: loadersConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                animate={iframeAnimations}\n                initial={['background']}\n                onLoad={onIFrameLoad}\n                preventClick={preventIframeInteraction}\n                ref={ref}\n                src={previewUrl.toString()}\n                style={iframeStyle}\n                variants={iframeVariants}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  }),\n)\nPreview.displayName = 'Memo(ForwardRef(Preview))'\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst errorVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","/** @internal */\nexport function defineWarnOnce() {\n  let warned = false\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (...args: any[]): void => {\n    if (!warned) {\n      // eslint-disable-next-line no-console\n      console.warn(...args)\n      warned = true\n    }\n  }\n}\n","import {validateApiPerspective} from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport {type MutableRefObject, useCallback, useMemo, useRef, useState} from 'react'\n\nimport {type FrameState, type PresentationPerspective} from './types'\nimport {defineWarnOnce} from './util/warnOnce'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\ntype DocumentCache = Record<string, DocumentOnPage>\ntype KeyedDocumentCache = Record<string, DocumentCache>\n\nconst warnOnceAboutCrossDatasetReference = defineWarnOnce()\n\n/**\n * @TODO should be refactored to an lru-cache that is keyed by the perspective, which could be an array (if it is, it should use consistent sorting),\n *       and the url path (optionally the origin too), so that swapping between perspectives and urls is fast.\n */\nexport function useDocumentsOnPage(\n  perspective: PresentationPerspective,\n  frameStateRef: MutableRefObject<FrameState>,\n): [\n  DocumentOnPage[],\n  (key: string, perspective: PresentationPerspective, state: DocumentOnPage[]) => void,\n] {\n  validateApiPerspective(perspective)\n\n  const [published, setPublished] = useState<KeyedDocumentCache>({})\n  const [previewDrafts, setPreviewDrafts] = useState<KeyedDocumentCache>({})\n\n  // Used to compare the frame url with its value when the cache was last updated\n  // If the url has changed, the entire cache is replaced\n  const urlRef = useRef<string | undefined>('')\n\n  const setDocumentsOnPage = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (key: string, perspective: PresentationPerspective, sourceDocuments: DocumentOnPage[] = []) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // eslint-disable-next-line no-warning-comments\n          // @TODO Handle cross dataset references\n\n          warnOnceAboutCrossDatasetReference(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache = perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((cache) => {\n        // Create the `next` documents, dedupe by `_id`\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n\n        // If the frame url has changed, replace the entire cache with the next documents\n        if (urlRef.current !== frameStateRef.current.url) {\n          urlRef.current = frameStateRef.current.url\n          return {[key]: next}\n        }\n\n        // If the keyed cache has changed, return the entire cache and replace the keyed part\n        const prev = cache[key]\n        if (!isEqual(prev, next)) {\n          return {...cache, [key]: next}\n        }\n\n        // Otherwise return the entire cache as is\n        return cache\n      })\n    },\n    [frameStateRef],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    const keyedCache = perspective === 'published' ? published : previewDrafts\n    const uniqueDocuments = Object.values(keyedCache).reduce((acc, cache) => {\n      Object.values(cache).forEach((doc) => {\n        acc[doc._id] = doc\n      })\n      return acc\n    }, {})\n\n    return Object.values(uniqueDocuments)\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import {type ResponseQueryOptions} from '@sanity/client'\nimport {match, type Path} from 'path-to-regexp'\nimport {useEffect, useRef, useState} from 'react'\nimport {useClient, usePerspective} from 'sanity'\nimport {type RouterState, useRouter} from 'sanity/router'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {API_VERSION} from './constants'\nimport {\n  type DocumentResolver,\n  type DocumentResolverContext,\n  type MainDocument,\n  type MainDocumentState,\n  type PresentationNavigate,\n  type PreviewUrlOption,\n} from './types'\n\n// Helper function to \"unwrap\" a result when it is either explicitly provided or\n// returned as the result of a passed function\nfunction fnOrObj<T, U>(arg: T | ((ctx: U) => T), context: U): T {\n  return arg instanceof Function ? arg(context) : arg\n}\n\nfunction getQueryFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): string | undefined {\n  if (resolver.resolve) {\n    const filter = resolver.resolve(context)?.filter\n    return filter\n      ? `// groq\n*[${filter}][0]{_id, _type}`\n      : undefined\n  }\n\n  if ('type' in resolver) {\n    return `// groq\n*[_type == \"${resolver.type}\"][0]{_id, _type}`\n  }\n\n  return `// groq\n*[${fnOrObj(resolver.filter, context)}][0]{_id, _type}`\n}\n\nfunction getParamsFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): Record<string, string> {\n  if (resolver.resolve) {\n    return resolver.resolve(context)?.params ?? context.params\n  }\n\n  if ('type' in resolver) {\n    return {}\n  }\n\n  return fnOrObj(resolver.params, context) ?? context.params\n}\n\nexport function getRouteContext(route: Path, url: URL): DocumentResolverContext | undefined {\n  const routes = Array.isArray(route) ? route : [route]\n\n  for (route of routes) {\n    let origin: DocumentResolverContext['origin'] = undefined\n    let path = route\n\n    // Handle absolute URLs\n    if (typeof route === 'string') {\n      try {\n        const absolute = new URL(route)\n        origin = absolute.origin\n        path = absolute.pathname\n      } catch {\n        // Ignore, as we assume a relative path\n      }\n    }\n\n    // If an origin has been explicitly provided, check that it matches\n    if (origin && url.origin !== origin) continue\n\n    try {\n      const matcher = match<Record<string, string>>(path, {decode: decodeURIComponent})\n      const result = matcher(url.pathname)\n      if (result) {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const {params, path} = result\n        return {origin, params, path}\n      }\n    } catch (e) {\n      throw new Error(`\"${route}\" is not a valid route pattern`)\n    }\n  }\n  return undefined\n}\n\nexport function useMainDocument(props: {\n  navigate?: PresentationNavigate\n  navigationHistory: RouterState[]\n  path?: string\n  previewUrl?: PreviewUrlOption\n  resolvers?: DocumentResolver[]\n}): MainDocumentState | undefined {\n  const {navigate, navigationHistory, path, previewUrl, resolvers = []} = props\n  const {state: routerState} = useRouter()\n  const {perspectiveStack} = usePerspective()\n  const client = useClient({apiVersion: API_VERSION})\n  const relativeUrl =\n    path || routerState._searchParams?.find(([key]) => key === 'preview')?.[1] || ''\n\n  const [mainDocumentState, setMainDocumentState] = useState<MainDocumentState | undefined>(\n    undefined,\n  )\n  const mainDocumentIdRef = useRef<string | undefined>(undefined)\n\n  const handleResponse = useEffectEvent((doc: MainDocument | undefined, url: URL) => {\n    if (!doc || mainDocumentIdRef.current !== doc._id) {\n      setMainDocumentState({\n        document: doc,\n        path: url.pathname,\n      })\n      mainDocumentIdRef.current = doc?._id\n\n      // We only want to force a navigation to the main document if\n      // the path changed but the document ID did not. An explicit\n      // document navigation should take precedence over displaying\n      // the main document. We determine if an explicit document\n      // navigation has occured by comparing the IDs of the last two\n      // resultant navigation states.\n      if (navigationHistory.at(-1)?.id === navigationHistory.at(-2)?.id) {\n        navigate?.({\n          id: doc?._id,\n          type: doc?._type,\n        })\n      }\n    }\n  })\n\n  useEffect(() => {\n    const base =\n      // eslint-disable-next-line no-nested-ternary\n      typeof previewUrl === 'string'\n        ? previewUrl\n        : typeof previewUrl === 'object'\n          ? previewUrl?.origin || location.origin\n          : location.origin\n    const url = new URL(relativeUrl, base)\n\n    if (resolvers.length) {\n      let result:\n        | {\n            context: DocumentResolverContext\n            resolver: DocumentResolver\n          }\n        | undefined\n      for (const resolver of resolvers) {\n        const context = getRouteContext(resolver.route, url)\n        if (context) {\n          result = {context, resolver}\n          break\n        }\n      }\n\n      if (result) {\n        const query = getQueryFromResult(result.resolver, result.context)\n        const params = getParamsFromResult(result.resolver, result.context)\n        if (query) {\n          const controller = new AbortController()\n          const options: ResponseQueryOptions = {\n            perspective: perspectiveStack,\n            signal: controller.signal,\n            tag: 'use-main-document',\n          }\n\n          client\n            .fetch<MainDocument | undefined>(query, params, options)\n            .then((doc) => handleResponse(doc, url))\n            .catch((e) => {\n              if (e instanceof Error && e.name === 'AbortError') return\n              setMainDocumentState({document: undefined, path: url.pathname})\n              mainDocumentIdRef.current = undefined\n            })\n          return () => {\n            controller.abort()\n          }\n        }\n      }\n    }\n    setMainDocumentState(undefined)\n    mainDocumentIdRef.current = undefined\n    return undefined\n  }, [client, previewUrl, relativeUrl, resolvers, perspectiveStack])\n\n  return mainDocumentState\n}\n","import { getPublishedId, studioPath } from \"@sanity/client/csm\";\nimport { pipe, string, minLength, optional, object, is, record, unknown, safeParse, parse } from \"valibot\";\nconst lengthyStr$1 = pipe(string(), minLength(1)), optionalLengthyStr = optional(lengthyStr$1), sanityNodeSchema = object({\n  baseUrl: lengthyStr$1,\n  dataset: optionalLengthyStr,\n  id: lengthyStr$1,\n  path: lengthyStr$1,\n  projectId: optionalLengthyStr,\n  tool: optionalLengthyStr,\n  type: optionalLengthyStr,\n  workspace: optionalLengthyStr\n});\nfunction isValidSanityNode(node) {\n  return is(sanityNodeSchema, node);\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction pathToUrlString(path) {\n  let str = \"\";\n  for (const segment of path) {\n    if (typeof segment == \"string\") {\n      str && (str += \".\"), str += segment;\n      continue;\n    }\n    if (typeof segment == \"number\") {\n      str && (str += \":\"), str += `${segment}`;\n      continue;\n    }\n    if (isArray(segment)) {\n      str && (str += \":\"), str += `${segment.join(\",\")}}`;\n      continue;\n    }\n    if (segment._key) {\n      str && (str += \":\"), str += `${segment._key}`;\n      continue;\n    }\n  }\n  return str;\n}\nfunction encodeSanityNodeData(node) {\n  const { id: _id, path, baseUrl, tool, workspace, type } = node;\n  return isValidSanityNode(node) ? [\n    [\"id\", getPublishedId(_id)],\n    [\"type\", type],\n    [\"path\", pathToUrlString(studioPath.fromString(path))],\n    [\"base\", encodeURIComponent(baseUrl)],\n    [\"workspace\", workspace],\n    [\"tool\", tool]\n  ].filter(([, value]) => !!value).map((part) => part.join(\"=\")).join(\";\") : void 0;\n}\nfunction createDataAttribute(props) {\n  function normalizePath(path) {\n    return path ? typeof path == \"string\" ? studioPath.fromString(path) : path : [];\n  }\n  function toString(props2) {\n    if (!props2.id) throw new Error(\"`id` is required to create a data attribute\");\n    if (!props2.type) throw new Error(\"`type` is required to create a data attribute\");\n    if (!props2.path || !props2.path.length)\n      throw new Error(\"`path` is required to create a data attribute\");\n    const attrs = {\n      baseUrl: props2.baseUrl || \"/\",\n      workspace: props2.workspace,\n      tool: props2.tool,\n      type: props2.type,\n      id: props2.id,\n      path: typeof props2.path == \"string\" ? props2.path : studioPath.toString(props2.path)\n    };\n    return encodeSanityNodeData(attrs);\n  }\n  const DataAttribute = (path) => toString({\n    ...props,\n    path: [...normalizePath(props.path), ...normalizePath(path)]\n  });\n  return DataAttribute.toString = function() {\n    return toString(props);\n  }, DataAttribute.combine = function(attrs) {\n    return createDataAttribute({\n      ...props,\n      ...attrs\n    });\n  }, DataAttribute.scope = function(path) {\n    return createDataAttribute({\n      ...props,\n      path: [...normalizePath(props.path), ...normalizePath(path)]\n    });\n  }, DataAttribute;\n}\nconst RE_SEGMENT_WITH_INDEX = /^([\\w-]+):(0|[1-9][0-9]*)$/, RE_SEGMENT_WITH_TUPLE = /^([\\w-]+):([0-9]+),([0-9]+)$/, RE_SEGMENT_WITH_KEY = /^([\\w-]+):([\\w-]+)$/;\nfunction urlStringToPath(str) {\n  const path = [];\n  for (const segment of str.split(\".\")) {\n    const withIndex = RE_SEGMENT_WITH_INDEX.exec(segment);\n    if (withIndex) {\n      path.push(withIndex[1], Number(withIndex[2]));\n      continue;\n    }\n    const withTuple = RE_SEGMENT_WITH_TUPLE.exec(segment);\n    if (withTuple) {\n      path.push(withTuple[1], [Number(withTuple[2]), Number(withTuple[3])]);\n      continue;\n    }\n    const withKey = RE_SEGMENT_WITH_KEY.exec(segment);\n    if (withKey) {\n      path.push(withKey[1], { _key: withKey[2] });\n      continue;\n    }\n    path.push(segment);\n  }\n  return path;\n}\nconst lengthyStr = pipe(string(), minLength(1)), sanityLegacyNodeSchema = object({\n  origin: lengthyStr,\n  href: lengthyStr,\n  data: optional(record(string(), unknown()))\n});\nfunction decodeSanityString(str) {\n  const data = str.split(\";\").reduce((acc, segment) => {\n    const [key, value] = segment.split(\"=\");\n    if (!key || segment.includes(\"=\") && !value) return acc;\n    switch (key) {\n      case \"id\":\n        acc.id = value;\n        break;\n      case \"type\":\n        acc.type = value;\n        break;\n      case \"path\":\n        acc.path = studioPath.toString(urlStringToPath(value));\n        break;\n      case \"base\":\n        acc.baseUrl = decodeURIComponent(value);\n        break;\n      case \"tool\":\n        acc.tool = value;\n        break;\n      case \"workspace\":\n        acc.workspace = value;\n        break;\n      case \"projectId\":\n        acc.projectId = value;\n        break;\n      case \"dataset\":\n        acc.dataset = value;\n        break;\n    }\n    return acc;\n  }, {});\n  if (isValidSanityNode(data))\n    return data;\n}\nfunction decodeSanityObject(data) {\n  const sanityNode = safeParse(sanityNodeSchema, data);\n  if (sanityNode.success)\n    return sanityNode.output;\n  const sanityLegacyNode = safeParse(sanityLegacyNodeSchema, data);\n  if (sanityLegacyNode.success)\n    try {\n      const url = new URL(\n        sanityLegacyNode.output.href,\n        typeof document > \"u\" ? \"https://example.com\" : location.origin\n      );\n      return url.searchParams.size > 0 ? parse(sanityNodeSchema, Object.fromEntries(url.searchParams.entries())) : sanityLegacyNode.output;\n    } catch (err) {\n      return console.error(\"Failed to parse sanity node\", err), sanityLegacyNode.output;\n    }\n}\nfunction decodeSanityNodeData(data) {\n  if (typeof data == \"object\" && data !== null)\n    return decodeSanityObject(data);\n  try {\n    const obj = JSON.parse(data);\n    return decodeSanityObject(obj);\n  } catch {\n    return decodeSanityString(data);\n  }\n}\nexport {\n  createDataAttribute,\n  decodeSanityNodeData,\n  encodeSanityNodeData,\n  pathToUrlString,\n  urlStringToPath\n};\n//# sourceMappingURL=index.js.map\n","import {studioPath} from '@sanity/client/csm'\nimport {urlStringToPath} from '@sanity/visual-editing-csm'\nimport type {PresentationStateParams} from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(state: PresentationStateParams): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport {type MutableRefObject, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {getPublishedId} from 'sanity'\nimport {type RouterContextValue, type RouterState, type SearchParam} from 'sanity/router'\n\nimport {parseRouterState} from './lib/parse'\nimport {\n  type CombinedSearchParams,\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nfunction pruneObject<T extends RouterState | PresentationParamsContextValue>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  frameStateRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  frameStateRef: MutableRefObject<FrameState>\n}): {\n  navigate: PresentationNavigate\n  navigationHistory: RouterState[]\n  params: PresentationParamsContextValue\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n} {\n  const params = useMemo<PresentationParamsContextValue>(() => {\n    const {id, path, type} = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview:\n        routerSearchParams.preview || `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n      perspective: routerSearchParams.perspective,\n      viewport: routerSearchParams.viewport,\n      inspect: routerSearchParams.inspect,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      templateParams: routerSearchParams.templateParams,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n      changesInspectorTab: routerSearchParams.changesInspectorTab as 'history' | 'review',\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const structureParams = useMemo<StructureDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      templateParams: params.templateParams,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n      changesInspectorTab: params.changesInspectorTab,\n    })\n    return pruned\n  }, [\n    params.changesInspectorTab,\n    params.comment,\n    params.inspect,\n    params.instruction,\n    params.path,\n    params.pathKey,\n    params.rev,\n    params.since,\n    params.template,\n    params.templateParams,\n    params.view,\n  ])\n\n  const searchParams = useMemo<PresentationSearchParams>(() => {\n    const pruned = pruneObject({\n      perspective: params.perspective,\n      preview: params.preview,\n      viewport: params.viewport,\n    })\n    return pruned\n  }, [params.perspective, params.preview, params.viewport])\n\n  const routerStateRef = useRef(routerState)\n\n  useEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const [navigationHistory, setNavigationHistory] = useState<RouterState[]>([routerState])\n\n  const navigate = useCallback<PresentationNavigate>(\n    (nextState, nextSearchState = {}, forceReplace) => {\n      // Force navigation to use published IDs only\n      if (nextState.id) nextState.id = getPublishedId(nextState.id)\n\n      // Extract type, id and path as 'routerState'\n      const {_searchParams: routerSearchParams, ...routerState} = routerStateRef.current\n\n      // Convert array of search params to an object\n      const routerSearchState = (routerSearchParams || []).reduce((acc, [key, value]) => {\n        acc[key as keyof CombinedSearchParams] = value as undefined | 'history' | 'review'\n        return acc\n      }, {} as CombinedSearchParams)\n\n      // Merge routerState and incoming state\n      const state: RouterState = pruneObject({\n        ...routerState,\n        ...nextState,\n      })\n\n      // Merge routerSearchState and incoming searchState\n      const searchState = pruneObject({\n        ...routerSearchState,\n        ...nextSearchState,\n      })\n\n      // If the document has changed, clear the template and templateParams\n      if (routerState.id !== state.id) {\n        delete searchState.template\n        delete searchState.templateParams\n      }\n\n      state._searchParams = Object.entries(searchState).reduce(\n        (acc, [key, value]) => [...acc, [key, value] as SearchParam],\n        [] as SearchParam[],\n      )\n\n      const replace = forceReplace ?? searchState.preview === frameStateRef.current.url\n\n      setNavigationHistory((prev) => [...prev, state])\n      routerNavigate(state, {replace})\n    },\n    [routerNavigate, frameStateRef],\n  )\n\n  return {\n    navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  }\n}\n","import {type Controller} from '@sanity/comlink'\nimport {useCallback, useEffect, useState} from 'react'\n\nimport {POPUP_CHECK_INTERVAL} from './constants'\n\n/**\n * A hook for managing popup Window contexts\n *\n * This hook handles:\n * - Opening new popup Windows, and adding them as targets to the controller\n * - Tracking existing popup windows, and cleaning up closed popups\n *\n * @param controller - Comlink controller instance that manages communication\n * between Window contexts\n *\n * @returns An object containing:\n * - popups: A Set of currently open popup Window objects\n * - open: Function to open a new popup Window with the specified URL\n *\n */\nexport const usePopups = (\n  controller?: Controller,\n): {\n  popups: Set<Window>\n  open: (url: string) => void\n} => {\n  // State to keep track of open popup windows\n  const [popups, setPopups] = useState<Set<Window>>(() => new Set())\n\n  // Function to open a new popup window\n  const open = useCallback((url: string) => {\n    const source = window.open(url, '_blank')\n    if (source) {\n      setPopups((prev) => new Set(prev).add(source))\n    }\n  }, [])\n\n  // Handles syncing the existing popups with the controller\n  useEffect(() => {\n    const unsubs: Array<() => void> = []\n    if (popups.size && controller) {\n      // loop popups and add targets\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          unsubs.push(controller.addTarget(source))\n        }\n      }\n    }\n    return () => {\n      unsubs.forEach((unsub) => unsub())\n    }\n  }, [controller, popups])\n\n  // Checks for closed popups and removes them from the tracked Set\n  useEffect(() => {\n    if (popups.size) {\n      const interval = setInterval(() => {\n        const closed = new Set<Window>()\n        for (const source of popups) {\n          if (source && 'closed' in source && source.closed) {\n            closed.add(source)\n          }\n        }\n        if (closed.size) {\n          setPopups((prev) => {\n            const next = new Set(prev)\n            for (const source of closed) {\n              next.delete(source)\n            }\n            return next\n          })\n        }\n      }, POPUP_CHECK_INTERVAL)\n\n      return () => {\n        clearInterval(interval)\n      }\n    }\n    return undefined\n  }, [popups])\n\n  return {popups, open}\n}\n","import {createPreviewSecret} from '@sanity/preview-url-secret/create-secret'\nimport {definePreviewUrl} from '@sanity/preview-url-secret/define-preview-url'\nimport {startTransition, useEffect, useMemo, useRef, useState} from 'react'\nimport {type SanityClient, useActiveWorkspace, useClient, useCurrentUser} from 'sanity'\nimport {suspend} from 'suspend-react'\n\nimport {API_VERSION} from './constants'\nimport {type PresentationPerspective, type PreviewUrlOption} from './types'\nimport {encodeStudioPerspective} from './util/encodeStudioPerspective'\n\nexport function usePreviewUrl(\n  previewUrl: PreviewUrlOption,\n  toolName: string,\n  studioPreviewPerspective: PresentationPerspective,\n  previewSearchParam: string | null,\n  canCreateUrlPreviewSecrets: boolean,\n): URL {\n  const client = useClient({apiVersion: API_VERSION})\n  const workspace = useActiveWorkspace()\n  const basePath = workspace?.activeWorkspace?.basePath || '/'\n  const workspaceName = workspace?.activeWorkspace?.name || 'default'\n  const deps = useSuspendCacheKeys(toolName, basePath, workspaceName, previewSearchParam)\n  const previewUrlSecret = usePreviewUrlSecret(\n    (canCreateUrlPreviewSecrets && typeof previewUrl === 'object') ||\n      typeof previewUrl === 'function',\n    deps,\n  )\n\n  return suspend(async () => {\n    if (typeof previewUrl === 'string') {\n      const resolvedUrl = new URL(previewUrl, location.origin)\n      let resultUrl = resolvedUrl\n      try {\n        if (previewSearchParam) {\n          const restoredUrl = new URL(previewSearchParam, resolvedUrl)\n          if (restoredUrl.origin === resolvedUrl.origin) {\n            resultUrl = restoredUrl\n          }\n        }\n      } catch {\n        // ignore\n      }\n      // Prevent infinite recursion\n      if (\n        location.origin === resultUrl.origin &&\n        (resultUrl.pathname.startsWith(`${basePath}/`) || resultUrl.pathname === basePath)\n      ) {\n        return resolvedUrl\n      }\n      return resultUrl\n    }\n    const resolvePreviewUrl =\n      typeof previewUrl === 'object' ? definePreviewUrl<SanityClient>(previewUrl) : previewUrl\n    const resolvedUrl = await resolvePreviewUrl({\n      client,\n      previewUrlSecret: previewUrlSecret!,\n      studioPreviewPerspective: encodeStudioPerspective(studioPreviewPerspective),\n      previewSearchParam,\n      studioBasePath: basePath,\n    })\n    return new URL(resolvedUrl, location.origin)\n  }, [...deps, previewUrlSecret]) satisfies URL\n}\n\n// https://github.com/pmndrs/suspend-react?tab=readme-ov-file#making-cache-keys-unique\nconst resolveUUID = Symbol('sanity/presentation/resolveUUID')\n\nfunction useSuspendCacheKeys(\n  toolName: string,\n  basePath: string,\n  workspaceName: string,\n  previewSearchParam: string | null,\n) {\n  // Allow busting the cache when the Presentation Tool is reloaded, without causing it to suspend on every render that changes the `preview` parameter\n  const [cachedPreviewSearchParam, setCachedPreviewSearchParam] = useState(\n    () => previewSearchParam || '',\n  )\n  const timeoutRef = useRef(0)\n  useEffect(() => {\n    if (cachedPreviewSearchParam && previewSearchParam) {\n      // Handle resets, like when the Presentation Tool is clicked in the navbar\n      window.clearTimeout(timeoutRef.current)\n      return () => {\n        timeoutRef.current = window.setTimeout(() => {\n          setCachedPreviewSearchParam('')\n        }, 100)\n      }\n    }\n    return undefined\n  }, [cachedPreviewSearchParam, previewSearchParam])\n\n  const currentUser = useCurrentUser()\n  return useMemo(\n    () => [\n      // Cache based on a few specific conditions\n      'sanity/presentation',\n      basePath,\n      workspaceName,\n      toolName,\n      currentUser?.id,\n      resolveUUID,\n      cachedPreviewSearchParam,\n    ],\n    [basePath, currentUser?.id, toolName, workspaceName, cachedPreviewSearchParam],\n  )\n}\n\nfunction usePreviewUrlSecret(enabled: boolean, deps: (string | symbol | undefined)[]) {\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [secretLastExpiredAt, setSecretLastExpiredAt] = useState<string>('')\n\n  const previewUrlSecret = enabled\n    ? suspend(async () => {\n        return await createPreviewSecret(\n          client,\n          '@sanity/presentation',\n          typeof window === 'undefined' ? '' : location.href,\n          currentUser?.id,\n        )\n      }, [...deps, secretLastExpiredAt])\n    : null\n\n  useEffect(() => {\n    if (!previewUrlSecret) return undefined\n    const timeout = setTimeout(() => {\n      startTransition(() => setSecretLastExpiredAt(previewUrlSecret.expiresAt.toString()))\n    }, previewUrlSecret.expiresAt.getTime() - Date.now())\n    return () => clearTimeout(timeout)\n  }, [previewUrlSecret])\n\n  return previewUrlSecret?.secret || null\n}\n","import {type StatusEvent} from '@sanity/comlink'\nimport {useCallback, useMemo, useState} from 'react'\n\nimport {type ConnectionStatus} from './types'\n\n/**\n * A hook that manages and returns the connection status of multiple channels\n *\n * returns an array containing the\n * current status and a function to update the status based on incoming events\n *\n * The status can be one of the following:\n * - 'connected': If any channel is connected\n * - 'connecting': If the first connection is being established\n * - 'reconnecting': If a reconnection is in progress\n * - 'idle': If no connections have been made yet\n *\n * The function to update the status takes a `StatusEvent` object which includes\n * the channel and the status\n */\nexport function useStatus(): [ConnectionStatus, (event: StatusEvent) => void] {\n  // State to keep track of the status of each channel\n  const [statusMap, setStatusMap] = useState(\n    new Map<string, {status: ConnectionStatus; hasConnected: boolean}>(),\n  )\n\n  // Memoized computation of the overall status based on the status of individual channels\n  const memoStatus = useMemo(() => {\n    const values = Array.from(statusMap.values())\n    // If any channel is connected, return the `connected` status\n    if (values.find(({status}) => status === 'connected')) {\n      return 'connected'\n    }\n    // If the initial connection is being established, return `connecting` status\n    const handshaking = values.filter(({status}) => status === 'connecting')\n    if (handshaking.length) {\n      return handshaking.some(({hasConnected}) => !hasConnected) ? 'connecting' : 'reconnecting'\n    }\n    // If nothing has happened yet, return `idle` status\n    return 'idle'\n  }, [statusMap])\n\n  // Callback to update the status map based on the received event\n  const setStatusFromEvent = useCallback((event: StatusEvent) => {\n    setStatusMap((prev) => {\n      const next = new Map(prev)\n      if (event.status === 'disconnected') {\n        // Remove the channel from the map if a disconnect event is received\n        next.delete(event.connection)\n      } else {\n        // Update the status and connection flag for the channel\n        const hasConnected =\n          next.get(event.connection)?.hasConnected || event.status === 'connected'\n        const status = event.status === 'handshaking' ? 'connecting' : event.status\n        next.set(event.connection, {status, hasConnected})\n      }\n      return next\n    })\n  }, [])\n\n  // Return the overall status and the function to update the status\n  return [memoStatus, setStatusFromEvent]\n}\n","/* eslint-disable max-statements,@typescript-eslint/no-shadow */\nimport {studioPath} from '@sanity/client/csm'\nimport {\n  type Controller,\n  createConnectionMachine,\n  createController,\n  type Message,\n} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type PreviewKitNodeMsg,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n} from '@sanity/preview-url-secret/constants'\nimport {BoundaryElementProvider, Flex} from '@sanity/ui'\nimport {lazy, Suspense, useCallback, useEffect, useMemo, useReducer, useRef, useState} from 'react'\nimport {\n  type CommentIntentGetter,\n  COMMENTS_INSPECTOR_NAME,\n  type Path,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  usePerspective,\n  useProjectId,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {type RouterContextValue, useRouter} from 'sanity/router'\nimport {styled} from 'styled-components'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {DEFAULT_TOOL_NAME, EDIT_INTENT_MODE} from './constants'\nimport PostMessageFeatures from './features/PostMessageFeatures'\nimport {debounce} from './lib/debounce'\nimport {SharedStateProvider} from './overlays/SharedStateProvider'\nimport {Panel} from './panels/Panel'\nimport {Panels} from './panels/Panels'\nimport {PresentationContent} from './PresentationContent'\nimport {PresentationNavigateProvider} from './PresentationNavigateProvider'\nimport {usePresentationNavigator} from './PresentationNavigator'\nimport {PresentationParamsProvider} from './PresentationParamsProvider'\nimport {PresentationProvider} from './PresentationProvider'\nimport {Preview} from './preview/Preview'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_REFRESH,\n  ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n  presentationReducer,\n  presentationReducerInit,\n} from './reducers/presentationReducer'\nimport {\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationPerspective,\n  type PresentationPluginOptions,\n  type PresentationStateParams,\n  type PresentationViewport,\n  type StructureDocumentPaneParams,\n  type VisualEditingConnection,\n} from './types'\nimport {useDocumentsOnPage} from './useDocumentsOnPage'\nimport {useMainDocument} from './useMainDocument'\nimport {useParams} from './useParams'\nimport {usePopups} from './usePopups'\nimport {usePreviewUrl} from './usePreviewUrl'\nimport {useStatus} from './useStatus'\n\nconst LiveQueries = lazy(() => import('./loader/LiveQueries'))\nconst PostMessageDocuments = lazy(() => import('./overlays/PostMessageDocuments'))\nconst PostMessageRefreshMutations = lazy(() => import('./editor/PostMessageRefreshMutations'))\nconst PostMessagePerspective = lazy(() => import('./PostMessagePerspective'))\nconst PostMessagePreviewSnapshots = lazy(() => import('./editor/PostMessagePreviewSnapshots'))\nconst PostMessageSchema = lazy(() => import('./overlays/schema/PostMessageSchema'))\nconst PostMessageTelemetry = lazy(() => import('./PostMessageTelemetry'))\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n  canCreateUrlPreviewSecrets: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  vercelProtectionBypass: string | null\n}): React.JSX.Element {\n  const {\n    canCreateUrlPreviewSecrets,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    tool,\n    vercelProtectionBypass,\n  } = props\n  const components = tool.options?.components\n  const _previewUrl = tool.options?.previewUrl\n  const name = tool.name || DEFAULT_TOOL_NAME\n  const {unstable_navigator, unstable_header} = components || {}\n\n  const {navigate: routerNavigate, state: routerState} = useRouter() as RouterContextValue & {\n    state: PresentationStateParams\n  }\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n  const {perspectiveStack, selectedPerspectiveName = 'drafts', selectedReleaseId} = usePerspective()\n  const perspective = (\n    selectedReleaseId ? perspectiveStack : selectedPerspectiveName\n  ) as PresentationPerspective\n\n  const initialPreviewUrl = usePreviewUrl(\n    _previewUrl || '/',\n    name,\n    perspective,\n    routerSearchParams.preview || null,\n    canCreateUrlPreviewSecrets,\n  )\n  const canSharePreviewAccess = useMemo<boolean>(() => {\n    if (\n      _previewUrl &&\n      typeof _previewUrl === 'object' &&\n      'draftMode' in _previewUrl &&\n      _previewUrl.draftMode\n    ) {\n      // eslint-disable-next-line no-console\n      console.warn('previewUrl.draftMode is deprecated, use previewUrl.previewMode instead')\n      return _previewUrl.draftMode.shareAccess !== false\n    }\n    if (\n      _previewUrl &&\n      typeof _previewUrl === 'object' &&\n      'previewMode' in _previewUrl &&\n      _previewUrl.previewMode\n    ) {\n      return _previewUrl.previewMode.shareAccess !== false\n    }\n    return false\n  }, [_previewUrl])\n\n  const [devMode] = useState(() => {\n    const option = tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return typeof window !== 'undefined' && window.location.hostname === 'localhost'\n  })\n\n  const targetOrigin = useMemo(() => {\n    return initialPreviewUrl.origin\n  }, [initialPreviewUrl.origin])\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [controller, setController] = useState<Controller>()\n  const [visualEditingComlink, setVisualEditingComlink] = useState<VisualEditingConnection | null>(\n    null,\n  )\n\n  const frameStateRef = useRef<FrameState>({\n    title: undefined,\n    url: undefined,\n  })\n\n  const {\n    navigate: _navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n    frameStateRef,\n  })\n\n  // Most navigation events should be debounced, so use this unless explicitly needed\n  const navigate = useMemo(() => debounce<PresentationNavigate>(_navigate, 50), [_navigate])\n\n  const [state, dispatch] = useReducer(presentationReducer, {}, presentationReducerInit)\n\n  const viewport = useMemo(() => (params.viewport ? 'mobile' : 'desktop'), [params.viewport])\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective, frameStateRef)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const mainDocumentState = useMainDocument({\n    // Prevent flash of content by using immediate navigation\n    navigate: _navigate,\n    navigationHistory,\n    path: params.preview,\n    previewUrl: tool.options?.previewUrl,\n    resolvers: tool.options?.resolve?.mainDocuments,\n  })\n\n  const [overlaysConnection, setOverlaysConnection] = useStatus()\n  const [loadersConnection, setLoadersConnection] = useStatus()\n  const [previewKitConnection, setPreviewKitConnection] = useStatus()\n\n  const {open: handleOpenPopup} = usePopups(controller)\n\n  const isLoading = state.iframe.status === 'loading'\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target || isLoading) return undefined\n\n    const controller = createController({targetOrigin})\n    controller.addTarget(target)\n    setController(controller)\n\n    return () => {\n      controller.destroy()\n      setController(undefined)\n    }\n  }, [targetOrigin, isLoading])\n\n  const handleNavigate = useEffectEvent<typeof navigate>(\n    (nextState, nextSearchState, forceReplace) =>\n      navigate(nextState, nextSearchState, forceReplace),\n  )\n  useEffect(() => {\n    if (!controller) return undefined\n\n    const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n      {\n        name: 'presentation',\n        heartbeat: true,\n        connectTo: 'visual-editing',\n      },\n      createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n      }),\n    )\n\n    comlink.on('visual-editing/focus', (data) => {\n      if (!('id' in data)) return\n      handleNavigate({\n        type: data.type,\n        id: data.id,\n        path: data.path,\n      })\n    })\n\n    comlink.on('visual-editing/navigate', (data) => {\n      const {title, url} = data\n      if (frameStateRef.current.url !== url) {\n        try {\n          // Handle bypass params being forwarded to the final URL\n          const [urlWithoutSearch, search] = url.split('?')\n          const searchParams = new URLSearchParams(search)\n          searchParams.delete(urlSearchParamVercelProtectionBypass)\n          searchParams.delete(urlSearchParamVercelSetBypassCookie)\n          handleNavigate(\n            {},\n            {preview: `${urlWithoutSearch}${searchParams.size > 0 ? '?' : ''}${searchParams}`},\n          )\n        } catch {\n          handleNavigate({}, {preview: url})\n        }\n      }\n      frameStateRef.current = {title, url}\n    })\n\n    comlink.on('visual-editing/meta', (data) => {\n      frameStateRef.current.title = data.title\n    })\n\n    comlink.on('visual-editing/toggle', (data) => {\n      dispatch({\n        type: ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n        enabled: data.enabled,\n      })\n    })\n\n    comlink.on('visual-editing/documents', (data) => {\n      setDocumentsOnPage(\n        'visual-editing',\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data.perspective as unknown as any,\n        data.documents,\n      )\n    })\n\n    // @todo This won't work for multiple window contexts?\n    comlink.on('visual-editing/refreshing', (data) => {\n      if (data.source === 'manual') {\n        clearTimeout(refreshRef.current)\n      } else if (data.source === 'mutation') {\n        dispatch({type: ACTION_IFRAME_REFRESH})\n      }\n    })\n\n    comlink.on('visual-editing/refreshed', () => {\n      dispatch({type: ACTION_IFRAME_LOADED})\n    })\n\n    comlink.onStatus(setOverlaysConnection)\n\n    const stop = comlink.start()\n    setVisualEditingComlink(comlink)\n    return () => {\n      stop()\n      setVisualEditingComlink(null)\n    }\n  }, [controller, setDocumentsOnPage, setOverlaysConnection, targetOrigin])\n\n  useEffect(() => {\n    if (!controller) return undefined\n    const comlink = controller.createChannel<Message, PreviewKitNodeMsg>(\n      {\n        name: 'presentation',\n        connectTo: 'preview-kit',\n        heartbeat: true,\n      },\n      createConnectionMachine<Message, PreviewKitNodeMsg>().provide({\n        actors: createCompatibilityActors(),\n      }),\n    )\n\n    comlink.onStatus(setPreviewKitConnection)\n\n    comlink.on('preview-kit/documents', (data) => {\n      if (data.projectId === projectId && data.dataset === dataset) {\n        setDocumentsOnPage(\n          'preview-kit',\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          data.perspective as unknown as any,\n          data.documents,\n        )\n      }\n    })\n\n    return comlink.start()\n  }, [controller, dataset, projectId, setDocumentsOnPage, setPreviewKitConnection, targetOrigin])\n\n  const handleFocusPath = useCallback(\n    (nextPath: Path) => {\n      // Don’t need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n      navigate({path: studioPath.toString(nextPath)}, {}, true)\n    },\n    [navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, initialPreviewUrl.origin)\n      const preview = url.pathname + url.search\n      if (url.origin === initialPreviewUrl.origin && preview !== params.preview) {\n        navigate({}, {preview})\n      }\n    },\n    [initialPreviewUrl, params, navigate],\n  )\n\n  const handleStructureParams = useCallback(\n    (structureParams: StructureDocumentPaneParams) => {\n      navigate({}, structureParams)\n    },\n    [navigate],\n  )\n\n  // Dispatch a focus or blur message when the id or path change\n  useEffect(() => {\n    if (params.id && params.path) {\n      visualEditingComlink?.post('presentation/focus', {id: params.id, path: params.path})\n    } else {\n      visualEditingComlink?.post('presentation/blur')\n    }\n  }, [params.id, params.path, visualEditingComlink])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      frameStateRef.current.url &&\n      params.preview &&\n      frameStateRef.current.url !== params.preview\n    ) {\n      frameStateRef.current.url = params.preview\n      if (overlaysConnection !== 'connected' && iframeRef.current) {\n        iframeRef.current.src = `${targetOrigin}${params.preview}`\n      } else {\n        visualEditingComlink?.post('presentation/navigate', {\n          url: params.preview,\n          type: 'replace',\n        })\n      }\n    }\n  }, [overlaysConnection, targetOrigin, params.preview, visualEditingComlink])\n\n  const toggleOverlay = useCallback(\n    () => visualEditingComlink?.post('presentation/toggle-overlay'),\n    [visualEditingComlink],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const [{navigatorEnabled, toggleNavigator}, PresentationNavigator] = usePresentationNavigator({\n    unstable_navigator,\n  })\n\n  const refreshRef = useRef<number>(undefined)\n  const handleRefresh = useCallback(\n    (fallback: () => void) => {\n      dispatch({type: ACTION_IFRAME_REFRESH})\n      if (visualEditingComlink) {\n        // We only wait 300ms for the iframe to ack the refresh request before running the fallback logic\n        refreshRef.current = window.setTimeout(fallback, 300)\n        visualEditingComlink.post('presentation/refresh', {\n          source: 'manual',\n          livePreviewEnabled:\n            previewKitConnection === 'connected' || loadersConnection === 'connected',\n        })\n        return\n      }\n      fallback()\n    },\n    [loadersConnection, previewKitConnection, visualEditingComlink],\n  )\n\n  const workspace = useWorkspace()\n\n  const getCommentIntent = useCallback<CommentIntentGetter>(\n    ({id, type, path}) => {\n      if (frameStateRef.current.url) {\n        return {\n          title: frameStateRef.current.title || frameStateRef.current.url,\n          name: 'edit',\n          params: {\n            id,\n            path,\n            type,\n            inspect: COMMENTS_INSPECTOR_NAME,\n            workspace: workspace.name,\n            mode: EDIT_INTENT_MODE,\n            preview: params.preview,\n          },\n        }\n      }\n      return undefined\n    },\n    [params.preview, workspace.name],\n  )\n\n  const setViewport = useCallback(\n    (next: PresentationViewport) => {\n      // Omit the viewport URL search param if the next viewport state is the\n      // default: 'desktop'\n      const viewport = next === 'desktop' ? undefined : 'mobile'\n      navigate({}, {viewport}, true)\n    },\n    [navigate],\n  )\n\n  return (\n    <>\n      <PresentationProvider\n        devMode={devMode}\n        name={name}\n        navigate={navigate}\n        params={params}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <SharedStateProvider comlink={visualEditingComlink}>\n              <Container data-testid=\"presentation-root\" height=\"fill\">\n                <Panels>\n                  <PresentationNavigator />\n                  <Panel\n                    id=\"preview\"\n                    minWidth={325}\n                    defaultSize={navigatorEnabled ? 50 : 75}\n                    order={3}\n                  >\n                    <Flex direction=\"column\" flex={1} height=\"fill\" ref={setBoundaryElement}>\n                      <BoundaryElementProvider element={boundaryElement}>\n                        <Preview\n                          // Make sure the iframe is unmounted if the targetOrigin has changed\n                          key={targetOrigin}\n                          canSharePreviewAccess={canSharePreviewAccess}\n                          canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n                          canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n                          dispatch={dispatch}\n                          header={unstable_header}\n                          iframe={state.iframe}\n                          initialUrl={initialPreviewUrl}\n                          loadersConnection={loadersConnection}\n                          navigatorEnabled={navigatorEnabled}\n                          onPathChange={handlePreviewPath}\n                          onRefresh={handleRefresh}\n                          openPopup={handleOpenPopup}\n                          overlaysConnection={overlaysConnection}\n                          previewUrl={params.preview}\n                          perspective={perspective}\n                          ref={iframeRef}\n                          setViewport={setViewport}\n                          targetOrigin={targetOrigin}\n                          toggleNavigator={toggleNavigator}\n                          toggleOverlay={toggleOverlay}\n                          viewport={viewport}\n                          visualEditing={state.visualEditing}\n                          vercelProtectionBypass={vercelProtectionBypass}\n                        />\n                      </BoundaryElementProvider>\n                    </Flex>\n                  </Panel>\n                  <PresentationContent\n                    documentId={params.id}\n                    documentsOnPage={documentsOnPage}\n                    documentType={params.type}\n                    getCommentIntent={getCommentIntent}\n                    mainDocumentState={mainDocumentState}\n                    onFocusPath={handleFocusPath}\n                    onStructureParams={handleStructureParams}\n                    searchParams={searchParams}\n                    setDisplayedDocument={setDisplayedDocument}\n                    structureParams={structureParams}\n                  />\n                </Panels>\n              </Container>\n            </SharedStateProvider>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      <Suspense>\n        {controller && (\n          <LiveQueries\n            controller={controller}\n            perspective={perspective}\n            liveDocument={displayedDocument}\n            onDocumentsOnPage={setDocumentsOnPage}\n            onLoadersConnection={setLoadersConnection}\n          />\n        )}\n        {visualEditingComlink && params.id && params.type && (\n          <PostMessageRefreshMutations\n            comlink={visualEditingComlink}\n            id={params.id}\n            type={params.type}\n            loadersConnection={loadersConnection}\n            previewKitConnection={previewKitConnection}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageSchema comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && documentsOnPage.length > 0 && (\n          <PostMessagePreviewSnapshots\n            comlink={visualEditingComlink}\n            perspective={perspective}\n            refs={documentsOnPage}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageDocuments comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageFeatures comlink={visualEditingComlink} />}\n        {visualEditingComlink && (\n          <PostMessagePerspective comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageTelemetry comlink={visualEditingComlink} />}\n      </Suspense>\n    </>\n  )\n}\n\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\n","import {subcribeToVercelProtectionBypass} from '@sanity/preview-url-secret/toggle-vercel-protection-bypass'\nimport {useEffect, useReducer, useState} from 'react'\nimport {useClient} from 'sanity'\n\nimport {API_VERSION} from './constants'\n\ntype VercelProtectionBypassReadyState = 'loading' | 'ready'\n\nexport function useVercelBypassSecret(): [\n  vercelProtectionBypassSecret: string | null,\n  vercelProtectionBypassReadyState: VercelProtectionBypassReadyState,\n] {\n  const client = useClient({apiVersion: API_VERSION})\n  const [vercelProtectionBypassReadyState, ready] = useReducer(\n    () => 'ready' as 'ready' | 'loading',\n    'loading',\n  )\n  const [vercelProtectionBypassSecret, setVercelProtectionBypassSecret] = useState<string | null>(\n    null,\n  )\n\n  useEffect(() => {\n    const unsubscribe = subcribeToVercelProtectionBypass(client, (secret) => {\n      setVercelProtectionBypassSecret(secret)\n      ready()\n    })\n    return () => unsubscribe()\n  }, [client])\n\n  return [vercelProtectionBypassSecret, vercelProtectionBypassReadyState]\n}\n","import {\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n} from '@sanity/preview-url-secret/constants'\nimport {useToast} from '@sanity/ui'\nimport {uuid} from '@sanity/uuid'\nimport {useEffect, useState} from 'react'\nimport {type PermissionCheckResult, type Tool, useGrantsStore, useTranslation} from 'sanity'\n\nimport {presentationLocaleNamespace} from './i18n'\nimport {PresentationSpinner} from './PresentationSpinner'\nimport PresentationTool from './PresentationTool'\nimport {type PresentationPluginOptions} from './types'\nimport {useVercelBypassSecret} from './useVercelBypassSecret'\n\nexport default function PresentationToolGrantsCheck(props: {\n  tool: Tool<PresentationPluginOptions>\n}): React.JSX.Element {\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {previewUrl} = props.tool.options ?? {}\n  const {push: pushToast} = useToast()\n  const willGeneratePreviewUrlSecret =\n    typeof previewUrl === 'object' || typeof previewUrl === 'function'\n  const grantsStore = useGrantsStore()\n  const [previewAccessSharingCreatePermission, setCreateAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewAccessSharingUpdatePermission, setUpdateAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewAccessSharingReadPermission, setReadAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewUrlSecretPermission, setPreviewUrlSecretPermission] =\n    useState<PermissionCheckResult | null>(null)\n\n  useEffect(() => {\n    if (!willGeneratePreviewUrlSecret) return undefined\n\n    const previewCreateAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('create', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setCreateAccessSharingPermission)\n    const previewUpdateAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('update', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setUpdateAccessSharingPermission)\n    const previewReadAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('read', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setReadAccessSharingPermission)\n    const previewUrlSecretPermissionSubscription = grantsStore\n      .checkDocumentPermission('create', {_id: `drafts.${uuid()}`, _type: schemaType})\n      .subscribe(setPreviewUrlSecretPermission)\n\n    return () => {\n      previewCreateAccessSharingPermissionSubscription.unsubscribe()\n      previewUpdateAccessSharingPermissionSubscription.unsubscribe()\n      previewReadAccessSharingPermissionSubscription.unsubscribe()\n      previewUrlSecretPermissionSubscription.unsubscribe()\n    }\n  }, [grantsStore, willGeneratePreviewUrlSecret])\n\n  const canCreateUrlPreviewSecrets = previewUrlSecretPermission?.granted\n\n  useEffect(() => {\n    if (!willGeneratePreviewUrlSecret || canCreateUrlPreviewSecrets !== false) return undefined\n    const raf = requestAnimationFrame(() =>\n      pushToast({\n        closable: true,\n        status: 'error',\n        duration: 30_000,\n        title: t('preview-url-secret.missing-grants'),\n      }),\n    )\n    return () => cancelAnimationFrame(raf)\n  }, [canCreateUrlPreviewSecrets, pushToast, t, willGeneratePreviewUrlSecret])\n\n  const [vercelProtectionBypass, vercelProtectionBypassReadyState] = useVercelBypassSecret()\n\n  if (\n    vercelProtectionBypassReadyState === 'loading' ||\n    (willGeneratePreviewUrlSecret &&\n      (!previewAccessSharingCreatePermission ||\n        typeof previewAccessSharingCreatePermission.granted === 'undefined' ||\n        !previewAccessSharingUpdatePermission ||\n        typeof previewAccessSharingUpdatePermission.granted === 'undefined' ||\n        !previewUrlSecretPermission ||\n        !previewAccessSharingReadPermission ||\n        typeof previewAccessSharingReadPermission.granted === 'undefined' ||\n        typeof previewUrlSecretPermission.granted === 'undefined'))\n  ) {\n    return <PresentationSpinner />\n  }\n\n  return (\n    <PresentationTool\n      {...props}\n      vercelProtectionBypass={vercelProtectionBypass}\n      canCreateUrlPreviewSecrets={canCreateUrlPreviewSecrets === true}\n      canToggleSharePreviewAccess={\n        previewAccessSharingCreatePermission?.granted === true &&\n        previewAccessSharingUpdatePermission?.granted === true\n      }\n      canUseSharedPreviewAccess={previewAccessSharingReadPermission?.granted === true}\n    />\n  )\n}\n"],"names":["PostMessageFeatures","props","$","_c","comlink","t0","t1","on","_temp","useEffect","memo","features","optimistic","debounce","fn","timeout","timer","args","clearTimeout","setTimeout","apply","SharedStateProvider","children","Symbol","for","sharedState","useRef","t2","state","current","t3","key","value","post","setValue","t4","key_0","removeValue","t5","t6","context","t7","Root","styled","div","Panel","defaultSize","id","minWidth","maxWidth","order","undefined","useContext","PresentationPanelsContext","Error","getPanelStyle","registerElement","unregisterElement","style","type","useLayoutEffect","itemKey","getStoredItem","JSON","parse","localStorage","getItem","setStoredItem","data","setItem","stringify","getKeyForPanels","panels","map","panel","join","usePanelsStorage","get","_temp2","set","_temp3","setDebounced","panels_0","widths","stored_0","stored","Array","isArray","some","val","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getNextWidths","delta","panelBefore","panelAfter","panelsState","initialDragState","prevWidths","initialWidths","nextWidths","pivotPanel","index","findIndex","width","abs","deltaApplied","deltaRemaining","toPrecision","localeCompare","numeric","length","getPanelWidth","getOffset","event","handleElement","initialOffset","initialHandleElementRect","pointerOffset","clientX","elementOffset","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","from","values","sort","a","b","validateWidths","widthsToValidate","total","reduce","remainingWidth","toFixed","getDefaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","PanelsWrapper","Panels","panelsEl","Map","setElements","useState","filter","setWidths","activeResizer","setActiveResizer","panelsRef","flexGrow","pointerEvents","id_0","prev","has","next","t8","id_1","prev_0","next_0","delete","t9","window","innerWidth","dragOffset","resizerIndex","resizerRect","startX","dragRef","t10","id_2","elementsArr","el","resizer","resizeElement","acc","el_0","i","acc_0","el_1","i_0","pageX","startDragging","t11","stopDragging","t12","id_3","event_0","preventDefault","stopPropagation","resizer_0","resizeElement_0","offset","rect","prevWidth","i_1","drag","t13","t14","storage","t15","t16","widths_0","storedWidths","validatedStoredWidths","defaultWidths","t17","t18","t19","t20","resizeObserver","ResizeObserver","prevWidths_0","nextWidths_0","prevWidth_0","i_2","observe","disconnect","t21","t22","t23","t24","ErrorCard","message","onContinueAnyway","onRetry","restProps","t","useTranslation","presentationLocaleNamespace","retryButton","continueAnywayButton","Container","encodeQueryString","params","parts","Object","entries","resolveQueryStringFromParams","nextParams","allowed","safeNextParams","includes","obj","BackLink","forwardRef","ref","searchParams","_searchParams","ReferenceChildLink","documentId","documentType","parentRefPath","template","PresentationPaneRouterProvider","onStructureParams","structureParams","refs","routerState","resolvePathFromState","useRouter","fromEntries","routerSearchParams","useUnique","path","qs","createPathWithParams","childLinkProps","childId","find","r","_id","getPublishedId","_type","backLinkProps","childLinkProps_0","nextParams_0","inspect","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ChildLink","ParameterizedLink","closeCurrentAndAfter","handleEditReference","replaceCurrent","_temp4","closeCurrent","_temp5","duplicateCurrent","_temp6","setView","_temp7","setParams","setPayload","_temp8","navigateIntent","_temp9","intentName","intentParams","options_0","console","warn","options","viewId","pane_0","pane","RootLayout","PaneLayout","Flex","WrappedCode","Code","DocumentListPane","mainDocumentState","devMode","usePresentationTool","document","ids","schemaTypeName","title","errorParams","setErrorParams","handleRetry","error","StructureDocumentListPane","r_0","DocumentPane","onFocusPath","templateParams","decodeJsonParams","templateParameters","paneDocumentNode","height","StructureDocumentPane","DocumentPanel","usePreviewState","schemaType","documentPreviewStore","useDocumentPreviewStore","preview","setPreview","perspectiveStack","usePerspective","subscription","getPreviewStateObservable","subscribe","unsubscribe","ContentEditor","schema","useSchema","props_0","MainDocumentLink","previewState","bb0","snapshot","getPreviewValueWithFallback","fallback","usePanelId","uuid","panelId","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","isDragging","nativeEvent","onMouseDown","e","onDrag","blur","onDragStop","resetDocumentStyles","bodyStyle","body","documentStyle","documentElement","cursor","userSelect","removeProperty","addEventListener","removeEventListener","PresentationContentWrapper","setDisplayedDocument","getCommentIntent","PresentationContent","documentsOnPage","PresentationNavigateProvider","navigate","_navigate","useLocalState","defaultValue","usePresentationNavigator","unstable_navigator","navigatorProvided","component","_navigatorEnabled","setNavigatorEnabled","navigatorEnabled","toggleNavigator","Component","enabled","NavigatorComponent","navigatorDisabled","Navigator","PresentationParamsProvider","PresentationProvider","name","encodeStudioPerspective","studioPerspective","IFrameElement","motion","create","iframe","IFrameOverlay","Box","IFrame","animate","initial","onLoad","preventClick","src","variants","useId","replace","viewTransitionName","OpenPreviewButton","openPopup","previewLocationOrigin","previewLocationRoute","perspective","targetOrigin","url","URL","urlSearchParamPreviewPerspective","pathname","search","openPreviewLink","currentTarget","href","handleOpenPopup","LaunchIcon","PreviewLocationInput","fontSize","onChange","origin","padding","prefix","suffix","basePath","useActiveWorkspace","activeWorkspace","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","absoluteValue","startsWith","nextValue","slice","handleKeyDown","handleBlur","icon","ResetIcon","zIndex","QRCodeSVG","lazy","QrCodeLogoSize","QrCodeLogoPadding","QrSize","StyledSanityMonogram","SanityMonogram","MotionSpinner","Spinner","MotionText","Text","MotionMonogram","SharePreviewMenu","canToggleSharePreviewAccess","canUseSharedPreviewAccess","initialUrl","push","pushToast","useToast","client","useClient","apiVersion","API_VERSION","currentUser","useCurrentUser","loading","setLoading","enabling","setEnabling","disabling","setDisabling","secret","setSecret","busy","useMemo","setSecretSearchParams","setError","handleUnableToToggle","useCallback","closable","status","handleDisableSharing","disablePreviewAccessSharing","location","handleEnableSharing","previewUrlSecret","enablePreviewAccessSharing","handleCopyUrl","navigator","clipboard","writeText","toString","controller","AbortController","usedTags","fetchShareSecret","lastLiveEventId","signal","result","syncTags","fetch","fetchSharedAccessQuery","filterResponse","tag","aborted","live","events","abort","tags","finally","ShareIcon","justifyContent","alignItems","gridTemplateColumns","gridTemplateRows","position","aspectRatio","display","opacity","textWrap","textAlign","CopyIcon","constrainSize","placement","portal","displayName","PreviewHeaderDefault","canSharePreviewAccess","dispatch","iframeRef","onPathChange","onRefresh","overlaysConnection","previewUrl","setViewport","toggleOverlay","viewport","visualEditing","overlaysEnabled","toggleViewportSize","ACTION_IFRAME_RELOAD","assign","handleRefresh","previewURL","withoutSecretSearchParams","PanelLeftIcon","content","fallbackPlacements","whiteSpace","marginTop","marginBottom","lineHeight","borderRadius","margin","t25","t26","t27","t28","t29","t30","RefreshIcon","t31","t32","t33","t34","t35","t36","t37","t38","t39","MobileDeviceIcon","DesktopIcon","t40","t41","t42","t43","PreviewHeader","renderDefault","HeaderComponent","header","minHeight","MotionFlex","Preview","forwardedRef","loadersConnection","vercelProtectionBypass","stablePerspective","setStablePerspective","urlPerspective","urlSearchParamVercelProtectionBypass","urlSearchParamVercelSetBypassCookie","prefersReducedMotion","usePrefersReducedMotion","previewHeader","timedOut","setTimedOut","refreshing","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","onIFrameLoad","ACTION_IFRAME_LOADED","instance","activeElement","dispatchEvent","MouseEvent","bubbles","cancelable","preventIframeInteraction","canUseViewTransition","useSyncExternalStore","CSS","supports","iframeAnimations","currentViewport","setCurrentViewport","iframeStyle","setIframeStyle","iframeVariants","update","startViewTransition","flushSync","duration","spinnerVariants","inset","backdropFilter","WebkitBackdropFilter","WebkitTransition","sizes","errorVariants","background","desktop","mobile","exit","boxShadow","scale","idle","reloading","active","defineWarnOnce","warned","warnOnceAboutCrossDatasetReference","useDocumentsOnPage","frameStateRef","validateApiPerspective","published","setPublished","previewDrafts","setPreviewDrafts","urlRef","perspective_0","documents","setCache","cache","isEqual","setDocumentsOnPage","keyedCache","uniqueDocuments","cache_0","forEach","doc","sourceDocument","_projectId","fnOrObj","arg","Function","getQueryFromResult","resolver","resolve","getParamsFromResult","getRouteContext","route","routes","absolute","match","decode","decodeURIComponent","useMainDocument","navigationHistory","resolvers","relativeUrl","setMainDocumentState","mainDocumentIdRef","at","handleResponse","useEffectEvent","base","url_0","query","then","doc_0","catch","lengthyStr$1","pipe","string","minLength","optionalLengthyStr","optional","object","baseUrl","dataset","projectId","tool","workspace","parseId","rawId","segments","split","shift","parsePath","rawPath","studioPath","urlStringToPath","parseRouterState","pruneObject","useParams","initialPreviewUrl","routerNavigate","rev","since","view","pathKey","instruction","comment","changesInspectorTab","routerStateRef","setNavigationHistory","nextState","nextSearchState","forceReplace","routerSearchState","searchState","usePopups","popups","setPopups","source","open","Set","add","unsubs","size","source_0","closed","addTarget","interval","setInterval","source_1","source_2","POPUP_CHECK_INTERVAL","clearInterval","unsub","usePreviewUrl","toolName","studioPreviewPerspective","previewSearchParam","canCreateUrlPreviewSecrets","workspaceName","deps","useSuspendCacheKeys","usePreviewUrlSecret","suspend","resolvedUrl","resultUrl","restoredUrl","definePreviewUrl","studioBasePath","resolveUUID","cachedPreviewSearchParam","setCachedPreviewSearchParam","timeoutRef","secretLastExpiredAt","setSecretLastExpiredAt","createPreviewSecret","startTransition","expiresAt","getTime","Date","now","useStatus","statusMap","setStatusMap","handshaking","memoStatus","connection","hasConnected_0","hasConnected","status_1","setStatusFromEvent","status_0","LiveQueries","PostMessageDocuments","PostMessageRefreshMutations","PostMessagePerspective","PostMessagePreviewSnapshots","PostMessageSchema","PostMessageTelemetry","PresentationTool","components","_previewUrl","DEFAULT_TOOL_NAME","unstable_header","selectedPerspectiveName","selectedReleaseId","draftMode","shareAccess","previewMode","option","hostname","setController","visualEditingComlink","setVisualEditingComlink","useReducer","presentationReducer","presentationReducerInit","useProjectId","useDataset","mainDocuments","setOverlaysConnection","setLoadersConnection","previewKitConnection","setPreviewKitConnection","isLoading","target","contentWindow","createController","destroy","handleNavigate","createChannel","heartbeat","connectTo","createConnectionMachine","provide","actors","createCompatibilityActors","urlWithoutSearch","URLSearchParams","ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE","refreshRef","ACTION_IFRAME_REFRESH","onStatus","stop","start","handleFocusPath","nextPath","handlePreviewPath","handleStructureParams","displayedDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey","boundaryElement","setBoundaryElement","PresentationNavigator","livePreviewEnabled","useWorkspace","COMMENTS_INSPECTOR_NAME","mode","EDIT_INTENT_MODE","IS_MAC","test","platform","MODIFIERS","alt","ctrl","mod","keys","every","toUpperCase","useVercelBypassSecret","vercelProtectionBypassReadyState","ready","vercelProtectionBypassSecret","setVercelProtectionBypassSecret","subcribeToVercelProtectionBypass","PresentationToolGrantsCheck","willGeneratePreviewUrlSecret","grantsStore","useGrantsStore","previewAccessSharingCreatePermission","setCreateAccessSharingPermission","previewAccessSharingUpdatePermission","setUpdateAccessSharingPermission","previewAccessSharingReadPermission","setReadAccessSharingPermission","previewUrlSecretPermission","setPreviewUrlSecretPermission","previewCreateAccessSharingPermissionSubscription","checkDocumentPermission","schemaIdSingleton","schemaTypeSingleton","previewUpdateAccessSharingPermissionSubscription","previewReadAccessSharingPermissionSubscription","previewUrlSecretPermissionSubscription","granted","raf","requestAnimationFrame","cancelAnimationFrame"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"debugId":null}}]
}