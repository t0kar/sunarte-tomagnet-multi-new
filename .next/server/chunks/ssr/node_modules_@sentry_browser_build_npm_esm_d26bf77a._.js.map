{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"fetch.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sentry/browser/src/transports/fetch.ts"],"sourcesContent":["import { clearCachedImplementation, getNativeImplementation } from '@sentry-internal/browser-utils';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/core';\nimport { createTransport, rejectedSyncPromise } from '@sentry/core';\nimport type { WINDOW } from '../helpers';\nimport type { BrowserTransportOptions } from './types';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: typeof WINDOW.fetch | undefined = getNativeImplementation('fetch'),\n): Transport {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. when finishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    if (!nativeFetch) {\n      clearCachedImplementation('fetch');\n      return rejectedSyncPromise('No fetch implementation available');\n    }\n\n    try {\n      // TODO: This may need a `suppressTracing` call in the future when we switch the browser SDK to OTEL\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedImplementation('fetch');\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n"],"names":[],"mappings":";;;;;;;;AAMA;;CAEA,GACO,SAAS,kBAAkB,CAChC,OAAO,EACP,WAAW,2MAAoC,0BAAA,AAAuB,EAAC,OAAO,CAAC;IAE/E,IAAI,eAAgB,GAAE,CAAC;IACvB,IAAI,YAAa,GAAE,CAAC;IAEpB,SAAS,WAAW,CAAC,OAAO,EAA+D;QACzF,MAAM,WAAY,GAAE,OAAO,CAAC,IAAI,CAAC,MAAM;QACvC,eAAA,IAAmB,WAAW;QAC9B,YAAY,EAAE;QAEd,MAAM,cAAc,GAAgB;YAClC,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,MAAM,EAAE,MAAM;YACd,cAAc,EAAE,QAAQ;YACxB,OAAO,EAAE,OAAO,CAAC,OAAO;YAC9B,+GAAA;YACA,iHAAA;YACA,0GAAA;YACA,mHAAA;YACA,WAAA;YACA,2CAAA;YACA,8EAAA;YACA,sHAAA;YACA,0EAAA;YACA,mGAAA;YACA,2EAAA;YACM,SAAS,EAAE,eAAgB,IAAG,SAAU,YAAA,GAAe,EAAE;YACzD,GAAG,OAAO,CAAC,YAAY;QAC7B,CAAK;QAED,IAAI,CAAC,WAAW,EAAE;oNAChB,4BAAA,AAAyB,EAAC,OAAO,CAAC;YAClC,OAAO,4MAAA,AAAmB,EAAC,mCAAmC,CAAC;QACrE;QAEI,IAAI;YACR,oGAAA;YACM,OAAO,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC,IAAI,EAAC,YAAY;gBAC/D,eAAA,IAAmB,WAAW;gBAC9B,YAAY,EAAE;gBACd,OAAO;oBACL,UAAU,EAAE,QAAQ,CAAC,MAAM;oBAC3B,OAAO,EAAE;wBACP,sBAAsB,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC;wBACpE,aAAa,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;oBAC9D,CAAW;gBACX,CAAS;YACT,CAAO,CAAC;QACR,CAAM,CAAA,OAAO,CAAC,EAAE;oNACV,4BAAA,AAAyB,EAAC,OAAO,CAAC;YAClC,eAAA,IAAmB,WAAW;YAC9B,YAAY,EAAE;YACd,6LAAO,sBAAA,AAAmB,EAAC,CAAC,CAAC;QACnC;IACA;IAEE,kLAAO,kBAAA,AAAe,EAAC,OAAO,EAAE,WAAW,CAAC;AAC9C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"file":"helpers.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sentry/browser/src/helpers.ts"],"sourcesContent":["import type { Mechanism, WrappedFunction } from '@sentry/core';\nimport {\n  GLOBAL_OBJ,\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  captureException,\n  getOriginalFunction,\n  markFunctionWrapped,\n  withScope,\n} from '@sentry/core';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype WrappableFunction = Function;\n\nexport function wrap<T extends WrappableFunction>(\n  fn: T,\n  options?: {\n    mechanism?: Mechanism;\n  },\n): WrappedFunction<T>;\nexport function wrap<NonFunction>(\n  fn: NonFunction,\n  options?: {\n    mechanism?: Mechanism;\n  },\n): NonFunction;\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap<T extends WrappableFunction, NonFunction>(\n  fn: T | NonFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n): NonFunction | WrappedFunction<T> {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  function isFunction(fn: T | NonFunction): fn is T {\n    return typeof fn === 'function';\n  }\n\n  if (!isFunction(fn)) {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = (fn as WrappedFunction<T>).__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  // Wrap the function itself\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function (this: unknown, ...args: unknown[]): unknown {\n    try {\n      // Also wrap arguments that are themselves functions\n      const wrappedArguments = args.map(arg => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  } as unknown as WrappedFunction<T>;\n\n  // Wrap the wrapped function in a proxy, to ensure any other properties of the original function remain available\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property as keyof T] = fn[property as keyof T];\n      }\n    }\n  } catch {\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  }\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name')!;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n  } catch {\n    // This may throw if e.g. the descriptor does not exist, or a browser does not allow redefining `name`.\n    // to save some bytes we simply try-catch this\n  }\n\n  return sentryWrapped;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"file":"browserapierrors.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sentry/browser/src/integrations/browserapierrors.ts"],"sourcesContent":["import type { IntegrationFn, WrappedFunction } from '@sentry/core';\nimport { defineIntegration, fill, getFunctionName, getOriginalFunction } from '@sentry/core';\n\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'BrowserApiErrors';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\ninterface BrowserApiErrorsOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\nconst _browserApiErrorsIntegration = ((options: Partial<BrowserApiErrorsOptions> = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n */\nexport const browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\nfunction _wrapTimeFunction(original: () => void): () => number {\n  return function (this: unknown, ...args: unknown[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\nfunction _wrapRAF(original: () => void): (callback: () => void) => unknown {\n  return function (this: unknown, callback: () => void): () => void {\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend: () => void): () => void {\n  return function (this: XMLHttpRequest, ...args: unknown[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        fill(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before BrowserApiErrors, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target: string): void {\n  const globalObject = WINDOW as unknown as Record<string, { prototype?: object }>;\n  const targetObj = globalObject[target];\n  const proto = targetObj && targetObj.prototype;\n\n  // eslint-disable-next-line no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: VoidFunction): (\n    ...args: Parameters<typeof WINDOW.addEventListener>\n  ) => ReturnType<typeof WINDOW.addEventListener> {\n    return function (this: unknown, eventName, fn, options): VoidFunction {\n      try {\n        if (isEventListenerObject(fn)) {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        wrap(fn, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(proto, 'removeEventListener', function (originalRemoveEventListener: VoidFunction): (\n    this: unknown,\n    ...args: Parameters<typeof WINDOW.removeEventListener>\n  ) => ReturnType<typeof WINDOW.removeEventListener> {\n    return function (this: unknown, eventName, fn, options): VoidFunction {\n      /**\n       * There are 2 possible scenarios here:\n       *\n       * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n       * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n       * as a pass-through, and call original `removeEventListener` with it.\n       *\n       * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n       * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n       * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n       * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n       * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n       *\n       * When someone adds a handler prior to initialization, and then do it again, but after,\n       * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n       * to get rid of the initial handler and it'd stick there forever.\n       */\n      try {\n        const originalEventHandler = (fn as WrappedFunction).__sentry_wrapped__;\n        if (originalEventHandler) {\n          originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n        }\n      } catch (e) {\n        // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n      }\n      return originalRemoveEventListener.call(this, eventName, fn, options);\n    };\n  });\n}\n\nfunction isEventListenerObject(obj: unknown): obj is EventListenerObject {\n  return typeof (obj as EventListenerObject).handleEvent === 'function';\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 458, "column": 0}, "map": {"version":3,"file":"debug-build.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sentry/browser/src/debug-build.ts"],"sourcesContent":["declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n"],"names":[],"mappings":"AAEA;;;;CAIA;;;AACO,MAAM,WAAY,GAAiB,OAAA,gBAAA,KAAA,WAAA,IAAA,gBAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"file":"breadcrumbs.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sentry/browser/src/integrations/breadcrumbs.ts"],"sourcesContent":["/* eslint-disable max-lines */\n\nimport {\n  SENTRY_XHR_DATA_KEY,\n  addClickKeypressInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n  addXhrInstrumentationHandler,\n} from '@sentry-internal/browser-utils';\nimport type {\n  Breadcrumb,\n  Client,\n  Event as SentryEvent,\n  FetchBreadcrumbData,\n  FetchBreadcrumbHint,\n  HandlerDataConsole,\n  HandlerDataDom,\n  HandlerDataFetch,\n  HandlerDataHistory,\n  HandlerDataXhr,\n  IntegrationFn,\n  XhrBreadcrumbData,\n  XhrBreadcrumbHint,\n} from '@sentry/core';\nimport {\n  addBreadcrumb,\n  addConsoleInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  defineIntegration,\n  getBreadcrumbLogLevelFromHttpStatusCode,\n  getClient,\n  getComponentName,\n  getEventDescription,\n  htmlTreeAsString,\n  logger,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options: Partial<BreadcrumbsOptions> = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client: Client): (event: SentryEvent) => void {\n  return function addSentryBreadcrumb(event: SentryEvent): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creates a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client: Client,\n  dom: BreadcrumbsOptions['dom'],\n): (handlerData: HandlerDataDom) => void {\n  return function _innerDomBreadcrumb(handlerData: HandlerDataDom): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb: Breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client: Client): (handlerData: HandlerDataConsole) => void {\n  return function _consoleBreadcrumb(handlerData: HandlerDataConsole): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client: Client): (handlerData: HandlerDataXhr) => void {\n  return function _xhrBreadcrumb(handlerData: HandlerDataXhr): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data: XhrBreadcrumbData = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint: XhrBreadcrumbHint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    const level = getBreadcrumbLogLevelFromHttpStatusCode(status_code);\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n        level,\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client: Client): (handlerData: HandlerDataFetch) => void {\n  return function _fetchBreadcrumb(handlerData: HandlerDataFetch): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data: FetchBreadcrumbData = handlerData.fetchData;\n      const hint: FetchBreadcrumbHint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response as Response | undefined;\n      const data: FetchBreadcrumbData = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint: FetchBreadcrumbHint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      const level = getBreadcrumbLogLevelFromHttpStatusCode(data.status_code);\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n          level,\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client: Client): (handlerData: HandlerDataHistory) => void {\n  return function _historyBreadcrumb(handlerData: HandlerDataHistory): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from: string | undefined = handlerData.from;\n    let to: string | undefined = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return !!event && !!(event as Record<string, unknown>).target;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 765, "column": 0}, "map": {"version":3,"file":"eventbuilder.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sentry/browser/src/eventbuilder.ts"],"sourcesContent":["import type {\n  Event,\n  EventHint,\n  Exception,\n  ParameterizedString,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/core';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  getClient,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isParameterizedString,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/core';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: extractType(ex),\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\nfunction eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  // If we can, we extract an exception from the object properties\n  const errorFromProp = getErrorPropertyFromObject(exception);\n\n  const extra = {\n    __serialized__: normalizeToSize(exception, normalizeDepth),\n  };\n\n  if (errorFromProp) {\n    return {\n      exception: {\n        values: [exceptionFromError(stackParser, errorFromProp)],\n      },\n      extra,\n    };\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        } as Exception,\n      ],\n    },\n    extra,\n  } satisfies Event;\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception.values[0]!.stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\nfunction eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const skipLines = getSkipFirstStackStringLines(ex);\n  const framesToPop = getPopFirstTopFrames(ex);\n\n  try {\n    return stackParser(stacktrace, skipLines, framesToPop);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\n/**\n * Certain known React errors contain links that would be falsely\n * parsed as frames. This function check for these errors and\n * returns number of the stack string lines to skip.\n */\nfunction getSkipFirstStackStringLines(ex: Error): number {\n  if (ex && reactMinifiedRegexp.test(ex.message)) {\n    return 1;\n  }\n\n  return 0;\n}\n\n/**\n * If error has `framesToPop` property, it means that the\n * creator tells us the first x frames will be useless\n * and should be discarded. Typically error from wrapper function\n * which don't point to the actual location in the developer's code.\n *\n * Example: https://github.com/zertosh/invariant/blob/master/invariant.js#L46\n */\nfunction getPopFirstTopFrames(ex: Error & { framesToPop?: unknown }): number {\n  if (typeof ex.framesToPop === 'number') {\n    return ex.framesToPop;\n  }\n\n  return 0;\n}\n\n// https://developer.mozilla.org/en-US/docs/WebAssembly/JavaScript_interface/Exception\n// @ts-expect-error - WebAssembly.Exception is a valid class\nfunction isWebAssemblyException(exception: unknown): exception is WebAssembly.Exception {\n  // Check for support\n  // @ts-expect-error - WebAssembly.Exception is a valid class\n  if (typeof WebAssembly !== 'undefined' && typeof WebAssembly.Exception !== 'undefined') {\n    // @ts-expect-error - WebAssembly.Exception is a valid class\n    return exception instanceof WebAssembly.Exception;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Extracts from errors what we use as the exception `type` in error events.\n *\n * Usually, this is the `name` property on Error objects but WASM errors need to be treated differently.\n */\nexport function extractType(ex: Error & { message: { error?: Error } }): string | undefined {\n  const name = ex && ex.name;\n\n  // The name for WebAssembly.Exception Errors needs to be extracted differently.\n  // Context: https://github.com/getsentry/sentry-javascript/issues/13787\n  if (!name && isWebAssemblyException(ex)) {\n    // Emscripten sets array[type, message] to the \"message\" property on the WebAssembly.Exception object\n    const hasTypeInMessage = ex.message && Array.isArray(ex.message) && ex.message.length == 2;\n    return hasTypeInMessage ? ex.message[0] : 'WebAssembly.Exception';\n  }\n\n  return name;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nexport function extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex && ex.message;\n\n  if (!message) {\n    return 'No error message';\n  }\n\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n\n  // Emscripten sets array[type, message] to the \"message\" property on the WebAssembly.Exception object\n  if (isWebAssemblyException(ex) && Array.isArray(ex.message) && ex.message.length == 2) {\n    return ex.message[1];\n  }\n\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  level: SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\nfunction eventFromString(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n    addExceptionMechanism(event, { synthetic: true });\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception: Record<string, unknown>,\n  { isUnhandledRejection }: { isUnhandledRejection?: boolean },\n): string {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: Prototype | null = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj: Record<string, unknown>): Error | undefined {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop];\n      if (value instanceof Error) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AA2BA;;CAEA,GACO,SAAS,kBAAkB,CAAC,WAAW,EAAe,EAAE,EAAoB;IACnF,sFAAA;IACE,MAAM,SAAS,gBAAgB,CAAC,WAAW,EAAE,EAAE,CAAC;IAEhD,MAAM,SAAS,GAAc;QAC3B,IAAI,EAAE,WAAW,CAAC,EAAE,CAAC;QACrB,KAAK,EAAE,cAAc,CAAC,EAAE,CAAC;IAC7B,CAAG;IAED,IAAI,MAAM,CAAC,MAAM,EAAE;QACjB,SAAS,CAAC,UAAA,GAAa;YAAE;QAAA,CAAQ;IACrC;IAEE,IAAI,SAAS,CAAC,IAAK,KAAI,SAAU,IAAG,SAAS,CAAC,KAAM,KAAI,EAAE,EAAE;QAC1D,SAAS,CAAC,KAAM,GAAE,4BAA4B;IAClD;IAEE,OAAO,SAAS;AAClB;AAEA,SAAS,oBAAoB,CAC3B,WAAW,EACX,SAAS,EACT,kBAAkB,EAClB,oBAAoB;IAEpB,MAAM,MAAA,yKAAS,YAAA,AAAS,EAAE;IAC1B,MAAM,cAAe,GAAE,MAAO,IAAG,MAAM,CAAC,UAAU,EAAE,CAAC,cAAc;IAErE,gEAAA;IACE,MAAM,aAAc,GAAE,0BAA0B,CAAC,SAAS,CAAC;IAE3D,MAAM,QAAQ;QACZ,cAAc,sLAAE,kBAAA,AAAe,EAAC,SAAS,EAAE,cAAc,CAAC;IAC9D,CAAG;IAED,IAAI,aAAa,EAAE;QACjB,OAAO;YACL,SAAS,EAAE;gBACT,MAAM,EAAE;oBAAC,kBAAkB,CAAC,WAAW,EAAE,aAAa,CAAC;iBAAC;YAChE,CAAO;YACD,KAAK;QACX,CAAK;IACL;IAEE,MAAM,QAAQ;QACZ,SAAS,EAAE;YACT,MAAM,EAAE;gBACN;oBACE,IAAI,+KAAE,UAAA,AAAO,EAAC,SAAS,IAAI,SAAS,CAAC,WAAW,CAAC,IAAK,GAAE,uBAAuB,oBAAA,GAAuB,OAAO;oBAC7G,KAAK,EAAE,+BAA+B,CAAC,SAAS,EAAE;wBAAE,oBAAqB;oBAAA,CAAC,CAAC;gBACrF,CAAU;aACH;QACP,CAAK;QACD,KAAK;IACT,CAAI;IAEF,IAAI,kBAAkB,EAAE;QACtB,MAAM,SAAS,gBAAgB,CAAC,WAAW,EAAE,kBAAkB,CAAC;QAChE,IAAI,MAAM,CAAC,MAAM,EAAE;YACvB,+CAAA;YACA,oEAAA;YACM,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAE,UAAA,GAAa;gBAAE;YAAA,CAAQ;QACxD;IACA;IAEE,OAAO,KAAK;AACd;AAEA,SAAS,cAAc,CAAC,WAAW,EAAe,EAAE,EAAgB;IAClE,OAAO;QACL,SAAS,EAAE;YACT,MAAM,EAAE;gBAAC,kBAAkB,CAAC,WAAW,EAAE,EAAE,CAAC;aAAC;QACnD,CAAK;IACL,CAAG;AACH;AAEA,sCAAA,GACA,SAAS,gBAAgB,CACvB,WAAW,EACX,EAAE;IAEJ,iEAAA;IACA,4DAAA;IACA,mCAAA;IACE,MAAM,UAAW,GAAE,EAAE,CAAC,UAAW,IAAG,EAAE,CAAC,KAAM,IAAG,EAAE;IAElD,MAAM,SAAU,GAAE,4BAA4B,CAAC,EAAE,CAAC;IAClD,MAAM,WAAY,GAAE,oBAAoB,CAAC,EAAE,CAAC;IAE5C,IAAI;QACF,OAAO,WAAW,CAAC,UAAU,EAAE,SAAS,EAAE,WAAW,CAAC;IAC1D,CAAI,CAAA,OAAO,CAAC,EAAE;IACd,WAAA;IACA;IAEE,OAAO,EAAE;AACX;AAEA,2KAAA;AACA,MAAM,mBAAA,GAAsB,6BAA6B;AAEzD;;;;CAIA,GACA,SAAS,4BAA4B,CAAC,EAAE,EAAiB;IACvD,IAAI,EAAG,IAAG,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE;QAC9C,OAAO,CAAC;IACZ;IAEE,OAAO,CAAC;AACV;AAEA;;;;;;;CAOA,GACA,SAAS,oBAAoB,CAAC,EAAE,EAA6C;IAC3E,IAAI,OAAO,EAAE,CAAC,WAAY,KAAI,QAAQ,EAAE;QACtC,OAAO,EAAE,CAAC,WAAW;IACzB;IAEE,OAAO,CAAC;AACV;AAEA,sFAAA;AACA,4DAAA;AACA,SAAS,sBAAsB,CAAC,SAAS,EAA+C;IACxF,oBAAA;IACA,4DAAA;IACE,IAAI,OAAO,WAAA,KAAgB,WAAA,IAAe,OAAO,WAAW,CAAC,SAAU,KAAI,WAAW,EAAE;QAC1F,4DAAA;QACI,OAAO,SAAA,YAAqB,WAAW,CAAC,SAAS;IACrD,OAAS;QACL,OAAO,KAAK;IAChB;AACA;AAEA;;;;CAIA,GACO,SAAS,WAAW,CAAC,EAAE,EAA8D;IAC1F,MAAM,IAAK,GAAE,MAAM,EAAE,CAAC,IAAI;IAE5B,+EAAA;IACA,uEAAA;IACE,IAAI,CAAC,IAAA,IAAQ,sBAAsB,CAAC,EAAE,CAAC,EAAE;QAC3C,qGAAA;QACI,MAAM,mBAAmB,EAAE,CAAC,OAAQ,IAAG,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,KAAK,EAAE,CAAC,OAAO,CAAC,MAAO,IAAG,CAAC;QAC1F,OAAO,gBAAiB,GAAE,EAAE,CAAC,OAAO,CAAC,CAAC,CAAE,GAAE,uBAAuB;IACrE;IAEE,OAAO,IAAI;AACb;AAEA;;;;CAIA,GACO,SAAS,cAAc,CAAC,EAAE,EAAkD;IACjF,MAAM,OAAQ,GAAE,MAAM,EAAE,CAAC,OAAO;IAEhC,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,kBAAkB;IAC7B;IAEE,IAAI,OAAO,CAAC,KAAA,IAAS,OAAO,OAAO,CAAC,KAAK,CAAC,OAAQ,KAAI,QAAQ,EAAE;QAC9D,OAAO,OAAO,CAAC,KAAK,CAAC,OAAO;IAChC;IAEA,qGAAA;IACE,IAAI,sBAAsB,CAAC,EAAE,CAAE,IAAG,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAE,IAAG,EAAE,CAAC,OAAO,CAAC,MAAA,IAAU,CAAC,EAAE;QACrF,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IACxB;IAEE,OAAO,OAAO;AAChB;AAEA;;;CAGA,GACO,SAAS,kBAAkB,CAChC,WAAW,EACX,SAAS,EACT,IAAI,EACJ,gBAAgB;IAEhB,MAAM,kBAAmB,GAAE,AAAC,IAAA,IAAQ,IAAI,CAAC,kBAAkB,IAAK,SAAS;IACzE,MAAM,KAAA,GAAQ,qBAAqB,CAAC,WAAW,EAAE,SAAS,EAAE,kBAAkB,EAAE,gBAAgB,CAAC;mLACjG,wBAAA,AAAqB,EAAC,KAAK,CAAC,CAAA,CAAA,iDAAA;IAC5B,KAAK,CAAC,KAAM,GAAE,OAAO;IACrB,IAAI,IAAA,IAAQ,IAAI,CAAC,QAAQ,EAAE;QACzB,KAAK,CAAC,QAAA,GAAW,IAAI,CAAC,QAAQ;IAClC;IACE,6LAAO,sBAAA,AAAmB,EAAC,KAAK,CAAC;AACnC;AAEA;;;CAGA,GACO,SAAS,gBAAgB,CAC9B,WAAW,EACX,OAAO,EACP,KAAK,GAAkB,MAAM,EAC7B,IAAI,EACJ,gBAAgB;IAEhB,MAAM,kBAAmB,GAAE,AAAC,IAAA,IAAQ,IAAI,CAAC,kBAAkB,IAAK,SAAS;IACzE,MAAM,KAAA,GAAQ,eAAe,CAAC,WAAW,EAAE,OAAO,EAAE,kBAAkB,EAAE,gBAAgB,CAAC;IACzF,KAAK,CAAC,KAAM,GAAE,KAAK;IACnB,IAAI,IAAA,IAAQ,IAAI,CAAC,QAAQ,EAAE;QACzB,KAAK,CAAC,QAAA,GAAW,IAAI,CAAC,QAAQ;IAClC;IACE,QAAO,2MAAA,AAAmB,EAAC,KAAK,CAAC;AACnC;AAEA;;CAEA,GACO,SAAS,qBAAqB,CACnC,WAAW,EACX,SAAS,EACT,kBAAkB,EAClB,gBAAgB,EAChB,oBAAoB;IAEpB,IAAI,KAAK;IAET,KAAI,2LAAA,AAAY,EAAC,SAAU,EAAA,GAAkB,AAAC,SAAU,CAAe,KAAK,EAAE;QAChF,+EAAA;QACI,MAAM,UAAW,GAAE,SAAU;QAC7B,OAAO,cAAc,CAAC,WAAW,EAAE,UAAU,CAAC,KAAA,EAAe;IACjE;IAEA,oHAAA;IACA,8GAAA;IACA,yGAAA;IACA,EAAA;IACA,4DAAA;IACA,gEAAA;IACA,8DAAA;IACE,iLAAI,aAAA,AAAU,EAAC,SAAS,CAAE,iLAAG,iBAAA,AAAc,EAAC,SAAU,EAAgB,CAAE;QACtE,MAAM,YAAa,GAAE,SAAU;QAE/B,IAAI,OAAA,IAAY,SAAA,EAAmB,AAAE;YACnC,QAAQ,cAAc,CAAC,WAAW,EAAE,WAAmB;QAC7D,OAAW;YACL,MAAM,IAAK,GAAE,YAAY,CAAC,IAAA,IAAA,6KAAS,cAAA,AAAU,EAAC,YAAY,CAAE,GAAE,UAAW,GAAE,cAAc,CAAC;YAC1F,MAAM,UAAU,YAAY,CAAC,OAAQ,GAAE,CAAC,EAAA,IAAA,CAAA,EAAA,EAAA,YAAA,CAAA,OAAA,CAAA,CAAA,GAAA,IAAA;YACA,KAAA,GAAA,eAAA,CAAA,WAAA,EAAA,OAAA,EAAA,kBAAA,EAAA,gBAAA,CAAA;2LACA,wBAAA,EAAA,KAAA,EAAA,OAAA,CAAA;QACA;QACA,IAAA,MAAA,IAAA,YAAA,EAAA;YACA,mDAAA;YACA,KAAA,CAAA,IAAA,GAAA;gBAAA,GAAA,KAAA,CAAA,IAAA;gBAAA,mBAAA,EAAA,CAAA,EAAA,YAAA,CAAA,IAAA,CAAA,CAAA;YAAA,CAAA;QACA;QAEA,OAAA,KAAA;IACA;IACA,iLAAA,UAAA,EAAA,SAAA,CAAA,EAAA;QACA,0CAAA;QACA,OAAA,cAAA,CAAA,WAAA,EAAA,SAAA,CAAA;IACA;IACA,iLAAA,gBAAA,EAAA,SAAA,CAAA,iLAAA,UAAA,EAAA,SAAA,CAAA,EAAA;QACA,kHAAA;QACA,mHAAA;QACA,iCAAA;QACA,MAAA,eAAA,GAAA,SAAA;QACA,KAAA,GAAA,oBAAA,CAAA,WAAA,EAAA,eAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA;uLACA,wBAAA,EAAA,KAAA,EAAA;YACA,SAAA,EAAA,IAAA;QACA,CAAA,CAAA;QACA,OAAA,KAAA;IACA;IAEA,sEAAA;IACA,4BAAA;IACA,gCAAA;IACA,yBAAA;IACA,yBAAA;IACA,oDAAA;IACA,mBAAA;IACA,EAAA;IACA,kDAAA;IACA,KAAA,GAAA,eAAA,CAAA,WAAA,EAAA,SAAA,EAAA,kBAAA,EAAA,gBAAA,CAAA;mLACA,wBAAA,EAAA,KAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,SAAA,CAAA;IACA,uMAAA,EAAA,KAAA,EAAA;QACA,SAAA,EAAA,IAAA;IACA,CAAA,CAAA;IAEA,OAAA,KAAA;AACA;AAEA,SAAA,eAAA,CACA,WAAA,EACA,OAAA,EACA,kBAAA,EACA,gBAAA;IAEA,MAAA,KAAA,GAAA,CAAA,CAAA;IAEA,IAAA,gBAAA,IAAA,kBAAA,EAAA;QACA,MAAA,MAAA,GAAA,gBAAA,CAAA,WAAA,EAAA,kBAAA,CAAA;QACA,IAAA,MAAA,CAAA,MAAA,EAAA;YACA,KAAA,CAAA,SAAA,GAAA;gBACA,MAAA,EAAA;oBAAA;wBAAA,KAAA,EAAA,OAAA;wBAAA,UAAA,EAAA;4BAAA,MAAA;wBAAA,CAAA;oBAAA,CAAA;iBAAA;YACA,CAAA;QACA;uLACA,wBAAA,EAAA,KAAA,EAAA;YAAA,SAAA,EAAA,IAAA;QAAA,CAAA,CAAA;IACA;IAEA,iLAAA,wBAAA,EAAA,OAAA,CAAA,EAAA;QACA,MAAA,EAAA,0BAAA,EAAA,0BAAA,EAAA,GAAA,OAAA;QAEA,KAAA,CAAA,QAAA,GAAA;YACA,OAAA,EAAA,0BAAA;YACA,MAAA,EAAA,0BAAA;QACA,CAAA;QACA,OAAA,KAAA;IACA;IAEA,KAAA,CAAA,OAAA,GAAA,OAAA;IACA,OAAA,KAAA;AACA;AAEA,SAAA,+BAAA,CACA,SAAA,EACA,EAAA,oBAAA,EAAA;IAEA,MAAA,IAAA,GAAA,kNAAA,EAAA,SAAA,CAAA;IACA,MAAA,WAAA,GAAA,oBAAA,GAAA,mBAAA,GAAA,WAAA;IAEA,sGAAA;IACA,+DAAA;IACA,iLAAA,eAAA,EAAA,SAAA,CAAA,EAAA;QACA,OAAA,CAAA,iCAAA,EAAA,WAAA,CAAA,gBAAA,EAAA,SAAA,CAAA,OAAA,CAAA,EAAA,CAAA;IACA;IAEA,iLAAA,UAAA,EAAA,SAAA,CAAA,EAAA;QACA,MAAA,SAAA,GAAA,kBAAA,CAAA,SAAA,CAAA;QACA,OAAA,CAAA,QAAA,EAAA,SAAA,CAAA,SAAA,EAAA,SAAA,CAAA,IAAA,CAAA,cAAA,EAAA,WAAA,CAAA,CAAA;IACA;IAEA,OAAA,CAAA,mBAAA,EAAA,WAAA,CAAA,YAAA,EAAA,IAAA,CAAA,CAAA;AACA;AAEA,SAAA,kBAAA,CAAA,GAAA,EAAA;IACA,IAAA;QACA,MAAA,SAAA,GAAA,MAAA,CAAA,cAAA,CAAA,GAAA,CAAA;QACA,OAAA,SAAA,GAAA,SAAA,CAAA,WAAA,CAAA,IAAA,GAAA,SAAA;IACA,CAAA,CAAA,OAAA,CAAA,EAAA;IACA,qBAAA;IACA;AACA;AAEA,4EAAA,GACA,SAAA,0BAAA,CAAA,GAAA,EAAA;IACA,IAAA,MAAA,IAAA,IAAA,GAAA,CAAA;QACA,IAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,GAAA,EAAA,IAAA,CAAA,EAAA;YACA,MAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAAA;YACA,IAAA,KAAA,YAAA,KAAA,EAAA;gBACA,OAAA,KAAA;YACA;QACA;IACA;IAEA,OAAA,SAAA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1098, "column": 0}, "map": {"version":3,"file":"globalhandlers.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sentry/browser/src/integrations/globalhandlers.ts"],"sourcesContent":["import type { Client, Event, IntegrationFn, Primitive, StackParser } from '@sentry/core';\nimport {\n  UNKNOWN_FUNCTION,\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  captureEvent,\n  defineIntegration,\n  getClient,\n  getLocationHref,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/core';\n\nimport type { BrowserClient } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options: Partial<GlobalHandlersIntegrations> = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\nfunction _installGlobalOnErrorHandler(client: Client): void {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event = _enhanceEventWithInitialFrame(\n      eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n      url,\n      line,\n      column,\n    );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client: Client): void {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e as unknown);\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error: unknown): unknown {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // dig the object of the rejection out of known event types\n  try {\n    type ErrorWithReason = { reason: unknown };\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in (error as ErrorWithReason)) {\n      return (error as ErrorWithReason).reason;\n    }\n\n    type CustomEventWithDetail = { detail: { reason: unknown } };\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    if ('detail' in (error as CustomEventWithDetail) && 'reason' in (error as CustomEventWithDetail).detail) {\n      return (error as CustomEventWithDetail).detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\nfunction _enhanceEventWithInitialFrame(\n  event: Event,\n  url: string | undefined,\n  line: number | undefined,\n  column: number | undefined,\n): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = column;\n  const lineno = line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: UNKNOWN_FUNCTION,\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions(): { stackParser: StackParser; attachStacktrace?: boolean } {\n  const client = getClient<BrowserClient>();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAuBA,MAAM,gBAAA,GAAmB,gBAAgB;AAEzC,MAAM,0BAAA,GAA8B,CAAC,OAAO,GAAwC,CAAA,CAAE,KAAK;IACzF,MAAM,WAAW;QACf,OAAO,EAAE,IAAI;QACb,oBAAoB,EAAE,IAAI;QAC1B,GAAG,OAAO;IACd,CAAG;IAED,OAAO;QACL,IAAI,EAAE,gBAAgB;QACtB,SAAS,GAAG;YACV,KAAK,CAAC,eAAgB,GAAE,EAAE;QAChC,CAAK;QACD,KAAK,EAAC,MAAM,EAAE;YACZ,IAAI,QAAQ,CAAC,OAAO,EAAE;gBACpB,4BAA4B,CAAC,MAAM,CAAC;gBACpC,gBAAgB,CAAC,SAAS,CAAC;YACnC;YACM,IAAI,QAAQ,CAAC,oBAAoB,EAAE;gBACjC,yCAAyC,CAAC,MAAM,CAAC;gBACjD,gBAAgB,CAAC,sBAAsB,CAAC;YAChD;QACA,CAAK;IACL,CAAG;AACH,CAAC,CAAE;MAEU,yBAA0B,sKAAE,qBAAA,AAAiB,EAAC,0BAA0B;AAErF,SAAS,4BAA4B,CAAC,MAAM,EAAgB;wMAC1D,uCAAA,AAAoC,GAAC,IAAA,IAAQ;QAC3C,MAAM,EAAE,WAAW,EAAE,gBAAA,EAAmB,GAAE,UAAU,EAAE;QAEtD,0KAAI,YAAA,AAAS,EAAC,MAAM,MAAA,8KAAU,sBAAA,AAAmB,EAAE,GAAE;YACnD;QACN;QAEI,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,KAAM,EAAA,GAAI,IAAI;QAE9C,MAAM,KAAM,GAAE,6BAA6B,KACzC,mMAAA,AAAqB,EAAC,WAAW,EAAE,KAAM,IAAG,GAAG,EAAE,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,EACpF,GAAG,EACH,IAAI,EACJ,MAAM;QAGR,KAAK,CAAC,KAAM,GAAE,OAAO;wKAErB,eAAA,AAAY,EAAC,KAAK,EAAE;YAClB,iBAAiB,EAAE,KAAK;YACxB,SAAS,EAAE;gBACT,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE,SAAS;YACvB,CAAO;QACP,CAAK,CAAC;IACN,CAAG,CAAC;AACJ;AAEA,SAAS,yCAAyC,CAAC,MAAM,EAAgB;qNACvE,oDAAA,AAAiD,GAAC,CAAA,IAAK;QACrD,MAAM,EAAE,WAAW,EAAE,gBAAA,EAAmB,GAAE,UAAU,EAAE;QAEtD,0KAAI,YAAA,AAAS,EAAC,MAAM,MAAA,8KAAU,sBAAA,AAAmB,EAAE,GAAE;YACnD;QACN;QAEI,MAAM,KAAM,GAAE,2BAA2B,CAAC,GAAa;QAEvD,MAAM,KAAA,gLAAQ,cAAA,AAAW,EAAC,KAAK,IAC3B,gCAAgC,CAAC,KAAK,KACtC,sMAAA,AAAqB,EAAC,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,gBAAgB,EAAE,IAAI,CAAC;QAEhF,KAAK,CAAC,KAAM,GAAE,OAAO;QAErB,+KAAA,AAAY,EAAC,KAAK,EAAE;YAClB,iBAAiB,EAAE,KAAK;YACxB,SAAS,EAAE;gBACT,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE,sBAAsB;YACpC,CAAO;QACP,CAAK,CAAC;IACN,CAAG,CAAC;AACJ;AAEA,SAAS,2BAA2B,CAAC,KAAK,EAAoB;IAC5D,KAAI,0LAAA,AAAW,EAAC,KAAK,CAAC,EAAE;QACtB,OAAO,KAAK;IAChB;IAEA,2DAAA;IACE,IAAI;QAEN,0EAAA;QACA,6EAAA;QACI,IAAI,QAAA,IAAa,KAAA,EAAyB,AAAE;YAC1C,OAAO,AAAC,KAAM,CAAoB,MAAM;QAC9C;QAGA,8FAAA;QACA,gFAAA;QACA,qFAAA;QACA,uEAAA;QACA,6DAAA;QACI,IAAI,QAAS,IAAI,KAAM,EAAA,EAA6B,QAAA,IAAY,AAAC,KAAA,CAAgC,MAAM,EAAE;YACvG,OAAO,AAAC,KAAA,CAAgC,MAAM,CAAC,MAAM;QAC3D;IACA,CAAE,CAAE,OAAA,IAAM,CAAA,CAAC,CAAA,+BAAA;IAET,OAAO,KAAK;AACd;AAEA;;;;;CAKA,GACA,SAAS,gCAAgC,CAAC,MAAM,EAAoB;IAClE,OAAO;QACL,SAAS,EAAE;YACT,MAAM,EAAE;gBACN;oBACE,IAAI,EAAE,oBAAoB;oBACpC,4GAAA;oBACU,KAAK,EAAE,CAAC,iDAAiD,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAA;gBACA,CAAA;aACA;QACA,CAAA;IACA,CAAA;AACA;AAEA,SAAA,6BAAA,CACA,KAAA,EACA,GAAA,EACA,IAAA,EACA,MAAA;IAEA,kBAAA;IACA,MAAA,CAAA,GAAA,KAAA,CAAA,SAAA,GAAA,KAAA,CAAA,SAAA,IAAA,CAAA,CAAA,CAAA;IACA,yBAAA;IACA,MAAA,EAAA,GAAA,CAAA,CAAA,MAAA,GAAA,CAAA,CAAA,MAAA,IAAA,EAAA,CAAA;IACA,4BAAA;IACA,MAAA,GAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;IACA,uCAAA;IACA,MAAA,IAAA,GAAA,GAAA,CAAA,UAAA,GAAA,GAAA,CAAA,UAAA,IAAA,CAAA,CAAA,CAAA;IACA,8CAAA;IACA,MAAA,KAAA,GAAA,IAAA,CAAA,MAAA,GAAA,IAAA,CAAA,MAAA,IAAA,EAAA,CAAA;IAEA,MAAA,KAAA,GAAA,MAAA;IACA,MAAA,MAAA,GAAA,IAAA;IACA,MAAA,QAAA,gLAAA,WAAA,EAAA,GAAA,CAAA,IAAA,GAAA,CAAA,MAAA,GAAA,CAAA,GAAA,GAAA,qLAAA,kBAAA,EAAA;IAEA,8CAAA;IACA,IAAA,KAAA,CAAA,MAAA,KAAA,CAAA,EAAA;QACA,KAAA,CAAA,IAAA,CAAA;YACA,KAAA;YACA,QAAA;YACA,QAAA,mLAAA,mBAAA;YACA,MAAA,EAAA,IAAA;YACA,MAAA;QACA,CAAA,CAAA;IACA;IAEA,OAAA,KAAA;AACA;AAEA,SAAA,gBAAA,CAAA,IAAA,EAAA;iLACA,cAAA,iLAAA,SAAA,CAAA,GAAA,CAAA,CAAA,yBAAA,EAAA,IAAA,CAAA,CAAA,CAAA;AACA;AAEA,SAAA,UAAA,GAAA;IACA,MAAA,MAAA,yKAAA,YAAA,EAAA;IACA,MAAA,OAAA,GAAA,MAAA,IAAA,MAAA,CAAA,UAAA,EAAA,IAAA;QACA,WAAA,EAAA,IAAA,EAAA;QACA,gBAAA,EAAA,KAAA;IACA,CAAA;IACA,OAAA,OAAA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1263, "column": 0}, "map": {"version":3,"file":"linkederrors.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sentry/browser/src/integrations/linkederrors.ts"],"sourcesContent":["import type { IntegrationFn } from '@sentry/core';\nimport { applyAggregateErrorsToEvent, defineIntegration } from '@sentry/core';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Aggregrate linked errors in an event.\n */\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n"],"names":[],"mappings":";;;;;;;;AASA,MAAM,WAAA,GAAc,OAAO;AAC3B,MAAM,aAAA,GAAgB,CAAC;AAEvB,MAAM,gBAAA,GAAmB,cAAc;AAEvC,MAAM,wBAAA,GAA4B,CAAC,OAAO,GAAwB,CAAA,CAAE,KAAK;IACvE,MAAM,KAAM,GAAE,OAAO,CAAC,KAAA,IAAS,aAAa;IAC5C,MAAM,GAAI,GAAE,OAAO,CAAC,GAAA,IAAO,WAAW;IAEtC,OAAO;QACL,IAAI,EAAE,gBAAgB;QACtB,eAAe,EAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE;YACnC,MAAM,OAAQ,GAAE,MAAM,CAAC,UAAU,EAAE;0MAEnC,8BAAA,AAA2B,EACjC,0GAAA;uLACQ,qBAAkB,EAClB,OAAO,CAAC,WAAW,EACnB,OAAO,CAAC,cAAc,EACtB,GAAG,EACH,KAAK,EACL,KAAK,EACL,IAAI;QAEZ,CAAK;IACL,CAAG;AACH,CAAC,CAAE;AAEH;;CAEA,SACa,uBAAwB,uKAAE,oBAAA,AAAiB,EAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1297, "column": 0}, "map": {"version":3,"file":"httpcontext.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sentry/browser/src/integrations/httpcontext.ts"],"sourcesContent":["import { defineIntegration } from '@sentry/core';\nimport { WINDOW } from '../helpers';\n\n/**\n * Collects information about HTTP request headers and\n * attaches them to the event.\n */\nexport const httpContextIntegration = defineIntegration(() => {\n  return {\n    name: 'HttpContext',\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n});\n"],"names":[],"mappings":";;;;;;;AAGA;;;CAGA,SACa,sBAAuB,uKAAE,oBAAA,AAAiB,EAAC,MAAM;IAC5D,OAAO;QACL,IAAI,EAAE,aAAa;QACnB,eAAe,EAAC,KAAK,EAAE;YAC3B,0DAAA;YACM,IAAI,uKAAC,SAAM,CAAC,SAAA,IAAa,uKAAC,SAAM,CAAC,QAAA,IAAY,uKAAC,SAAM,CAAC,QAAQ,EAAE;gBAC7D;YACR;YAEA,sDAAA;YACM,MAAM,GAAI,GAAE,AAAC,KAAK,CAAC,OAAQ,IAAG,KAAK,CAAC,OAAO,CAAC,GAAG,yKAAM,UAAM,CAAC,QAAA,0KAAY,SAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC7F,MAAM,EAAE,QAAA,EAAW,yKAAE,SAAM,CAAC,QAAA,IAAY,CAAA,CAAE;YAC1C,MAAM,EAAE,SAAA,EAAY,yKAAE,SAAM,CAAC,SAAA,IAAa,CAAA,CAAE;YAE5C,MAAM,UAAU;gBACd,GAAI,KAAK,CAAC,OAAA,IAAW,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC;gBAC3C,GAAI,QAAS,IAAG;oBAAE,OAAO,EAAE,QAAS;gBAAA,CAAC,CAAC;gBACtC,GAAI,SAAU,IAAG;oBAAE,YAAY,EAAE,SAAU;gBAAA,CAAC,CAAC;YACrD,CAAO;YACD,MAAM,OAAQ,GAAE;gBAAE,GAAG,KAAK,CAAC,OAAO;gBAAE,GAAI,GAAA,IAAO;oBAAE,GAAA;gBAAA,CAAK,CAAC;gBAAE;YAAA,CAAS;YAElE,KAAK,CAAC,OAAQ,GAAE,OAAO;QAC7B,CAAK;IACL,CAAG;AACH,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1347, "column": 0}, "map": {"version":3,"file":"userfeedback.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sentry/browser/src/userfeedback.ts"],"sourcesContent":["import { createEnvelope, dsnToString } from '@sentry/core';\nimport type { DsnComponents, EventEnvelope, SdkMetadata, UserFeedback, UserFeedbackItem } from '@sentry/core';\n\n/**\n * Creates an envelope from a user feedback.\n */\nexport function createUserFeedbackEnvelope(\n  feedback: UserFeedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }: {\n    metadata: SdkMetadata | undefined;\n    tunnel: string | undefined;\n    dsn: DsnComponents | undefined;\n  },\n): EventEnvelope {\n  const headers: EventEnvelope[0] = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback: UserFeedback): UserFeedbackItem {\n  const feedbackHeaders: UserFeedbackItem[0] = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n"],"names":[],"mappings":";;;;;;AAGA;;CAEA,GACO,SAAS,0BAA0B,CACxC,QAAQ,EACR,EACE,QAAQ,EACR,MAAM,EACN,GAAG,EACP;IAME,MAAM,OAAO,GAAqB;QAChC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;QAC3B,OAAO,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;QACjC,GAAI,QAAS,IACX,QAAQ,CAAC,GAAA,IAAO;YACd,GAAG,EAAE;gBACH,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,IAAI;gBACvB,OAAO,EAAE,QAAQ,CAAC,GAAG,CAAC,OAAO;YACvC,CAAS;QACT,CAAO,CAAC;QACJ,GAAI,CAAC,CAAC,MAAO,IAAG,CAAC,CAAC,GAAA,IAAO;YAAE,GAAG,gLAAE,cAAA,AAAW,EAAC,GAAG,CAAA;QAAA,CAAG,CAAC;IACvD,CAAG;IACD,MAAM,IAAK,GAAE,8BAA8B,CAAC,QAAQ,CAAC;IAErD,0LAAO,iBAAA,AAAc,EAAC,OAAO,EAAE;QAAC,IAAI;KAAC,CAAC;AACxC;AAEA,SAAS,8BAA8B,CAAC,QAAQ,EAAkC;IAChF,MAAM,eAAe,GAAwB;QAC3C,IAAI,EAAE,aAAa;IACvB,CAAG;IACD,OAAO;QAAC,eAAe;QAAE,QAAQ;KAAC;AACpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1391, "column": 0}, "map": {"version":3,"file":"client.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sentry/browser/src/client.ts"],"sourcesContent":["import type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Scope,\n  SeverityLevel,\n  UserFeedback,\n} from '@sentry/core';\nimport { BaseClient, applySdkMetadata, getSDKSource, logger } from '@sentry/core';\nimport { DEBUG_BUILD } from './debug-build';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\nimport { createUserFeedbackEnvelope } from './userfeedback';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/core Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions & {\n    /**\n     * Important: Only set this option if you know what you are doing!\n     *\n     * By default, the SDK will check if `Sentry.init` is called in a browser extension.\n     * In case it is, it will stop initialization and log a warning\n     * because browser extensions require a different Sentry initialization process:\n     * https://docs.sentry.io/platforms/javascript/best-practices/shared-environments/\n     *\n     * Setting up the SDK in a browser extension with global error monitoring is not recommended\n     * and will likely flood you with errors from other web sites or extensions. This can heavily\n     * impact your quota and cause interference with your and other Sentry SDKs in shared environments.\n     *\n     * If this check wrongfully flags your setup as a browser extension, you can set this\n     * option to `true` to skip the check.\n     *\n     * @default false\n     */\n    skipBrowserExtensionCheck?: boolean;\n  };\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions & {\n    /** If configured, this URL will be used as base URL for lazy loading integration. */\n    cdnBaseUrl?: string;\n  };\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserClientOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const opts = {\n      // We default this to true, as it is the safer scenario\n      parentSpanIsAlwaysRootSpan: true,\n      ...options,\n    };\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(opts, 'browser', ['browser'], sdkSource);\n\n    super(opts);\n\n    if (opts.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    level: SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   *\n   * @deprecated Use `captureFeedback` instead.\n   */\n  public captureUserFeedback(feedback: UserFeedback): void {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAmBA;;;CAGA,GAmCA;;;;;CAKA,GACO,MAAM,aAAA,wKAAsB,aAAU,CAAuB;IACpE;;;;GAIA,GACS,WAAW,CAAC,OAAO,CAAwB;QAChD,MAAM,OAAO;YACjB,uDAAA;YACM,0BAA0B,EAAE,IAAI;YAChC,GAAG,OAAO;QAChB,CAAK;QACD,MAAM,kLAAY,SAAM,CAAC,iBAAkB,QAAG,yLAAA,AAAY,EAAE;qLAC5D,mBAAA,AAAgB,EAAC,IAAI,EAAE,SAAS,EAAE;YAAC,SAAS;SAAC,EAAE,SAAS,CAAC;QAEzD,KAAK,CAAC,IAAI,CAAC;QAEX,IAAI,IAAI,CAAC,iBAAA,0KAAqB,SAAM,CAAC,QAAQ,EAAE;kLAC7C,SAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;gBACzD,0KAAI,SAAM,CAAC,QAAQ,CAAC,eAAA,KAAoB,QAAQ,EAAE;oBAChD,IAAI,CAAC,cAAc,EAAE;gBAC/B;YACA,CAAO,CAAC;QACR;IACA;IAEA;;GAEA,GACS,kBAAkB,CAAC,SAAS,EAAW,IAAI,EAAkC;QAClF,QAAO,mMAAA,AAAkB,EAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC;IACzG;IAEA;;GAEA,GACS,gBAAgB,CACrB,OAAO,EACP,KAAK,GAAkB,MAAM,EAC7B,IAAI,EACgB;QACpB,OAAO,kMAAA,AAAgB,EAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC;IAC5G;IAEA;;;;GAIA,GACS,mBAAmB,CAAC,QAAQ,EAAsB;QACvD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE;yLACtB,cAAA,iLAAe,SAAM,CAAC,IAAI,CAAC,kDAAkD,CAAC;YAC9E;QACN;QAEI,MAAM,QAAS,kLAAE,6BAAA,AAA0B,EAAC,QAAQ,EAAE;YACpD,QAAQ,EAAE,IAAI,CAAC,cAAc,EAAE;YAC/B,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE;YAClB,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,MAAM;QACtC,CAAK,CAAC;QAEN,gCAAA;QACA,mEAAA;QACI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA;;GAEA,GACY,aAAa,CAAC,KAAK,EAAS,IAAI,EAAa,KAAK,EAAqC;QAC/F,KAAK,CAAC,QAAS,GAAE,KAAK,CAAC,QAAA,IAAY,YAAY;QAC/C,OAAO,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;IAClD;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1482, "column": 0}, "map": {"version":3,"file":"stack-parsers.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sentry/browser/src/stack-parsers.ts"],"sourcesContent":["// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport { UNKNOWN_FUNCTION, createStackParser } from '@sentry/core';\nimport type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/core';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func === '<anonymous>' ? UNKNOWN_FUNCTION : func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// This regex matches frames that have no function name (ie. are at the top level of a module).\n// For example \"at http://localhost:5000//script.js:1:126\"\n// Frames _with_ function names usually look as follows: \"at commitLayoutEffects (react-dom.development.js:23426:1)\"\nconst chromeRegexNoFnName = /^\\s*at (\\S+?)(?::(\\d+))(?::(\\d+))\\s*$/i;\n\n// This regex matches all the frames that have a function name.\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn: StackLineParserFn = line => {\n  // If the stack line has no function name, we need to parse it differently\n  const noFnParts = chromeRegexNoFnName.exec(line) as null | [string, string, string, string];\n\n  if (noFnParts) {\n    const [, filename, line, col] = noFnParts;\n    return createFrame(filename, UNKNOWN_FUNCTION, +line, +col);\n  }\n\n  const parts = chromeRegex.exec(line) as null | [string, string, string, string, string];\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]) as null | [string, string, string, string];\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line) as null | [string, string, string, string, string, string];\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]) as null | [string, string, string];\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line) as null | [string, string, string, string, string];\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line) as null | [string, string, string, string];\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line) as null | [string, string, string, string, string, string];\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? (func.split('@')[0] as string) : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n"],"names":[],"mappings":";;;;;;;;;;;AAAA,uFAAA;AACA,sCAAA;AACA,EAAA;AACA,oFAAA;AACA,6BAAA;AAwBA,MAAM,gBAAA,GAAmB,EAAE;AAC3B,MAAM,gBAAA,GAAmB,EAAE;AAC3B,MAAM,eAAA,GAAkB,EAAE;AAC1B,MAAM,cAAA,GAAiB,EAAE;AACzB,MAAM,cAAA,GAAiB,EAAE;AAEzB,SAAS,WAAW,CAAC,QAAQ,EAAU,IAAI,EAAU,MAAM,EAAW,KAAK,EAAuB;IAChG,MAAM,KAAK,GAAe;QACxB,QAAQ;QACR,QAAQ,EAAE,IAAK,KAAI,iMAAgB,mBAAA,GAAmB,IAAI;QAC1D,MAAM,EAAE,IAAI;IAChB,CAAG;IAED,IAAI,MAAO,KAAI,SAAS,EAAE;QACxB,KAAK,CAAC,MAAO,GAAE,MAAM;IACzB;IAEE,IAAI,KAAM,KAAI,SAAS,EAAE;QACvB,KAAK,CAAC,KAAM,GAAE,KAAK;IACvB;IAEE,OAAO,KAAK;AACd;AAEA,+FAAA;AACA,0DAAA;AACA,oHAAA;AACA,MAAM,mBAAA,GAAsB,wCAAwC;AAEpE,+DAAA;AACA,MAAM,WAAY,GAChB,4IAA4I;AAE9I,MAAM,eAAA,GAAkB,+BAA+B;AAEvD,8DAAA;AACA,sHAAA;AACA,kEAAA;AACA,MAAM,mBAAmB,IAAsB,IAAA,IAAQ;IACvD,0EAAA;IACE,MAAM,YAAY,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAE;IAEjD,IAAI,SAAS,EAAE;QACb,MAAM,GAAG,QAAQ,EAAE,IAAI,EAAE,GAAG,CAAE,GAAE,SAAS;QACzC,OAAO,WAAW,CAAC,QAAQ,mLAAE,mBAAgB,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;IAC/D;IAEE,MAAM,QAAQ,WAAW,CAAC,IAAI,CAAC,IAAI,CAAE;IAErC,IAAI,KAAK,EAAE;QACT,MAAM,MAAO,GAAE,KAAK,CAAC,CAAC,CAAA,IAAK,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAA,KAAM,CAAC,CAAA,CAAA,gBAAA;QAEzD,IAAI,MAAM,EAAE;YACV,MAAM,QAAS,GAAE,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE;YAEhD,IAAI,QAAQ,EAAE;gBACpB,iEAAA;gBACQ,KAAK,CAAC,CAAC,CAAA,GAAI,QAAQ,CAAC,CAAC,CAAC,CAAA,CAAA,MAAA;gBACtB,KAAK,CAAC,CAAC,CAAA,GAAI,QAAQ,CAAC,CAAC,CAAC,CAAA,CAAA,OAAA;gBACtB,KAAK,CAAC,CAAC,CAAA,GAAI,QAAQ,CAAC,CAAC,CAAC,CAAA,CAAA,SAAA;YAC9B;QACA;QAEA,kHAAA;QACA,oFAAA;QACI,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAE,GAAE,6BAA6B,CAAC,KAAK,CAAC,CAAC,CAAA,qLAAK,mBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QAE9F,OAAO,WAAW,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAA,GAAI,CAAC,KAAK,CAAC,CAAC,CAAE,GAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAE,GAAE,CAAC,KAAK,CAAC,CAAC,CAAE,GAAE,SAAS,CAAC;IAC1G;IAEE;AACF,CAAC;AAEM,MAAM,qBAAqB,GAAoB;IAAC,eAAe;IAAE,mBAAmB;CAAA;AAE3F,8HAAA;AACA,qGAAA;AACA,8EAAA;AACA,MAAM,UAAW,GACf,sIAAsI;AACxI,MAAM,cAAA,GAAiB,+CAA+C;AAEtE,MAAM,KAAK,IAAsB,IAAA,IAAQ;IACvC,MAAM,QAAQ,UAAU,CAAC,IAAI,CAAC,IAAI,CAAE;IAEpC,IAAI,KAAK,EAAE;QACT,MAAM,MAAO,GAAE,KAAK,CAAC,CAAC,CAAA,IAAK,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAE,GAAE,CAAC,CAAC;QAC3D,IAAI,MAAM,EAAE;YACV,MAAM,QAAS,GAAE,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE;YAE/C,IAAI,QAAQ,EAAE;gBACpB,0DAAA;gBACQ,KAAK,CAAC,CAAC,CAAE,GAAE,KAAK,CAAC,CAAC,CAAE,IAAG,MAAM;gBAC7B,KAAK,CAAC,CAAC,CAAA,GAAI,QAAQ,CAAC,CAAC,CAAC;gBACtB,KAAK,CAAC,CAAC,CAAA,GAAI,QAAQ,CAAC,CAAC,CAAC;gBACtB,KAAK,CAAC,CAAC,CAAA,GAAI,EAAE,CAAA,CAAA,sBAAA;YACrB;QACA;QAEI,IAAI,QAAS,GAAE,KAAK,CAAC,CAAC,CAAC;QACvB,IAAI,OAAO,KAAK,CAAC,CAAC,CAAA,qLAAK,mBAAgB;QACvC,CAAC,IAAI,EAAE,QAAQ,CAAA,GAAI,6BAA6B,CAAC,IAAI,EAAE,QAAQ,CAAC;QAEhE,OAAO,WAAW,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAA,GAAI,CAAC,KAAK,CAAC,CAAC,CAAE,GAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAE,GAAE,CAAC,KAAK,CAAC,CAAC,CAAE,GAAE,SAAS,CAAC;IAC1G;IAEE;AACF,CAAC;AAEM,MAAM,oBAAoB,GAAoB;IAAC,cAAc;IAAE,KAAK;CAAA;AAE3E,MAAM,UAAA,GAAa,sFAAsF;AAEzG,MAAM,KAAK,IAAsB,IAAA,IAAQ;IACvC,MAAM,QAAQ,UAAU,CAAC,IAAI,CAAC,IAAI,CAAE;IAEpC,OAAO,QACH,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAE,qLAAG,mBAAgB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAA,GAAI,CAAC,KAAK,CAAC,CAAC,CAAA,GAAI,SAAS,IAC/F,SAAS;AACf,CAAC;AAEM,MAAM,oBAAoB,GAAoB;IAAC,cAAc;IAAE,KAAK;CAAA;AAE3E,MAAM,YAAA,GAAe,6DAA6D;AAElF,MAAM,OAAO,IAAsB,IAAA,IAAQ;IACzC,MAAM,QAAQ,YAAY,CAAC,IAAI,CAAC,IAAI,CAAE;IACtC,OAAO,KAAM,GAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAE,qLAAG,mBAAgB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,GAAE,SAAS;AAC3F,CAAC;AAEM,MAAM,sBAAsB,GAAoB;IAAC,gBAAgB;IAAE,OAAO;CAAA;AAEjF,MAAM,YAAa,GACjB,mGAAmG;AAErG,MAAM,OAAO,IAAsB,IAAA,IAAQ;IACzC,MAAM,QAAQ,YAAY,CAAC,IAAI,CAAC,IAAI,CAAE;IACtC,OAAO,KAAA,GAAQ,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAA,IAAK,KAAK,CAAC,CAAC,CAAA,oLAAK,oBAAgB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,GAAI,SAAS;AAClH,CAAC;AAEM,MAAM,sBAAsB,GAAoB;IAAC,gBAAgB;IAAE,OAAO;CAAA;MAEpE,uBAAwB,GAAE;IAAC,qBAAqB;IAAE,oBAAoB;CAAA;MAEtE,kBAAmB,wLAAE,oBAAA,AAAiB,CAAC,IAAG,uBAAuB;AAE9E;;;;;;;;;;;;;;;;;;;CAmBA,GACA,MAAM,gCAAgC,CAAC,IAAI,EAAU,QAAQ,KAA+B;IAC1F,MAAM,iBAAkB,GAAE,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAA,KAAM,CAAC,CAAC;IACjE,MAAM,oBAAqB,GAAE,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAA,KAAM,CAAC,CAAC;IAExE,OAAO,qBAAqB,uBACxB;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAE,KAAI,CAAC,CAAA,GAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,oLAAe,mBAAgB;QAC5E,oBAAoB,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAA,GAAA,CAAA,qBAAA,EAAA,QAAA,CAAA,CAAA;KACA,GACA;QAAA,IAAA;QAAA,QAAA;KAAA;AACA,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1657, "column": 0}, "map": {"version":3,"file":"browsersession.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sentry/browser/src/integrations/browsersession.ts"],"sourcesContent":["import { addHistoryInstrumentationHandler } from '@sentry-internal/browser-utils';\nimport { captureSession, defineIntegration, logger, startSession } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\n/**\n * When added, automatically creates sessions which allow you to track adoption and crashes (crash free rate) in your Releases in Sentry.\n * More information: https://docs.sentry.io/product/releases/health/\n *\n * Note: In order for session tracking to work, you need to set up Releases: https://docs.sentry.io/product/releases/\n */\nexport const browserSessionIntegration = defineIntegration(() => {\n  return {\n    name: 'BrowserSession',\n    setupOnce() {\n      if (typeof WINDOW.document === 'undefined') {\n        DEBUG_BUILD &&\n          logger.warn('Using the `browserSessionIntegration` in non-browser environments is not supported.');\n        return;\n      }\n\n      // The session duration for browser sessions does not track a meaningful\n      // concept that can be used as a metric.\n      // Automatically captured sessions are akin to page views, and thus we\n      // discard their duration.\n      startSession({ ignoreDuration: true });\n      captureSession();\n\n      // We want to create a session for every navigation as well\n      addHistoryInstrumentationHandler(({ from, to }) => {\n        // Don't create an additional session for the initial route or if the location did not change\n        if (from !== undefined && from !== to) {\n          startSession({ ignoreDuration: true });\n          captureSession();\n        }\n      });\n    },\n  };\n});\n"],"names":[],"mappings":";;;;;;;;;;;;;AAKA;;;;;CAKA,SACa,yBAA0B,uKAAE,oBAAA,AAAiB,EAAC,MAAM;IAC/D,OAAO;QACL,IAAI,EAAE,gBAAgB;QACtB,SAAS,GAAG;YACV,IAAI,6KAAO,SAAM,CAAC,QAAS,KAAI,WAAW,EAAE;6LAC1C,cAAY,gLACV,UAAM,CAAC,IAAI,CAAC,qFAAqF,CAAC;gBACpG;YACR;YAEA,wEAAA;YACA,wCAAA;YACA,sEAAA;YACA,0BAAA;4KACM,eAAA,AAAY,EAAC;gBAAE,cAAc,EAAE,IAAA;YAAA,CAAM,CAAC;YACtC,iLAAA,AAAc,EAAE;YAEtB,2DAAA;kNACM,mCAAA,AAAgC,EAAC,CAAC,EAAE,IAAI,EAAE,EAAA,EAAI,KAAK;gBACzD,6FAAA;gBACQ,IAAI,IAAK,KAAI,aAAa,IAAA,KAAS,EAAE,EAAE;oLACrC,eAAA,AAAY,EAAC;wBAAE,cAAc,EAAE,IAAA;oBAAA,CAAM,CAAC;oLACtC,iBAAA,AAAc,EAAE;gBAC1B;YACA,CAAO,CAAC;QACR,CAAK;IACL,CAAG;AACH,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1712, "column": 0}, "map": {"version":3,"file":"sdk.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sentry/browser/src/sdk.ts"],"sourcesContent":["import {\n  consoleSandbox,\n  dedupeIntegration,\n  functionToStringIntegration,\n  getClient,\n  getCurrentScope,\n  getIntegrationsToSetup,\n  getReportDialogEndpoint,\n  inboundFiltersIntegration,\n  initAndBind,\n  lastEventId,\n  logger,\n  stackParserFromStackParserOptions,\n  supportsFetch,\n} from '@sentry/core';\nimport type { Client, DsnLike, Integration, Options, UserFeedback } from '@sentry/core';\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport { WINDOW } from './helpers';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { browserApiErrorsIntegration } from './integrations/browserapierrors';\nimport { browserSessionIntegration } from './integrations/browsersession';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport } from './transports/fetch';\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(options: Options): Integration[] {\n  /**\n   * Note: Please make sure this stays in sync with Angular SDK, which re-exports\n   * `getDefaultIntegrations` but with an adjusted set of integrations.\n   */\n  const integrations = [\n    inboundFiltersIntegration(),\n    functionToStringIntegration(),\n    browserApiErrorsIntegration(),\n    breadcrumbsIntegration(),\n    globalHandlersIntegration(),\n    linkedErrorsIntegration(),\n    dedupeIntegration(),\n    httpContextIntegration(),\n  ];\n\n  // eslint-disable-next-line deprecation/deprecation\n  if (options.autoSessionTracking !== false) {\n    integrations.push(browserSessionIntegration());\n  }\n\n  return integrations;\n}\n\nfunction applyDefaultOptions(optionsArg: BrowserOptions = {}): BrowserOptions {\n  const defaultOptions: BrowserOptions = {\n    defaultIntegrations: getDefaultIntegrations(optionsArg),\n    release:\n      typeof __SENTRY_RELEASE__ === 'string' // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n        ? __SENTRY_RELEASE__\n        : WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id // This supports the variable that sentry-webpack-plugin injects\n          ? WINDOW.SENTRY_RELEASE.id\n          : undefined,\n    autoSessionTracking: true,\n    sendClientReports: true,\n  };\n\n  // TODO: Instead of dropping just `defaultIntegrations`, we should simply\n  // call `dropUndefinedKeys` on the entire `optionsArg`.\n  // However, for this to work we need to adjust the `hasTracingEnabled()` logic\n  // first as it differentiates between `undefined` and the key not being in the object.\n  if (optionsArg.defaultIntegrations == null) {\n    delete optionsArg.defaultIntegrations;\n  }\n\n  return { ...defaultOptions, ...optionsArg };\n}\n\ntype ExtensionProperties = {\n  chrome?: Runtime;\n  browser?: Runtime;\n  nw?: unknown;\n};\ntype Runtime = {\n  runtime?: {\n    id?: string;\n  };\n};\n\nfunction shouldShowBrowserExtensionError(): boolean {\n  const windowWithMaybeExtension =\n    typeof WINDOW.window !== 'undefined' && (WINDOW as typeof WINDOW & ExtensionProperties);\n  if (!windowWithMaybeExtension) {\n    // No need to show the error if we're not in a browser window environment (e.g. service workers)\n    return false;\n  }\n\n  const extensionKey = windowWithMaybeExtension.chrome ? 'chrome' : 'browser';\n  const extensionObject = windowWithMaybeExtension[extensionKey];\n\n  const runtimeId = extensionObject && extensionObject.runtime && extensionObject.runtime.id;\n  const href = (WINDOW.location && WINDOW.location.href) || '';\n\n  const extensionProtocols = ['chrome-extension:', 'moz-extension:', 'ms-browser-extension:', 'safari-web-extension:'];\n\n  // Running the SDK in a dedicated extension page and calling Sentry.init is fine; no risk of data leakage\n  const isDedicatedExtensionPage =\n    !!runtimeId && WINDOW === WINDOW.top && extensionProtocols.some(protocol => href.startsWith(`${protocol}//`));\n\n  // Running the SDK in NW.js, which appears like a browser extension but isn't, is also fine\n  // see: https://github.com/getsentry/sentry-javascript/issues/12668\n  const isNWjs = typeof windowWithMaybeExtension.nw !== 'undefined';\n\n  return !!runtimeId && !isDedicatedExtensionPage && !isNWjs;\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(browserOptions: BrowserOptions = {}): Client | undefined {\n  const options = applyDefaultOptions(browserOptions);\n\n  if (!options.skipBrowserExtensionCheck && shouldShowBrowserExtensionError()) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(\n        '[Sentry] You cannot run Sentry this way in a browser extension, check: https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/',\n      );\n    });\n    return;\n  }\n\n  if (DEBUG_BUILD) {\n    if (!supportsFetch()) {\n      logger.warn(\n        'No Fetch API detected. The Sentry SDK requires a Fetch API compatible environment to send events. Please add a Fetch API polyfill.',\n      );\n    }\n  }\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || makeFetchTransport,\n  };\n\n  return initAndBind(BrowserClient, clientOptions);\n}\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  // TODO(v9): Change this to  [key: string]: unknkown;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(this: void): void;\n  /** Callback after reportDialog closed */\n  onClose?(this: void): void;\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options: ReportDialogOptions = {}): void {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const scope = getCurrentScope();\n  const client = scope.getClient();\n  const dsn = client && client.getDsn();\n\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    const eventId = lastEventId();\n    if (eventId) {\n      options.eventId = eventId;\n    }\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event: MessageEvent): void => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n *\n * @deprecated Use `captureFeedback` instead.\n */\nexport function captureUserFeedback(feedback: UserFeedback): void {\n  const client = getClient<BrowserClient>();\n  if (client) {\n    // eslint-disable-next-line deprecation/deprecation\n    client.captureUserFeedback(feedback);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}