{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"context.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/optimistic/context.ts"],"sourcesContent":["import {createEmptyActor, type ActorRefFrom} from 'xstate'\nimport {createDatasetMutator} from './state/datasetMutator'\n\nexport type MutatorActor = ActorRefFrom<ReturnType<typeof createDatasetMutator>>\nexport type EmptyActor = typeof emptyActor\n\nexport const emptyActor = createEmptyActor()\n\nexport let actor: MutatorActor | EmptyActor = emptyActor\n\nexport const listeners = new Set<() => void>()\n\nexport function isEmptyActor(actor: MutatorActor | EmptyActor): actor is EmptyActor {\n  return actor === emptyActor\n}\n\nexport function setActor(nextActor: MutatorActor): void {\n  actor = nextActor\n  for (const onActorChange of listeners) {\n    onActorChange()\n  }\n}\n"],"names":["emptyActor","createEmptyActor","actor","listeners","Set","isEmptyActor","setActor","nextActor","onActorChange"],"mappings":";;;;;;;;;AAMO,MAAMA,oMAAaC,mBAAAA,CAAiB;AAEpC,IAAIC,QAAmCF;AAEjCG,MAAAA,YAAAA,aAAAA,GAAAA,IAAgBC,IAAgB;AAEtC,SAASC,aAAaH,MAAAA,EAAuD;IAClF,OAAOA,WAAUF;AACnB;AAEO,SAASM,SAASC,SAAAA,EAA+B;IAC9CA,QAAAA;IACR,KAAA,MAAWC,iBAAiBL,UACZ,cAAA;AAElB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"file":"mutations.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/node_modules/.pnpm/%40sanity%2Btypes%403.80.0_%40types%2Breact%4019.0.11_debug%404.4.0/node_modules/%40sanity/types/lib/index.mjs","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/node_modules/.pnpm/%40sanity%2Butil%403.80.0_%40types%2Breact%4019.0.11_debug%404.4.0/node_modules/%40sanity/util/lib/paths.mjs","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/react/useOptimisticActor.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/react/useDocuments.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/util/randomKey.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/util/mutations.ts"],"sourcesContent":["function isObject(obj) {\n  return typeof obj == \"object\" && obj !== null && !Array.isArray(obj);\n}\nfunction isReference(reference) {\n  return isObject(reference) && typeof reference._ref == \"string\";\n}\nfunction isImage(value) {\n  return isObject(value) && isReference(value.asset) && value.asset._ref.startsWith(\"image-\");\n}\nfunction isCrossDatasetReference(reference) {\n  return isObject(reference) && typeof reference._ref == \"string\" && typeof reference._dataset == \"string\" && typeof reference._projectId == \"string\";\n}\nfunction isSanityDocument(document) {\n  return isObject(document) && typeof document._id == \"string\" && typeof document._type == \"string\";\n}\nfunction isTypedObject(obj) {\n  return isObject(obj) && typeof obj._type == \"string\";\n}\nfunction isKeyedObject(obj) {\n  return isObject(obj) && typeof obj._key == \"string\";\n}\nfunction isGlobalDocumentReference(reference) {\n  return !isObject(reference) || typeof reference._ref != \"string\" ? !1 : reference._ref.split(\":\").length === 3;\n}\nfunction isValidationErrorMarker(marker) {\n  return marker.level === \"error\";\n}\nfunction isValidationWarningMarker(marker) {\n  return marker.level === \"warning\";\n}\nfunction isValidationInfoMarker(marker) {\n  return marker.level === \"info\";\n}\nfunction isCreateMutation(mutation) {\n  return \"create\" in mutation;\n}\nfunction isCreateIfNotExistsMutation(mutation) {\n  return \"createIfNotExists\" in mutation;\n}\nfunction isCreateOrReplaceMutation(mutation) {\n  return \"createOrReplace\" in mutation;\n}\nfunction isDeleteMutation(mutation) {\n  return \"delete\" in mutation;\n}\nfunction isPatchMutation(mutation) {\n  return \"patch\" in mutation;\n}\nconst reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/, reIndexTuple = /^\\d*:\\d*$/;\nfunction isIndexSegment(segment) {\n  return typeof segment == \"number\" || typeof segment == \"string\" && /^\\[\\d+\\]$/.test(segment);\n}\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction isIndexTuple(segment) {\n  if (typeof segment == \"string\" && reIndexTuple.test(segment))\n    return !0;\n  if (!Array.isArray(segment) || segment.length !== 2)\n    return !1;\n  const [from, to] = segment;\n  return (typeof from == \"number\" || from === \"\") && (typeof to == \"number\" || to === \"\");\n}\nfunction isRecord$1(value) {\n  return !!value && (typeof value == \"object\" || typeof value == \"function\");\n}\nfunction isPortableTextTextBlock(value) {\n  return isRecord$1(value) && typeof value._type == \"string\" && // block types can be named, so expect anything here.\n  Array.isArray(value.children) && value.children.every((child) => isRecord$1(child)) && (\"markDefs\" in value ? Array.isArray(value.markDefs) && value.markDefs.every((def) => isRecord$1(def)) : !0) && (\"style\" in value ? typeof value.style == \"string\" : !0);\n}\nfunction isPortableTextSpan(value) {\n  return isRecord$1(value) && value._type === \"span\" && typeof value.text == \"string\" && (\"marks\" in value ? Array.isArray(value.marks) && value.marks.every((mark) => typeof mark == \"string\") : !0);\n}\nfunction isPortableTextListBlock(value) {\n  return isPortableTextTextBlock(value) && \"listItem\" in value && typeof value.listItem == \"string\" && \"level\" in value && Number.isInteger(value.level);\n}\nfunction isRecord(value) {\n  return !!value && (typeof value == \"object\" || typeof value == \"function\");\n}\nfunction isDocumentSchemaType(type) {\n  if (!isObjectSchemaType(type))\n    return !1;\n  let current = type;\n  for (; current; ) {\n    if (current.name === \"document\")\n      return !0;\n    current = current.type;\n  }\n  return !1;\n}\nfunction isObjectSchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"object\" : !1;\n}\nfunction isArraySchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"array\" : !1;\n}\nfunction isArrayOfBlocksSchemaType(type) {\n  return isArraySchemaType(type) && type.of.some((memberType) => isBlockSchemaType(memberType));\n}\nfunction isArrayOfObjectsSchemaType(type) {\n  return isArraySchemaType(type) && type.of.every((memberType) => isObjectSchemaType(memberType));\n}\nfunction isArrayOfPrimitivesSchemaType(type) {\n  return isArraySchemaType(type) && type.of.every((memberType) => isPrimitiveSchemaType(memberType));\n}\nfunction isBooleanSchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"boolean\" : !1;\n}\nfunction isStringSchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"string\" : !1;\n}\nfunction isNumberSchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"number\" : !1;\n}\nfunction isPrimitiveSchemaType(type) {\n  return isBooleanSchemaType(type) || isStringSchemaType(type) || isNumberSchemaType(type);\n}\nfunction isReferenceSchemaType(type) {\n  return isRecord(type) && (type.name === \"reference\" || isReferenceSchemaType(type.type));\n}\nfunction isImageSchemaType(type) {\n  return isRecord(type) && (type.name === \"image\" || isImageSchemaType(type.type));\n}\nfunction isFileSchemaType(type) {\n  return isRecord(type) && (type.name === \"file\" || isFileSchemaType(type.type));\n}\nfunction isDeprecatedSchemaType(type) {\n  return isRecord(type) ? typeof type.deprecated < \"u\" : !1;\n}\nfunction isDeprecationConfiguration(type) {\n  return isRecord(type) ? typeof type.deprecated < \"u\" : !1;\n}\nfunction isCrossDatasetReferenceSchemaType(type) {\n  return isRecord(type) && (type.name === \"crossDatasetReference\" || isCrossDatasetReferenceSchemaType(type.type));\n}\nfunction isTitledListValue(item) {\n  return typeof item == \"object\" && item !== null && \"title\" in item && \"value\" in item;\n}\nfunction isSpanSchemaType(type) {\n  return isRecord(type) ? Array.isArray(type.annotations) && Array.isArray(type.decorators) : !1;\n}\nfunction isBlockSchemaType(type) {\n  if (!isRecord(type) || !Array.isArray(type.fields)) return !1;\n  const maybeSpanChildren = type.fields.find(isBlockChildrenObjectField), maybeStyle = type.fields.find(isBlockStyleObjectField), maybeList = type.fields.find(isBlockListObjectField);\n  return isBlockChildrenObjectField(maybeSpanChildren) && isBlockStyleObjectField(maybeStyle) && isBlockListObjectField(maybeList);\n}\nfunction isBlockStyleObjectField(field) {\n  return !isRecord(field) || field.name !== \"style\" ? !1 : isRecord(field.type) && field.type.jsonType === \"string\";\n}\nfunction isBlockListObjectField(field) {\n  return !isRecord(field) || field.name !== \"listItem\" ? !1 : isRecord(field.type) && field.type.jsonType === \"string\";\n}\nfunction isBlockChildrenObjectField(field) {\n  return !isRecord(field) || field.name !== \"children\" || !isArraySchemaType(field.type) ? !1 : field.type.of.some(isSpanSchemaType);\n}\nfunction defineType(schemaDefinition, defineOptions) {\n  return schemaDefinition;\n}\nfunction defineField(schemaField, defineOptions) {\n  return schemaField;\n}\nfunction defineArrayMember(arrayOfSchema, defineOptions) {\n  return arrayOfSchema;\n}\nfunction typed(input) {\n  return input;\n}\nconst searchStrategies = [\"groqLegacy\", \"groq2024\"];\nfunction isSearchStrategy(maybeSearchStrategy) {\n  return searchStrategies.includes(maybeSearchStrategy);\n}\nfunction isSlug(thing) {\n  return isObject(thing) && typeof thing.current == \"string\";\n}\nfunction isCreateSquashedMutation(mutation) {\n  return \"createSquashed\" in mutation;\n}\nfunction isValidationError(node) {\n  return node.level === \"error\";\n}\nfunction isValidationWarning(node) {\n  return node.level === \"warning\";\n}\nfunction isValidationInfo(node) {\n  return node.level === \"info\";\n}\nexport {\n  defineArrayMember,\n  defineField,\n  defineType,\n  isArrayOfBlocksSchemaType,\n  isArrayOfObjectsSchemaType,\n  isArrayOfPrimitivesSchemaType,\n  isArraySchemaType,\n  isBlockChildrenObjectField,\n  isBlockListObjectField,\n  isBlockSchemaType,\n  isBlockStyleObjectField,\n  isBooleanSchemaType,\n  isCreateIfNotExistsMutation,\n  isCreateMutation,\n  isCreateOrReplaceMutation,\n  isCreateSquashedMutation,\n  isCrossDatasetReference,\n  isCrossDatasetReferenceSchemaType,\n  isDeleteMutation,\n  isDeprecatedSchemaType,\n  isDeprecationConfiguration,\n  isDocumentSchemaType,\n  isFileSchemaType,\n  isGlobalDocumentReference,\n  isImage,\n  isImageSchemaType,\n  isIndexSegment,\n  isIndexTuple,\n  isKeySegment,\n  isKeyedObject,\n  isNumberSchemaType,\n  isObjectSchemaType,\n  isPatchMutation,\n  isPortableTextListBlock,\n  isPortableTextSpan,\n  isPortableTextTextBlock,\n  isPrimitiveSchemaType,\n  isReference,\n  isReferenceSchemaType,\n  isSanityDocument,\n  isSearchStrategy,\n  isSlug,\n  isSpanSchemaType,\n  isStringSchemaType,\n  isTitledListValue,\n  isTypedObject,\n  isValidationError,\n  isValidationErrorMarker,\n  isValidationInfo,\n  isValidationInfoMarker,\n  isValidationWarning,\n  isValidationWarningMarker,\n  searchStrategies,\n  typed\n};\n//# sourceMappingURL=index.mjs.map\n","import { isIndexSegment, isKeySegment, isIndexTuple } from \"@sanity/types\";\nconst rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/, EMPTY_PATH = [], FOCUS_TERMINATOR = \"$\", GROQ_DATA_TYPE_VALUES = [\"true\", \"false\", \"null\"];\nfunction get(obj, path, defaultVal) {\n  const select = typeof path == \"string\" ? fromString(path) : path;\n  if (!Array.isArray(select))\n    throw new Error(\"Path must be an array or a string\");\n  let acc = obj;\n  for (let i = 0; i < select.length; i++) {\n    const segment = select[i];\n    if (isIndexSegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc[segment];\n    }\n    if (isKeySegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc.find((item) => item._key === segment._key);\n    }\n    if (typeof segment == \"string\" && (acc = typeof acc == \"object\" && acc !== null ? acc[segment] : void 0), typeof acc > \"u\")\n      return defaultVal;\n  }\n  return acc;\n}\nconst pathsMemo = /* @__PURE__ */ new Map();\nfunction pathFor(path) {\n  if (path.length === 0)\n    return EMPTY_PATH;\n  const asString = toString(path);\n  return pathsMemo.has(asString) ? pathsMemo.get(asString) : (pathsMemo.set(asString, path), Object.freeze(path), path);\n}\nfunction isEqual(path, otherPath) {\n  return path.length === otherPath.length && path.every((segment, i) => isSegmentEqual(segment, otherPath[i]));\n}\nfunction numEqualSegments(path, otherPath) {\n  const length = Math.min(path.length, otherPath.length);\n  for (let i = 0; i < length; i++)\n    if (!isSegmentEqual(path[i], otherPath[i]))\n      return i;\n  return length;\n}\nfunction isSegmentEqual(segmentA, segmentB) {\n  return isKeySegment(segmentA) && isKeySegment(segmentB) ? segmentA._key === segmentB._key : isIndexSegment(segmentA) ? Number(segmentA) === Number(segmentB) : isIndexTuple(segmentA) && isIndexTuple(segmentB) ? segmentA[0] === segmentB[0] && segmentA[1] === segmentB[1] : segmentA === segmentB;\n}\nfunction hasFocus(focusPath, path) {\n  const withoutTerminator = focusPath[focusPath.length - 1] === FOCUS_TERMINATOR ? focusPath.slice(0, -1) : focusPath;\n  return isEqual(withoutTerminator, path);\n}\nfunction hasItemFocus(focusPath, item) {\n  return focusPath.length === 1 && isSegmentEqual(focusPath[0], item);\n}\nfunction isExpanded(segment, focusPath) {\n  const [head, ...tail] = focusPath;\n  return tail.length > 0 && isSegmentEqual(segment, head);\n}\nfunction startsWith(prefix, path) {\n  return prefix.every((segment, i) => isSegmentEqual(segment, path[i]));\n}\nfunction trimLeft(prefix, path) {\n  if (prefix.length === 0 || path.length === 0)\n    return path;\n  const [prefixHead, ...prefixTail] = prefix, [pathHead, ...pathTail] = path;\n  return isSegmentEqual(prefixHead, pathHead) ? pathFor(trimLeft(prefixTail, pathTail)) : path;\n}\nfunction trimRight(suffix, path) {\n  const sufLen = suffix.length, pathLen = path.length;\n  if (sufLen === 0 || pathLen === 0)\n    return path;\n  let i = 0;\n  for (; i < sufLen && i < pathLen && isSegmentEqual(path[pathLen - i - 1], suffix[sufLen - i - 1]); )\n    i++;\n  return pathFor(path.slice(0, pathLen - i));\n}\nfunction trimChildPath(path, childPath) {\n  return startsWith(path, childPath) ? trimLeft(path, childPath) : EMPTY_PATH;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const isHead = i === 0;\n    if (typeof segment == \"number\")\n      return `${target}[${segment}]`;\n    if (typeof segment == \"string\")\n      return isHead ? segment : GROQ_DATA_TYPE_VALUES.includes(segment) ? `${target}[\"${segment}\"]` : `${target}.${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nfunction _resolveKeyedPath(value, path) {\n  if (path.length === 0)\n    return path;\n  const [next, ...rest] = path;\n  if (typeof next == \"number\") {\n    if (!Array.isArray(value) || !(next in value))\n      return [];\n    const item = value[next];\n    return [typeof item?._key == \"string\" ? { _key: item._key } : next, ..._resolveKeyedPath(item, rest)];\n  }\n  const nextVal = get(value, [next]);\n  return [next, ..._resolveKeyedPath(nextVal, rest)];\n}\nfunction resolveKeyedPath(value, path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return pathFor(_resolveKeyedPath(value, path));\n}\nfunction fromString(path) {\n  if (typeof path != \"string\")\n    throw new Error(\"Path is not a string\");\n  const segments = path.match(rePropName);\n  if (!segments)\n    throw new Error(\"Invalid path string\");\n  return segments.map(normalizePathSegment);\n}\nfunction normalizePathSegment(segment) {\n  return isIndexSegment(segment) ? normalizeIndexSegment(segment) : isKeySegment(segment) ? normalizeKeySegment(segment) : isIndexTuple(segment) ? normalizeIndexTupleSegment(segment) : segment;\n}\nfunction normalizeIndexSegment(segment) {\n  return Number(segment.replace(/[^\\d]/g, \"\"));\n}\nfunction normalizeKeySegment(segment) {\n  return { _key: segment.match(reKeySegment)[1] };\n}\nfunction normalizeIndexTupleSegment(segment) {\n  const [from, to] = segment.split(\":\").map((seg) => seg === \"\" ? seg : Number(seg));\n  return [from, to];\n}\nexport {\n  FOCUS_TERMINATOR,\n  _resolveKeyedPath,\n  fromString,\n  get,\n  hasFocus,\n  hasItemFocus,\n  isEqual,\n  isExpanded,\n  isSegmentEqual,\n  numEqualSegments,\n  pathFor,\n  resolveKeyedPath,\n  startsWith,\n  toString,\n  trimChildPath,\n  trimLeft,\n  trimRight\n};\n//# sourceMappingURL=paths.mjs.map\n","import {useCallback, useMemo, useSyncExternalStore} from 'react'\nimport {\n  actor,\n  emptyActor,\n  isEmptyActor,\n  listeners,\n  type EmptyActor,\n  type MutatorActor,\n} from '../optimistic/context'\n\nexport function useOptimisticActor(): MutatorActor | EmptyActor {\n  const subscribe = useCallback((listener: () => void) => {\n    listeners.add(listener)\n    return () => listeners.delete(listener)\n  }, [])\n\n  const actorRef = useSyncExternalStore(\n    subscribe,\n    () => actor,\n    () => emptyActor,\n  )\n\n  return actorRef\n}\n\nexport function useOptimisticActorReady(): boolean {\n  const actor = useOptimisticActor()\n  return useMemo(() => !isEmptyActor(actor), [actor])\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type {SanityDocument} from '@sanity/client'\nimport {getDraftId, getPublishedId} from '@sanity/client/csm'\nimport {createIfNotExists, patch} from '@sanity/mutate'\nimport {isMaybePreviewIframe, isMaybePreviewWindow} from '@sanity/presentation-comlink'\nimport {get as getAtPath} from '@sanity/util/paths'\nimport {useCallback} from 'react'\nimport {isEmptyActor, type MutatorActor} from '../optimistic/context'\nimport type {\n  DocumentsGet,\n  DocumentsMutate,\n  OptimisticDocumentPatches,\n  Path,\n  PathValue,\n} from '../optimistic/types'\nimport {useOptimisticActor} from './useOptimisticActor'\n\nfunction debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(fn: F, timeout: number): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n\nfunction getDocumentsAndSnapshot<T extends Record<string, any>>(id: string, actor: MutatorActor) {\n  const inFrame = isMaybePreviewIframe()\n  const inPopUp = isMaybePreviewWindow()\n\n  if (isEmptyActor(actor) || (!inFrame && !inPopUp)) {\n    throw new Error('The `useDocuments` hook cannot be used in this context')\n  }\n\n  const draftId = getDraftId(id)\n  const publishedId = getPublishedId(id)\n  const documents = actor.getSnapshot().context?.documents\n\n  const draftDoc = documents?.[draftId]\n  const publishedDoc = documents?.[publishedId]\n  const doc = draftDoc || publishedDoc\n\n  if (!doc) {\n    throw new Error(`Document \"${id}\" not found`)\n  }\n\n  // Helper to get the snapshot from the draft document if it exists, otherwise\n  // fall back to the published document\n  const getDocumentSnapshot = () =>\n    (draftDoc.getSnapshot().context?.local || publishedDoc.getSnapshot().context?.local) as\n      | SanityDocument<T>\n      | null\n      | undefined\n\n  const snapshot = getDocumentSnapshot()\n  const snapshotPromise = new Promise<SanityDocument<T> | null>((resolve) => {\n    if (snapshot) {\n      resolve(snapshot)\n    } else {\n      const subscriber = doc.on('ready', (event) => {\n        // Assert type here as the original document mutator machine doesn't\n        // emit a 'ready' event. We provide a custom action to emit it in this\n        // package's internal `createDatasetMutator` function. <3 xstate.\n        const {snapshot} = event as unknown as {snapshot: SanityDocument<T> | null | undefined}\n        resolve(snapshot || null)\n        subscriber.unsubscribe()\n      })\n    }\n  })\n\n  const getSnapshot = () => snapshotPromise\n\n  return {\n    draftDoc,\n    draftId,\n    getSnapshot,\n    publishedDoc,\n    publishedId,\n    /**\n     * @deprecated - use `getSnapshot` instead\n     */\n    get snapshot() {\n      // Maintain original error throwing behaviour, to avoid breaking changes\n      if (!snapshot) {\n        throw new Error(`Snapshot for document \"${id}\" not found`)\n      }\n      return snapshot\n    },\n  }\n}\n\nfunction createDocumentCommit<T extends Record<string, any>>(id: string, actor: MutatorActor) {\n  return (): void => {\n    const {draftDoc} = getDocumentsAndSnapshot<T>(id, actor)\n    draftDoc.send({type: 'submit'})\n  }\n}\n\n/**\n * @deprecated - superseded by `createDocumentGetSnapshot`\n */\nfunction createDocumentGet<T extends Record<string, any>>(id: string, actor: MutatorActor) {\n  return <P extends Path<T, keyof T>>(\n    path?: P,\n  ): PathValue<T, P> | SanityDocument<T> | undefined => {\n    const {snapshot} = getDocumentsAndSnapshot<T>(id, actor)\n\n    return path\n      ? (getAtPath(snapshot, path) as PathValue<T, P>)\n      : (snapshot as unknown as SanityDocument<T>)\n  }\n}\n\nfunction createDocumentGetSnapshot<T extends Record<string, any>>(\n  id: string,\n  actor: MutatorActor,\n): () => Promise<SanityDocument<T> | null> {\n  const {getSnapshot} = getDocumentsAndSnapshot<T>(id, actor)\n  return getSnapshot\n}\n\nfunction createDocumentPatch<T extends Record<string, any>>(id: string, actor: MutatorActor) {\n  return async (\n    patches: OptimisticDocumentPatches<T>,\n    options?: {commit?: boolean | {debounce: number}},\n  ): Promise<void> => {\n    // Destructure the function result in two steps as we need access to the\n    // `result.snapshot` property in the getter, but don't want to execute the\n    // getter prematurely as it may throw\n    const result = getDocumentsAndSnapshot<T>(id, actor)\n    const {draftDoc, draftId, getSnapshot, publishedId} = result\n\n    const {commit = true} = options || {}\n\n    const context = {\n      draftId,\n      publishedId,\n      /**\n       * @deprecated - use `getSnapshot` instead\n       */\n      get snapshot() {\n        return result.snapshot\n      },\n      getSnapshot,\n    }\n\n    const resolvedPatches = await (typeof patches === 'function' ? patches(context) : patches)\n\n    const _snapshot = await getSnapshot()\n\n    if (!_snapshot) {\n      throw new Error(`Snapshot for document \"${id}\" not found`)\n    }\n\n    draftDoc.send({\n      type: 'mutate',\n      mutations: [\n        // Attempt to create the draft document, it might not exist if the\n        // snapshot was from the published document\n        createIfNotExists({..._snapshot, _id: draftId}),\n        // Patch the draft document with the resolved patches\n        patch(draftId, resolvedPatches),\n      ],\n    })\n\n    if (commit) {\n      if (typeof commit === 'object' && 'debounce' in commit) {\n        const debouncedCommit = debounce(() => draftDoc.send({type: 'submit'}), commit.debounce)\n        debouncedCommit()\n      } else {\n        draftDoc.send({type: 'submit'})\n      }\n    }\n  }\n}\n\nexport function useDocuments(): {\n  getDocument: DocumentsGet\n  mutateDocument: DocumentsMutate\n} {\n  const actor = useOptimisticActor() as MutatorActor\n\n  const getDocument: DocumentsGet = useCallback(\n    <T extends Record<string, any>>(documentId: string) => {\n      return {\n        id: documentId,\n        commit: createDocumentCommit(documentId, actor),\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore - Type instantiation is excessively deep and possibly infinite.\n        get: createDocumentGet(documentId, actor),\n        getSnapshot: createDocumentGetSnapshot<T>(documentId, actor),\n        patch: createDocumentPatch<T>(documentId, actor),\n      }\n    },\n    [actor],\n  )\n\n  const mutateDocument: DocumentsMutate = useCallback(\n    (id, mutations, options) => {\n      const {draftDoc} = getDocumentsAndSnapshot(id, actor)\n      const {commit = true} = options || {}\n\n      draftDoc.send({\n        type: 'mutate',\n        mutations: mutations,\n      })\n\n      if (commit) {\n        if (typeof commit === 'object' && 'debounce' in commit) {\n          const debouncedCommit = debounce(() => draftDoc.send({type: 'submit'}), commit.debounce)\n          debouncedCommit()\n        } else {\n          draftDoc.send({type: 'submit'})\n        }\n      }\n    },\n    [actor],\n  )\n\n  return {getDocument, mutateDocument}\n}\n","import getRandomValues from 'get-random-values-esm'\n\n// WHATWG crypto RNG - https://w3c.github.io/webcrypto/Overview.html\nfunction whatwgRNG(length = 16) {\n  const rnds8 = new Uint8Array(length)\n  getRandomValues(rnds8)\n  return rnds8\n}\n\nconst getByteHexTable = (() => {\n  let table: string[]\n  return () => {\n    if (table) {\n      return table\n    }\n    table = []\n    for (let i = 0; i < 256; ++i) {\n      table[i] = (i + 0x100).toString(16).slice(1)\n    }\n    return table\n  }\n})()\n\nexport function randomKey(length?: number): string {\n  const table = getByteHexTable()\n  return whatwgRNG(length)\n    .reduce((str, n) => str + table[n], '')\n    .slice(0, length)\n}\n","import type {SanityDocument} from '@sanity/client'\nimport {at, insert, truncate, type NodePatchList} from '@sanity/mutate'\nimport type {SanityNode} from '@sanity/presentation-comlink'\nimport {get} from '@sanity/util/paths'\nimport type {OptimisticDocument} from '../optimistic/types'\nimport {randomKey} from './randomKey'\n\nexport function getArrayItemKeyAndParentPath(pathOrNode: string | SanityNode): {\n  path: string\n  key: string\n  hasExplicitKey: boolean\n} {\n  const elementPath = typeof pathOrNode === 'string' ? pathOrNode : pathOrNode.path\n\n  const lastDotIndex = elementPath.lastIndexOf('.')\n  const lastPathItem = elementPath.substring(lastDotIndex + 1, elementPath.length)\n\n  if (!lastPathItem.indexOf('[')) throw new Error('Invalid path: not an array')\n\n  const lastArrayIndex = elementPath.lastIndexOf('[')\n  const path = elementPath.substring(0, lastArrayIndex)\n\n  let key\n  let hasExplicitKey\n\n  if (lastPathItem.includes('_key')) {\n    // explicit [_key=\"...\"]\n\n    const startIndex = lastPathItem.indexOf('\"') + 1\n    const endIndex = lastPathItem.indexOf('\"', startIndex)\n\n    key = lastPathItem.substring(startIndex, endIndex)\n\n    hasExplicitKey = true\n  } else {\n    // indexes [int]\n    const startIndex = lastPathItem.indexOf('[') + 1\n    const endIndex = lastPathItem.indexOf(']', startIndex)\n\n    key = lastPathItem.substring(startIndex, endIndex)\n\n    hasExplicitKey = false\n  }\n\n  if (!path || !key) throw new Error('Invalid path')\n\n  return {\n    path,\n    key,\n    hasExplicitKey,\n  }\n}\n\nexport function getArrayDuplicatePatches(\n  node: SanityNode,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  snapshot: SanityDocument<Record<string, any>>,\n  position: 'before' | 'after' = 'after',\n): NodePatchList {\n  const {path: arrayPath, key: itemKey} = getArrayItemKeyAndParentPath(node)\n\n  const item = get(snapshot, node.path) as object\n  const duplicate = {...item, _key: randomKey()}\n\n  return [at(arrayPath, insert(duplicate, position, {_key: itemKey}))]\n}\n\nexport function getArrayRemovePatches(\n  node: SanityNode,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  snapshot: SanityDocument<Record<string, any>>,\n): NodePatchList {\n  const {path: arrayPath, key: itemKey} = getArrayItemKeyAndParentPath(node)\n  const array = get(snapshot, arrayPath) as {_key: string}[]\n  const currentIndex = array.findIndex((item) => item._key === itemKey)\n  return [at(arrayPath, truncate(currentIndex, currentIndex + 1))]\n}\n\nexport function getArrayInsertPatches(\n  node: SanityNode,\n  insertType: string,\n  position: 'before' | 'after',\n): NodePatchList {\n  const {path: arrayPath, key: itemKey} = getArrayItemKeyAndParentPath(node)\n  const insertKey = randomKey()\n  const referenceItem = {_key: itemKey}\n  return [at(arrayPath, insert([{_type: insertType, _key: insertKey}], position, referenceItem))]\n}\n\nexport async function getArrayMovePatches(\n  node: SanityNode,\n  doc: OptimisticDocument,\n  moveTo: 'previous' | 'next' | 'first' | 'last',\n): Promise<NodePatchList> {\n  if (!node.type) throw new Error('Node type is missing')\n  const {path: arrayPath, key: itemKey} = getArrayItemKeyAndParentPath(node)\n\n  const snapshot = await doc.getSnapshot()\n  const array = get(snapshot, arrayPath) as {_key: string}[]\n  const item = get(snapshot, node.path)\n  const currentIndex = array.findIndex((item) => item._key === itemKey)\n\n  let nextIndex = -1\n  let position: 'before' | 'after' = 'before'\n\n  if (moveTo === 'first') {\n    if (currentIndex === 0) return []\n    nextIndex = 0\n    position = 'before'\n  } else if (moveTo === 'last') {\n    if (currentIndex === array.length - 1) return []\n    nextIndex = -1\n    position = 'after'\n  } else if (moveTo === 'next') {\n    if (currentIndex === array.length - 1) return []\n    nextIndex = currentIndex\n    position = 'after'\n  } else if (moveTo === 'previous') {\n    if (currentIndex === 0) return []\n    nextIndex = currentIndex - 1\n    position = 'before'\n  }\n\n  return [\n    at(arrayPath, truncate(currentIndex, currentIndex + 1)),\n    at(arrayPath, insert(item, position, nextIndex)),\n  ]\n}\n"],"names":["reKeySegment","useOptimisticActor","useSyncExternalStore","_temp","_temp2","_temp3","emptyActor","actor","listener","listeners","add","delete","useOptimisticActorReady","t0","isEmptyActor","debounce","fn","timeout","timer","args","clearTimeout","setTimeout","apply","getDocumentsAndSnapshot","id","inFrame","isMaybePreviewIframe","inPopUp","isMaybePreviewWindow","Error","draftId","getDraftId","publishedId","getPublishedId","documents","getSnapshot","context","draftDoc","publishedDoc","doc","snapshot","local","snapshotPromise","Promise","resolve","subscriber","on","event","unsubscribe","createDocumentCommit","send","type","createDocumentGet","path","getAtPath","createDocumentGetSnapshot","createDocumentPatch","patches","options","result","commit","resolvedPatches","_snapshot","mutations","createIfNotExists","_id","patch","useDocuments","$","_c","documentId","get","getDocument","t1","t2","undefined","mutateDocument","whatwgRNG","length","rnds8","Uint8Array","getRandomValues","getByteHexTable","table","i","toString","slice","randomKey","reduce","str","n","getArrayItemKeyAndParentPath","pathOrNode","elementPath","lastDotIndex","lastIndexOf","lastPathItem","substring","indexOf","lastArrayIndex","key","hasExplicitKey","includes","startIndex","endIndex","getArrayDuplicatePatches","node","position","arrayPath","itemKey","duplicate","_key","at","insert","getArrayRemovePatches","currentIndex","findIndex","item","truncate","getArrayInsertPatches","insertType","insertKey","_type","getArrayMovePatches","moveTo","array","nextIndex"],"mappings":"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","ignoreList":[0,1,2,3,4,5],"debugId":null}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"file":"SharedStateContext.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/react/useOptimistic.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/node_modules/.pnpm/uuid%4011.1.0/node_modules/uuid/dist/esm-browser/stringify.js","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/node_modules/.pnpm/uuid%4011.1.0/node_modules/uuid/dist/esm-browser/rng.js","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/node_modules/.pnpm/uuid%4011.1.0/node_modules/uuid/dist/esm-browser/native.js","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/node_modules/.pnpm/uuid%4011.1.0/node_modules/uuid/dist/esm-browser/v4.js","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/util/geometry.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/util/dragAndDrop.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/util/elements.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/util/stega.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/util/findSanityNodes.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/controller.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/shared-state/SharedStateContext.ts"],"sourcesContent":["import {getPublishedId} from '@sanity/client/csm'\nimport type {SanityDocument} from '@sanity/types'\nimport {startTransition, useEffect, useState} from 'react'\nimport {useEffectEvent} from 'use-effect-event'\nimport {isEmptyActor} from '../optimistic/context'\nimport type {OptimisticReducer, OptimisticReducerAction} from '../optimistic/types'\nimport {useOptimisticActor} from './useOptimisticActor'\n\nexport function useOptimistic<T, U = SanityDocument>(\n  passthrough: T,\n  reducer: OptimisticReducer<T, U> | Array<OptimisticReducer<T, U>>,\n): T {\n  const [pristine, setPristine] = useState(true)\n  const [optimistic, setOptimistic] = useState<T>(passthrough)\n  const [lastEvent, setLastEvent] = useState<OptimisticReducerAction<U> | null>(null)\n  const [lastPassthrough, setLastPassthrough] = useState<T>(passthrough)\n\n  const actor = useOptimisticActor()\n\n  /**\n   * This action is used in two `useEffect` hooks, it needs access to the provided `reducer`,\n   * but doesn't want to cause re-renders if `reducer` changes identity.\n   * The `useEffectEvent` hook ensures that the `reducer` value is never stale when used, and doesn't trigger setup and teardown of\n   * `useEffect` deps to make it happen.\n   */\n  const reduceStateFromAction = useEffectEvent(\n    (action: OptimisticReducerAction<U>, prevState: T) => {\n      const reducers = Array.isArray(reducer) ? reducer : [reducer]\n      return reducers.reduce(\n        (acc, reducer) =>\n          reducer(acc, {\n            document: action.document,\n            id: getPublishedId(action.id),\n            originalId: action.id,\n            type: action.type,\n          }),\n        prevState,\n      )\n    },\n  )\n\n  /**\n   * Records the last passthrough value when reducers ran in response to a rebased event.\n   * This allows us to later know when reducers should run should the passthrough change.\n   */\n  const updateLastPassthrough = useEffectEvent(() => setLastPassthrough(passthrough))\n\n  /**\n   * Handle rebase events, which runs the provided reducers,\n   * caches the event that was used to produce the new state,\n   * and marks the state as non-pristine.\n   */\n  useEffect(() => {\n    // If the actor hasn't been set yet, we don't need to subscribe to mutations\n    if (isEmptyActor(actor)) {\n      return\n    }\n\n    /**\n     * The pristine event fires much too soon, so the temporary workaround is that we greatly delay firing `setPristine(true)`,\n     * and instead relying on re-running reducers with the last event whenever the passthrough changes, to preserve the optimistic state,\n     * until we hopefully have eventual consistency on the passthrough.\n     */\n    let pristineTimeout: ReturnType<typeof setTimeout>\n\n    const rebasedSub = actor.on('rebased.local', (_event) => {\n      const event = {\n        // @todo You shall not cast\n        document: _event.document as U,\n        id: _event.id,\n        originalId: getPublishedId(_event.id),\n        // @todo This should eventually be emitted by the state machine\n        type: 'mutate' as const,\n      }\n      setOptimistic((prevState) => reduceStateFromAction(event, prevState))\n      setLastEvent(event)\n      updateLastPassthrough()\n      setPristine(false)\n\n      clearTimeout(pristineTimeout)\n    })\n    const pristineSub = actor.on('pristine', () => {\n      pristineTimeout = setTimeout(() => {\n        // Marking it in a startTransition allows react to interrupt the resulting render, should a new rebase happen and we're back to dirty\n        startTransition(() => setPristine(true))\n      }, 15000)\n    })\n    return () => {\n      rebasedSub.unsubscribe()\n      pristineSub.unsubscribe()\n    }\n  }, [actor])\n\n  /**\n   * If the passthrough changes, and we are in a dirty state, we rerun the reducers with the new passthrough but the previous event.\n   * Marking it in a transition allows react to interrupt this render should a new action happen, or should we be back in a pristine state.\n   */\n  useEffect(() => {\n    if (pristine) {\n      // if we are pristine, then we will passthrough anyway\n      return undefined\n    }\n    if (!lastEvent) {\n      // If we don't have a lastEvent when we are pristine, it's a fatal error\n      throw new Error('No last event found when syncing passthrough')\n    }\n    if (lastPassthrough === passthrough) {\n      // If the passthrough hasn't changed, then we don't need to rerun the reducers\n      return undefined\n    }\n\n    // Marking it in a startTransition allows react to interrupt the resulting render, should a new rebase happen\n    startTransition(() => {\n      setOptimistic(reduceStateFromAction(lastEvent, passthrough))\n      setLastPassthrough(passthrough)\n    })\n  }, [lastEvent, lastPassthrough, passthrough, pristine])\n\n  return pristine ? passthrough : optimistic\n}\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","import type {OverlayRect, Point2D, Ray2D} from '../types'\n\nexport function getRect(element: Element): OverlayRect {\n  const domRect = element.getBoundingClientRect()\n\n  const rect = {\n    x: domRect.x + scrollX,\n    y: domRect.y + scrollY,\n    w: domRect.width,\n    h: domRect.height,\n  }\n\n  return rect\n}\n\nexport function offsetRect(rect: OverlayRect, px: number, axis: 'x' | 'y'): OverlayRect {\n  if (axis === 'x') {\n    return {\n      x: rect.x + px,\n      y: rect.y,\n      w: rect.w - 2 * px,\n      h: rect.h,\n    }\n  } else {\n    return {\n      x: rect.x,\n      y: rect.y + px,\n      w: rect.w,\n      h: rect.h - 2 * px,\n    }\n  }\n}\n\n// Ref http://paulbourke.net/geometry/pointlineplane/\nexport function rayIntersect(l1: Ray2D, l2: Ray2D): Point2D | false {\n  const {x1, y1, x2, y2} = l1\n  const {x1: x3, y1: y3, x2: x4, y2: y4} = l2\n\n  // Check if none of the lines are of length 0\n  if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\n    return false\n  }\n\n  const denominator = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1)\n\n  // Lines are parallel\n  if (denominator === 0) {\n    return false\n  }\n\n  const ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator\n  const ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator\n\n  // is the intersection along the segments\n  if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n    return false\n  }\n\n  const x = x1 + ua * (x2 - x1)\n  const y = y1 + ua * (y2 - y1)\n\n  return {x, y}\n}\n\nexport function rectEqual(r1: OverlayRect, r2: OverlayRect): boolean {\n  return r1.x === r2.x && r1.y === r2.y && r1.w === r2.w && r1.h === r2.h\n}\n\nexport function rayRectIntersections(line: Ray2D, rect: OverlayRect): Array<Point2D> | false {\n  const rectLines: Array<Ray2D> = [\n    {x1: rect.x, y1: rect.y, x2: rect.x + rect.w, y2: rect.y},\n    {\n      x1: rect.x + rect.w,\n      y1: rect.y,\n      x2: rect.x + rect.w,\n      y2: rect.y + rect.h,\n    },\n    {\n      x1: rect.x + rect.w,\n      y1: rect.y + rect.h,\n      x2: rect.x,\n      y2: rect.y + rect.h,\n    },\n    {\n      x1: rect.x,\n      y1: rect.y + rect.h,\n      x2: rect.x,\n      y2: rect.y,\n    },\n  ]\n\n  const intersections: Array<Point2D> = []\n\n  for (let i = 0; i < rectLines.length; i++) {\n    const intersection = rayIntersect(line, rectLines[i])\n\n    if (intersection) {\n      let isDuplicate = false\n\n      for (let j = 0; j < intersections.length; j++) {\n        if (intersections[j].x === intersection.x && intersections[j].y === intersection.y) {\n          isDuplicate = true\n        }\n      }\n\n      if (!isDuplicate) intersections.push(intersection)\n    }\n  }\n\n  if (intersections.length === 0) {\n    return false\n  }\n\n  return intersections.sort(\n    (a, b) => pointDist(a, {x: line.x1, y: line.y1}) - pointDist(b, {x: line.x1, y: line.y1}),\n  )\n}\nexport function pointDist(p1: Point2D, p2: Point2D): number {\n  const a = p1.x - p2.x\n  const b = p1.y - p2.y\n\n  return Math.sqrt(a * a + b * b)\n}\n\nexport function pointInBounds(point: Point2D, bounds: OverlayRect): boolean {\n  const withinX = point.x >= bounds.x && point.x <= bounds.x + bounds.w\n  const withinY = point.y >= bounds.y && point.y <= bounds.y + bounds.h\n\n  return withinX && withinY\n}\n\nexport function findClosestIntersection(\n  ray: Ray2D,\n  targets: OverlayRect[],\n  flow: string,\n): OverlayRect | null {\n  const rayOrigin = {\n    x: ray.x1,\n    y: ray.y1,\n  }\n\n  // Offset rects to ensure raycasting works when siblings touch\n  if (\n    targets.some((t) =>\n      pointInBounds(\n        rayOrigin,\n        offsetRect(t, Math.min(t.w, t.h) / 10, flow === 'horizontal' ? 'x' : 'y'),\n      ),\n    )\n  )\n    return null\n  let closestIntersection\n  let closestRect\n\n  for (const target of targets) {\n    const intersections = rayRectIntersections(\n      ray,\n      offsetRect(target, Math.min(target.w, target.h) / 10, flow === 'horizontal' ? 'x' : 'y'),\n    )\n    if (intersections) {\n      const firstIntersection = intersections[0]\n\n      if (closestIntersection) {\n        if (pointDist(rayOrigin, firstIntersection) < pointDist(rayOrigin, closestIntersection)) {\n          closestIntersection = firstIntersection\n          closestRect = target\n        }\n      } else {\n        closestIntersection = firstIntersection\n        closestRect = target\n      }\n    }\n  }\n\n  if (closestRect) return closestRect\n\n  return null\n}\n\nexport function scaleRect(\n  rect: OverlayRect,\n  scale: number,\n  origin: {x: number; y: number},\n): OverlayRect {\n  const {x, y, w, h} = rect\n  const {x: originX, y: originY} = origin\n\n  const newX = originX + (x - originX) * scale\n  const newY = originY + (y - originY) * scale\n\n  const newWidth = w * scale\n  const newHeight = h * scale\n\n  return {\n    x: newX,\n    y: newY,\n    w: newWidth,\n    h: newHeight,\n  }\n}\n\nexport function getRectGroupXExtent(rects: OverlayRect[]): {\n  min: number\n  max: number\n  width: number\n} {\n  const minGroupX = Math.max(0, Math.min(...rects.map((r) => r.x)))\n  const maxGroupX = Math.min(document.body.offsetWidth, Math.max(...rects.map((r) => r.x + r.w)))\n\n  return {\n    min: minGroupX,\n    max: maxGroupX,\n    width: maxGroupX - minGroupX,\n  }\n}\n\nexport function getRectGroupYExtent(rects: OverlayRect[]): {\n  min: number\n  max: number\n  height: number\n} {\n  const minGroupY = Math.max(0, Math.min(...rects.map((r) => r.y)))\n  const maxGroupY = Math.min(document.body.scrollHeight, Math.max(...rects.map((r) => r.y + r.h)))\n\n  return {\n    min: minGroupY,\n    max: maxGroupY,\n    height: maxGroupY - minGroupY,\n  }\n}\n","import type {\n  DragInsertPosition,\n  DragInsertPositionRects,\n  ElementNode,\n  OverlayElement,\n  OverlayEventHandler,\n  OverlayRect,\n  Point2D,\n  SanityNode,\n} from '../types'\nimport {\n  findClosestIntersection,\n  getRect,\n  getRectGroupXExtent,\n  getRectGroupYExtent,\n  pointDist,\n  rectEqual,\n  scaleRect,\n} from './geometry'\n\nfunction calcTargetFlow(targets: OverlayRect[]) {\n  if (\n    targets.some((t1) => {\n      const others = targets.filter((t2) => !rectEqual(t1, t2))\n\n      return others.some((t2) => {\n        return t1.y === t2.y\n      })\n    })\n  ) {\n    return 'horizontal'\n  } else {\n    return 'vertical'\n  }\n}\n\nfunction calcInsertPosition(origin: Point2D, targets: OverlayRect[], flow: string) {\n  if (flow === 'horizontal') {\n    const rayLeft = {\n      x1: origin.x,\n      y1: origin.y,\n      x2: origin.x - 100_000_000,\n      y2: origin.y,\n    }\n\n    const rayRight = {\n      x1: origin.x,\n      y1: origin.y,\n      x2: origin.x + 100_000_000,\n      y2: origin.y,\n    }\n\n    return {\n      left: findClosestIntersection(rayLeft, targets, flow),\n      right: findClosestIntersection(rayRight, targets, flow),\n    }\n  } else {\n    const rayTop = {\n      x1: origin.x,\n      y1: origin.y,\n      x2: origin.x,\n      y2: origin.y - 100_000_000,\n    }\n\n    const rayBottom = {\n      x1: origin.x,\n      y1: origin.y,\n      x2: origin.x,\n      y2: origin.y + 100_000_000,\n    }\n\n    return {\n      top: findClosestIntersection(rayTop, targets, flow),\n      bottom: findClosestIntersection(rayBottom, targets, flow),\n    }\n  }\n}\n\nfunction findRectSanityData(rect: OverlayRect, overlayGroup: OverlayElement[]) {\n  return overlayGroup.find((e) => rectEqual(getRect(e.elements.element), rect))\n    ?.sanity as SanityNode\n}\n\nfunction resolveInsertPosition(\n  overlayGroup: OverlayElement[],\n  insertPosition: DragInsertPositionRects,\n  flow: string,\n): DragInsertPosition {\n  if (Object.values(insertPosition).every((v) => v === null)) return null\n\n  if (flow === 'horizontal') {\n    return {\n      left: insertPosition.left\n        ? {\n            rect: insertPosition.left,\n            sanity: findRectSanityData(insertPosition.left, overlayGroup),\n          }\n        : null,\n      right: insertPosition.right\n        ? {\n            rect: insertPosition.right,\n            sanity: findRectSanityData(insertPosition.right, overlayGroup),\n          }\n        : null,\n    }\n  } else {\n    return {\n      top: insertPosition.top\n        ? {\n            rect: insertPosition.top,\n            sanity: findRectSanityData(insertPosition.top, overlayGroup),\n          }\n        : null,\n      bottom: insertPosition.bottom\n        ? {\n            rect: insertPosition.bottom,\n            sanity: findRectSanityData(insertPosition.bottom, overlayGroup),\n          }\n        : null,\n    }\n  }\n}\n\nfunction calcMousePos(e: MouseEvent) {\n  const bodyBounds = document.body.getBoundingClientRect()\n\n  return {\n    x: Math.max(bodyBounds.x, Math.min(e.clientX, bodyBounds.x + bodyBounds.width)),\n    y: e.clientY + window.scrollY,\n  }\n}\n\nfunction calcMousePosInverseTransform(mousePos: Point2D) {\n  const body = document.body\n  const computedStyle = window.getComputedStyle(body)\n  const transform = computedStyle.transform\n\n  if (transform === 'none') {\n    return {\n      x: mousePos.x,\n      y: mousePos.y,\n    }\n  }\n\n  const matrix = new DOMMatrix(transform)\n  const inverseMatrix = matrix.inverse()\n\n  const point = new DOMPoint(mousePos.x, mousePos.y)\n  const transformedPoint = point.matrixTransform(inverseMatrix)\n\n  return {\n    x: transformedPoint.x,\n    y: transformedPoint.y,\n  }\n}\n\nfunction buildPreviewSkeleton(mousePos: Point2D, element: ElementNode, scaleFactor: number) {\n  const bounds = getRect(element)\n\n  const children = [\n    ...element.querySelectorAll(':where(h1, h2, h3, h4, p, a, img, span, button):not(:has(*))'),\n  ]\n\n  if (mousePos.x <= bounds.x) mousePos.x = bounds.x\n  if (mousePos.x >= bounds.x + bounds.w) mousePos.x = bounds.x + bounds.w\n\n  if (mousePos.y >= bounds.y + bounds.h) mousePos.y = bounds.y + bounds.h\n  if (mousePos.y <= bounds.y) mousePos.y = bounds.y\n\n  const childRects = children.map((child: Element) => {\n    // offset to account for stroke in rendered rects\n    const rect = scaleRect(getRect(child), scaleFactor, {\n      x: bounds.x,\n      y: bounds.y,\n    })\n\n    return {\n      x: rect.x - bounds.x,\n      y: rect.y - bounds.y,\n      w: rect.w,\n      h: rect.h,\n      tagName: child.tagName,\n    }\n  })\n\n  return {\n    offsetX: (bounds.x - mousePos.x) * scaleFactor,\n    offsetY: (bounds.y - mousePos.y) * scaleFactor,\n    w: bounds.w * scaleFactor,\n    h: bounds.h * scaleFactor,\n    maxWidth: bounds.w * scaleFactor * 0.75,\n    childRects,\n  }\n}\n\nconst minDragDelta = 4\n\nasync function applyMinimapWrapperTransform(\n  target: HTMLElement,\n  scaleFactor: number,\n  minYScaled: number,\n  handler: OverlayEventHandler,\n  rectUpdateFrequency: number,\n): Promise<void> {\n  return new Promise((resolve) => {\n    target.addEventListener(\n      'transitionend',\n      () => {\n        setTimeout(() => {\n          handler({\n            type: 'overlay/dragEndMinimapTransition',\n          })\n        }, rectUpdateFrequency * 2)\n\n        resolve()\n      },\n      {once: true},\n    )\n\n    handler({\n      type: 'overlay/dragStartMinimapTransition',\n    })\n\n    handler({\n      type: 'overlay/dragToggleMinimap',\n      display: true,\n    })\n\n    document.body.style.overflow = 'hidden'\n    document.body.style.height = '100%'\n    document.documentElement.style.overflow = 'initial'\n    document.documentElement.style.height = '100%'\n\n    // ensure overflow hidden has applied and scrolling stopped before applying transform, prevent minor y-position transform issues\n    setTimeout(() => {\n      target.style.transformOrigin = '50% 0px'\n      target.style.transition = 'transform 150ms ease'\n      target.style.transform = `translate3d(0px, ${-minYScaled + scrollY}px, 0px) scale(${scaleFactor})`\n    }, 25)\n  })\n}\n\nfunction calcMinimapTransformValues(rects: OverlayRect[], groupHeightOverride: number | null) {\n  let groupHeight = groupHeightOverride || getRectGroupYExtent(rects).height\n\n  const padding = 100 // px\n\n  groupHeight += padding * 2\n\n  const scaleFactor = groupHeight > window.innerHeight ? window.innerHeight / groupHeight : 1\n  const scaledRects = rects.map((r) => scaleRect(r, scaleFactor, {x: window.innerWidth / 2, y: 0}))\n\n  const {min: minYScaled} = getRectGroupYExtent(scaledRects)\n\n  return {\n    scaleFactor,\n    minYScaled: minYScaled - padding * scaleFactor,\n  }\n}\nfunction calcGroupBoundsPreview(rects: OverlayRect[]) {\n  const groupBoundsX = getRectGroupXExtent(rects)\n  const groupBoundsY = getRectGroupYExtent(rects)\n\n  const offsetDist = 8\n\n  const canOffsetX =\n    groupBoundsX.min > offsetDist &&\n    groupBoundsX.min + groupBoundsX.width <= window.innerWidth - offsetDist\n  const canOffsetY =\n    groupBoundsY.min > offsetDist &&\n    groupBoundsY.min + groupBoundsY.height <= document.body.scrollHeight - offsetDist\n  const canOffset = canOffsetX && canOffsetY\n\n  const groupRect = {\n    x: canOffset ? groupBoundsX.min - offsetDist : groupBoundsX.min,\n    y: canOffset ? groupBoundsY.min - offsetDist : groupBoundsY.min,\n    w: canOffset ? groupBoundsX.width + offsetDist * 2 : groupBoundsX.width,\n    h: canOffset ? groupBoundsY.height + offsetDist * 2 : groupBoundsY.height,\n  }\n\n  return groupRect\n}\n\nasync function resetMinimapWrapperTransform(\n  endYOrigin: number,\n  target: HTMLElement,\n  prescaleHeight: number,\n  handler: OverlayEventHandler,\n  rectUpdateFrequency: number,\n  previousRootStyleValues: PreviousRootStyleValues | null,\n): Promise<void> {\n  return new Promise((resolve) => {\n    const computedStyle = window.getComputedStyle(target)\n    const transform = computedStyle.transform\n\n    const matrix = new DOMMatrix(transform)\n\n    const scale = matrix.a\n\n    if (scale === 1) return\n\n    const maxScroll = prescaleHeight - window.innerHeight\n    const prevScrollY = scrollY\n\n    endYOrigin -= window.innerHeight / 2\n\n    if (endYOrigin < 0) endYOrigin = 0\n\n    target.addEventListener(\n      'transitionend',\n      () => {\n        target.style.transition = `none`\n        target.style.transform = `none`\n\n        scrollTo({\n          top: endYOrigin,\n          behavior: 'instant',\n        })\n\n        setTimeout(() => {\n          handler({\n            type: 'overlay/dragEndMinimapTransition',\n          })\n\n          handler({\n            type: 'overlay/dragToggleMinimap',\n            display: false,\n          })\n        }, rectUpdateFrequency * 2)\n\n        resolve()\n      },\n      {once: true},\n    )\n\n    handler({\n      type: 'overlay/dragStartMinimapTransition',\n    })\n\n    target.style.transform = `translateY(${Math.max(prevScrollY - endYOrigin, -maxScroll + prevScrollY)}px) scale(${1})`\n\n    if (!previousRootStyleValues) return\n\n    document.body.style.overflow = previousRootStyleValues.body.overflow\n    document.body.style.height = previousRootStyleValues.body.height\n    document.documentElement.style.overflow = previousRootStyleValues.documentElement.overflow\n    document.documentElement.style.height = previousRootStyleValues.documentElement.height\n  })\n}\n\ninterface PreviousRootStyleValues {\n  body: {\n    overflow: string\n    height: string\n  }\n  documentElement: {\n    overflow: string\n    height: string\n  }\n}\n\ninterface HandleOverlayDragOpts {\n  mouseEvent: MouseEvent\n  element: ElementNode\n  overlayGroup: OverlayElement[]\n  handler: OverlayEventHandler\n  target: SanityNode\n  onSequenceStart: () => void\n  onSequenceEnd: () => void\n}\n\nlet minimapScaleApplied = false\n\nlet mousePosInverseTransform = {x: 0, y: 0}\nlet mousePos = {x: 0, y: 0}\n\nlet prescaleHeight = typeof document === 'undefined' ? 0 : document.documentElement.scrollHeight\n\nlet previousRootStyleValues: PreviousRootStyleValues | null = null\n\nexport function handleOverlayDrag(opts: HandleOverlayDragOpts): void {\n  const {mouseEvent, element, overlayGroup, handler, target, onSequenceStart, onSequenceEnd} = opts\n\n  // do not trigger drag sequence on anything other than \"main\" (0) click, ignore right click, etc\n  if (mouseEvent.button !== 0) return\n\n  // ensure keyboard events fire within frame context\n  window.focus()\n\n  const rectUpdateFrequency = 150\n  let rects = overlayGroup.map((e) => getRect(e.elements.element))\n\n  const flow = (element.getAttribute('data-sanity-drag-flow') || calcTargetFlow(rects)) as\n    | 'horizontal'\n    | 'vertical'\n\n  const dragGroup = element.getAttribute('data-sanity-drag-group')\n\n  const disableMinimap = !!element.getAttribute('data-sanity-drag-minimap-disable')\n\n  const preventInsertDefault = !!element.getAttribute('data-sanity-drag-prevent-default')\n\n  const documentHeightOverride = element.getAttribute('data-unstable_sanity-drag-document-height')\n  const groupHeightOverride = element.getAttribute('data-unstable_sanity-drag-group-height')\n\n  let insertPosition: DragInsertPositionRects | null = null\n\n  const initialMousePos = calcMousePos(mouseEvent)\n\n  const scaleTarget = document.body\n\n  const {minYScaled, scaleFactor} = calcMinimapTransformValues(\n    rects,\n    groupHeightOverride ? ~~groupHeightOverride : null,\n  )\n\n  let sequenceStarted = false\n  let minimapPromptShown = false\n\n  let mousedown = true\n\n  if (!minimapScaleApplied) {\n    previousRootStyleValues = {\n      body: {\n        overflow: window.getComputedStyle(document.body).overflow,\n        height: window.getComputedStyle(document.body).height,\n      },\n      documentElement: {\n        overflow: window.getComputedStyle(document.documentElement).overflow,\n        height: window.getComputedStyle(document.documentElement).height,\n      },\n    }\n\n    prescaleHeight = documentHeightOverride\n      ? ~~documentHeightOverride\n      : document.documentElement.scrollHeight\n  }\n\n  const rectsInterval = setInterval(() => {\n    rects = overlayGroup.map((e) => getRect(e.elements.element))\n  }, rectUpdateFrequency)\n\n  const applyMinimap = (): void => {\n    if (scaleFactor >= 1) return\n\n    const skeleton = buildPreviewSkeleton(mousePos, element, scaleFactor)\n\n    handler({\n      type: 'overlay/dragUpdateSkeleton',\n      skeleton,\n    })\n\n    handler({\n      type: 'overlay/dragToggleMinimapPrompt',\n      display: false,\n    })\n\n    applyMinimapWrapperTransform(\n      scaleTarget,\n      scaleFactor,\n      minYScaled,\n      handler,\n      rectUpdateFrequency,\n    ).then(() => {\n      setTimeout(() => {\n        handler({\n          type: 'overlay/dragUpdateGroupRect',\n          groupRect: calcGroupBoundsPreview(rects),\n        })\n      }, rectUpdateFrequency * 2)\n    })\n  }\n\n  const handleScroll = (e: WheelEvent) => {\n    if (\n      Math.abs(e.deltaY) >= 10 &&\n      scaleFactor < 1 &&\n      !minimapScaleApplied &&\n      !minimapPromptShown &&\n      !disableMinimap &&\n      mousedown\n    ) {\n      handler({\n        type: 'overlay/dragToggleMinimapPrompt',\n        display: true,\n      })\n\n      minimapPromptShown = true\n    }\n\n    if (e.shiftKey && !minimapScaleApplied && !disableMinimap) {\n      window.dispatchEvent(new CustomEvent('unstable_sanity/dragApplyMinimap'))\n\n      minimapScaleApplied = true\n\n      setTimeout(() => {\n        applyMinimap()\n      }, 50)\n    }\n  }\n\n  const handleMouseMove = (e: MouseEvent): void => {\n    e.preventDefault()\n\n    mousePos = calcMousePos(e)\n    mousePosInverseTransform = calcMousePosInverseTransform(mousePos)\n\n    if (Math.abs(pointDist(mousePos, initialMousePos)) < minDragDelta) return\n\n    if (!sequenceStarted) {\n      const groupRect = calcGroupBoundsPreview(rects)\n\n      const skeleton = buildPreviewSkeleton(mousePos, element, 1)\n\n      handler({\n        type: 'overlay/dragStart',\n        flow,\n      })\n\n      handler({\n        type: 'overlay/dragUpdateSkeleton',\n        skeleton,\n      })\n\n      handler({\n        type: 'overlay/dragUpdateGroupRect',\n        groupRect,\n      })\n\n      sequenceStarted = true\n      onSequenceStart()\n    }\n\n    handler({\n      type: 'overlay/dragUpdateCursorPosition',\n      x: mousePos.x,\n      y: mousePos.y,\n    })\n\n    if (e.shiftKey && !minimapScaleApplied && !disableMinimap) {\n      window.dispatchEvent(new CustomEvent('unstable_sanity/dragApplyMinimap'))\n\n      minimapScaleApplied = true\n\n      setTimeout(() => {\n        applyMinimap()\n      }, 50)\n    }\n\n    const newInsertPosition = calcInsertPosition(mousePos, rects, flow)\n\n    if (JSON.stringify(insertPosition) !== JSON.stringify(newInsertPosition)) {\n      insertPosition = newInsertPosition\n\n      handler({\n        type: 'overlay/dragUpdateInsertPosition',\n        insertPosition: resolveInsertPosition(overlayGroup, insertPosition, flow),\n      })\n    }\n  }\n\n  const handleMouseUp = (): void => {\n    mousedown = false\n\n    handler({\n      type: 'overlay/dragEnd',\n      target,\n      insertPosition: insertPosition\n        ? resolveInsertPosition(overlayGroup, insertPosition, flow)\n        : null,\n      dragGroup,\n      flow,\n      preventInsertDefault,\n    })\n\n    if (minimapPromptShown) {\n      handler({\n        type: 'overlay/dragToggleMinimapPrompt',\n        display: false,\n      })\n    }\n\n    if (!minimapScaleApplied) {\n      clearInterval(rectsInterval)\n      onSequenceEnd()\n\n      removeFrameListeners()\n      removeKeyListeners()\n    }\n\n    removeMouseListeners()\n  }\n\n  const handleKeyup = (e: KeyboardEvent) => {\n    if (e.key === 'Shift' && minimapScaleApplied) {\n      minimapScaleApplied = false\n\n      const skeleton = buildPreviewSkeleton(mousePos, element, 1 / scaleFactor)\n\n      handler({\n        type: 'overlay/dragUpdateSkeleton',\n        skeleton,\n      })\n\n      window.dispatchEvent(new CustomEvent('unstable_sanity/dragResetMinimap'))\n\n      setTimeout(() => {\n        resetMinimapWrapperTransform(\n          mousePosInverseTransform.y,\n          scaleTarget,\n          prescaleHeight,\n          handler,\n          rectUpdateFrequency,\n          previousRootStyleValues,\n        )\n      }, 50)\n\n      handler({\n        type: 'overlay/dragUpdateGroupRect',\n        groupRect: null,\n      })\n\n      // cleanup keyup after drag sequence is complete\n      if (!mousedown) {\n        clearInterval(rectsInterval)\n\n        removeMouseListeners()\n        removeFrameListeners()\n        removeKeyListeners()\n\n        onSequenceEnd()\n      }\n    }\n  }\n\n  const handleBlur = () => {\n    handler({\n      type: 'overlay/dragUpdateGroupRect',\n      groupRect: null,\n    })\n\n    window.dispatchEvent(new CustomEvent('unstable_sanity/dragResetMinimap'))\n\n    setTimeout(() => {\n      resetMinimapWrapperTransform(\n        mousePosInverseTransform.y,\n        scaleTarget,\n        prescaleHeight,\n        handler,\n        rectUpdateFrequency,\n        previousRootStyleValues,\n      ).then(() => {\n        minimapScaleApplied = false\n      })\n    }, 50)\n\n    clearInterval(rectsInterval)\n\n    removeMouseListeners()\n    removeFrameListeners()\n    removeKeyListeners()\n\n    onSequenceEnd()\n  }\n\n  const removeMouseListeners = () => {\n    window.removeEventListener('mousemove', handleMouseMove)\n    window.removeEventListener('wheel', handleScroll)\n    window.removeEventListener('mouseup', handleMouseUp)\n  }\n\n  const removeKeyListeners = () => {\n    window.removeEventListener('keyup', handleKeyup)\n  }\n\n  const removeFrameListeners = () => {\n    window.removeEventListener('blur', handleBlur)\n  }\n\n  window.addEventListener('blur', handleBlur)\n  window.addEventListener('keyup', handleKeyup)\n  window.addEventListener('wheel', handleScroll)\n  window.addEventListener('mousemove', handleMouseMove)\n  window.addEventListener('mouseup', handleMouseUp)\n}\n","import type {ElementNode} from '../types'\n\nexport const isElementNode = (target: EventTarget | null): target is ElementNode => {\n  return target instanceof HTMLElement || target instanceof SVGElement\n}\n\nexport function findNonInlineElement(element: ElementNode): ElementNode | null {\n  const {display} = window.getComputedStyle(element)\n\n  if (display !== 'inline') return element\n\n  const parent = element.parentElement\n\n  if (!parent) return null\n\n  return findNonInlineElement(parent)\n}\n\nexport const findOverlayElement = (\n  el: EventTarget | ElementNode | null | undefined,\n): ElementNode | null => {\n  if (!el || !isElementNode(el)) {\n    return null\n  }\n\n  if (el.dataset?.['sanityOverlayElement']) {\n    return el\n  }\n\n  return findOverlayElement(el.parentElement)\n}\n","import type {SanityStegaNode} from '@sanity/presentation-comlink'\nimport {vercelStegaDecode} from '@vercel/stega'\nimport {VERCEL_STEGA_REGEX} from '../constants'\n\n/**\n * JavaScript regexps are stateful. Have to reset lastIndex between runs to ensure consistent behaviour for the same string\n * @param input\n */\nfunction testVercelStegaRegex(input: string): boolean {\n  VERCEL_STEGA_REGEX.lastIndex = 0\n  return VERCEL_STEGA_REGEX.test(input)\n}\n\nfunction decodeStega(str: string, isAltText = false): SanityStegaNode | null {\n  try {\n    const decoded = vercelStegaDecode<SanityStegaNode>(str)\n    if (!decoded || decoded.origin !== 'sanity.io') {\n      return null\n    }\n    if (isAltText) {\n      decoded.href = decoded.href?.replace('.alt', '')\n    }\n    return decoded\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error('Failed to decode stega for string: ', str, 'with the original error: ', err)\n    return null\n  }\n}\n\nexport function testAndDecodeStega(str: string, isAltText = false): SanityStegaNode | null {\n  if (testVercelStegaRegex(str)) {\n    return decodeStega(str, isAltText)\n  }\n  return null\n}\n","import {decodeSanityNodeData} from '@sanity/visual-editing-csm'\nimport type {\n  ElementNode,\n  OverlayElement,\n  ResolvedElement,\n  SanityNode,\n  SanityStegaNode,\n} from '../types'\nimport {findNonInlineElement} from './elements'\nimport {testAndDecodeStega} from './stega'\n\nconst isElementNode = (node: ChildNode): node is ElementNode => node.nodeType === Node.ELEMENT_NODE\n\nconst isImgElement = (el: ElementNode): el is HTMLImageElement => el.tagName === 'IMG'\n\nconst isTimeElement = (el: ElementNode): el is HTMLTimeElement => el.tagName === 'TIME'\n\nconst isSvgRootElement = (el: ElementNode): el is SVGSVGElement =>\n  el.tagName.toUpperCase() === 'SVG'\n\nexport function isSanityNode(node: SanityNode | SanityStegaNode): node is SanityNode {\n  return 'path' in node\n}\n\n/**\n * Finds commonality between two document paths strings\n * @param first First path to compare\n * @param second Second path to compare\n * @returns A common path\n */\nexport function findCommonPath(first: string, second: string): string {\n  let firstParts = first.split('.')\n  let secondParts = second.split('.')\n  const maxLength = Math.min(firstParts.length, secondParts.length)\n  firstParts = firstParts.slice(0, maxLength).reverse()\n  secondParts = secondParts.slice(0, maxLength).reverse()\n\n  return firstParts\n    .reduce((parts, part, i) => (part === secondParts[i] ? [...parts, part] : []), [] as string[])\n    .reverse()\n    .join('.')\n}\n\n/**\n * Returns common Sanity node data from multiple nodes\n * If document paths are present, tries to resolve a common path\n * @param nodes An array of Sanity nodes\n * @returns A single sanity node or undefined\n * @internal\n */\nexport function findCommonSanityData(\n  nodes: (SanityNode | SanityStegaNode)[],\n): SanityNode | SanityStegaNode | undefined {\n  // If there are no nodes, or inconsistent node types\n  if (!nodes.length || !nodes.map((n) => isSanityNode(n)).every((n, _i, arr) => n === arr[0])) {\n    return undefined\n  }\n  // If legacy nodes, return first match (no common pathfinding)\n  if (!isSanityNode(nodes[0])) return nodes[0]\n\n  const sanityNodes = nodes.filter(isSanityNode)\n  let common: SanityNode | undefined = nodes[0]\n\n  const consistentValueKeys: Array<keyof SanityNode> = [\n    'projectId',\n    'dataset',\n    'id',\n    'baseUrl',\n    'workspace',\n    'tool',\n  ]\n  for (let i = 1; i < sanityNodes.length; i++) {\n    const node = sanityNodes[i]\n    if (consistentValueKeys.some((key) => node[key] !== common?.[key])) {\n      common = undefined\n      break\n    }\n\n    common.path = findCommonPath(common.path, node.path)\n  }\n\n  return common\n}\n\n/**\n * Finds nodes containing sanity specific data\n * @param el - A parent element to traverse\n * @returns An array of objects, each containing an HTML element and decoded sanity data\n * @internal\n */\nexport function findSanityNodes(\n  el: ElementNode | ChildNode | {childNodes: Array<ElementNode>},\n): ResolvedElement[] {\n  const elements: ResolvedElement[] = []\n\n  function addElement(element: ElementNode, data: SanityStegaNode | string) {\n    const sanity = decodeSanityNodeData(data)\n    if (!sanity) {\n      return\n    }\n\n    // resize observer does not fire for non-replaced inline elements https://drafts.csswg.org/resize-observer/#intro\n    const measureElement = findNonInlineElement(element)\n    if (!measureElement) {\n      return\n    }\n\n    elements.push({\n      elements: {\n        element,\n        measureElement,\n      },\n      sanity,\n    })\n  }\n\n  if (el) {\n    for (const node of el.childNodes) {\n      const {nodeType, parentElement, textContent} = node\n      // If an edit target is found, find common paths\n      if (isElementNode(node) && node.dataset?.['sanityEditTarget'] !== undefined) {\n        const nodesInTarget = findSanityNodes(node).map(({sanity}) => sanity)\n        // If there are inconsistent node types, continue\n        if (!nodesInTarget.map((n) => isSanityNode(n)).every((n, _i, arr) => n === arr[0])) {\n          continue\n        }\n\n        const commonData = findCommonSanityData(nodesInTarget)\n\n        if (commonData) {\n          elements.push({\n            elements: {\n              element: node,\n              measureElement: node,\n            },\n            sanity: commonData,\n          })\n        }\n\n        // Check non-empty, child-only text nodes for stega strings\n      } else if (nodeType === Node.TEXT_NODE && parentElement && textContent) {\n        const data = testAndDecodeStega(textContent)\n        if (!data) continue\n        addElement(parentElement, data)\n      }\n      // Check element nodes for data attributes, alt tags, etc\n      else if (isElementNode(node)) {\n        // Do not traverse script tags\n        // Do not traverse the visual editing overlay\n        if (node.tagName === 'SCRIPT' || node.tagName === 'SANITY-VISUAL-EDITING') {\n          continue\n        }\n\n        // Prefer elements with explicit data attributes\n        if (node.dataset?.['sanity']) {\n          addElement(node, node.dataset['sanity'])\n        }\n        // Look for legacy sanity data attributes\n        else if (node.dataset?.['sanityEditInfo']) {\n          addElement(node, node.dataset['sanityEditInfo'])\n        } else if (isImgElement(node)) {\n          const data = testAndDecodeStega(node.alt, true)\n          if (!data) continue\n          addElement(node, data)\n          // No need to recurse for img elements\n          continue\n        } else if (isTimeElement(node)) {\n          const data = testAndDecodeStega(node.dateTime, true)\n          if (!data) continue\n          addElement(node, data)\n        } else if (isSvgRootElement(node)) {\n          if (!node.ariaLabel) continue\n          const data = testAndDecodeStega(node.ariaLabel, true)\n          if (!data) continue\n          addElement(node, data)\n        }\n\n        elements.push(...findSanityNodes(node))\n      }\n    }\n  }\n  return elements\n}\n\nexport function isSanityArrayPath(path: string): boolean {\n  const lastDotIndex = path.lastIndexOf('.')\n  const lastPathItem = path.substring(lastDotIndex, path.length)\n\n  return lastPathItem.includes('[')\n}\n\nexport function getSanityNodeArrayPath(path: string): string | null {\n  if (!isSanityArrayPath(path)) return null\n\n  const split = path.split('.')\n\n  split[split.length - 1] = split[split.length - 1].replace(/\\[.*?\\]/g, '[]')\n\n  return split.join('.')\n}\n\nexport function sanityNodesExistInSameArray(\n  sanityNode1: SanityNode,\n  sanityNode2: SanityNode,\n): boolean {\n  if (!isSanityArrayPath(sanityNode1.path) || !isSanityArrayPath(sanityNode2.path)) return false\n\n  return getSanityNodeArrayPath(sanityNode1.path) === getSanityNodeArrayPath(sanityNode2.path)\n}\n\nexport function resolveDragAndDropGroup(\n  element: ElementNode,\n  sanity: SanityNode | SanityStegaNode,\n  elementSet: Set<ElementNode>,\n  elementsMap: WeakMap<ElementNode, OverlayElement>,\n): null | OverlayElement[] {\n  if (!element.getAttribute('data-sanity')) return null\n\n  if (element.getAttribute('data-sanity-drag-disable')) return null\n\n  if (!sanity || !isSanityNode(sanity) || !isSanityArrayPath(sanity.path)) return null\n\n  const targetDragGroup = element.getAttribute('data-sanity-drag-group')\n\n  const group = [...elementSet].reduce<OverlayElement[]>((acc, el) => {\n    const elData = elementsMap.get(el)\n    const elDragDisabled = el.getAttribute('data-sanity-drag-disable')\n    const elDragGroup = el.getAttribute('data-sanity-drag-group')\n    const elHasSanityAttribution = el.getAttribute('data-sanity') !== null\n\n    const sharedDragGroup = targetDragGroup !== null ? targetDragGroup === elDragGroup : true\n\n    if (\n      elData &&\n      !elDragDisabled &&\n      isSanityNode(elData.sanity) &&\n      sanityNodesExistInSameArray(sanity, elData.sanity) &&\n      sharedDragGroup &&\n      elHasSanityAttribution\n    ) {\n      acc.push(elData)\n    }\n\n    return acc\n  }, [])\n\n  if (group.length <= 1) return null\n\n  return group\n}\n","import {v4 as uuid} from 'uuid'\nimport type {\n  ElementNode,\n  EventHandlers,\n  OverlayController,\n  OverlayElement,\n  OverlayOptions,\n  ResolvedElement,\n} from './types'\nimport {handleOverlayDrag} from './util/dragAndDrop'\nimport {findOverlayElement, isElementNode} from './util/elements'\nimport {\n  findSanityNodes,\n  isSanityArrayPath,\n  isSanityNode,\n  resolveDragAndDropGroup,\n} from './util/findSanityNodes'\nimport {getRect} from './util/geometry'\n\n/**\n * Creates a controller which dispatches overlay related events\n *\n * @param handler - Dispatched event handler\n * @param overlayElement - Parent element containing rendered overlay elements\n * @public\n */\nexport function createOverlayController({\n  handler,\n  overlayElement,\n  inFrame,\n  inPopUp,\n  optimisticActorReady,\n}: OverlayOptions): OverlayController {\n  let activated = false\n  // Map for getting element by ID\n  const elementIdMap = new Map<string, ElementNode>()\n  // WeakMap for getting data by element\n  const elementsMap = new WeakMap<ElementNode, OverlayElement>()\n  // Set for iterating over elements\n  const elementSet = new Set<ElementNode>()\n  // Weakmap keyed by measureElement to find associated element\n  const measureElements = new WeakMap<ElementNode, ElementNode>()\n  // Weakmap for storing user set cursor styles per element\n  const cursorMap = new WeakMap<ElementNode, string | undefined>()\n\n  let ro: ResizeObserver\n  let io: IntersectionObserver | undefined\n  let mo: MutationObserver\n\n  let activeDragSequence = false\n\n  // The `hoverStack` is used as a container for tracking which elements are hovered at any time.\n  // The browser supports hovering multiple nested elements simultanously, but we only want to\n  // highlight the \"outer most\" element.\n  //\n  // This is how it works:\n  // - Whenever the mouse enters an element, we add it to the stack.\n  // - Whenever the mouse leaves an element, we remove it from the stack.\n  //\n  // When we want to know which element is currently hovered, we take the element at the top of the\n  // stack. Since JavaScript does not have a Stack type, we use an array and take the last element.\n  let hoverStack: Array<ElementNode> = []\n  const getHoveredElement = () => hoverStack[hoverStack.length - 1] as ElementNode | undefined\n\n  function addEventHandlers(el: ElementNode, handlers: EventHandlers) {\n    el.addEventListener('click', handlers.click as EventListener, {\n      capture: true,\n    })\n    el.addEventListener('contextmenu', handlers.contextmenu as EventListener, {\n      capture: true,\n    })\n    // We listen for the initial mousemove event, in case the overlay is enabled whilst the cursor is already over an element\n    // mouseenter and mouseleave listeners are attached within this handler\n    el.addEventListener('mousemove', handlers.mousemove as EventListener, {\n      once: true,\n      capture: true,\n    })\n    // Listen for mousedown in case we need to prevent default behavior\n    el.addEventListener('mousedown', handlers.mousedown as EventListener, {\n      capture: true,\n    })\n  }\n\n  function removeEventHandlers(el: ElementNode, handlers: EventHandlers) {\n    el.removeEventListener('click', handlers.click as EventListener, {\n      capture: true,\n    })\n    el.removeEventListener('contextmenu', handlers.contextmenu as EventListener, {\n      capture: true,\n    })\n    el.removeEventListener('mousemove', handlers.mousemove as EventListener, {\n      capture: true,\n    })\n    el.removeEventListener('mousedown', handlers.mousedown as EventListener, {\n      capture: true,\n    })\n    el.removeEventListener('mouseenter', handlers.mouseenter as EventListener)\n    el.removeEventListener('mouseleave', handlers.mouseleave as EventListener)\n  }\n\n  /**\n   * Executed when element enters the viewport\n   * Enables an element’s event handlers\n   */\n  function activateElement({id, elements, handlers}: OverlayElement) {\n    const {element, measureElement} = elements\n    addEventHandlers(element, handlers)\n    ro.observe(measureElement)\n    handler({\n      type: 'element/activate',\n      id,\n    })\n  }\n\n  /**\n   * Executed when element leaves the viewport\n   * Disables an element’s event handlers\n   */\n  function deactivateElement({id, elements, handlers}: OverlayElement) {\n    const {element, measureElement} = elements\n    removeEventHandlers(element, handlers)\n    ro.unobserve(measureElement)\n    // Scrolling from a hovered element will not trigger mouseleave event, so filter the stack\n    hoverStack = hoverStack.filter((el) => el !== element)\n    handler({\n      type: 'element/deactivate',\n      id,\n    })\n  }\n\n  function setOverlayCursor(element: ElementNode) {\n    // Don't set the cursor if mutations are unavailable\n    if ((!inFrame && !inPopUp) || !optimisticActorReady) return\n\n    // Loops through the entire hoverStack, trying to set the cursor if the\n    // stack element matches the element passed to the function, otherwise\n    // restoring the cursor\n    for (const hoverstackElement of hoverStack) {\n      if (element === hoverstackElement) {\n        const targetSanityData = elementsMap.get(element)?.sanity\n        if (!targetSanityData || !isSanityNode(targetSanityData)) return\n\n        const dragGroup = resolveDragAndDropGroup(\n          element,\n          targetSanityData,\n          elementSet,\n          elementsMap,\n        )\n\n        if (dragGroup) {\n          // Store any existing cursor so it can be restored later\n          const existingCursor = element.style.cursor\n          if (existingCursor) {\n            cursorMap.set(element, existingCursor)\n          }\n\n          handler({\n            type: 'overlay/setCursor',\n            element,\n            cursor: 'move',\n          })\n\n          continue\n        }\n      }\n\n      restoreOverlayCursor(hoverstackElement)\n    }\n  }\n\n  function restoreOverlayCursor(element: ElementNode) {\n    // Restore any previously stored cursor (if it exists)\n    const previousCursor = cursorMap.get(element)\n\n    handler({\n      type: 'overlay/setCursor',\n      element,\n      cursor: previousCursor,\n    })\n  }\n\n  /**\n   * Stores an element’s DOM node and decoded sanity data in state and sets up event handlers\n   */\n  function registerElement({elements, sanity}: ResolvedElement) {\n    const {element, measureElement} = elements\n\n    const eventHandlers: EventHandlers = {\n      click(event) {\n        const target = event.target as ElementNode | null\n\n        if (element === getHoveredElement() && element.contains(target)) {\n          // Click events are only supported supported in iframes, not well supported in popups\n          // @TODO presentation tool should report wether it's visible or not, so we can adapt properly and allow multi-window preview workflows\n          if (inFrame) {\n            event.preventDefault()\n            event.stopPropagation()\n          }\n\n          const sanity = elementsMap.get(element)?.sanity\n          if (sanity && !activeDragSequence) {\n            handler({\n              type: 'element/click',\n              id,\n              sanity,\n            })\n          }\n        }\n      },\n      contextmenu(event) {\n        if (!('path' in sanity) || (!inFrame && !inPopUp) || !optimisticActorReady) return\n\n        // This is a temporary check as the context menu only supports array\n        // items (for now). We split the path into segments, if a `_key` exists\n        // in last path segment, we assume it's an array item, and so return\n        // early if it is some other type.\n        if (!sanity.path.split('.').pop()?.includes('[_key==')) return\n\n        const target = event.target as ElementNode | null\n        if (element === getHoveredElement() && element.contains(target)) {\n          // Context menus are supported on both iframes and popups\n          if (inFrame || inPopUp) {\n            event.preventDefault()\n            event.stopPropagation()\n          }\n          handler({\n            type: 'element/contextmenu',\n            id,\n            position: {\n              x: event.clientX,\n              y: event.clientY,\n            },\n            sanity,\n          })\n        }\n      },\n      mousedown(event) {\n        // prevent iframe from taking focus\n        event.preventDefault()\n\n        if (event.currentTarget !== hoverStack.at(-1)) return\n\n        if (element.getAttribute('data-sanity-drag-disable')) return\n\n        // disable dnd in non-studio contexts\n        if ((!inFrame && !inPopUp) || !optimisticActorReady) return\n\n        const targetSanityData = elementsMap.get(element)?.sanity\n\n        if (\n          !targetSanityData ||\n          !isSanityNode(targetSanityData) ||\n          !isSanityArrayPath(targetSanityData.path)\n        )\n          return\n\n        const dragGroup = resolveDragAndDropGroup(element, sanity, elementSet, elementsMap)\n\n        if (!dragGroup) return\n\n        handleOverlayDrag({\n          element,\n          handler,\n          mouseEvent: event as MouseEvent,\n          overlayGroup: dragGroup,\n          target: targetSanityData,\n          onSequenceStart: () => {\n            activeDragSequence = true\n          },\n          onSequenceEnd: () => {\n            // delay drag sequence end to prevent click events from firing just after drag sequences\n            setTimeout(() => {\n              activeDragSequence = false\n            }, 250)\n          },\n        })\n      },\n      mousemove(event) {\n        eventHandlers.mouseenter(event)\n        const el = event.currentTarget as ElementNode | null\n        if (el) {\n          el.addEventListener('mouseenter', eventHandlers.mouseenter as EventListener)\n          el.addEventListener('mouseleave', eventHandlers.mouseleave as EventListener)\n        }\n      },\n      mouseenter() {\n        // If the Vercel Visual Editing provided by Vercel Toolbar is active, do not overlap overlays\n        if (\n          (document.querySelector('vercel-live-feedback') &&\n            element.closest('[data-vercel-edit-info]')) ||\n          element.closest('[data-vercel-edit-target]')\n        ) {\n          return\n        }\n        hoverStack.push(element)\n\n        handler({\n          type: 'element/mouseenter',\n          id,\n          rect: getRect(element),\n        })\n\n        setOverlayCursor(element)\n      },\n      mouseleave(e) {\n        function leave() {\n          hoverStack.pop()\n          const hoveredElement = getHoveredElement()\n\n          handler({\n            type: 'element/mouseleave',\n            id,\n          })\n\n          if (hoveredElement) {\n            setOverlayCursor(hoveredElement)\n            const overlayElement = elementsMap.get(hoveredElement)\n            if (overlayElement) {\n              handler({\n                type: 'element/mouseenter',\n                id: overlayElement.id,\n                rect: getRect(hoveredElement),\n              })\n            }\n          }\n\n          restoreOverlayCursor(element)\n        }\n\n        /**\n         * If moving to an element within the overlay which handles pointer events, attach a new\n         * event handler to that element and defer the original leave event\n         */\n        function addDeferredLeave(el: ElementNode) {\n          const deferredLeave = (e: MouseEvent) => {\n            const {relatedTarget} = e\n            const deferredContainer = findOverlayElement(relatedTarget)\n            if (!deferredContainer) {\n              el.removeEventListener('mouseleave', deferredLeave as EventListener)\n              leave()\n            } else if (relatedTarget && isElementNode(relatedTarget)) {\n              el.removeEventListener('mouseleave', deferredLeave as EventListener)\n              addDeferredLeave(relatedTarget)\n            }\n          }\n          el.addEventListener('mouseleave', deferredLeave as EventListener)\n        }\n\n        const {relatedTarget} = e as MouseEvent\n        const container = findOverlayElement(relatedTarget)\n        const isInteractiveOverlayElement = overlayElement.contains(container)\n\n        if (isElementNode(container) && isInteractiveOverlayElement) {\n          return addDeferredLeave(container)\n        }\n\n        leave()\n      },\n    }\n\n    const id = uuid()\n    const sanityNode = {\n      id,\n      elements,\n      sanity,\n      handlers: eventHandlers,\n    }\n    elementSet.add(element)\n    measureElements.set(measureElement, element)\n    elementIdMap.set(id, element)\n    elementsMap.set(element, sanityNode)\n\n    io?.observe(element)\n\n    handler({\n      type: 'element/register',\n      id,\n      element,\n      rect: getRect(element),\n      sanity,\n      dragDisabled: !!element.getAttribute('data-sanity-drag-disable'),\n    })\n\n    if (activated) {\n      activateElement(sanityNode)\n    }\n  }\n\n  function updateElement({elements, sanity}: ResolvedElement) {\n    const {element} = elements\n    const overlayElement = elementsMap.get(element)\n    if (overlayElement) {\n      elementsMap.set(element, {...overlayElement, sanity})\n      handler({\n        type: 'element/update',\n        id: overlayElement.id,\n        rect: getRect(element),\n        sanity: sanity,\n      })\n    }\n  }\n\n  function parseElements(node: ElementNode | {childNodes: ElementNode[]}) {\n    const sanityNodes = findSanityNodes(node)\n    for (const sanityNode of sanityNodes) {\n      const {element} = sanityNode.elements\n      if (elementsMap.has(element)) {\n        updateElement(sanityNode)\n      } else {\n        registerElement(sanityNode)\n      }\n    }\n  }\n\n  function unregisterElement(element: ElementNode) {\n    const overlayElement = elementsMap.get(element)\n    if (overlayElement) {\n      const {id, handlers} = overlayElement\n      removeEventHandlers(element, handlers)\n      ro.unobserve(element)\n      elementsMap.delete(element)\n      elementSet.delete(element)\n      elementIdMap.delete(id)\n      handler({\n        type: 'element/unregister',\n        id,\n      })\n    }\n  }\n\n  function handleMutation(mutations: MutationRecord[]) {\n    let mutationWasInScope = false\n    // For each DOM mutation, we find the relevant element node and register or\n    // update it. This function doesn't handle checking if the node actually\n    // contains any relevant Sanity data, it just detects new or changed DOM\n    // elements and hands them off to `parseElements` to and determine if we\n    // have Sanity nodes\n    for (const mutation of mutations) {\n      const {target, type} = mutation\n      // We need to target an element, so if the mutated node was just a text\n      // change, we look at that node's parent instead\n      const node: Node | null = type === 'characterData' ? target.parentElement : target\n      // We ignore any nodes related to the overlay container element\n      if (node === overlayElement || overlayElement.contains(node)) {\n        continue\n      }\n\n      mutationWasInScope = true\n      if (isElementNode(node)) {\n        parseElements({childNodes: [node]})\n      }\n    }\n\n    // If the mutation is \"in scope\" (i.e. happened outside of the overlay\n    // container) we need to check if it removed any of the elements we are\n    // currently tracking\n    if (mutationWasInScope) {\n      for (const element of elementSet) {\n        if (!element.isConnected) {\n          unregisterElement(element)\n        }\n      }\n    }\n  }\n\n  function updateRect(el: ElementNode) {\n    const overlayElement = elementsMap.get(el)\n    if (overlayElement) {\n      handler({\n        type: 'element/updateRect',\n        id: overlayElement.id,\n        rect: getRect(el),\n      })\n    }\n  }\n\n  function handleResize(entries: ResizeObserverEntry[]) {\n    for (const entry of entries) {\n      const target = entry.target\n\n      if (isElementNode(target)) {\n        const element = measureElements.get(target)\n        if (!element) return\n        updateRect(element)\n      }\n    }\n  }\n\n  function handleIntersection(entries: IntersectionObserverEntry[]) {\n    if (!activated) return\n    for (const entry of entries) {\n      const {target} = entry\n      const match = isElementNode(target) && elementsMap.get(target)\n      if (!match) continue\n      if (entry.isIntersecting) {\n        activateElement(match)\n      } else {\n        deactivateElement(match)\n      }\n    }\n  }\n\n  function handleBlur(event: MouseEvent) {\n    const element = findOverlayElement(event.target)\n\n    if (element) {\n      if (element.dataset['sanityOverlayElement'] === 'capture') {\n        event.preventDefault()\n        event.stopPropagation()\n      }\n      return\n    }\n\n    hoverStack = []\n    handler({\n      type: 'overlay/blur',\n    })\n  }\n\n  function handleWindowResize() {\n    for (const element of elementSet) {\n      updateRect(element)\n    }\n  }\n\n  function handleKeydown(event: KeyboardEvent) {\n    if (event.key === 'Escape') {\n      hoverStack = []\n      handler({\n        type: 'overlay/blur',\n      })\n    }\n  }\n\n  function handleWindowScroll(event: Event) {\n    const {target} = event\n\n    if (target === window.document || !isElementNode(target)) {\n      return\n    }\n\n    for (const element of elementSet) {\n      if (target.contains(element)) {\n        updateRect(element)\n      }\n    }\n  }\n\n  function activate() {\n    if (activated) return\n    io = new IntersectionObserver(handleIntersection, {\n      threshold: 0.3,\n    })\n    elementSet.forEach((element) => io!.observe(element))\n    handler({\n      type: 'overlay/activate',\n    })\n    activated = true\n  }\n\n  function deactivate() {\n    if (!activated) return\n    io?.disconnect()\n    elementSet.forEach((element) => {\n      const overlayElement = elementsMap.get(element)\n      if (overlayElement) {\n        deactivateElement(overlayElement)\n      }\n    })\n    handler({\n      type: 'overlay/deactivate',\n    })\n    activated = false\n  }\n\n  function destroy() {\n    window.removeEventListener('click', handleBlur)\n    window.removeEventListener('contextmenu', handleBlur)\n    window.removeEventListener('keydown', handleKeydown)\n    window.removeEventListener('resize', handleWindowResize)\n    window.removeEventListener('scroll', handleWindowScroll)\n    mo.disconnect()\n    ro.disconnect()\n\n    elementSet.forEach((element) => {\n      unregisterElement(element)\n    })\n\n    elementIdMap.clear()\n    elementSet.clear()\n\n    hoverStack = []\n    deactivate()\n  }\n\n  function create() {\n    window.addEventListener('click', handleBlur)\n    window.addEventListener('contextmenu', handleBlur)\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('resize', handleWindowResize)\n    window.addEventListener('scroll', handleWindowScroll, {\n      capture: true,\n      passive: true,\n    })\n    ro = new ResizeObserver(handleResize)\n    mo = new MutationObserver(handleMutation)\n    mo.observe(document.body, {\n      attributes: true,\n      characterData: true,\n      childList: true,\n      subtree: true,\n    })\n\n    parseElements(document.body)\n    activate()\n  }\n\n  window.document.fonts.ready.then(() => {\n    for (const element of elementSet) {\n      updateRect(element)\n    }\n  })\n\n  create()\n\n  return {\n    activate,\n    deactivate,\n    destroy,\n  }\n}\n","import {createContext} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport type {SharedStateStore} from './sharedStateStore'\n\nexport interface SharedStateContextValue {\n  comlink?: VisualEditingNode\n  store: SharedStateStore\n}\n\nexport const SharedStateContext = createContext<SharedStateContextValue | null>(null)\n"],"names":["useOptimistic","passthrough","reducer","$","_c","pristine","setPristine","useState","optimistic","setOptimistic","lastEvent","setLastEvent","lastPassthrough","setLastPassthrough","actor","useOptimisticActor","t0","action","prevState","Array","isArray","reduce","acc","reducer_0","document","id","getPublishedId","originalId","type","reduceStateFromAction","useEffectEvent","t1","updateLastPassthrough","t2","isEmptyActor","pristineTimeout","rebasedSub","on","_event","event","prevState_0","clearTimeout","pristineSub","unsubscribe","t3","useEffect","t4","Error","startTransition","t5","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","toLowerCase","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","randomUUID","v4","options","buf","native","rnds","random","length","getRect","element","domRect","getBoundingClientRect","x","scrollX","y","scrollY","w","width","h","height","offsetRect","rect","px","axis","rayIntersect","l1","l2","x1","y1","x2","y2","x3","y3","x4","y4","denominator","ua","ub","rectEqual","r1","r2","rayRectIntersections","line","rectLines","intersections","intersection","isDuplicate","j","sort","a","b","pointDist","p1","p2","Math","sqrt","pointInBounds","point","bounds","withinX","withinY","findClosestIntersection","ray","targets","flow","rayOrigin","some","t","min","closestIntersection","closestRect","target","firstIntersection","scaleRect","scale","origin","originX","originY","newX","newY","newWidth","newHeight","getRectGroupXExtent","rects","minGroupX","max","map","r","maxGroupX","body","offsetWidth","getRectGroupYExtent","minGroupY","maxGroupY","scrollHeight","calcTargetFlow","filter","calcInsertPosition","rayLeft","rayRight","left","right","rayTop","rayBottom","top","bottom","findRectSanityData","overlayGroup","find","e","elements","sanity","resolveInsertPosition","insertPosition","Object","values","every","v","calcMousePos","bodyBounds","clientX","clientY","window","calcMousePosInverseTransform","mousePos","transform","getComputedStyle","inverseMatrix","DOMMatrix","inverse","transformedPoint","DOMPoint","matrixTransform","buildPreviewSkeleton","scaleFactor","children","querySelectorAll","childRects","child","tagName","offsetX","offsetY","maxWidth","minDragDelta","applyMinimapWrapperTransform","minYScaled","handler","rectUpdateFrequency","Promise","resolve","addEventListener","setTimeout","once","display","style","overflow","documentElement","transformOrigin","transition","calcMinimapTransformValues","groupHeightOverride","groupHeight","padding","innerHeight","scaledRects","innerWidth","calcGroupBoundsPreview","groupBoundsX","groupBoundsY","offsetDist","canOffsetX","canOffsetY","canOffset","resetMinimapWrapperTransform","endYOrigin","prescaleHeight","previousRootStyleValues","maxScroll","prevScrollY","scrollTo","behavior","minimapScaleApplied","mousePosInverseTransform","handleOverlayDrag","opts","mouseEvent","onSequenceStart","onSequenceEnd","button","focus","getAttribute","dragGroup","disableMinimap","preventInsertDefault","documentHeightOverride","initialMousePos","scaleTarget","sequenceStarted","minimapPromptShown","mousedown","rectsInterval","setInterval","applyMinimap","skeleton","then","groupRect","handleScroll","abs","deltaY","shiftKey","dispatchEvent","CustomEvent","handleMouseMove","preventDefault","newInsertPosition","JSON","stringify","handleMouseUp","clearInterval","removeFrameListeners","removeKeyListeners","removeMouseListeners","handleKeyup","key","handleBlur","removeEventListener","isElementNode","HTMLElement","SVGElement","findNonInlineElement","parent","parentElement","findOverlayElement","el","dataset","testVercelStegaRegex","input","VERCEL_STEGA_REGEX","lastIndex","test","decodeStega","str","isAltText","decoded","vercelStegaDecode","href","replace","err","console","error","testAndDecodeStega","node","nodeType","Node","ELEMENT_NODE","isImgElement","isTimeElement","isSvgRootElement","toUpperCase","isSanityNode","findCommonPath","first","second","firstParts","split","secondParts","maxLength","reverse","parts","part","join","findCommonSanityData","nodes","n","_i","sanityNodes","common","consistentValueKeys","undefined","path","findSanityNodes","addElement","data","decodeSanityNodeData","measureElement","childNodes","textContent","nodesInTarget","commonData","TEXT_NODE","alt","dateTime","ariaLabel","isSanityArrayPath","lastDotIndex","lastIndexOf","substring","includes","getSanityNodeArrayPath","sanityNodesExistInSameArray","sanityNode1","sanityNode2","resolveDragAndDropGroup","elementSet","elementsMap","targetDragGroup","group","elData","get","elDragDisabled","elDragGroup","elHasSanityAttribution","sharedDragGroup","createOverlayController","overlayElement","inFrame","inPopUp","optimisticActorReady","activated","elementIdMap","Map","WeakMap","Set","measureElements","cursorMap","ro","io","mo","activeDragSequence","hoverStack","getHoveredElement","addEventHandlers","handlers","click","capture","contextmenu","mousemove","removeEventHandlers","mouseenter","mouseleave","activateElement","observe","deactivateElement","unobserve","setOverlayCursor","hoverstackElement","targetSanityData","existingCursor","cursor","set","restoreOverlayCursor","previousCursor","registerElement","eventHandlers","contains","stopPropagation","pop","position","currentTarget","at","querySelector","closest","leave","hoveredElement","addDeferredLeave","deferredLeave","relatedTarget","container","isInteractiveOverlayElement","uuid","sanityNode","add","dragDisabled","updateElement","parseElements","has","unregisterElement","delete","handleMutation","mutations","mutationWasInScope","mutation","isConnected","updateRect","handleResize","entries","entry","handleIntersection","match","isIntersecting","handleWindowResize","handleKeydown","handleWindowScroll","activate","IntersectionObserver","threshold","forEach","deactivate","disconnect","destroy","clear","create","passive","ResizeObserver","MutationObserver","attributes","characterData","childList","subtree","fonts","ready","SharedStateContext","createContext"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11],"debugId":null}},
    {"offset": {"line": 1317, "column": 0}, "map": {"version":3,"file":"PointerEvents.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/util/getNodeIcon.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/PopoverPortal.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/telemetry/TelemetryContext.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/telemetry/useTelemetry.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/overlay-components/components/InsertMenu.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/overlay-components/components/PointerEvents.tsx"],"sourcesContent":["import {\n  BlockContentIcon,\n  CheckmarkCircleIcon,\n  CubeIcon,\n  ImageIcon,\n  NumberIcon,\n  StringIcon,\n  ThListIcon,\n} from '@sanity/icons'\nimport type {\n  SchemaArrayItem,\n  SchemaNumberNode,\n  SchemaObjectField,\n  SchemaStringNode,\n  SchemaUnionOption,\n} from '@sanity/presentation-comlink'\n\ntype Option =\n  | SchemaNumberNode\n  | SchemaStringNode\n  | SchemaArrayItem\n  | SchemaObjectField\n  | SchemaUnionOption\n\nexport function getNodeIcon(option: Option | undefined): React.JSX.Element {\n  if (!option) return <CubeIcon />\n\n  if (option.type === 'string') {\n    return <StringIcon />\n  }\n\n  if (option.type === 'number') {\n    return <NumberIcon />\n  }\n\n  const {value: node} = option\n\n  if ('icon' in option && option.icon) {\n    return <div dangerouslySetInnerHTML={{__html: option.icon}} />\n  }\n\n  const {type} = node\n\n  if (type === 'string') {\n    return <StringIcon />\n  }\n\n  if (type === 'boolean') {\n    return <CheckmarkCircleIcon />\n  }\n\n  if (type === 'number') {\n    return <NumberIcon />\n  }\n\n  if (type === 'array' || type === 'union') {\n    const of = Array.isArray(node.of) ? node.of : [node.of]\n    if (of.some((n) => 'name' in n && n.name === 'block')) {\n      return <BlockContentIcon />\n    }\n    return <ThListIcon />\n  }\n\n  if (type === 'object') {\n    if (option.name === 'image') {\n      return <ImageIcon />\n    }\n    if (option.name === 'block') {\n      return <StringIcon />\n    }\n  }\n\n  return <CubeIcon />\n}\n","import {Portal} from '@sanity/ui/_visual-editing'\nimport {type FunctionComponent, type MouseEvent} from 'react'\nimport {styled} from 'styled-components'\n\nconst PortalContainer = styled.div`\n  height: 100%;\n  inset: 0;\n  overflow-y: scroll;\n  overscroll-behavior: contain;\n  pointer-events: all;\n  position: fixed;\n  width: 100%;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:before {\n    content: '';\n    display: block;\n    height: calc(100% + 1px);\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: -1;\n  }\n`\nconst PortalBackground = styled.div`\n  background: transparent;\n  height: 100%;\n  inset: 0;\n  position: absolute;\n  width: 100%;\n`\n\nexport const PopoverPortal: FunctionComponent<{\n  children: React.ReactNode\n  onDismiss?: () => void\n  setBoundaryElement?: (element: HTMLDivElement) => void\n}> = (props) => {\n  const {children, onDismiss, setBoundaryElement} = props\n\n  // Prevent the event from propagating to the window, so that the controller's\n  // `handleBlur` listener is not triggered. This is needed to prevent the\n  // context menu from being dismissed when some click causes parent elements to\n  // re-render, and the data-attribute method of preventing propagation fails.\n  const handleClick = (event: MouseEvent) => {\n    event.stopPropagation()\n  }\n\n  return (\n    <Portal>\n      <PortalContainer data-sanity-overlay-element ref={setBoundaryElement} onClick={handleClick}>\n        <PortalBackground onClickCapture={onDismiss} />\n        {children}\n      </PortalContainer>\n    </Portal>\n  )\n}\n","import {defineEvent} from '@sanity/telemetry'\nimport {createContext} from 'react'\n\nexport const events = {\n  'Visual Editing Drag Sequence Completed': defineEvent({\n    name: 'Visual Editing Drag Sequence Completed',\n    description: 'An array is successfully reordered using drag and drop.',\n    version: 1,\n  }),\n  'Visual Editing Drag Minimap Enabled': defineEvent({\n    name: 'Visual Editing Drag Minimap Enabled',\n    description: 'The zoomed-out minimap view is enabled during a drag sequence.',\n    version: 1,\n  }),\n  'Visual Editing Context Menu Item Removed': defineEvent({\n    name: 'Visual Editing Context Menu Item Removed',\n    description: 'An item is removed using the Context Menu.',\n    version: 1,\n  }),\n  'Visual Editing Context Menu Item Duplicated': defineEvent({\n    name: 'Visual Editing Context Menu Item Duplicated',\n    description: 'An item is duplicated using the Context Menu.',\n    version: 1,\n  }),\n  'Visual Editing Context Menu Item Moved': defineEvent({\n    name: 'Visual Editing Context Menu Item Moved',\n    description: 'An item is moved using the Context Menu.',\n    version: 1,\n  }),\n  'Visual Editing Context Menu Item Inserted': defineEvent({\n    name: 'Visual Editing Context Menu Item Inserted',\n    description: 'An item is inserted using the Context Menu.',\n    version: 1,\n  }),\n  'Visual Editing Insert Menu Item Inserted': defineEvent({\n    name: 'Visual Editing Insert Menu Item Inserted',\n    description: 'An item is inserted using the Insert Menu.',\n    version: 1,\n  }),\n  'Visual Editing Overlay Clicked': defineEvent({\n    name: 'Visual Editing Overlay Clicked',\n    description: 'An Overlay is clicked.',\n    version: 1,\n  }),\n}\n\ntype EventDataMap = {\n  [K in keyof typeof events]: (typeof events)[K] extends ReturnType<typeof defineEvent<infer T>>\n    ? T\n    : never\n}\n\nexport type TelemetryEventNames = keyof typeof events\n\nexport type TelemetryContextValue = <K extends keyof typeof events>(\n  name: K,\n  data: EventDataMap[K] extends void ? null | undefined : EventDataMap[K],\n) => void\n\nexport const TelemetryContext = createContext<TelemetryContextValue | undefined>(undefined)\n","import {useContext} from 'react'\nimport {TelemetryContext, type TelemetryContextValue} from './TelemetryContext'\n\nexport function useTelemetry(): TelemetryContextValue {\n  const context = useContext(TelemetryContext)\n\n  if (!context) {\n    throw new Error('Telemetry context is missing')\n  }\n\n  return context\n}\n","import type {InsertMenuOptions} from '@sanity/insert-menu'\nimport {InsertMenu as SanityInsertMenu} from '@sanity/insert-menu'\nimport type {SchemaUnionNode} from '@sanity/presentation-comlink'\nimport type {SchemaType} from '@sanity/types'\nimport {Popover} from '@sanity/ui/_visual-editing'\nimport {type FunctionComponent} from 'react'\nimport {PopoverPortal} from '../../ui/PopoverPortal'\nimport {getNodeIcon} from '../../util/getNodeIcon'\n\n// @todo How can this be localised?\nconst labels = {\n  'insert-menu.filter.all-items': 'All',\n  'insert-menu.search.no-results': 'No results',\n  'insert-menu.search.placeholder': 'Filter types…',\n  'insert-menu.toggle-grid-view.tooltip': 'Toggle grid view',\n  'insert-menu.toggle-list-view.tooltip': 'Toggle list view',\n} as const\n\nexport interface InsertMenuProps {\n  node: SchemaUnionNode\n  onSelect: (schemaType: SchemaType) => void\n}\n\nexport const InsertMenu: FunctionComponent<InsertMenuProps> = (props) => {\n  const {node, onSelect} = props\n\n  const insertMenuOptions = node.options?.insertMenu || {}\n\n  const views: InsertMenuOptions['views'] = insertMenuOptions.views?.map((view) => {\n    // Map the `previewImageUrls` that Presentation already resolved and\n    // serialized back to a function so that InsertMenu can \"resolve\" them\n    if (view.name === 'grid') {\n      return {\n        ...view,\n        previewImageUrl: (name) => view.previewImageUrls?.[name],\n      }\n    }\n    return view\n  })\n\n  return (\n    <SanityInsertMenu\n      {...insertMenuOptions}\n      labels={labels}\n      // @ts-expect-error -- @todo map typings\n      schemaTypes={node.of.map((type) => ({\n        ...type,\n        icon: getNodeIcon(type),\n      }))}\n      onSelect={onSelect}\n      views={views}\n    />\n  )\n}\n\nexport interface InsertMenuPopoverProps extends InsertMenuProps {\n  onDismiss: () => void\n  referenceElement?: HTMLElement | null\n}\n\nexport const InsertMenuPopover: FunctionComponent<InsertMenuPopoverProps> = (props) => {\n  const {node, onDismiss, onSelect, referenceElement} = props\n\n  const popoverContent = <InsertMenu node={node} onSelect={onSelect} />\n\n  const insertMenuOptions = node.options?.insertMenu || {}\n\n  // If the grid view is not enabled, the popover should fit the content. If it\n  // is enabled, the popover width needs to be 'forced' to some arbitrary amount\n  // to prevent the grid from collapsing to a single column. The '0' size allows\n  // for a two column layout\n  const width = insertMenuOptions.views?.some((view) => view.name === 'grid') ? 0 : undefined\n\n  return (\n    <PopoverPortal onDismiss={onDismiss}>\n      <Popover\n        animate={true}\n        constrainSize\n        content={popoverContent}\n        fallbackPlacements={['bottom']}\n        open\n        placement={'top'}\n        preventOverflow\n        referenceElement={referenceElement}\n        width={width}\n      />\n    </PopoverPortal>\n  )\n}\n","import type {FunctionComponent, HTMLAttributes, PropsWithChildren} from 'react'\n\nexport const PointerEvents: FunctionComponent<\n  PropsWithChildren<HTMLAttributes<HTMLDivElement>>\n> = ({children, style, ...rest}) => {\n  return (\n    <div style={{...style, pointerEvents: 'all'}} data-sanity-overlay-element {...rest}>\n      {children}\n    </div>\n  )\n}\n"],"names":["getNodeIcon","option","type","value","node","icon","__html","Array","isArray","of","some","n","name","PortalContainer","styled","div","PortalBackground","PopoverPortal","props","$","_c","children","onDismiss","setBoundaryElement","handleClick","_temp","t0","t1","event","stopPropagation","events","defineEvent","description","version","TelemetryContext","createContext","undefined","useTelemetry","context","useContext","Error","labels","InsertMenu","onSelect","options","insertMenu","insertMenuOptions","views","map","t2","_temp2","t3","SanityInsertMenu","InsertMenuPopover","referenceElement","popoverContent","width","_temp3","Symbol","for","view","previewImageUrl","previewImageUrls","PointerEvents","rest","style","pointerEvents"],"mappings":"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","ignoreList":[0,1,2,3,4,5],"debugId":null}},
    {"offset": {"line": 1564, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/optimistic/state/documentMutator.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/optimistic/state/datasetMutator.ts"],"sourcesContent":["import type {SanityClient} from '@sanity/client'\nimport {SanityEncoder, type Transaction} from '@sanity/mutate'\nimport {\n  documentMutatorMachine,\n  type DocumentMutatorMachineParentEvent,\n} from '@sanity/mutate/_unstable_machine'\nimport {enqueueActions, fromPromise} from 'xstate'\nimport type {VisualEditingNode} from '../../types'\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const createDocumentMutator = (comlink: VisualEditingNode) => {\n  const fetchSnapshot = fromPromise(\n    async ({input, signal}: {input: {id: string; client: SanityClient}; signal: AbortSignal}) => {\n      const {id} = input\n      const {snapshot} = await comlink.fetch(\n        'visual-editing/fetch-snapshot',\n        {documentId: id},\n        {\n          signal,\n        },\n      )\n      return snapshot\n    },\n  )\n\n  const submitMutations = fromPromise(\n    async ({input}: {input: {client: SanityClient; transactions: Transaction[]}}) => {\n      const {transactions} = input\n      for (const transaction of transactions) {\n        const data = SanityEncoder.encodeTransaction(transaction)\n        return comlink.post('visual-editing/mutate', data)\n      }\n    },\n  )\n\n  return documentMutatorMachine.provide({\n    actions: {\n      'send sync event to parent': enqueueActions(({enqueue}) => {\n        // Original action provided by the `documentMutatorMachine`\n        enqueue.sendParent(\n          ({context}) =>\n            ({\n              type: 'sync',\n              id: context.id,\n              document: context.remote!,\n            }) satisfies DocumentMutatorMachineParentEvent,\n        )\n        // Additional action so that we can determine when the snapshot is ready\n        enqueue.emit(({context}) => ({type: 'ready', snapshot: context.local}))\n      }),\n    },\n    actors: {\n      'fetch remote snapshot': fetchSnapshot,\n      'submit mutations as transactions': submitMutations,\n    },\n  })\n}\n","/**\n * The logic here is intended to live inside a preview iframe, and listen to events from the parent frame.\n * It also supports running in a \"detached\" mode, where it has to setup authenticated EventSource conenctions and perform data fetching itself.\n */\n\nimport {type SanityClient} from '@sanity/client'\nimport {\n  createSharedListener,\n  documentMutatorMachine,\n  type DocumentMutatorMachineInput,\n  type DocumentMutatorMachineParentEvent,\n} from '@sanity/mutate/_unstable_machine'\nimport {assertEvent, assign, emit, setup, stopChild, type ActorRefFrom} from 'xstate'\nimport type {VisualEditingNode} from '../../types'\nimport {createDocumentMutator} from './documentMutator'\n\nexport interface DatasetMutatorMachineInput extends Omit<DocumentMutatorMachineInput, 'id'> {\n  client: SanityClient\n  /** A shared listener can be provided, if not it'll be created using `client.listen()` */\n  sharedListener?: ReturnType<typeof createSharedListener>\n}\n\nexport const datasetMutatorMachine = setup({\n  types: {} as {\n    context: {\n      client: SanityClient\n      /** A shared listener can be provided, if not it'll be created using `client.listen()` */\n      sharedListener?: ReturnType<typeof createSharedListener>\n      documents: Record<string, ActorRefFrom<ReturnType<typeof createDocumentMutator>>>\n    }\n    events:\n      | {type: 'observe'; documentId: string}\n      | {type: 'unobserve'; documentId: string}\n      | {type: 'add document actor'; documentId: string}\n      | {type: 'stop document actor'; documentId: string}\n      | DocumentMutatorMachineParentEvent\n    input: DatasetMutatorMachineInput\n    emitted: DocumentMutatorMachineParentEvent\n  },\n  actions: {\n    'emit sync event': emit(({event}) => {\n      assertEvent(event, 'sync')\n      return event\n    }),\n    'emit mutation event': emit(({event}) => {\n      assertEvent(event, 'mutation')\n      return event\n    }),\n    'emit rebased event': emit(({event}) => {\n      assertEvent(event, ['rebased.local', 'rebased.remote'])\n      return event\n    }),\n    'emit pristine event': emit(({event}) => {\n      assertEvent(event, ['pristine'])\n      return event\n    }),\n    'add document actor': assign({\n      documents: ({context, event, spawn}) => {\n        assertEvent(event, 'observe')\n        const id = event.documentId\n        // Adding the same documentId multiple times is a no-op\n        if (context.documents[id]) return context.documents\n        return {\n          ...context.documents,\n          [id]: spawn('documentMutatorMachine', {\n            input: {\n              id,\n              client: context.client,\n              sharedListener: context.sharedListener || createSharedListener(context.client),\n            },\n            id,\n          }),\n        }\n      },\n    }),\n    'stop remote snapshot': stopChild(({context, event}) => {\n      assertEvent(event, 'unobserve')\n      return context.documents[event.documentId]!\n    }),\n    'remove remote snapshot from context': assign({\n      documents: ({context, event}) => {\n        assertEvent(event, 'unobserve')\n        // Removing a non-existing documentId is a no-op\n        if (!context.documents[event.documentId]) return context.documents\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const {[event.documentId]: _, ...documents} = context.documents\n        return documents\n      },\n    }),\n  },\n  actors: {\n    documentMutatorMachine,\n  },\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QBsD2BjAhsgIhgrgLZgB2ALgMTICWsZpA2gAwC6ioADqrNWdaiXYgAHogC0ADgBMAOgkA2ACyKArBICcTdfKXSANCACeiFQHYZpgMxWV800yYqp6gIyn5AXw8G0WXAWJyCnwSGjpGViEuHj4BIVEEKUt5OSlFU1smFwkFW0sDY0T1GRUXRXkXKVN7HSYJJkUvHwxsPHQiUjIZDgAnWj4SMApCfDJMemY2JBBo3n5BaYSXeVlbKRUsiXdFSxcXfKNERSqZTbr1zVMJNyaQX1aAzpkIah6yQwp0VEJCXkmo7hzOKLRDLFwyFxaSzXKTOKQudSKCQFRDOczqCSWJjwjbHCQqRFebwgEioCBwIT3fztQJkAExebxcQuFEIZaWGRIrF7dSXKTyFSNYlUtodcjdPp0aiDelAhagBLpVmWAmc46mNwSZTyLQuFS3EWPcUvN6FTiA2LykSoq6c6wbCqVUzparKioyRFVfkq1zqNSWIkeIA */\n  id: 'dataset-mutator',\n  context: ({input}) => ({\n    documents: {},\n    client: input.client,\n    sharedListener: input.sharedListener,\n  }),\n\n  on: {\n    'sync': {actions: ['emit sync event']},\n    'mutation': {actions: ['emit mutation event']},\n    'rebased.*': {actions: ['emit rebased event']},\n    'pristine': {actions: ['emit pristine event']},\n    'observe': {\n      actions: ['add document actor'],\n    },\n    'unobserve': {\n      actions: ['stop remote snapshot', 'remove remote snapshot from context'],\n    },\n  },\n\n  initial: 'pristine',\n\n  states: {\n    pristine: {},\n  },\n})\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const createDatasetMutator = (comlink: VisualEditingNode) => {\n  return datasetMutatorMachine.provide({\n    actors: {\n      documentMutatorMachine: createDocumentMutator(comlink),\n    },\n  })\n}\n"],"names":["createDocumentMutator","comlink","fetchSnapshot","fromPromise","input","signal","id","snapshot","fetch","documentId","submitMutations","transactions","transaction","data","SanityEncoder","encodeTransaction","post","documentMutatorMachine","provide","actions","enqueueActions","enqueue","sendParent","context","type","document","remote","emit","local","actors","datasetMutatorMachine","setup","types","event","assertEvent","assign","documents","spawn","client","sharedListener","createSharedListener","stopChild","_","createMachine","on","initial","states","pristine","createDatasetMutator"],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 1711, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/History.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/Meta.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/util/useDragEvents.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/schema/SchemaContext.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/schema/useSchema.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/context-menu/contextMenuItems.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/context-menu/ContextMenu.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/util/getLinkHref.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/preview/PreviewSnapshotsContext.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/preview/usePreviewSnapshots.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/ElementOverlay.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/OverlayDragGroupRect.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/OverlayDragInsertMarker.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/OverlayDragPreview.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/OverlayMinimapPrompt.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/elementsReducer.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/overlayStateReducer.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/preview/PreviewSnapshotsProvider.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/schema/SchemaProvider.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/shared-state/SharedStateProvider.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/telemetry/TelemetryProvider.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/useController.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/usePerspectiveSync.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/useReportDocuments.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/Overlays.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/Refresh.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/useComlink.tsx","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/optimistic/state/createSharedListener.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/useDatasetMutator.ts","file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/%40sanity/visual-editing/src/ui/VisualEditing.tsx"],"sourcesContent":["import {useEffect, type FunctionComponent} from 'react'\nimport type {HistoryAdapter, VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const History: FunctionComponent<{\n  comlink: VisualEditingNode\n  history?: HistoryAdapter\n}> = (props) => {\n  const {comlink, history} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/navigate', (data) => {\n      history?.update(data)\n    })\n  }, [comlink, history])\n\n  useEffect(() => {\n    if (history) {\n      return history.subscribe((update) => {\n        update.title = update.title || document.title\n        comlink?.post('visual-editing/navigate', update)\n      })\n    }\n    return\n  }, [comlink, history])\n\n  return null\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const Meta: FunctionComponent<{\n  comlink: VisualEditingNode\n}> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    const sendMeta = () => {\n      comlink.post('visual-editing/meta', {title: document.title})\n    }\n\n    const observer = new MutationObserver(([mutation]) => {\n      if (mutation.target.nodeName === 'TITLE') {\n        sendMeta()\n      }\n    })\n\n    observer.observe(document.head, {\n      subtree: true,\n      characterData: true,\n      childList: true,\n    })\n\n    sendMeta()\n\n    return () => observer.disconnect()\n  }, [comlink])\n\n  return null\n}\n","import {at, insert, remove} from '@sanity/mutate'\nimport {get as getFromPath} from '@sanity/util/paths'\nimport {useCallback, useEffect} from 'react'\nimport {useDocuments} from '../react/useDocuments'\nimport type {DragEndEvent, DragInsertPosition} from '../types'\nimport {getArrayItemKeyAndParentPath} from './mutations'\n\n// Finds the node that the drag end event was relative to, and the relative\n// position the new element should be inserted in. If the reference node was\n// \"top\" or \"left\", we insert \"after\". If it was \"bottom\" or \"right\", we insert\n// \"before\".\nfunction getReferenceNodeAndInsertPosition(position: DragInsertPosition) {\n  if (position) {\n    const {top, right, bottom, left} = position\n    if (left || top) {\n      return {node: (left ?? top)!.sanity, position: 'after' as const}\n    } else if (right || bottom) {\n      return {node: (right ?? bottom)!.sanity, position: 'before' as const}\n    }\n  }\n  return undefined\n}\n\nexport function useDragEndEvents(): {\n  dispatchDragEndEvent: (event: DragEndEvent) => void\n} {\n  const {getDocument} = useDocuments()\n\n  useEffect(() => {\n    const handler = (e: CustomEvent<DragEndEvent>) => {\n      const {insertPosition, target, preventInsertDefault} = e.detail\n\n      if (preventInsertDefault) return\n\n      const reference = getReferenceNodeAndInsertPosition(insertPosition)\n      if (reference) {\n        const doc = getDocument(target.id)\n        // We must have access to the document actor in order to perform the\n        // necessary mutations. If this is undefined, something went wrong when\n        // resolving the currently in use documents\n        const {node, position} = reference\n        // Get the key of the element that was dragged\n        const {key: targetKey, hasExplicitKey} = getArrayItemKeyAndParentPath(target)\n        // Get the key of the reference element, and path to the parent array\n        const {path: arrayPath, key: referenceItemKey} = getArrayItemKeyAndParentPath(node)\n        // Don't patch if the keys match, as this means the item was only\n        // dragged to its existing position, i.e. not moved\n        if (arrayPath && referenceItemKey && referenceItemKey !== targetKey) {\n          doc.patch(async ({getSnapshot}) => {\n            const snapshot = await getSnapshot()\n            // Get the current value of the element we dragged, as we will need\n            // to clone this into the new position\n            const elementValue = getFromPath(snapshot, target.path)\n\n            if (hasExplicitKey) {\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove({_key: targetKey})),\n                // Insert the cloned dragged item into its new position\n                at(arrayPath, insert(elementValue, position, {_key: referenceItemKey})),\n              ]\n            } else {\n              // handle reordering for primitives\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove(~~targetKey)),\n                // Insert the cloned dragged item into its new position\n                at(\n                  arrayPath,\n                  insert(\n                    elementValue,\n                    position,\n                    // if target key is < reference, each item in the array's index will be one less due to the previous removal\n                    referenceItemKey > targetKey ? ~~referenceItemKey - 1 : ~~referenceItemKey,\n                  ),\n                ),\n              ]\n            }\n          })\n        }\n      }\n    }\n    window.addEventListener('sanity/dragEnd', handler as EventListener)\n    return () => {\n      window.removeEventListener('sanity/dragEnd', handler as EventListener)\n    }\n  }, [getDocument])\n\n  const dispatchDragEndEvent = useCallback((event: DragEndEvent) => {\n    const customEvent = new CustomEvent<DragEndEvent>('sanity/dragEnd', {\n      detail: event,\n      cancelable: true,\n    })\n    window.dispatchEvent(customEvent)\n  }, [])\n\n  return {dispatchDragEndEvent}\n}\n","import type {\n  DocumentSchema,\n  SanityNode,\n  SanityStegaNode,\n  TypeSchema,\n} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\nimport type {OverlayElementField, OverlayElementParent} from '../../types'\n\nexport interface SchemaContextValue {\n  getField: (node: SanityNode | SanityStegaNode) => {\n    field: OverlayElementField\n    parent: OverlayElementParent\n  }\n  getType: <T extends 'document' | 'type' = 'document'>(\n    node: SanityNode | SanityStegaNode | string,\n    type?: T,\n  ) => T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined\n}\n\nexport const SchemaContext = createContext<SchemaContextValue | null>(null)\n","import {useContext} from 'react'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nexport function useSchema(): SchemaContextValue {\n  const context = useContext(SchemaContext)\n\n  if (!context) {\n    throw new Error('Schema context is missing')\n  }\n\n  return context\n}\n","import {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  CopyIcon,\n  InsertAboveIcon,\n  InsertBelowIcon,\n  PublishIcon,\n  RemoveIcon,\n  SortIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\nimport type {\n  SanityNode,\n  SchemaArrayItem,\n  SchemaNode,\n  SchemaUnionNode,\n  SchemaUnionOption,\n} from '@sanity/presentation-comlink'\nimport type {SchemaType} from '@sanity/types'\nimport {MenuGroup} from '@sanity/ui/_visual-editing'\nimport {type FunctionComponent} from 'react'\nimport type {OptimisticDocument} from '../../optimistic'\nimport {InsertMenu} from '../../overlay-components/components/InsertMenu'\nimport type {ContextMenuNode, OverlayElementField, OverlayElementParent} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {\n  getArrayDuplicatePatches,\n  getArrayInsertPatches,\n  getArrayMovePatches,\n  getArrayRemovePatches,\n} from '../../util/mutations'\n\nexport function getArrayRemoveAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayRemovePatches(node, (await getSnapshot())!))\n}\n\nfunction getArrayInsertAction(\n  node: SanityNode,\n  doc: OptimisticDocument,\n  insertType: string,\n  position: 'before' | 'after',\n): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () => doc.patch(() => getArrayInsertPatches(node, insertType, position))\n}\n\nfunction getDuplicateAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayDuplicatePatches(node, (await getSnapshot())!))\n}\n\nexport function getContextMenuItems(context: {\n  doc: OptimisticDocument\n  field: OverlayElementField\n  node: SanityNode\n  parent: OverlayElementParent\n}): Promise<ContextMenuNode[]> {\n  const {node, field, parent, doc} = context\n  if (field?.type === 'arrayItem') {\n    return getContextMenuArrayItems({node, field, doc})\n  }\n  if (parent?.type === 'union') {\n    return getContextMenuUnionItems({node, parent, doc})\n  }\n\n  return Promise.resolve([])\n}\n\nfunction getDuplicateItem(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Duplicate',\n      icon: CopyIcon,\n      action: getDuplicateAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Duplicated' as const,\n    },\n  ]\n}\n\nfunction getRemoveItems(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Remove',\n      icon: RemoveIcon,\n      action: getArrayRemoveAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Removed' as const,\n    },\n  ]\n}\n\nasync function getMoveItems(\n  context: {\n    doc: OptimisticDocument\n    node: SanityNode\n  },\n  withDivider = true,\n) {\n  const {node, doc} = context\n  if (!doc) return []\n\n  const items: ContextMenuNode[] = []\n  const groupItems: ContextMenuNode[] = []\n\n  const [moveUpPatches, moveDownPatches, moveFirstPatches, moveLastPatches] = await Promise.all([\n    getArrayMovePatches(node, doc, 'previous'),\n    getArrayMovePatches(node, doc, 'next'),\n    getArrayMovePatches(node, doc, 'first'),\n    getArrayMovePatches(node, doc, 'last'),\n  ])\n\n  if (moveFirstPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To top',\n      icon: PublishIcon,\n      action: () => doc.patch(moveFirstPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveUpPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Up',\n      icon: ArrowUpIcon,\n      action: () => doc.patch(moveUpPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveDownPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Down',\n      icon: ArrowDownIcon,\n      action: () => doc.patch(moveDownPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveLastPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To bottom',\n      icon: UnpublishIcon,\n      action: () => doc.patch(moveLastPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n\n  if (groupItems.length) {\n    items.push({\n      type: 'group',\n      label: 'Move',\n      icon: SortIcon,\n      items: groupItems,\n    })\n    if (withDivider) {\n      items.push({type: 'divider'})\n    }\n  }\n\n  return items\n}\n\nasync function getContextMenuArrayItems(context: {\n  doc: OptimisticDocument\n  field: SchemaArrayItem\n  node: SanityNode\n}): Promise<ContextMenuNode[]> {\n  const {node, field, doc} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  items.push({\n    type: 'action',\n    label: 'Insert before',\n    icon: InsertAboveIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'before'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n  items.push({\n    type: 'action',\n    label: 'Insert after',\n    icon: InsertBelowIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'after'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n\n  return items\n}\n\nconst InsertMenuWrapper: FunctionComponent<{\n  label: string\n  onSelect: (schemaType: SchemaType) => void\n  parent: SchemaUnionNode<SchemaNode>\n  width: number | undefined\n  boundaryElement: HTMLDivElement | null\n}> = (props) => {\n  const {label, parent, width, onSelect, boundaryElement} = props\n\n  return (\n    <MenuGroup\n      fontSize={1}\n      icon={InsertBelowIcon}\n      padding={2}\n      popover={{\n        arrow: false,\n        constrainSize: true,\n        floatingBoundary: boundaryElement,\n        padding: 0,\n        placement: 'right-start',\n        fallbackPlacements: [\n          'left-start',\n          'right',\n          'left',\n          'right-end',\n          'left-end',\n          'bottom',\n          'top',\n        ],\n        preventOverflow: true,\n        width,\n        __unstable_margins: [4, 4, 4, 4],\n      }}\n      space={2}\n      text={label}\n    >\n      <InsertMenu node={parent} onSelect={onSelect} />\n    </MenuGroup>\n  )\n}\n\nasync function getContextMenuUnionItems(context: {\n  doc: OptimisticDocument\n  node: SanityNode\n  parent: SchemaUnionNode<SchemaNode>\n}): Promise<ContextMenuNode[]> {\n  const {doc, node, parent} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  if (parent.options?.insertMenu) {\n    const insertMenuOptions = parent.options.insertMenu || {}\n    const width = insertMenuOptions.views?.some((view) => view.name === 'grid') ? 0 : undefined\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'before')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert before\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'after')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert after\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n  } else {\n    items.push({\n      type: 'group',\n      label: 'Insert before',\n      icon: InsertAboveIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          icon: getNodeIcon(t),\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          action: getArrayInsertAction(node, doc, t.name, 'before'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n    items.push({\n      type: 'group',\n      label: 'Insert after',\n      icon: InsertBelowIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          icon: getNodeIcon(t),\n          action: getArrayInsertAction(node, doc, t.name, 'after'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n  }\n\n  return items\n}\n","import {\n  Box,\n  Flex,\n  Menu,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  Popover,\n  Spinner,\n  Stack,\n  Text,\n  type PopoverMargins,\n} from '@sanity/ui/_visual-editing'\nimport {useCallback, useEffect, useMemo, useState, type FunctionComponent} from 'react'\nimport {useDocuments} from '../../react/useDocuments'\nimport type {ContextMenuNode, ContextMenuProps} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {PopoverPortal} from '../PopoverPortal'\nimport {useSchema} from '../schema/useSchema'\nimport {useTelemetry} from '../telemetry/useTelemetry'\nimport {getContextMenuItems} from './contextMenuItems'\n\nconst POPOVER_MARGINS: PopoverMargins = [-4, 4, -4, 4]\n\nfunction ContextMenuItem(props: {\n  node: ContextMenuNode\n  onDismiss?: () => void\n  boundaryElement: HTMLDivElement | null\n}) {\n  const {node, onDismiss, boundaryElement} = props\n  const sendTelemetry = useTelemetry()\n\n  const onClick = useCallback(() => {\n    if (node.type === 'action') {\n      node.action?.()\n      onDismiss?.()\n\n      if (node.telemetryEvent) {\n        sendTelemetry(node.telemetryEvent, null)\n      }\n    }\n  }, [node, onDismiss, sendTelemetry])\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'action') {\n    return (\n      <MenuItem\n        fontSize={1}\n        hotkeys={node.hotkeys}\n        icon={node.icon}\n        padding={2}\n        space={2}\n        text={node.label}\n        disabled={!node.action}\n        onClick={onClick}\n      />\n    )\n  }\n\n  if (node.type === 'group') {\n    return (\n      <MenuGroup\n        fontSize={1}\n        icon={node.icon}\n        padding={2}\n        // @todo when this PR lands https://github.com/sanity-io/ui/pull/1454\n        // menu={{\n        //   padding: 0,\n        // }}\n        popover={{\n          arrow: false,\n          constrainSize: true,\n          placement: 'right-start',\n          fallbackPlacements: [\n            'left-start',\n            'right',\n            'left',\n            'right-end',\n            'left-end',\n            'bottom',\n            'top',\n          ],\n          preventOverflow: true,\n          __unstable_margins: POPOVER_MARGINS,\n        }}\n        space={2}\n        text={node.label}\n      >\n        {node.items.map((item, itemIndex) => (\n          <ContextMenuItem\n            key={itemIndex}\n            node={item}\n            onDismiss={onDismiss}\n            boundaryElement={boundaryElement}\n          />\n        ))}\n      </MenuGroup>\n    )\n  }\n\n  if (node.type === 'custom') {\n    const {component: Component} = node\n    return <Component boundaryElement={boundaryElement} sendTelemetry={sendTelemetry} />\n  }\n\n  return null\n}\n\nexport const ContextMenu: FunctionComponent<ContextMenuProps> = (props) => {\n  const {\n    node,\n    onDismiss,\n    position: {x, y},\n  } = props\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const {getField} = useSchema()\n  const {getDocument} = useDocuments()\n\n  const {field, parent} = getField(node)\n\n  const title = useMemo(() => {\n    return field?.title || field?.name || 'Unknown type'\n  }, [field])\n\n  const [items, setItems] = useState<ContextMenuNode[] | undefined>(undefined)\n\n  useEffect(() => {\n    const fetchContextMenuItems = async () => {\n      const doc = getDocument(node.id)\n      if (!doc) return\n      const items = await getContextMenuItems({node, field, parent, doc})\n      setItems(items)\n    }\n    fetchContextMenuItems()\n  }, [field, node, parent, getDocument])\n\n  const contextMenuReferenceElement = useMemo(() => {\n    return {\n      getBoundingClientRect: () => ({\n        bottom: y,\n        left: x,\n        right: x,\n        top: y,\n        width: 0,\n        height: 0,\n      }),\n    } as HTMLElement\n  }, [x, y])\n\n  const icon = useMemo(() => {\n    return getNodeIcon(field)\n  }, [field])\n\n  return (\n    <PopoverPortal setBoundaryElement={setBoundaryElement} onDismiss={onDismiss}>\n      <Popover\n        __unstable_margins={POPOVER_MARGINS}\n        arrow={false}\n        open\n        placement=\"right-start\"\n        referenceElement={contextMenuReferenceElement}\n        content={\n          <Menu style={{minWidth: 120, maxWidth: 160}}>\n            <Flex gap={2} padding={2}>\n              <Box flex=\"none\">{items ? <Text size={1}>{icon}</Text> : <Spinner size={1} />}</Box>\n\n              <Stack flex={1} space={2}>\n                <Text size={1} weight=\"semibold\">\n                  {items ? title : 'Loading...'}\n                </Text>\n              </Stack>\n            </Flex>\n\n            {items && (\n              <>\n                <MenuDivider />\n                {items.map((item, i) => (\n                  <ContextMenuItem\n                    key={i}\n                    node={item}\n                    onDismiss={onDismiss}\n                    boundaryElement={boundaryElement}\n                  />\n                ))}\n              </>\n            )}\n          </Menu>\n        }\n      >\n        <div\n          key={`${x}-${y}`}\n          style={{\n            position: 'absolute',\n            left: x,\n            top: y,\n          }}\n        />\n      </Popover>\n    </PopoverPortal>\n  )\n}\n","export function getLinkHref(href: string, referer: string): string {\n  try {\n    const parsed = new URL(href, typeof location === 'undefined' ? undefined : location.origin)\n    if (parsed.hash) {\n      const hash = new URL(getLinkHref(parsed.hash.slice(1), referer))\n      return `${parsed.origin}${parsed.pathname}${parsed.search}#${hash.pathname}${hash.search}`\n    }\n    parsed.searchParams.set('preview', referer)\n    return parsed.toString()\n  } catch {\n    return href\n  }\n}\n","import type {PreviewSnapshot} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\n\nexport type PreviewSnapshotsContextValue = PreviewSnapshot[]\n\nexport const PreviewSnapshotsContext = createContext<PreviewSnapshotsContextValue | null>(null)\n","import {useContext} from 'react'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport function usePreviewSnapshots(): PreviewSnapshotsContextValue {\n  const context = useContext(PreviewSnapshotsContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  return context\n}\n","import {createEditUrl, studioPath} from '@sanity/client/csm'\nimport {DocumentIcon, DragHandleIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui/_visual-editing'\nimport {pathToUrlString} from '@sanity/visual-editing-csm'\nimport {\n  isValidElement,\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n  type CSSProperties,\n  type FunctionComponent,\n  type ReactElement,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {styled} from 'styled-components'\nimport {PointerEvents} from '../overlay-components/components/PointerEvents'\nimport type {\n  ElementFocusedState,\n  ElementNode,\n  OverlayComponent,\n  OverlayComponentResolver,\n  OverlayComponentResolverContext,\n  OverlayRect,\n  SanityNode,\n  SanityStegaNode,\n} from '../types'\nimport {getLinkHref} from '../util/getLinkHref'\nimport {usePreviewSnapshots} from './preview/usePreviewSnapshots'\nimport {useSchema} from './schema/useSchema'\n\nconst isReactElementOverlayComponent = (\n  component:\n    | OverlayComponent\n    | {component: OverlayComponent; props?: Record<string, unknown>}\n    | Array<OverlayComponent | {component: OverlayComponent; props?: Record<string, unknown>}>\n    | ReactElement,\n): component is React.JSX.Element => {\n  return isValidElement(component)\n}\n\nexport interface ElementOverlayProps {\n  componentResolver?: OverlayComponentResolver\n  draggable: boolean\n  element: ElementNode\n  focused: ElementFocusedState\n  hovered: boolean\n  isDragging: boolean\n  node: SanityNode | SanityStegaNode\n  rect: OverlayRect\n  showActions: boolean\n  wasMaybeCollapsed: boolean\n  enableScrollIntoView: boolean\n}\n\nconst Root = styled(Card)`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`\n\nconst Actions = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst Tab = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst ActionOpen = styled(Card)`\n  cursor: pointer;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst Labels = styled(Flex)`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nfunction createIntentLink(node: SanityNode) {\n  const {id, type, path, baseUrl, tool, workspace} = node\n\n  return createEditUrl({\n    baseUrl,\n    workspace,\n    tool,\n    type: type!,\n    id,\n    path: pathToUrlString(studioPath.fromString(path)),\n  })\n}\n\nconst ElementOverlayInner: FunctionComponent<ElementOverlayProps> = (props) => {\n  const {element, focused, componentResolver, node, showActions, draggable} = props\n\n  const {getField, getType} = useSchema()\n  const schemaType = getType(node)\n  const {field, parent} = getField(node)\n\n  const href = 'path' in node ? createIntentLink(node) : node.href\n\n  const previewSnapshots = usePreviewSnapshots()\n\n  const title = useMemo(() => {\n    if (!('path' in node)) return undefined\n    return previewSnapshots.find((snapshot) => snapshot._id === node.id)?.title\n  }, [node, previewSnapshots])\n\n  const componentContext = useMemo<OverlayComponentResolverContext | undefined>(() => {\n    if (!('path' in node)) return undefined\n    if (!field || !schemaType) return undefined\n    const type = field.value.type\n\n    return {\n      document: schemaType,\n      element,\n      field,\n      focused: !!focused,\n      node,\n      parent,\n      type,\n    }\n  }, [schemaType, element, field, focused, node, parent])\n\n  const customComponents = useCustomComponents(componentContext, componentResolver)\n\n  const icon = schemaType?.icon ? (\n    <div dangerouslySetInnerHTML={{__html: schemaType.icon}} />\n  ) : (\n    <DocumentIcon />\n  )\n\n  return (\n    <>\n      {showActions ? (\n        <Actions gap={1} paddingY={1} data-sanity-overlay-element>\n          <Link href={href} />\n        </Actions>\n      ) : null}\n      {title && (\n        <Tab gap={1} paddingY={1}>\n          <Labels gap={2} padding={2}>\n            {draggable && (\n              <Box marginRight={1}>\n                <Text className=\"drag-handle\" size={0}>\n                  <DragHandleIcon />\n                </Text>\n              </Box>\n            )}\n            <Text size={0}>{icon}</Text>\n            <Text size={1} weight=\"medium\">\n              {title}\n            </Text>\n          </Labels>\n        </Tab>\n      )}\n\n      {Array.isArray(customComponents)\n        ? customComponents.map(({component: Component, props}, i) => {\n            return (\n              <Component key={i} PointerEvents={PointerEvents} {...componentContext!} {...props} />\n            )\n          })\n        : customComponents}\n    </>\n  )\n}\n\nexport const ElementOverlay = memo(function ElementOverlay(props: ElementOverlayProps) {\n  const {draggable, focused, hovered, rect, wasMaybeCollapsed, enableScrollIntoView} = props\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const scrolledIntoViewRef = useRef(false)\n\n  const style = useMemo<CSSProperties>(\n    () => ({\n      width: `${rect.w}px`,\n      height: `${rect.h}px`,\n      transform: `translate(${rect.x}px, ${rect.y}px)`,\n    }),\n    [rect],\n  )\n\n  useEffect(() => {\n    if (\n      !scrolledIntoViewRef.current &&\n      !wasMaybeCollapsed &&\n      focused === true &&\n      ref.current &&\n      enableScrollIntoView\n    ) {\n      const target = ref.current\n      scrollIntoView(ref.current, {\n        // Workaround issue with scroll-into-view-if-needed struggling with iframes\n        behavior: (actions) => {\n          if (actions.length === 0) {\n            // An empty actions list equals scrolling isn't needed\n            return\n          }\n          // Uses native scrollIntoView to ensure iframes behave correctly\n          target.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest',\n          })\n        },\n        scrollMode: 'if-needed',\n        block: 'center',\n        inline: 'nearest',\n      })\n    }\n\n    scrolledIntoViewRef.current = focused === true\n  }, [focused, wasMaybeCollapsed, enableScrollIntoView])\n\n  const [isNearTop, setIsNearTop] = useState(false)\n  useEffect(() => {\n    if (!ref.current || !hovered) return undefined\n\n    const io = new IntersectionObserver(\n      ([intersection]) => {\n        setIsNearTop(intersection.boundingClientRect.top < 0)\n      },\n      {threshold: 1},\n    )\n    io.observe(ref.current)\n    return () => io.disconnect()\n  }, [hovered, isNearTop])\n\n  return (\n    <Root\n      data-focused={focused ? '' : undefined}\n      data-hovered={hovered ? '' : undefined}\n      data-flipped={isNearTop ? '' : undefined}\n      data-draggable={draggable ? '' : undefined}\n      ref={ref}\n      style={style}\n    >\n      {hovered && <ElementOverlayInner {...props} />}\n    </Root>\n  )\n})\n\nfunction useCustomComponents(\n  componentContext: OverlayComponentResolverContext | undefined,\n  componentResolver: OverlayComponentResolver | undefined,\n) {\n  return useMemo(() => {\n    if (!componentContext) return undefined\n    const resolved = componentResolver?.(componentContext)\n    if (!resolved) return undefined\n\n    if (isReactElementOverlayComponent(resolved)) {\n      return resolved\n    }\n\n    return (Array.isArray(resolved) ? resolved : [resolved]).map((component) => {\n      if (typeof component === 'object' && 'component' in component) {\n        return component\n      }\n      return {component, props: {}}\n    })\n  }, [componentResolver, componentContext])\n}\n\nconst Link = memo(function Link(props: {href: string}) {\n  const referer = useSyncExternalStore(\n    useCallback((onStoreChange) => {\n      const handlePopState = () => onStoreChange()\n      window.addEventListener('popstate', handlePopState)\n      return () => window.removeEventListener('popstate', handlePopState)\n    }, []),\n    () => window.location.href,\n  )\n  const href = useMemo(() => getLinkHref(props.href, referer), [props.href, referer])\n\n  return (\n    <Box as=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      <ActionOpen padding={2}>\n        <Text size={1} weight=\"medium\">\n          Open in Studio\n        </Text>\n      </ActionOpen>\n    </Box>\n  )\n})\n","import type {FunctionComponent} from 'react'\nimport type {OverlayRect} from '../types'\n\nexport const OverlayDragGroupRect: FunctionComponent<{\n  dragGroupRect: OverlayRect\n}> = ({dragGroupRect}) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: `${dragGroupRect.y}px`,\n        left: `${dragGroupRect.x}px`,\n        width: `${dragGroupRect.w - 1}px`,\n        height: `${dragGroupRect.h - 1}px`,\n        border: '1px dashed #f0709b',\n        pointerEvents: 'none',\n      }}\n    ></div>\n  )\n}\n","import type {FunctionComponent} from 'react'\nimport type {DragInsertPosition} from '../types'\n\nconst markerThickness = 6\n\nfunction lerp(v0: number, v1: number, t: number) {\n  return v0 * (1 - t) + v1 * t\n}\n\nexport const OverlayDragInsertMarker: FunctionComponent<{\n  dragInsertPosition: DragInsertPosition\n}> = ({dragInsertPosition}) => {\n  if (dragInsertPosition === null) return\n\n  const flow = dragInsertPosition?.left || dragInsertPosition?.right ? 'horizontal' : 'vertical'\n\n  let x = 0\n  let y = 0\n  let width = 0\n  let height = 0\n  const offsetMultiplier = 0.0125\n\n  if (flow === 'horizontal') {\n    const {left, right} = dragInsertPosition\n\n    width = markerThickness\n\n    if (right && left) {\n      const startX = left.rect.x + left.rect.w\n      const endX = right.rect.x\n      const targetHeight = Math.min(right.rect.h, left.rect.h)\n      const offset = targetHeight * offsetMultiplier\n\n      x = lerp(startX, endX, 0.5) - markerThickness / 2\n      y = left.rect.y + offset\n\n      height = Math.min(right.rect.h, left.rect.h) - offset * 2\n    } else if (right && !left) {\n      const targetHeight = right.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = right.rect.x - markerThickness / 2\n      y = right.rect.y + offset\n      height = right.rect.h - offset * 2\n    } else if (left && !right) {\n      const targetHeight = left.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = left.rect.x + left.rect.w - markerThickness / 2\n      y = left.rect.y + offset\n      height = left.rect.h - offset * 2\n    }\n  } else {\n    const {bottom, top} = dragInsertPosition\n\n    if (bottom && top) {\n      const startX = Math.min(top.rect.x, bottom.rect.x)\n      const startY = top.rect.y + top.rect.h\n      const endY = bottom.rect.y\n      const targetWidth = Math.min(bottom.rect.w, top.rect.w)\n      const offset = targetWidth * offsetMultiplier\n\n      height = markerThickness\n\n      x = startX + offset\n      y = lerp(startY, endY, 0.5) - markerThickness / 2\n      width = Math.max(bottom.rect.w, top.rect.w) - offset * 2\n    } else if (bottom && !top) {\n      const targetWidth = bottom.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = bottom.rect.x + offset\n      y = bottom.rect.y - markerThickness / 2\n      width = bottom.rect.w - offset * 2\n      height = markerThickness\n    } else if (top && !bottom) {\n      const targetWidth = top.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = top.rect.x + offset\n      y = top.rect.y + top.rect.h - markerThickness / 2\n      width = top.rect.w - offset * 2\n      height = markerThickness\n    }\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: `translate(${x}px, ${y}px)`,\n        background: '#556bfc',\n        border: '2px solid white',\n        borderRadius: '999px',\n        zIndex: '999999',\n      }}\n    ></div>\n  )\n}\n","import {Card, usePrefersDark, useTheme_v2} from '@sanity/ui/_visual-editing'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\nimport type {DragSkeleton} from '../types'\n\nconst Root = styled.div<{\n  $width: number\n  $height: number\n  $offsetX: number\n  $offsetY: number\n  $scaleFactor: number\n}>`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({$scaleFactor, $width, $height}) =>\n    `translate(calc(var(--drag-preview-x) - ${$width / 2}px), calc(var(--drag-preview-y) - ${$height / 2}px)) scale(${$scaleFactor})`};\n  width: ${({$width}) => `${$width}px`};\n  height: ${({$height}) => `${$height}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`\n\nfunction clamp(number: number, min: number, max: number): number {\n  return number < min ? min : number > max ? max : number\n}\n\nfunction map(number: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n  const mapped: number = ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n  return clamp(mapped, outMin, outMax)\n}\n\nexport const OverlayDragPreview: FunctionComponent<{skeleton: DragSkeleton}> = ({skeleton}) => {\n  const maxSkeletonWidth = Math.min(skeleton.maxWidth, window.innerWidth / 2)\n  const scaleFactor = skeleton.w > maxSkeletonWidth ? maxSkeletonWidth / skeleton.w : 1\n\n  const offsetX = skeleton.offsetX * scaleFactor\n  const offsetY = skeleton.offsetY * scaleFactor\n\n  const prefersDark = usePrefersDark()\n  const theme = useTheme_v2()\n\n  const radius = theme.radius[~~map(skeleton.w, 0, 1920, 1, theme.radius.length - 2)]\n\n  const imageRects = skeleton.childRects.filter((r) => r.tagName === 'IMG')\n  const textRects = skeleton.childRects.filter((r) => r.tagName !== 'IMG')\n\n  return (\n    <Root\n      $width={skeleton.w}\n      $height={skeleton.h}\n      $offsetX={offsetX}\n      $offsetY={offsetY}\n      $scaleFactor={scaleFactor}\n    >\n      <Card\n        radius={radius}\n        shadow={4}\n        overflow=\"hidden\"\n        tone=\"transparent\"\n        scheme={prefersDark ? 'dark' : 'light'}\n      >\n        <div className=\"drag-preview-content-wrapper\">\n          <svg className=\"drag-preview-skeleton\" viewBox={`0 0 ${skeleton.w} ${skeleton.h}`}>\n            {/* render image rects first to account for background images overlapping text */}\n            {[...imageRects, ...textRects].map((r, i) => (\n              <rect\n                key={i}\n                x={r.x}\n                y={r.y}\n                width={r.w}\n                height={r.h}\n                fill={theme.color.skeleton.from}\n              ></rect>\n            ))}\n          </svg>\n        </div>\n      </Card>\n    </Root>\n  )\n}\n","import {ExpandIcon} from '@sanity/icons'\nimport {Card, Flex, Hotkeys, Text} from '@sanity/ui/_visual-editing'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\n\nconst Root = styled(Card)`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`\n\nexport const OverlayMinimapPrompt: FunctionComponent = () => {\n  return (\n    <Root padding={2} shadow={2} radius={2} style={{zIndex: '999999'}}>\n      <Flex align=\"center\" gap={2}>\n        <Hotkeys keys={['Shift']} />\n        <Text size={1}>Zoom Out</Text>\n        <ExpandIcon />\n      </Flex>\n    </Root>\n  )\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {ElementState, OverlayMsg} from '../types'\n\n/**\n * Reducer for managing element state from received channel messages\n * @internal\n */\nexport const elementsReducer = (\n  elements: ElementState[],\n  message: OverlayMsg | VisualEditingControllerMsg,\n): ElementState[] => {\n  const {type} = message\n  switch (type) {\n    case 'element/register': {\n      const elementExists = !!elements.find((e) => e.id === message.id)\n      if (elementExists) return elements\n\n      return [\n        ...elements,\n        {\n          id: message.id,\n          activated: false,\n          element: message.element,\n          focused: false,\n          hovered: false,\n          rect: message.rect,\n          sanity: message.sanity,\n          dragDisabled: message.dragDisabled,\n        },\n      ]\n    }\n    case 'element/activate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: true}\n        }\n        return e\n      })\n    case 'element/update': {\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, sanity: message.sanity, rect: message.rect}\n        }\n        return e\n      })\n    }\n    case 'element/unregister':\n      return elements.filter((e) => e.id !== message.id)\n    case 'element/deactivate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: false, hovered: false}\n        }\n        return e\n      })\n    case 'element/mouseenter':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, rect: message.rect, hovered: true}\n        }\n        return {...e, hovered: false}\n      })\n    case 'element/mouseleave':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, hovered: false}\n        }\n        return element\n      })\n    case 'element/updateRect':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, rect: message.rect}\n        }\n        return element\n      })\n    case 'element/click':\n      return elements.map((e) => {\n        return {...e, focused: e.id === message.id && 'clicked'}\n      })\n    case 'overlay/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/focus': {\n      // Before setting the focus state of each element, check to see if any\n      // element has gained focus from an `element/click` message. Presentation\n      // tool \"reflects\" these back as a `presentation/focus` message.\n      const clickedElement = elements.find((e) => e.focused === 'clicked')\n      return elements.map((e) => {\n        // We want to focus any element which matches the received id and path\n        const focused =\n          'path' in e.sanity &&\n          e.sanity.id === message.data.id &&\n          e.sanity.path === message.data.path\n\n        // If we have a 'clicked' element, and that element matches, it is a\n        // reflection, so we maintain the focus state\n        if (clickedElement && e === clickedElement && focused) {\n          return e\n        }\n\n        return {\n          ...e,\n          // Mark as a dupe if another matching item has been clicked to prevent\n          // scrolling, otherwise just set focus as a boolean\n          focused: focused && clickedElement ? 'duplicate' : focused,\n        }\n      })\n    }\n    default:\n      return elements\n  }\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport type {SanityNode, VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {\n  DragInsertPosition,\n  DragSkeleton,\n  ElementState,\n  OverlayMsg,\n  OverlayRect,\n} from '../types'\nimport {elementsReducer} from './elementsReducer'\n\nexport interface OverlayState {\n  contextMenu: {\n    node: SanityNode\n    position: {\n      x: number\n      y: number\n    }\n  } | null\n  focusPath: string\n  elements: ElementState[]\n  wasMaybeCollapsed: boolean\n  perspective: ClientPerspective\n  isDragging: boolean\n  dragInsertPosition: DragInsertPosition\n  dragSkeleton: DragSkeleton | null\n  dragShowMinimap: boolean\n  dragShowMinimapPrompt: boolean\n  dragMinimapTransition: boolean\n  dragGroupRect: OverlayRect | null\n}\n\nexport function overlayStateReducer(\n  state: OverlayState,\n  message: OverlayMsg | VisualEditingControllerMsg,\n): OverlayState {\n  const {type} = message\n  let {\n    contextMenu,\n    focusPath,\n    perspective,\n    isDragging,\n    dragInsertPosition,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragSkeleton,\n    dragMinimapTransition,\n    dragGroupRect,\n  } = state\n  let wasMaybeCollapsed = false\n\n  if (type === 'presentation/focus') {\n    const prevFocusPath = state.focusPath\n\n    focusPath = message.data.path\n\n    if (prevFocusPath !== focusPath) {\n      wasMaybeCollapsed = prevFocusPath.slice(focusPath.length).startsWith('[')\n    }\n  }\n\n  if (type === 'presentation/perspective') {\n    perspective = message.data.perspective\n  }\n\n  if (type === 'element/contextmenu') {\n    if ('sanity' in message) {\n      contextMenu = {node: message.sanity, position: message.position}\n    } else {\n      contextMenu = null\n    }\n  }\n\n  if (\n    type === 'element/click' ||\n    type === 'element/mouseleave' ||\n    type === 'overlay/blur' ||\n    type === 'presentation/blur' ||\n    type === 'presentation/focus'\n  ) {\n    contextMenu = null\n  }\n\n  if (type === 'overlay/dragUpdateInsertPosition') {\n    dragInsertPosition = message.insertPosition\n  }\n\n  if (type === 'overlay/dragStart') {\n    isDragging = true\n  }\n\n  if (message.type === 'overlay/dragUpdateSkeleton') {\n    dragSkeleton = message.skeleton\n  }\n\n  if (type === 'overlay/dragEnd') {\n    isDragging = false\n  }\n\n  if (message.type === 'overlay/dragToggleMinimapPrompt') {\n    dragShowMinimapPrompt = message.display\n  }\n\n  if (type === 'overlay/dragStartMinimapTransition') {\n    dragMinimapTransition = true\n  }\n\n  if (type === 'overlay/dragEndMinimapTransition') {\n    dragMinimapTransition = false\n  }\n\n  if (type === 'overlay/dragUpdateGroupRect') {\n    dragGroupRect = message.groupRect\n  }\n\n  if (type === 'overlay/dragToggleMinimap') {\n    dragShowMinimap = message.display\n  }\n\n  return {\n    ...state,\n    contextMenu,\n    elements: elementsReducer(state.elements, message),\n    dragInsertPosition,\n    dragSkeleton,\n    dragGroupRect,\n    isDragging,\n    focusPath,\n    perspective,\n    wasMaybeCollapsed,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragMinimapTransition,\n  }\n}\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport const PreviewSnapshotsProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const [previewSnapshots, setPreviewSnapshots] = useState<PreviewSnapshotsContextValue>([])\n\n  const fetchPreviewSnapshots = useCallback(\n    async (signal: AbortSignal) => {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/preview-snapshots', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setPreviewSnapshots(response.snapshots)\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n  useEffect(() => {\n    if (!comlink) return\n\n    const previewSapshotsFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchPreviewSnapshots(previewSapshotsFetch.signal)\n    }, 'connected')\n\n    return () => {\n      previewSapshotsFetch.abort()\n      unsub()\n    }\n  }, [comlink, fetchPreviewSnapshots])\n\n  useEffect(() => {\n    return comlink?.on('presentation/preview-snapshots', (data) => {\n      setPreviewSnapshots(data.snapshots)\n    })\n  }, [comlink])\n\n  const context = useMemo<PreviewSnapshotsContextValue>(() => previewSnapshots, [previewSnapshots])\n  return (\n    <PreviewSnapshotsContext.Provider value={context}>{children}</PreviewSnapshotsContext.Provider>\n  )\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n  UnresolvedPath,\n} from '@sanity/presentation-comlink'\nimport {\n  useCallback,\n  useDeferredValue,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {\n  ElementState,\n  OverlayElementField,\n  OverlayElementParent,\n  VisualEditingNode,\n} from '../../types'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nfunction isSanityNode(node: SanityNode | SanityStegaNode): node is SanityNode {\n  return 'path' in node\n}\n\nfunction isDocumentSchemaType(type: SchemaType): type is DocumentSchema {\n  return type.type === 'document'\n}\n\nfunction isTypeSchemaType(type: SchemaType): type is TypeSchema {\n  return type.type === 'type'\n}\n\nfunction popUnkeyedPathSegments(path: string): string {\n  return path\n    .split('.')\n    .toReversed()\n    .reduce((acc, part) => {\n      if (acc.length) return [part, ...acc]\n      if (part.includes('[_key==')) return [part]\n      return []\n    }, [] as string[])\n    .join('.')\n}\n\nfunction getPathsWithUnresolvedTypes(elements: ElementState[]): {id: string; path: string}[] {\n  return elements.reduce((acc, element) => {\n    const {sanity} = element\n    if (!('id' in sanity)) return acc\n    if (!sanity.path.includes('[_key==')) return acc\n    const path = popUnkeyedPathSegments(sanity.path)\n    if (!acc.find((item) => item.id === sanity.id && item.path === path)) {\n      acc.push({id: sanity.id, path})\n    }\n    return acc\n  }, [] as UnresolvedPath[])\n}\n\nexport const SchemaProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n    elements: ElementState[]\n  }>\n> = function (props) {\n  const {comlink, children, elements} = props\n\n  const [resolvedTypes, setResolvedTypes] = useState<ResolvedSchemaTypeMap>(new Map())\n\n  const [schema, setSchema] = useState<SchemaType[] | null>(null)\n\n  useEffect(() => {\n    if (!comlink) return\n\n    async function fetchSchema(signal: AbortSignal) {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/schema', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setSchema(response.schema)\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    }\n    const schemaFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchSchema(schemaFetch.signal)\n    }, 'connected')\n\n    return () => {\n      schemaFetch.abort()\n      unsub()\n    }\n  }, [comlink])\n\n  const reportedPathsRef = useRef<UnresolvedPath[]>([])\n  const paths = getPathsWithUnresolvedTypes(useDeferredValue(elements))\n  const controllerRef = useRef<AbortController | null>(null)\n\n  useEffect(() => {\n    if (!paths.length || !comlink) return\n    // We report a list of paths that reference array items using a _key. We need\n    // to resolve the types of each of these items so we can map them to the\n    // correct schema types. One day CSM might include this data for us.\n    const reportPaths = async (paths: UnresolvedPath[], signal: AbortSignal) => {\n      const initialReportedPaths = reportedPathsRef.current\n      try {\n        reportedPathsRef.current = paths\n        const response = await comlink.fetch(\n          'visual-editing/schema-union-types',\n          {paths},\n          {signal, suppressWarnings: true},\n        )\n        if (signal.aborted) return\n        setResolvedTypes(response.types)\n        controllerRef.current = null\n      } catch {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n      if (signal.aborted) {\n        reportedPathsRef.current = initialReportedPaths\n      }\n    }\n\n    if (\n      paths.some(\n        (p) => !reportedPathsRef.current.find(({id, path}) => id === p.id && path === p.path),\n      )\n    ) {\n      // Abort any previous requests\n      controllerRef.current?.abort()\n      controllerRef.current = new AbortController()\n      reportPaths(paths, controllerRef.current.signal)\n    }\n  }, [comlink, paths])\n\n  const getType = useCallback(\n    <T extends 'document' | 'type' = 'document'>(\n      node: SanityNode | SanityStegaNode | string,\n      _type?: T,\n    ): T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined => {\n      const type = _type || 'document'\n      if (\n        !schema ||\n        (typeof node !== 'string' && (!isSanityNode(node) || !Array.isArray(schema)))\n      ) {\n        return undefined\n      }\n      const name = typeof node === 'string' ? node : node.type\n      const filter = type === 'document' ? isDocumentSchemaType : isTypeSchemaType\n      return schema\n        .filter(filter)\n        .find((schemaType) => schemaType.name === name) as T extends 'document'\n        ? DocumentSchema | undefined\n        : TypeSchema | undefined\n    },\n    [schema],\n  )\n\n  const getField = useCallback(\n    (\n      node: SanityNode | SanityStegaNode,\n    ): {\n      field: OverlayElementField\n      parent: OverlayElementParent\n    } => {\n      if (!isSanityNode(node)) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n\n      const schemaType = getType(node)\n\n      if (!schemaType) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n      function fieldFromPath(\n        schemaType: OverlayElementParent,\n        path: string[],\n        parent: OverlayElementParent,\n        prevPath: string[] = [],\n      ): {\n        field: OverlayElementField\n        parent: OverlayElementParent\n      } {\n        if (!schemaType) {\n          return {field: undefined, parent: undefined}\n        }\n\n        const [next, ...rest] = path\n\n        if ('fields' in schemaType) {\n          const objectField = schemaType.fields[next]\n          if (!objectField && 'rest' in schemaType) {\n            return fieldFromPath(schemaType.rest, path, schemaType, prevPath)\n          }\n          if (!rest.length) {\n            return {field: objectField, parent}\n          }\n          if (!objectField) {\n            throw new Error(\n              `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n            )\n          }\n          return fieldFromPath(objectField.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'array') {\n          return fieldFromPath(schemaType.of, path, schemaType, prevPath)\n        } else if (schemaType.type === 'arrayItem') {\n          if (!rest.length) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'union') {\n          const name = next.startsWith('[_key==')\n            ? resolvedTypes\n                ?.get((node as SanityNode).id)\n                ?.get([prevPath.join('.'), next].filter(Boolean).join(''))\n            : next\n          return fieldFromPath(\n            schemaType.of.find((item) => (item.type === 'unionOption' ? item.name === name : item)),\n            rest,\n            schemaType,\n            [...prevPath, next],\n          )\n        } else if (schemaType.type === 'unionOption') {\n          if (!next) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, path, schemaType, prevPath)\n        } else if (schemaType.type === 'inline') {\n          const type = getType(schemaType.name, 'type')\n          return fieldFromPath((type as TypeSchema).value, path, schemaType, prevPath)\n        }\n        throw new Error(\n          `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n        )\n      }\n\n      const nodePath = node.path.split('.').flatMap((part) => {\n        if (part.includes('[')) {\n          return part.split(/(\\[.+\\])/, 2)\n        }\n        return [part]\n      })\n\n      try {\n        return fieldFromPath(schemaType, nodePath, undefined)\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        if (e instanceof Error) console.warn(e.message)\n        return {field: undefined, parent: undefined}\n      }\n    },\n    [getType, resolvedTypes],\n  )\n\n  const context = useMemo<SchemaContextValue>(() => ({getField, getType}), [getField, getType])\n\n  return <SchemaContext.Provider value={context}>{children}</SchemaContext.Provider>\n}\n","import type {SerializableObject} from '@sanity/presentation-comlink'\nimport {useEffect, useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {SharedStateContext} from './SharedStateContext'\n\nconst createStore = (initialState: SerializableObject) => {\n  let state = initialState\n  const getState = () => state\n  const listeners = new Set<() => void>()\n  const setState = (fn: (state: SerializableObject) => SerializableObject) => {\n    state = fn(state)\n    listeners.forEach((l) => l())\n  }\n  const subscribe = (listener: () => void) => {\n    listeners.add(listener)\n    return () => listeners.delete(listener)\n  }\n  return {getState, setState, subscribe}\n}\n\nconst store = createStore({})\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = (props) => {\n  const {comlink, children} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/shared-state', (data) => {\n      if ('value' in data) {\n        store.setState((prev) => ({...prev, [data.key]: data.value}))\n      } else {\n        store.setState((prev) => {\n          return Object.fromEntries(Object.entries(prev).filter(([key]) => key !== data.key))\n        })\n      }\n    })\n  }, [comlink])\n\n  useEffect(() => {\n    async function fetch() {\n      const value = await comlink?.fetch('visual-editing/shared-state', undefined, {\n        suppressWarnings: true,\n      })\n      if (value) {\n        store.setState(() => value.state)\n      }\n    }\n    fetch().catch((reason) => {\n      // eslint-disable-next-line no-console\n      console.debug(reason)\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sanity/visual-editing]: Failed to fetch shared state. Check your version of `sanity` is up-to-date',\n      )\n    })\n  }, [comlink])\n\n  const value = useMemo(() => ({comlink, store}), [comlink])\n\n  return <SharedStateContext.Provider value={value}>{children}</SharedStateContext.Provider>\n}\n","import {useCallback, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {events, TelemetryContext, type TelemetryContextValue} from './TelemetryContext'\n\nexport const TelemetryProvider: FunctionComponent<\n  PropsWithChildren<{comlink?: VisualEditingNode}>\n> = ({children, comlink}) => {\n  const log = useCallback<TelemetryContextValue>(\n    (name, data) => {\n      if (!comlink) return\n\n      const event = events[name]\n\n      if (!event) {\n        throw new Error(`Telemetry event: ${name} does not exist`)\n      } else {\n        comlink.post('visual-editing/telemetry-log', {event, data})\n      }\n    },\n    [comlink],\n  )\n\n  return <TelemetryContext.Provider value={log}>{children}</TelemetryContext.Provider>\n}\n","import {useEffect, useRef, type MutableRefObject} from 'react'\nimport {createOverlayController} from '../controller'\nimport {useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {OverlayController, OverlayEventHandler} from '../types'\n\n/**\n * Hook for using an overlay controller\n * @internal\n */\nexport function useController(\n  element: HTMLElement | null,\n  handler: OverlayEventHandler,\n  inFrame: boolean,\n  inPopUp: boolean,\n): MutableRefObject<OverlayController | undefined> {\n  const overlayController = useRef<OverlayController | undefined>(undefined)\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  useEffect(() => {\n    if (!element) return undefined\n\n    overlayController.current = createOverlayController({\n      handler,\n      overlayElement: element,\n      inFrame,\n      inPopUp,\n      optimisticActorReady,\n    })\n\n    return () => {\n      overlayController.current?.destroy()\n      overlayController.current = undefined\n    }\n  }, [element, handler, inFrame, inPopUp, optimisticActorReady])\n\n  return overlayController\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {useEffect} from 'react'\nimport type {OverlayMsg, VisualEditingNode} from '../types'\n\nexport function usePerspectiveSync(\n  comlink: VisualEditingNode | undefined,\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void,\n): void {\n  useEffect(() => {\n    const controller = new AbortController()\n    comlink\n      ?.fetch('visual-editing/fetch-perspective', undefined, {\n        signal: controller.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        dispatch({type: 'presentation/perspective', data})\n      })\n      .catch(() => {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      })\n\n    const unsub = comlink?.on('presentation/perspective', (data) => {\n      dispatch({type: 'presentation/perspective', data})\n    })\n\n    return () => {\n      unsub?.()\n      controller.abort()\n    }\n  }, [comlink, dispatch])\n}\n","import type {ClientPerspective, ContentSourceMapDocuments} from '@sanity/client'\nimport {useCallback, useEffect, useRef} from 'react'\nimport type {ElementState, SanityNode, VisualEditingNode} from '../types'\n\nfunction isEqualSets(a: Set<string>, b: Set<string>) {\n  if (a === b) return true\n  if (a.size !== b.size) return false\n  for (const value of a) if (!b.has(value)) return false\n  return true\n}\n\n/**\n * Hook for reporting in use documents to Presentation\n * @internal\n */\nexport function useReportDocuments(\n  comlink: VisualEditingNode | undefined,\n  elements: ElementState[],\n  perspective: ClientPerspective,\n): void {\n  const lastReported = useRef<\n    | {\n        nodeIds: Set<string>\n        perspective: ClientPerspective\n      }\n    | undefined\n  >(undefined)\n\n  const reportDocuments = useCallback(\n    (documents: ContentSourceMapDocuments, perspective: ClientPerspective) => {\n      comlink?.post('visual-editing/documents', {\n        documents,\n        perspective,\n      })\n    },\n    [comlink],\n  )\n\n  useEffect(() => {\n    // Report only nodes of type `SanityNode`. Untransformed `SanityStegaNode`\n    // nodes without an `id`, are not reported as they will not contain the\n    // necessary document data.\n    const nodes = elements\n      .map((e) => {\n        const {sanity} = e\n        if (!('id' in sanity)) return null\n        return sanity\n      })\n      .filter((s) => !!s) as SanityNode[]\n\n    const nodeIds = new Set<string>(nodes.map((e) => e.id))\n    // Report if:\n    // - Documents not yet reported\n    // - Document IDs changed\n    // - Perspective changed\n    if (\n      !lastReported.current ||\n      !isEqualSets(nodeIds, lastReported.current.nodeIds) ||\n      perspective !== lastReported.current.perspective\n    ) {\n      const documentsOnPage: ContentSourceMapDocuments = Array.from(nodeIds).map((_id) => {\n        const node = nodes.find((node) => node.id === _id)!\n        const {type, projectId: _projectId, dataset: _dataset} = node\n        return _projectId && _dataset\n          ? {_id, _type: type!, _projectId, _dataset}\n          : {_id, _type: type!}\n      })\n      lastReported.current = {nodeIds, perspective}\n      reportDocuments(documentsOnPage, perspective)\n    }\n  }, [elements, perspective, reportDocuments])\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport {getDraftId, getPublishedId} from '@sanity/client/csm'\nimport type {Status} from '@sanity/comlink'\nimport {type VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {\n  isHTMLAnchorElement,\n  isHTMLElement,\n  LayerProvider,\n  PortalProvider,\n  studioTheme,\n  ThemeProvider,\n  usePrefersDark,\n} from '@sanity/ui/_visual-editing'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type FunctionComponent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {useOptimisticActor, useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {\n  OverlayComponentResolver,\n  OverlayEventHandler,\n  OverlayMsg,\n  VisualEditingNode,\n} from '../types'\nimport {sanityNodesExistInSameArray} from '../util/findSanityNodes'\nimport {useDragEndEvents} from '../util/useDragEvents'\nimport {ContextMenu} from './context-menu/ContextMenu'\nimport {ElementOverlay} from './ElementOverlay'\nimport {OverlayDragGroupRect} from './OverlayDragGroupRect'\nimport {OverlayDragInsertMarker} from './OverlayDragInsertMarker'\nimport {OverlayDragPreview} from './OverlayDragPreview'\nimport {OverlayMinimapPrompt} from './OverlayMinimapPrompt'\nimport {overlayStateReducer} from './overlayStateReducer'\nimport {PreviewSnapshotsProvider} from './preview/PreviewSnapshotsProvider'\nimport {SchemaProvider} from './schema/SchemaProvider'\nimport {SharedStateProvider} from './shared-state/SharedStateProvider'\nimport {TelemetryProvider} from './telemetry/TelemetryProvider'\nimport {useTelemetry} from './telemetry/useTelemetry'\nimport {useController} from './useController'\nimport {usePerspectiveSync} from './usePerspectiveSync'\nimport {useReportDocuments} from './useReportDocuments'\n\nconst Root = styled.div<{\n  $zIndex?: string | number\n}>`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex}) => $zIndex ?? '9999999'};\n`\n\nfunction raf2(fn: () => void) {\n  let r0: number | undefined = undefined\n  let r1: number | undefined = undefined\n\n  r0 = requestAnimationFrame(() => {\n    r1 = requestAnimationFrame(fn)\n  })\n\n  return () => {\n    if (r0 !== undefined) cancelAnimationFrame(r0)\n    if (r1 !== undefined) cancelAnimationFrame(r1)\n  }\n}\n\nconst DocumentReporter: FunctionComponent<{\n  documentIds: string[]\n  perspective: ClientPerspective\n}> = (props) => {\n  const {documentIds} = props\n  const [uniqueIds, setUniqueIds] = useState<string[]>([])\n\n  useEffect(() => {\n    setUniqueIds((prev) => {\n      const next = Array.from(new Set(documentIds))\n      return prev.length === next.length &&\n        prev.reduce((acc, prevId) => acc.filter((id) => id !== prevId), next)?.length === 0\n        ? prev\n        : next\n    })\n  }, [documentIds])\n  const actor = useOptimisticActor()\n\n  useEffect(() => {\n    for (const id of uniqueIds) {\n      actor.send({type: 'observe', documentId: getDraftId(id)})\n      actor.send({type: 'observe', documentId: getPublishedId(id)})\n    }\n    return () => {\n      for (const id of uniqueIds) {\n        actor.send({type: 'unobserve', documentId: getDraftId(id)})\n        actor.send({type: 'unobserve', documentId: getPublishedId(id)})\n      }\n    }\n  }, [actor, uniqueIds])\n\n  return null\n}\n\nconst OverlaysController: FunctionComponent<{\n  comlink?: VisualEditingNode\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void\n  inFrame: boolean\n  inPopUp: boolean\n  onDrag: (x: number, y: number) => void\n  overlayEnabled: boolean\n  rootElement: HTMLElement | null\n}> = (props) => {\n  const {comlink, dispatch, inFrame, inPopUp, onDrag, overlayEnabled, rootElement} = props\n  const {dispatchDragEndEvent} = useDragEndEvents()\n  const sendTelemetry = useTelemetry()\n\n  const overlayEventHandler: OverlayEventHandler = useCallback(\n    (message) => {\n      if (message.type === 'element/click') {\n        const {sanity} = message\n        comlink?.post('visual-editing/focus', sanity)\n\n        sendTelemetry('Visual Editing Overlay Clicked', null)\n      } else if (message.type === 'overlay/activate') {\n        comlink?.post('visual-editing/toggle', {enabled: true})\n      } else if (message.type === 'overlay/deactivate') {\n        comlink?.post('visual-editing/toggle', {enabled: false})\n      } else if (message.type === 'overlay/dragEnd') {\n        const {insertPosition, target, dragGroup, flow, preventInsertDefault} = message\n\n        dispatchDragEndEvent({insertPosition, target, dragGroup, flow, preventInsertDefault})\n\n        if (insertPosition) {\n          sendTelemetry('Visual Editing Drag Sequence Completed', null)\n        }\n      } else if (message.type === 'overlay/dragUpdateCursorPosition') {\n        onDrag(message.x, message.y)\n\n        return\n      } else if (message.type === 'overlay/dragToggleMinimap' && message.display === true) {\n        sendTelemetry('Visual Editing Drag Minimap Enabled', null)\n      } else if (message.type === 'overlay/setCursor') {\n        const {element, cursor} = message\n\n        if (cursor) {\n          element.style.cursor = cursor\n        } else {\n          element.style.removeProperty('cursor')\n        }\n      }\n\n      dispatch(message)\n    },\n    [comlink, dispatch, dispatchDragEndEvent, onDrag, sendTelemetry],\n  )\n\n  const controller = useController(rootElement, overlayEventHandler, inFrame, inPopUp)\n\n  useEffect(() => {\n    if (overlayEnabled) {\n      controller.current?.activate()\n    } else {\n      controller.current?.deactivate()\n    }\n  }, [controller, overlayEnabled])\n\n  return null\n}\n\n/**\n * @internal\n */\nexport const Overlays: FunctionComponent<{\n  comlink?: VisualEditingNode\n  comlinkStatus?: Status\n  componentResolver?: OverlayComponentResolver\n  inFrame: boolean\n  inPopUp: boolean\n  zIndex?: string | number\n}> = (props) => {\n  const {\n    comlink,\n    comlinkStatus,\n    componentResolver: _componentResolver,\n    inFrame,\n    inPopUp,\n    zIndex,\n  } = props\n\n  const prefersDark = usePrefersDark()\n\n  const [\n    {\n      contextMenu,\n      dragInsertPosition,\n      dragShowMinimap,\n      dragShowMinimapPrompt,\n      dragSkeleton,\n      elements,\n      isDragging,\n      perspective,\n      wasMaybeCollapsed,\n      dragMinimapTransition,\n      dragGroupRect,\n    },\n    dispatch,\n  ] = useReducer(overlayStateReducer, {\n    contextMenu: null,\n    dragInsertPosition: null,\n    dragShowMinimap: false,\n    dragShowMinimapPrompt: false,\n    dragSkeleton: null,\n    elements: [],\n    focusPath: '',\n    isDragging: false,\n    perspective: 'published',\n    wasMaybeCollapsed: false,\n    dragMinimapTransition: false,\n    dragGroupRect: null,\n  })\n  const [rootElement, setRootElement] = useState<HTMLElement | null>(null)\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  useEffect(() => {\n    const unsubs = [\n      comlink?.on('presentation/focus', (data) => {\n        dispatch({type: 'presentation/focus', data})\n      }),\n      comlink?.on('presentation/blur', (data) => {\n        dispatch({type: 'presentation/blur', data})\n      }),\n      comlink?.on('presentation/toggle-overlay', () => {\n        setOverlayEnabled((enabled) => !enabled)\n      }),\n    ].filter(Boolean)\n\n    return () => unsubs.forEach((unsub) => unsub!())\n  }, [comlink])\n\n  usePerspectiveSync(comlink, dispatch)\n\n  useReportDocuments(comlink, elements, perspective)\n\n  const updateDragPreviewCustomProps = useCallback(\n    (x: number, y: number) => {\n      if (!rootElement) return\n\n      rootElement.style.setProperty('--drag-preview-x', `${x}px`)\n      rootElement.style.setProperty('--drag-preview-y', `${y - window.scrollY}px`)\n    },\n    [rootElement],\n  )\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      const target = event.target\n\n      // We only need to modify the default behavior if the target is a link\n      const targetsLink = Boolean(\n        isHTMLAnchorElement(target) || (isHTMLElement(target) && target.closest('a')),\n      )\n\n      if (targetsLink && event.altKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        const newEvent = new MouseEvent(event.type, {\n          ...event,\n          altKey: false,\n          bubbles: true,\n          cancelable: true,\n        })\n        event.target?.dispatchEvent(newEvent)\n      }\n    }\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    window.addEventListener('click', handleClick)\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      window.removeEventListener('click', handleClick)\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [setOverlayEnabled])\n\n  const [overlaysFlash, setOverlaysFlash] = useState(false)\n  const [fadingOut, setFadingOut] = useState(false)\n  const fadeOutTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined)\n\n  // Flash overlays when they are enabled\n  useEffect(() => {\n    if (overlayEnabled) {\n      return raf2(() => {\n        setOverlaysFlash(true)\n        raf2(() => {\n          setFadingOut(true)\n          fadeOutTimeoutRef.current = setTimeout(() => {\n            setFadingOut(false)\n            setOverlaysFlash(false)\n          }, 1500)\n        })\n      })\n    } else if (fadeOutTimeoutRef.current) {\n      clearTimeout(fadeOutTimeoutRef.current)\n      setOverlaysFlash(false)\n      setFadingOut(false)\n    }\n\n    return\n  }, [overlayEnabled])\n\n  const documentIds = useMemo(() => {\n    return elements.flatMap((element) => ('id' in element.sanity ? [element.sanity.id] : []))\n  }, [elements])\n\n  const closeContextMenu = useCallback(() => {\n    dispatch({type: 'overlay/blur'})\n  }, [])\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  const componentResolver = useMemo(() => {\n    return optimisticActorReady ? _componentResolver : undefined\n  }, [_componentResolver, optimisticActorReady])\n\n  const elementsToRender = useMemo(() => {\n    if (((inFrame || inPopUp) && comlinkStatus !== 'connected') || isDragging) {\n      return []\n    }\n\n    return elements\n      .filter((e) => e.activated || e.focused)\n      .map(({id, element, focused, hovered, rect, sanity, dragDisabled}) => {\n        const draggable =\n          !dragDisabled &&\n          !!element.getAttribute('data-sanity') &&\n          optimisticActorReady &&\n          elements.some((e) =>\n            'id' in e.sanity && 'id' in sanity\n              ? sanityNodesExistInSameArray(e.sanity, sanity) && e.sanity.path !== sanity.path\n              : false,\n          )\n\n        return (\n          <ElementOverlay\n            componentResolver={componentResolver}\n            element={element}\n            enableScrollIntoView={!isDragging && !dragMinimapTransition && !dragShowMinimap}\n            key={id}\n            focused={focused}\n            hovered={hovered}\n            node={sanity}\n            rect={rect}\n            // When inside a popup window we want actions to show up on hover, but iframes should hide them\n            showActions={!inFrame}\n            draggable={draggable}\n            isDragging={isDragging || dragMinimapTransition}\n            wasMaybeCollapsed={focused && wasMaybeCollapsed}\n          />\n        )\n      })\n  }, [\n    componentResolver,\n    dragMinimapTransition,\n    dragShowMinimap,\n    elements,\n    inFrame,\n    inPopUp,\n    isDragging,\n    optimisticActorReady,\n    comlinkStatus,\n    wasMaybeCollapsed,\n  ])\n\n  return (\n    <TelemetryProvider comlink={comlink}>\n      <ThemeProvider scheme={prefersDark ? 'dark' : 'light'} theme={studioTheme} tone=\"transparent\">\n        <LayerProvider>\n          <PortalProvider element={rootElement}>\n            <SchemaProvider comlink={comlink} elements={elements}>\n              <PreviewSnapshotsProvider comlink={comlink}>\n                <SharedStateProvider comlink={comlink}>\n                  <Root\n                    data-fading-out={fadingOut ? '' : undefined}\n                    data-overlays={overlaysFlash ? '' : undefined}\n                    ref={setRootElement}\n                    $zIndex={zIndex}\n                  >\n                    <DocumentReporter documentIds={documentIds} perspective={perspective} />\n                    <OverlaysController\n                      comlink={comlink}\n                      dispatch={dispatch}\n                      inFrame={inFrame}\n                      inPopUp={inPopUp}\n                      onDrag={updateDragPreviewCustomProps}\n                      overlayEnabled={overlayEnabled}\n                      rootElement={rootElement}\n                    />\n                    {contextMenu && <ContextMenu {...contextMenu} onDismiss={closeContextMenu} />}\n                    {elementsToRender}\n\n                    {isDragging && !dragMinimapTransition && (\n                      <>\n                        {dragInsertPosition && (\n                          <OverlayDragInsertMarker dragInsertPosition={dragInsertPosition} />\n                        )}\n                        {dragShowMinimapPrompt && <OverlayMinimapPrompt />}\n                        {dragGroupRect && <OverlayDragGroupRect dragGroupRect={dragGroupRect} />}\n                      </>\n                    )}\n                    {isDragging && dragSkeleton && <OverlayDragPreview skeleton={dragSkeleton} />}\n                  </Root>\n                </SharedStateProvider>\n              </PreviewSnapshotsProvider>\n            </SchemaProvider>\n          </PortalProvider>\n        </LayerProvider>\n      </ThemeProvider>\n    </TelemetryProvider>\n  )\n}\n\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\n\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n","import {useEffect, useRef, type FunctionComponent} from 'react'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\n\n/**\n * @internal\n */\nexport const Refresh: FunctionComponent<\n  {\n    comlink: VisualEditingNode\n  } & Required<Pick<VisualEditingOptions, 'refresh'>>\n> = (props) => {\n  const {comlink, refresh} = props\n\n  const manualRefreshRef = useRef(0)\n  const mutationRefreshRef = useRef(0)\n\n  useEffect(\n    () =>\n      comlink.on('presentation/refresh', (data) => {\n        if (data.source === 'manual') {\n          clearTimeout(manualRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          let timedOut = false\n          manualRefreshRef.current = window.setTimeout(() => {\n            comlink.post('visual-editing/refreshed', data)\n            timedOut = true\n          }, 3000)\n          promise?.finally?.(() => {\n            if (timedOut) return\n            clearTimeout(manualRefreshRef.current)\n            comlink.post('visual-editing/refreshed', data)\n          })\n        } else if (data.source === 'mutation') {\n          clearTimeout(mutationRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          // Send an additional refresh to account for Content Lake eventual consistency\n          mutationRefreshRef.current = window.setTimeout(() => {\n            const promise = refresh(data)\n            if (promise === false) return\n            comlink.post('visual-editing/refreshing', data)\n            promise?.finally?.(() => {\n              comlink.post('visual-editing/refreshed', data)\n            }) || comlink.post('visual-editing/refreshed', data)\n          }, 1000)\n          promise?.finally?.(() => {\n            comlink.post('visual-editing/refreshed', data)\n          }) || comlink.post('visual-editing/refreshed', data)\n        }\n      }),\n    [comlink, refresh],\n  )\n\n  return null\n}\n","import {createNode, createNodeMachine, type Status} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {useEffect, useState} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useComlink(active: boolean = true): [VisualEditingNode | undefined, Status] {\n  const [node, setNode] = useState<VisualEditingNode>()\n  const [status, setStatus] = useState<Status>('idle')\n\n  useEffect(() => {\n    if (!active) return\n    const instance = createNode<VisualEditingNodeMsg, VisualEditingControllerMsg>(\n      {\n        name: 'visual-editing',\n        connectTo: 'presentation',\n      },\n      createNodeMachine<VisualEditingNodeMsg, VisualEditingControllerMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingNodeMsg>(),\n      }),\n    )\n    const unsub = instance.onStatus(() => setStatus('connected'), 'connected')\n\n    setNode(instance)\n    const stop = instance.start()\n\n    return () => {\n      unsub()\n      stop()\n      setNode(undefined)\n    }\n  }, [active])\n\n  /**\n   * Handle reporting of status to the presentation tool in case of connection failure due to misconfigured URL origin\n   */\n  useEffect(() => {\n    /**\n     * We only need to report status if the node is not connected\n     */\n    if (status === 'connected') return\n\n    const controller = new AbortController()\n    window.addEventListener(\n      'message',\n      ({data, origin}: MessageEvent<unknown>) => {\n        /**\n         * Detect if Presentation is asking if Visual Editing is here but misconfigured\n         * @TODO this should probably be a feature built into `comlink`, as it's a common problem for apps dealing with iframes.\n         */\n        if (\n          data &&\n          typeof data === 'object' &&\n          'domain' in data &&\n          data.domain === 'sanity/channels' &&\n          'from' in data &&\n          data.from === 'presentation' &&\n          'type' in data &&\n          data.type === 'presentation/status'\n        ) {\n          /**\n           * We only send this message to the parent window, which supports Presentation loading the page in an iframe.\n           * This avoids letting other iframes on the page, or other openers, from getting a response.\n           */\n          window.parent.postMessage(\n            {\n              domain: 'sanity/channels',\n              type: 'visual-editing/status',\n              data: {origin: location.origin},\n            },\n            /**\n             * Using the same origin ensures that if the parent window don't have the same origin the message won't be sent.\n             * This grants some protection against spoofing, as malicious iframes can't easily call this event and trigger the Presentation Tool to think there's a failing state.\n             */\n            origin,\n          )\n        }\n      },\n      {signal: controller.signal},\n    )\n    return () => {\n      controller.abort()\n    }\n  }, [status])\n\n  return [node, status]\n}\n","import {type ListenEvent} from '@sanity/client'\nimport {merge, ReplaySubject, Subject, type Observable, type ObservedValueOf} from 'rxjs'\nimport type {VisualEditingNode} from '../../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype SharedListenEvent = ListenEvent<Record<string, any>>\n\n/**\n * Creates a single, shared, listener EventSource that strems remote mutations, and notifies when it's online (welcome), offline (reconnect).\n */\nexport function createSharedListener(comlink: VisualEditingNode): Observable<SharedListenEvent> {\n  // Welcome events could be received before the listener has been subscribed\n  // to. Using a ReplaySubject will ensure the welcome event is re-emitted when\n  // a new subscriber arrives.\n  const incomingConnection$ = new ReplaySubject<SharedListenEvent>(1)\n  const incomingMutations$ = new Subject<SharedListenEvent>()\n\n  comlink\n    .fetch('visual-editing/snapshot-welcome', undefined, {suppressWarnings: true})\n    .then((data) => {\n      incomingConnection$.next(data.event)\n    })\n    .catch(() => {\n      // Fail silently as the app may be communicating with a version of\n      // Presentation that does not support this feature\n    })\n\n  comlink.on('presentation/snapshot-event', (data) => {\n    // Welcome events are still emitted by Presentation for backwards\n    // compatibility. We don't need them anymore as we explicitly fetch the\n    // welcome event, so filter them out here.\n    if (data.event.type === 'reconnect') {\n      incomingConnection$.next(data.event)\n    }\n    if (data.event.type === 'mutation') {\n      incomingMutations$.next(data.event)\n    }\n  })\n\n  return merge(incomingConnection$, incomingMutations$)\n}\n\nexport type SharedListenerEvents = ObservedValueOf<ReturnType<typeof createSharedListener>>\n","import {useEffect} from 'react'\nimport {createActor} from 'xstate'\nimport {setActor} from '../optimistic/context'\nimport {createSharedListener} from '../optimistic/state/createSharedListener'\nimport {createDatasetMutator} from '../optimistic/state/datasetMutator'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useDatasetMutator(comlink: VisualEditingNode | undefined): void {\n  useEffect(() => {\n    if (!comlink) return\n    const listener = createSharedListener(comlink)\n    const datasetMutator = createDatasetMutator(comlink)\n    const mutator = createActor(datasetMutator, {\n      // @ts-expect-error @todo\n      input: {client: {withConfig: () => {}}, sharedListener: listener},\n    })\n\n    mutator.start()\n\n    // Fetch features to determine if optimistic updates are supported\n    const featuresFetch = new AbortController()\n    comlink\n      .fetch('visual-editing/features', undefined, {\n        signal: featuresFetch.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        if (data.features['optimistic']) {\n          setActor(mutator)\n        }\n      })\n      .catch(() => {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@sanity/visual-editing] Package version mismatch detected: Please update your Sanity studio to prevent potential compatibility issues.',\n        )\n      })\n\n    return () => {\n      mutator.stop()\n      featuresFetch.abort()\n    }\n  }, [comlink])\n}\n","import {isMaybePreviewIframe, isMaybePreviewWindow} from '@sanity/presentation-comlink'\nimport {useEffect, useState} from 'react'\nimport {createPortal} from 'react-dom'\nimport type {VisualEditingOptions} from '../types'\nimport {History} from './History'\nimport {Meta} from './Meta'\nimport {Overlays} from './Overlays'\nimport {Refresh} from './Refresh'\nimport {useComlink} from './useComlink'\nimport {useDatasetMutator} from './useDatasetMutator'\n\n/**\n * @public\n */\nexport const VisualEditing = (props: VisualEditingOptions & {portal: boolean}): React.ReactNode => {\n  const {components, history, portal = true, refresh, zIndex} = props\n\n  const [inFrame, setInFrame] = useState<boolean | null>(null)\n  const [inPopUp, setInPopUp] = useState<boolean | null>(null)\n  useEffect(() => {\n    setInFrame(isMaybePreviewIframe())\n    setInPopUp(isMaybePreviewWindow())\n  }, [])\n\n  const [portalElement, setPortalElement] = useState<HTMLElement | null>(null)\n  useEffect(() => {\n    if (portal === false) return undefined\n    const node = document.createElement('sanity-visual-editing')\n    document.documentElement.appendChild(node)\n    setPortalElement(node)\n    return () => {\n      setPortalElement(null)\n      if (document.documentElement.contains(node)) {\n        document.documentElement.removeChild(node)\n      }\n    }\n  }, [portal])\n\n  const [comlink, comlinkStatus] = useComlink(inFrame === true || inPopUp === true)\n  useDatasetMutator(comlinkStatus === 'connected' ? comlink : undefined)\n\n  const children = (\n    <>\n      {inFrame !== null && inPopUp !== null && (\n        <Overlays\n          comlink={comlink}\n          comlinkStatus={comlinkStatus}\n          componentResolver={components}\n          inFrame={inFrame}\n          inPopUp={inPopUp}\n          zIndex={zIndex}\n        />\n      )}\n      {comlink && (\n        <>\n          <History comlink={comlink} history={history} />\n          <Meta comlink={comlink} />\n          {refresh && <Refresh comlink={comlink} refresh={refresh} />}\n        </>\n      )}\n    </>\n  )\n\n  if (portal === false || !portalElement) return children\n\n  return createPortal(children, portalElement)\n}\nVisualEditing.displayName = 'VisualEditing'\n"],"names":["History","props","$","_c","comlink","history","t0","t1","on","data","update","useEffect","t2","t3","subscribe","title","document","post","Meta","sendMeta","observer","MutationObserver","mutation","target","nodeName","observe","head","subtree","characterData","childList","disconnect","getReferenceNodeAndInsertPosition","position","top","right","bottom","left","node","sanity","useDragEndEvents","getDocument","useDocuments","handler","e","insertPosition","preventInsertDefault","detail","reference","doc","id","key","targetKey","hasExplicitKey","getArrayItemKeyAndParentPath","path","arrayPath","referenceItemKey","patch","getSnapshot","snapshot","elementValue","getFromPath","at","remove","_key","insert","window","addEventListener","removeEventListener","dispatchDragEndEvent","_temp","Symbol","for","event","customEvent","CustomEvent","cancelable","dispatchEvent","SchemaContext","createContext","useSchema","context","useContext","Error","getArrayRemoveAction","type","getArrayRemovePatches","getArrayInsertAction","insertType","getArrayInsertPatches","getDuplicateAction","getArrayDuplicatePatches","getContextMenuItems","field","parent","getContextMenuArrayItems","getContextMenuUnionItems","Promise","resolve","getDuplicateItem","label","icon","CopyIcon","action","telemetryEvent","getRemoveItems","RemoveIcon","getMoveItems","withDivider","items","groupItems","moveUpPatches","moveDownPatches","moveFirstPatches","moveLastPatches","all","getArrayMovePatches","length","push","PublishIcon","ArrowUpIcon","ArrowDownIcon","UnpublishIcon","SortIcon","InsertAboveIcon","name","InsertBelowIcon","InsertMenuWrapper","width","onSelect","boundaryElement","arrow","constrainSize","floatingBoundary","padding","placement","fallbackPlacements","preventOverflow","__unstable_margins","t4","options","insertMenu","views","some","view","undefined","component","sendTelemetry","schemaType","of","filter","item","map","t","getNodeIcon","POPOVER_MARGINS","ContextMenuItem","onDismiss","useTelemetry","onClick","hotkeys","t5","itemIndex","Component","ContextMenu","x","y","setBoundaryElement","useState","getField","setItems","fetchContextMenuItems","items_0","t6","getBoundingClientRect","height","contextMenuReferenceElement","t7","t8","t9","minWidth","maxWidth","t10","t11","t12","t13","t14","i","t15","t16","t17","t18","t19","t20","getLinkHref","href","referer","parsed","URL","location","origin","hash","slice","pathname","search","searchParams","set","toString","PreviewSnapshotsContext","usePreviewSnapshots","isReactElementOverlayComponent","isValidElement","Root","styled","Card","Actions","Flex","Tab","ActionOpen","Labels","createIntentLink","baseUrl","tool","workspace","createEditUrl","pathToUrlString","studioPath","fromString","ElementOverlayInner","element","focused","componentResolver","showActions","draggable","getType","previewSnapshots","bb0","find","_id","bb1","value","componentContext","customComponents","useCustomComponents","__html","Array","isArray","props_0","PointerEvents","ElementOverlay","memo","hovered","rect","wasMaybeCollapsed","enableScrollIntoView","ref","useRef","scrolledIntoViewRef","w","h","transform","style","current","scrollIntoView","behavior","actions","block","inline","scrollMode","isNearTop","setIsNearTop","io","IntersectionObserver","intersection","boundingClientRect","threshold","resolved","Link","useSyncExternalStore","_temp2","_temp3","onStoreChange","handlePopState","OverlayDragGroupRect","dragGroupRect","border","pointerEvents","markerThickness","lerp","v0","v1","OverlayDragInsertMarker","dragInsertPosition","flow","startX","endX","offset","Math","min","offset_0","offset_1","startX_0","startY","endY","offset_2","offset_3","offset_4","background","borderRadius","zIndex","div","$scaleFactor","$width","$height","clamp","number","max","inMin","inMax","outMin","outMax","mapped","OverlayDragPreview","skeleton","maxSkeletonWidth","innerWidth","scaleFactor","offsetX","offsetY","prefersDark","usePrefersDark","theme","useTheme_v2","radius","T0","T1","childRects","imageRects","textRects","color","r_1","r","from","tagName","r_0","OverlayMinimapPrompt","elementsReducer","elements","message","activated","dragDisabled","clickedElement","overlayStateReducer","state","contextMenu","focusPath","perspective","isDragging","dragShowMinimap","dragShowMinimapPrompt","dragSkeleton","dragMinimapTransition","prevFocusPath","startsWith","display","groupRect","PreviewSnapshotsProvider","children","setPreviewSnapshots","signal","response","fetch","suppressWarnings","snapshots","fetchPreviewSnapshots","previewSapshotsFetch","AbortController","unsub","onStatus","abort","isSanityNode","isDocumentSchemaType","isTypeSchemaType","popUnkeyedPathSegments","split","toReversed","reduce","acc","part","includes","join","getPathsWithUnresolvedTypes","SchemaProvider","Map","resolvedTypes","setResolvedTypes","schema","setSchema","fetchSchema","schemaFetch","reportedPathsRef","useDeferredValue","paths","controllerRef","reportPaths","paths_0","signal_0","initialReportedPaths","response_0","aborted","types","p","_type","node_0","schemaType_0","fieldFromPath","schemaType_1","path_0","prevPath","next","rest","objectField","fields","name_0","get","Boolean","type_0","nodePath","flatMap","console","warn","createStore","initialState","getState","listeners","Set","setState","fn","forEach","l","listener","add","delete","store","SharedStateProvider","catch","value_0","prev","prev_0","Object","fromEntries","entries","reason","debug","TelemetryProvider","events","log","useController","inFrame","inPopUp","overlayController","optimisticActorReady","useOptimisticActorReady","createOverlayController","overlayElement","destroy","usePerspectiveSync","dispatch","controller","then","data_0","isEqualSets","a","b","size","has","useReportDocuments","lastReported","documents","perspective_0","reportDocuments","nodes","nodeIds","documentsOnPage","projectId","_projectId","dataset","_dataset","e_0","s","$zIndex","raf2","r0","r1","requestAnimationFrame","cancelAnimationFrame","DocumentReporter","documentIds","uniqueIds","setUniqueIds","actor","useOptimisticActor","id_0","send","documentId","getDraftId","getPublishedId","id_1","OverlaysController","onDrag","overlayEnabled","rootElement","enabled","dragGroup","cursor","removeProperty","activate","deactivate","Overlays","comlinkStatus","_componentResolver","useReducer","setRootElement","setOverlayEnabled","unsubs","setProperty","scrollY","updateDragPreviewCustomProps","handleClick","_temp4","handleKeyUp","isAltKey","_temp5","handleKeydown","_temp6","isHotkey","_temp7","overlaysFlash","setOverlaysFlash","fadingOut","setFadingOut","fadeOutTimeoutRef","setTimeout","clearTimeout","_temp8","closeContextMenu","_temp9","element_0","getAttribute","e_2","sanityNodesExistInSameArray","elementsToRender","t21","t22","t23","t24","t25","t26","t27","studioTheme","t28","IS_MAC","test","navigator","platform","MODIFIERS","alt","ctrl","mod","shift","keys","every","toUpperCase","prevId","isHTMLAnchorElement","isHTMLElement","closest","altKey","preventDefault","stopPropagation","newEvent","MouseEvent","bubbles","enabled_0","enabled_1","enabled_2","e_1","Refresh","refresh","manualRefreshRef","mutationRefreshRef","source","promise","timedOut","finally","promise_0","promise_1","useComlink","active","setNode","status","setStatus","instance","createNode","connectTo","createNodeMachine","provide","actors","createCompatibilityActors","stop","start","domain","postMessage","createSharedListener","incomingConnection$","ReplaySubject","incomingMutations$","Subject","merge","useDatasetMutator","datasetMutator","createDatasetMutator","mutator","createActor","input","client","withConfig","sharedListener","featuresFetch","features","optimistic","setActor","VisualEditing","components","portal","setInFrame","setInPopUp","isMaybePreviewIframe","isMaybePreviewWindow","portalElement","setPortalElement","createElement","documentElement","appendChild","contains","removeChild","createPortal","displayName"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"debugId":null}}]
}