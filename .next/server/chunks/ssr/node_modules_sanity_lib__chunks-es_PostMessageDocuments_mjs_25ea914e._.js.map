{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"PostMessageDocuments.mjs","sources":["file:///Users/toma/Programming/Projects/sunarte/sunarte-tomagnet-multilang/node_modules/sanity/src/presentation/overlays/PostMessageDocuments.tsx"],"sourcesContent":["import {\n  type ClientPerspective,\n  type MutationEvent,\n  type ReconnectEvent,\n  type WelcomeEvent,\n} from '@sanity/client'\nimport {type FunctionComponent, memo, useEffect} from 'react'\nimport {filter, first, merge, shareReplay} from 'rxjs'\nimport {isReleasePerspective, RELEASES_STUDIO_CLIENT_OPTIONS, useClient} from 'sanity'\n\nimport {API_VERSION} from '../constants'\nimport {type VisualEditingConnection} from '../types'\n\ninterface PostMessageDocumentsProps {\n  comlink: VisualEditingConnection\n  perspective: ClientPerspective\n}\n\nconst PostMessageDocuments: FunctionComponent<PostMessageDocumentsProps> = (props) => {\n  const {comlink, perspective} = props\n\n  const client = useClient(\n    isReleasePerspective(perspective) ? RELEASES_STUDIO_CLIENT_OPTIONS : {apiVersion: API_VERSION},\n  )\n\n  useEffect(() => {\n    const listener = client\n      .listen(\n        '*[!(_id in path(\"_.**\"))]',\n        {},\n        {\n          effectFormat: 'mendoza',\n          events: ['welcome', 'mutation', 'reconnect'],\n          includePreviousRevision: false,\n          includeResult: false,\n          includeAllVersions: true,\n          tag: 'presentation-documents',\n          visibility: 'transaction',\n        },\n      )\n      .pipe(\n        filter(\n          (event): event is WelcomeEvent | ReconnectEvent | MutationEvent =>\n            event.type === 'welcome' || event.type === 'reconnect' || event.type === 'mutation',\n        ),\n      )\n\n    const welcome = listener.pipe(\n      filter((event): event is WelcomeEvent => event.type === 'welcome'),\n      shareReplay({bufferSize: 1, refCount: false}),\n    )\n\n    // When new contexts initialize, they need to explicitly request the welcome\n    // event, as we can't rely on emitting it into the void\n    const unsubscribe = comlink.on('visual-editing/snapshot-welcome', async () => {\n      const event = await new Promise<WelcomeEvent>((resolve) => {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        welcome.pipe(first()).subscribe((event) => {\n          resolve(event)\n        })\n      })\n      return {event}\n    })\n\n    const reconnect = listener.pipe(\n      filter((event): event is ReconnectEvent => event.type === 'reconnect'),\n    )\n\n    const mutations = listener.pipe(\n      filter((event): event is MutationEvent => event.type === 'mutation'),\n    )\n\n    const events = merge(\n      /**\n       * @deprecated remove 'welcome' here and switch to explict welcome message fetching at next major\n       */\n      welcome,\n      mutations,\n      reconnect,\n    ).subscribe((event) => {\n      comlink.post('presentation/snapshot-event', {event})\n    })\n\n    return () => {\n      unsubscribe()\n      events.unsubscribe()\n    }\n  }, [client, comlink])\n\n  useEffect(() => {\n    return comlink.on('visual-editing/fetch-snapshot', async (data) => {\n      const snapshot = await client.getDocument(data.documentId, {\n        tag: 'document.snapshots',\n      })\n      return {snapshot}\n    })\n  }, [client, comlink])\n\n  useEffect(() => {\n    return comlink.on('visual-editing/mutate', async (data) => {\n      return client.dataRequest('mutate', data, {\n        visibility: 'async',\n        returnDocuments: true,\n      })\n    })\n  }, [client, comlink])\n\n  return null\n}\n\nexport default memo(PostMessageDocuments)\n"],"names":["PostMessageDocuments","props","$","_c","comlink","perspective","t0","isReleasePerspective","RELEASES_STUDIO_CLIENT_OPTIONS","apiVersion","API_VERSION","client","useClient","t1","t2","listener","listen","effectFormat","events","includePreviousRevision","includeResult","includeAllVersions","tag","visibility","pipe","filter","_temp","welcome","_temp2","shareReplay","bufferSize","refCount","unsubscribe","on","event","Promise","resolve","first","subscribe","event_1","reconnect","_temp3","mutations","_temp4","merge","event_5","post","useEffect","t3","t4","data","snapshot","getDocument","documentId","t5","t6","data_0","dataRequest","returnDocuments","memo","type","event_0","event_3","event_4"],"mappings":";;;;;;;;;;;;;AAkBA,MAAMA,uBAAqEC,CAAA,UAAA;IAAAC,MAAAA,0KAAAC,EAAA,EAAA,GACzE,EAAAC,OAAAA,EAAAC,WAAAA,EAAAA,GAA+BJ;IAAKK,IAAAA;IAAAJ,CAAAA,CAAAA,EAAAA,KAAAG,cAAAA,CAGlCC,iKAAAC,uBAAAA,EAAqBF,WAAW,4JAACG,iCAAAA,GAAA;QAAAC,YAAAC,8KAAAA;IAAA,GAA6DR,CAAAA,CAAAA,EAAAA,GAAAG,aAAAH,CAAAA,CAAAA,EAAAA,GAAAI,EAAAA,IAAAA,KAAAJ,CAAAA,CAAA,CAAA,CAAA;IADhGS,MAAAA,oKAAeC,aAAAA,EACbN,EACF;IAAC,IAAAO,IAAAC;IAAAZ,CAAAA,CAAAS,CAAAA,CAAAA,KAAAA,UAAAT,CAAAA,CAAAA,EAAAA,KAAAE,UAAAA,CAESS,KAAAA,MAAA;QACR,MAAAE,WAAiBJ,OAAMK,MAAAA,CAEnB,6BAA2B,CAAA,GAAA;YAAAC,cAGX;YAASC,QACd;gBAAA;gBAAW;gBAAY,WAAW;aAAA;YAAAC,yBAAA,CAAA;YAAAC,eAAA,CAAA;YAAAC,oBAAA,CAAA;YAAAC,KAItC;YAAwBC,YACjB;QAEhB,CAAA,EAACC,IAAAA,KAECC,sJAAAA,EAAAC,KAGA,CACF,GAEFC,UAAgBZ,SAAQS,IAAAA,kJACtBC,SAAAA,EAAAG,MAAiE,oJACjEC,cAAAA,EAAA;YAAAC,YAAA;YAAAC,UAAA,CAAA;QAA4C,CAAA,CAC9C,GAIAC,cAAoB5B,QAAO6B,EAAAA,CAAI,mCAAiC,UAAA,CAM5D;gBAAAC,OALF,MAAA,IAAAC,QAAAC,CAAA,YAAA;oBAEET,QAAOH,IAAAA,iJAAMa,SAAAA,CAAAA,CAAO,GAACC,SAAAA,CAAAC,CAAA,YAAA;wBACnBH,QAAQF,OAAK;oBAAA,CACd;gBAAC,CAAA;YAAA,CAAA,CAGL,GAEDM,YAAkBzB,SAAQS,IAAAA,KACxBC,sJAAAA,EAAAgB,MAAqE,CACvE,GAEAC,YAAkB3B,SAAQS,IAAAA,kJACxBC,SAAAA,EAAAkB,MAAmE,CACrE,GAEAzB,SAAe0B,yJAAAA,EAIbjB,SACAe,WACAF,SACF,EAACF,SAAAA,CAAAO,CAAA,YAAA;YACCzC,QAAO0C,IAAAA,CAAM,+BAA6B;gBAAAZ,OAAGA;YAAAA,CAAM;QAAA,CACpD;QAAC,OAAA,MAAA;YAGY,YAAA,GACZhB,OAAMc,WAAAA,CAAa;QAAC;IAErBlB,GAAAA,KAAA;QAACH;QAAQP,OAAO;KAAA,EAACF,CAAAA,CAAAA,EAAAA,GAAAS,QAAAT,CAAAA,CAAAA,EAAAA,GAAAE,SAAAF,CAAAA,CAAAA,EAAAA,GAAAW,IAAAX,CAAAA,CAAAA,EAAAA,GAAAY,EAAAA,IAAAA,CAAAD,KAAAX,CAAAA,CAAA,CAAA,CAAA,EAAAY,KAAAZ,CAAAA,CAAA,CAAA,CAAA,6MA9DpB6C,YAAAA,EAAUlC,IA8DPC,EAAiB;IAAC,IAAAkC,IAAAC;IAAA/C,CAAAA,CAAAS,CAAAA,CAAAA,KAAAA,UAAAT,CAAAA,CAAAA,EAAAA,KAAAE,UAAAA,CAEX4C,KAAAA,IACD5C,QAAO6B,EAAAA,CAAI,iCAA+B,OAAAiB,OAAAA,CAG7C;gBAAAC,UAAAA,MAFqBxC,OAAMyC,WAAAA,CAAaF,KAAIG,UAAAA,EAAA;oBAAA/B,KACvC;gBACN,CAAA;YAEF,CAAA,CAAA,GACA2B,KAAA;QAACtC;QAAQP,OAAO;KAAA,EAACF,CAAAA,CAAAA,EAAAA,GAAAS,QAAAT,CAAAA,CAAAA,EAAAA,GAAAE,SAAAF,CAAAA,CAAAA,EAAAA,GAAA8C,IAAA9C,CAAAA,CAAAA,EAAAA,GAAA+C,EAAAA,IAAAA,CAAAD,KAAA9C,CAAAA,CAAA,CAAA,CAAA,EAAA+C,KAAA/C,CAAAA,CAAA,CAAA,CAAA,6MAPpB6C,YAAAA,EAAUC,IAOPC,EAAiB;IAAC,IAAAK,IAAAC;IAAA,OAAArD,CAAAA,CAAAS,EAAAA,CAAAA,KAAAA,UAAAT,CAAAA,CAAAA,GAAAA,KAAAE,UAAAA,CAEXkD,KAAAA,IACDlD,QAAO6B,EAAAA,CAAI,yBAAuBuB,OAAAA,SAChC7C,OAAM8C,WAAAA,CAAa,UAAUP,QAAI;gBAAA3B,YAC1B;gBAAOmC,iBAAA,CAAA;YAAA,CAEpB,CACF,GACAH,KAAA;QAAC5C;QAAQP,OAAO;KAAA,EAACF,CAAAA,CAAAA,GAAAA,GAAAS,QAAAT,CAAAA,CAAAA,GAAAA,GAAAE,SAAAF,CAAAA,CAAAA,GAAAA,GAAAoD,IAAApD,CAAAA,CAAAA,GAAAA,GAAAqD,EAAAA,IAAAA,CAAAD,KAAApD,CAAAA,CAAA,EAAA,CAAA,EAAAqD,KAAArD,CAAAA,CAAA,EAAA,CAAA,6MAPpB6C,YAAAA,EAAUO,IAOPC,EAAiB,GAAC;AAAA;AAKvB,IAAeI,mOAAAA,OAAAA,EAAK3D,oBAAoB;AA5FmC,SAAA0B,MAAAQ,KAAAA,EAAA;IAAA,OAyB/DA,MAAK0B,IAAAA,KAAU,aAAa1B,MAAK0B,IAAAA,KAAU,eAAe1B,MAAK0B,IAAAA,KAAU;AAAU;AAzBpB,SAAAhC,OAAAiC,OAAAA,EAAA;IAAA,OA8B5B3B,QAAK0B,IAAAA,KAAU;AAAS;AA9BI,SAAAnB,OAAAqB,OAAAA,EAAA;IAAA,OA+C1B5B,QAAK0B,IAAAA,KAAU;AAAW;AA/CA,SAAAjB,OAAAoB,OAAAA,EAAA;IAAA,OAmD3B7B,QAAK0B,IAAAA,KAAU;AAAU","ignoreList":[0],"debugId":null}}]
}